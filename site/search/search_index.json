{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PlatONE \u6280\u672f\u6587\u6863 PlatONE\u662f \u57fa\u4e8e\u9690\u79c1\u8ba1\u7b97 \u7684\u65b0\u4e00\u4ee3\u8054\u76df\u533a\u5757\u94fe\u5e73\u53f0\uff0c\u4ee5\u652f\u6301\u4f01\u4e1a\u7ea7\u5e94\u7528\u3002\u5e73\u53f0\u63d0\u51fa\u4e86\u4e00\u79cd\u4ee5\u9690\u79c1\u8ba1\u7b97\u4e3a\u7279\u8272\u7684\u4f01\u4e1a\u7ea7\u8054\u76df\u94fe\u57fa\u7840\u8bbe\u65bd\uff0c\u53ef\u6ee1\u8db3\u91d1\u878d\u5546\u4e1a\u7b49\u591a\u79cd\u9700\u6c42\u573a\u666f\u3002 \u76ee\u524dPlatONE\u63d0\u4f9b\u4e86\u591a\u79cd\u521b\u65b0\u6027\u6280\u672f\u548c\u529f\u80fd\uff0c\u5305\u62ec\uff1a\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u3001\u540c\u6001\u52a0\u5bc6\u7b49\u5bc6\u7801\u5b66\u6280\u672f\u690d\u5165\u3001\u4f18\u5316\u7684\u9ad8\u6548\u5171\u8bc6\u3001\u9ad8TPS\u3001\u5b8c\u5907\u3001\u6613\u7528\u7684\u4f01\u4e1a\u7ea7\u5de5\u5177\u94fe\u548c\u7ec4\u4ef6\u3001\u4f18\u5316\u7684\u7528\u6237/\u6743\u9650\u6a21\u578b\u3001\u591a\u5f00\u53d1\u8bed\u8a00\u652f\u6301\u7b49\u7279\u6027\uff0c\u65e8\u5728\u89e3\u51b3\u5f53\u524d\u8054\u76df\u94fe\u53d1\u5c55\u4e2d\u5b58\u5728\u7684\u56f0\u5883\u3002 \u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u8bf7\u53c2\u8003 PlatONE\u57fa\u672c\u4ecb\u7ecd \u8d44\u6e90\u5bfc\u822a GitHub : \u6e90\u4ee3\u7801Source Code \u95ee\u9898\u53cd\u9988Github Issue code contribution (\u5f85\u5b8c\u6210) \u5f00\u6e90\u793e\u533a \uff1a \u6df1\u5ea6\u89e3\u6790\u7cfb\u5217 \u793e\u533a\u8bba\u575b \u5e94\u7528\u6848\u4f8b\u96c6 \u5176\u4ed6 \uff1a \u5fae\u4fe1\u7fa4\uff1f \u516c\u4f17\u53f7\uff1f B\u7ad9 \u5176\u4ed6\u5bfc\u822a","title":"Home"},{"location":"#platone","text":"PlatONE\u662f \u57fa\u4e8e\u9690\u79c1\u8ba1\u7b97 \u7684\u65b0\u4e00\u4ee3\u8054\u76df\u533a\u5757\u94fe\u5e73\u53f0\uff0c\u4ee5\u652f\u6301\u4f01\u4e1a\u7ea7\u5e94\u7528\u3002\u5e73\u53f0\u63d0\u51fa\u4e86\u4e00\u79cd\u4ee5\u9690\u79c1\u8ba1\u7b97\u4e3a\u7279\u8272\u7684\u4f01\u4e1a\u7ea7\u8054\u76df\u94fe\u57fa\u7840\u8bbe\u65bd\uff0c\u53ef\u6ee1\u8db3\u91d1\u878d\u5546\u4e1a\u7b49\u591a\u79cd\u9700\u6c42\u573a\u666f\u3002 \u76ee\u524dPlatONE\u63d0\u4f9b\u4e86\u591a\u79cd\u521b\u65b0\u6027\u6280\u672f\u548c\u529f\u80fd\uff0c\u5305\u62ec\uff1a\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u3001\u540c\u6001\u52a0\u5bc6\u7b49\u5bc6\u7801\u5b66\u6280\u672f\u690d\u5165\u3001\u4f18\u5316\u7684\u9ad8\u6548\u5171\u8bc6\u3001\u9ad8TPS\u3001\u5b8c\u5907\u3001\u6613\u7528\u7684\u4f01\u4e1a\u7ea7\u5de5\u5177\u94fe\u548c\u7ec4\u4ef6\u3001\u4f18\u5316\u7684\u7528\u6237/\u6743\u9650\u6a21\u578b\u3001\u591a\u5f00\u53d1\u8bed\u8a00\u652f\u6301\u7b49\u7279\u6027\uff0c\u65e8\u5728\u89e3\u51b3\u5f53\u524d\u8054\u76df\u94fe\u53d1\u5c55\u4e2d\u5b58\u5728\u7684\u56f0\u5883\u3002 \u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u8bf7\u53c2\u8003 PlatONE\u57fa\u672c\u4ecb\u7ecd","title":"PlatONE \u6280\u672f\u6587\u6863"},{"location":"#_1","text":"GitHub : \u6e90\u4ee3\u7801Source Code \u95ee\u9898\u53cd\u9988Github Issue code contribution (\u5f85\u5b8c\u6210) \u5f00\u6e90\u793e\u533a \uff1a \u6df1\u5ea6\u89e3\u6790\u7cfb\u5217 \u793e\u533a\u8bba\u575b \u5e94\u7528\u6848\u4f8b\u96c6 \u5176\u4ed6 \uff1a \u5fae\u4fe1\u7fa4\uff1f \u516c\u4f17\u53f7\uff1f B\u7ad9","title":"\u8d44\u6e90\u5bfc\u822a"},{"location":"#_2","text":"","title":"\u5176\u4ed6\u5bfc\u822a"},{"location":"JSON-RPC_API/JSON-RPC_API/","text":"Contents JSON RPC API JavaScript API JSON-RPC Endpoint Go C++ Python JSON-RPC support HEX value encoding The default block parameter Curl Examples Explained JSON-RPC methods JSON RPC API Reference web3_clientVersion Parameters Returns Example web3_sha3 Parameters Example Parameters Returns Example net_version Parameters Returns Example net_listening Parameters Returns Example net_peerCount Parameters Returns Example eth_protocolVersion Parameters Returns Example eth_syncing Parameters Returns Example eth_coinbase Parameters Returns Example eth_mining Parameters Returns Example eth_hashrate Parameters Returns Example eth_gasPrice Parameters Returns Example eth_accounts Parameters Returns Example eth_blockNumber Parameters Returns Example eth_getBalance Parameters Example Parameters Returns Example eth_getStorageAt Parameters Returns Example eth_getTransactionCount Parameters Example Parameters Returns Example eth_getBlockTransactionCountByHash Parameters Example Parameters Returns Example eth_getBlockTransactionCountByNumber Parameters Example Parameters Returns Example eth_getUncleCountByBlockHash Parameters Example Parameters Returns Example eth_getUncleCountByBlockNumber Parameters Returns Example eth_getCode Parameters Example Parameters Returns Example eth_sign Parameters Returns Example eth_sendTransaction Parameters Example Parameters Returns Example eth_sendRawTransaction Parameters Example Parameters Returns Example eth_call Parameters Returns Example eth_estimateGas Parameters Returns Example eth_getBlockByHash Parameters Example Parameters Returns Example eth_getBlockByNumber Parameters Example Parameters Returns Example eth_getTransactionByHash Parameters Example Parameters Returns Example eth_getTransactionByBlockHashAndIndex Parameters Example Parameters Returns Example eth_getTransactionByBlockNumberAndIndex Parameters Example Parameters Returns Example eth_getTransactionReceipt Parameters Example Parameters Returns Example eth_pendingTransactions Parameters Example Parameters Returns Example eth_getUncleByBlockHashAndIndex Parameters Returns Example eth_getUncleByBlockNumberAndIndex Parameters Example Parameters Returns Example eth_getCompilers (DEPRECATED) Parameters Returns Example eth_compileSolidity (DEPRECATED) Parameters Example Parameters Returns Example eth_compileLLL (DEPRECATED) Parameters Example Parameters Returns Example eth_compileSerpent (DEPRECATED) Parameters Example Parameters Returns Example eth_newFilter A note on specifying topic filters: Parameters Example Parameters Returns Example eth_newBlockFilter Parameters Returns Example eth_newPendingTransactionFilter Parameters Returns Example eth_uninstallFilter Parameters Example Parameters Returns Example eth_getFilterChanges Parameters Example Parameters Returns Example eth_getFilterLogs Parameters Example Parameters Returns Example eth_getLogs Parameters Example Parameters Returns Example eth_getWork Parameters Returns Example eth_submitWork Parameters Example Parameters Returns Example eth_submitHashrate Parameters Example Parameters Returns Example eth_getProof getProof-Parameters Example Parameters getProof-Returns getProof-Example db_putString Parameters Example Parameters Returns Example db_getString Parameters Example Parameters Returns Example db_putHex Parameters Example Parameters Returns Example db_platoneex Parameters Example Parameters Returns Example shh_version Parameters Returns Example shh_post Parameters Example Parameters Returns Example shh_newIdentity Parameters Returns Example shh_hasIdentity Parameters Example Parameters Returns Example shh_newGroup Parameters Returns Example shh_addToGroup Parameters Example Parameters Returns Example shh_newFilter Parameters Example Parameters Returns Example shh_uninstallFilter Parameters Example Parameters Returns Example shh_getFilterChanges Parameters Example Parameters Returns Example shh_getMessages Parameters Example Parameters Returns Example JSON RPC API JSON is a lightweight data-interchange format. It can represent numbers, strings, ordered sequences of values, and collections of name/value pairs. JSON-RPC is a stateless, light-weight remote procedure call (RPC) protocol. Primarily this specification defines several data structures and the rules around their processing. It is transport agnostic in that the concepts can be used within the same process, over sockets, over HTTP, or in many various message passing environments. It uses JSON ( RFC 4627 ) as data format. platone has pub/sub support. Read this page for more information. Open Ethereum has pub/sub support. Read this for more information. Hyperledger Besu has pub/sub support. Read this for more information. JavaScript API To talk to an ethereum node from inside a JavaScript application use the web3.js library, which gives a convenient interface for the RPC methods. See the JavaScript API for more. JSON-RPC Endpoint Default JSON-RPC endpoints: Client URL Go http://localhost:6790 Go You can start the HTTP JSON-RPC with the --rpc flag platone --rpc change the default port (8545) and listing address (localhost) with: platone --rpc --rpcaddr <ip> --rpcport <portnumber> If accessing the RPC from a browser, CORS will need to be enabled with the appropriate domain set. Otherwise, JavaScript calls are limit by the same-origin policy and requests will fail: platone --rpc --rpccorsdomain \"http://localhost:3000\" The JSON RPC can also be started from the platone console using the admin.startRPC(addr, port) command. C++ First start the node by running aleth application: build/aleth/aleth Then start the JSON-RPC proxy (defaults to '~/.ethereum/platone.ipc' and 'http://127.0.0.1:8545'): scripts/jsonrpcproxy.py If you use non-default IPC path or JSON-RPC options, you can specify : scripts/jsonrpcproxy.py <path to your node's platone.ipc> <URL for this proxy server> Python In python the JSONRPC server is currently started by default and listens on 127.0.0.1:4000 You can change the port and listen address by giving a config option. pyethapp -c jsonrpc.listen_port=4002 -c jsonrpc.listen_host=127.0.0.2 run JSON-RPC support cpp-ethereum go-ethereum py-ethereum parity pantheon JSON-RPC 1.0 \u2713 JSON-RPC 2.0 \u2713 \u2713 \u2713 \u2713 \u2713 Batch requests \u2713 \u2713 \u2713 \u2713 \u2713 HTTP \u2713 \u2713 \u2713 \u2713 \u2713 IPC \u2713 \u2713 \u2713 WS \u2713 \u2713 \u2713 HEX value encoding At present there are two key datatypes that are passed over JSON: unformatted byte arrays and quantities. Both are passed with a hex encoding, however with different requirements to formatting: When encoding QUANTITIES (integers, numbers): encode as hex, prefix with \"0x\", the most compact representation (slight exception: zero should be represented as \"0x0\"). Examples: - 0x41 (65 in decimal) - 0x400 (1024 in decimal) - WRONG: 0x (should always have at least one digit - zero is \"0x0\") - WRONG: 0x0400 (no leading zeroes allowed) - WRONG: ff (must be prefixed 0x) When encoding UNFORMATTED DATA (byte arrays, account addresses, hashes, bytecode arrays): encode as hex, prefix with \"0x\", two hex digits per byte. Examples: - 0x41 (size 1, \"A\") - 0x004200 (size 3, \"\\0B\\0\") - 0x (size 0, \"\") - WRONG: 0xf0f0f (must be even number of digits) - WRONG: 004200 (must be prefixed 0x) Currently cpp-ethereum , go-ethereum and parity provide JSON-RPC communication over http and IPC (unix socket Linux and OSX/named pipes on Windows). Version 1.4 of go-ethereum, version 1.6 of Parity and version 0.8 of Pantheon onwards have websocket support. The default block parameter The following methods have an extra default block parameter: eth_getBalance eth_getCode eth_getTransactionCount eth_getStorageAt eth_call When requests are made that act on the state of ethereum, the last default block parameter determines the height of the block. The following options are possible for the defaultBlock parameter: HEX String - an integer block number String \"earliest\" for the earliest/genesis block String \"latest\" - for the latest mined block String \"pending\" - for the pending state/transactions Curl Examples Explained The curl options below might return a response where the node complains about the content type, this is because the --data option sets the content type to application/x-www-form-urlencoded . If your node does complain, manually set the header by placing -H \"Content-Type: application/json\" at the start of the call. The examples also do not include the URL/IP & port combination which must be the last argument given to curl e.x. 127.0.0.1:8545 JSON-RPC methods web3_clientVersion web3_sha3 net_version net_peerCount net_listening eth_protocolVersion eth_syncing eth_coinbase eth_mining eth_hashrate eth_gasPrice eth_accounts eth_blockNumber eth_getBalance eth_getStorageAt eth_getTransactionCount eth_getBlockTransactionCountByHash eth_getBlockTransactionCountByNumber eth_getUncleCountByBlockHash eth_getUncleCountByBlockNumber eth_getCode eth_sign eth_sendTransaction eth_sendRawTransaction eth_call eth_estimateGas eth_getBlockByHash eth_getBlockByNumber eth_getTransactionByHash eth_getTransactionByBlockHashAndIndex eth_getTransactionByBlockNumberAndIndex eth_getTransactionReceipt eth_pendingTransactions eth_getUncleByBlockHashAndIndex eth_getUncleByBlockNumberAndIndex eth_getCompilers eth_compileLLL eth_compileSolidity eth_compileSerpent eth_newFilter eth_newBlockFilter eth_newPendingTransactionFilter eth_uninstallFilter eth_getFilterChanges eth_getFilterLogs eth_getLogs eth_getWork eth_submitWork eth_submitHashrate eth_getProof db_putString db_getString db_putHex db_platoneex shh_post shh_version shh_newIdentity shh_hasIdentity shh_newGroup shh_addToGroup shh_newFilter shh_uninstallFilter shh_getFilterChanges shh_getMessages JSON RPC API Reference web3_clientVersion Returns the current client version. Parameters none Returns String - The current client version. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":67}' // Result { \"id\":67, \"jsonrpc\":\"2.0\", \"result\": \"Mist/v0.9.3/darwin/go1.4.1\" } web3_sha3 Returns Keccak-256 ( not the standardized SHA3-256) of the given data. Parameters DATA - the data to convert into a SHA3 hash. Example Parameters params: [ \"0x68656c6c6f20776f726c64\" ] Returns DATA - The SHA3 result of the given string. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_sha3\",\"params\":[\"0x68656c6c6f20776f726c64\"],\"id\":64}' // Result { \"id\":64, \"jsonrpc\": \"2.0\", \"result\": \"0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad\" } net_version Returns the current network id. Parameters none Returns String - The current network id. - \"1\" : Ethereum Mainnet - \"2\" : Morden Testnet (deprecated) - \"3\" : Ropsten Testnet - \"4\" : Rinkeby Testnet - \"5\" : Goerli Testnet - \"42\" : Kovan Testnet Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":67}' // Result { \"id\":67, \"jsonrpc\": \"2.0\", \"result\": \"3\" } net_listening Returns true if client is actively listening for network connections. Parameters none Returns Boolean - true when listening, otherwise false . Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_listening\",\"params\":[],\"id\":67}' // Result { \"id\":67, \"jsonrpc\":\"2.0\", \"result\":true } net_peerCount Returns number of peers currently connected to the client. Parameters none Returns QUANTITY - integer of the number of connected peers. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_peerCount\",\"params\":[],\"id\":74}' // Result { \"id\":74, \"jsonrpc\": \"2.0\", \"result\": \"0x2\" // 2 } eth_protocolVersion Returns the current ethereum protocol version. Parameters none Returns String - The current ethereum protocol version. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_protocolVersion\",\"params\":[],\"id\":67}' // Result { \"id\":67, \"jsonrpc\": \"2.0\", \"result\": \"0x54\" } eth_syncing Returns an object with data about the sync status or false . Parameters none Returns Object|Boolean , An object with sync status data or FALSE , when not syncing: - startingBlock : QUANTITY - The block at which the import started (will only be reset, after the sync reached his head) - currentBlock : QUANTITY - The current block, same as eth_blockNumber - highestBlock : QUANTITY - The estimated highest block Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\":[],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": { startingBlock: '0x384', currentBlock: '0x386', highestBlock: '0x454' } } // Or when not syncing { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": false } eth_coinbase Returns the client coinbase address. Parameters none Returns DATA , 20 bytes - the current coinbase address. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_coinbase\",\"params\":[],\"id\":64}' // Result { \"id\":64, \"jsonrpc\": \"2.0\", \"result\": \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" } eth_mining Returns true if client is actively mining new blocks. Parameters none Returns Boolean - returns true of the client is mining, otherwise false . Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_mining\",\"params\":[],\"id\":71}' // Result { \"id\":71, \"jsonrpc\": \"2.0\", \"result\": true } eth_hashrate Returns the number of hashes per second that the node is mining with. Parameters none Returns QUANTITY - number of hashes per second. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_hashrate\",\"params\":[],\"id\":71}' // Result { \"id\":71, \"jsonrpc\": \"2.0\", \"result\": \"0x38a\" } eth_gasPrice Returns the current price per gas in wei. Parameters none Returns QUANTITY - integer of the current gas price in wei. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_gasPrice\",\"params\":[],\"id\":73}' // Result { \"id\":73, \"jsonrpc\": \"2.0\", \"result\": \"0x09184e72a000\" // 10000000000000 } eth_accounts Returns a list of addresses owned by client. Parameters none Returns Array of DATA , 20 Bytes - addresses owned by the client. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_accounts\",\"params\":[],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\"] } eth_blockNumber Returns the number of most recent block. Parameters none Returns QUANTITY - integer of the current block number the client is on. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}' // Result { \"id\":83, \"jsonrpc\": \"2.0\", \"result\": \"0xc94\" // 1207 } eth_getBalance Returns the balance of the account of given address. Parameters DATA , 20 Bytes - address to check for balance. QUANTITY|TAG - integer block number, or the string \"latest\" , \"earliest\" or \"pending\" , see the default block parameter Example Parameters params: [ '0xc94770007dda54cF92009BFF0dE90c06F603a09f', 'latest' ] Returns QUANTITY - integer of the current balance in wei. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\":[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\", \"latest\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x0234c8a3397aab58\" // 158972490234375000 } eth_getStorageAt Returns the value from a storage position at a given address. Parameters DATA , 20 Bytes - address of the storage. QUANTITY - integer of the position in the storage. QUANTITY|TAG - integer block number, or the string \"latest\" , \"earliest\" or \"pending\" , see the default block parameter Returns DATA - the value at this storage position. Example Calculating the correct position depends on the storage to retrieve. Consider the following contract deployed at 0x295a70b2de5e3953354a6a8344e616ed314d7251 by address 0x391694e7e0b0cce554cb130d723a9d27458f9298 . contract Storage { uint pos0; mapping(address => uint) pos1; function Storage() { pos0 = 1234; pos1[msg.sender] = 5678; } } Retrieving the value of pos0 is straight forward: curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x0\", \"latest\"], \"id\": 1}' localhost:8545 {\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"0x00000000000000000000000000000000000000000000000000000000000004d2\"} Retrieving an element of the map is harder. The position of an element in the map is calculated with: keccack(LeftPad32(key, 0), LeftPad32(map position, 0)) This means to retrieve the storage on pos1[\"0x391694e7e0b0cce554cb130d723a9d27458f9298\"] we need to calculate the position with: keccak(decodeHex(\"000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298\" + \"0000000000000000000000000000000000000000000000000000000000000001\")) The platone console which comes with the web3 library can be used to make the calculation: > var key = \"000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298\" + \"0000000000000000000000000000000000000000000000000000000000000001\" undefined > web3.sha3(key, {\"encoding\": \"hex\"}) \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" Now to fetch the storage: curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"], \"id\": 1}' localhost:8545 {\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"0x000000000000000000000000000000000000000000000000000000000000162e\"} eth_getTransactionCount Returns the number of transactions sent from an address. Parameters DATA , 20 Bytes - address. QUANTITY|TAG - integer block number, or the string \"latest\" , \"earliest\" or \"pending\" , see the default block parameter Example Parameters params: [ '0xc94770007dda54cF92009BFF0dE90c06F603a09f', 'latest' // state at the latest block ] Returns QUANTITY - integer of the number of transactions send from this address. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionCount\",\"params\":[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x1\" // 1 } eth_getBlockTransactionCountByHash Returns the number of transactions in a block from a block matching the given block hash. Parameters DATA , 32 Bytes - hash of a block. Example Parameters params: [ '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238' ] Returns QUANTITY - integer of the number of transactions in this block. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByHash\",\"params\":[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xc\" // 11 } eth_getBlockTransactionCountByNumber Returns the number of transactions in a block matching the given block number. Parameters QUANTITY|TAG - integer of a block number, or the string \"earliest\" , \"latest\" or \"pending\" , as in the default block parameter . Example Parameters params: [ '0xe8', // 232 ] Returns QUANTITY - integer of the number of transactions in this block. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByNumber\",\"params\":[\"0xe8\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xa\" // 10 } eth_getUncleCountByBlockHash Returns the number of uncles in a block from a block matching the given block hash. Parameters DATA , 32 Bytes - hash of a block. Example Parameters params: [ '0xc94770007dda54cF92009BFF0dE90c06F603a09f' ] Returns QUANTITY - integer of the number of uncles in this block. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockHash\",\"params\":[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xc\" // 1 } eth_getUncleCountByBlockNumber Returns the number of uncles in a block from a block matching the given block number. Parameters QUANTITY|TAG - integer of a block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter . params: [ '0xe8', // 232 ] Returns QUANTITY - integer of the number of uncles in this block. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockNumber\",\"params\":[\"0xe8\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x1\" // 1 } eth_getCode Returns code at a given address. Parameters DATA , 20 Bytes - address. QUANTITY|TAG - integer block number, or the string \"latest\" , \"earliest\" or \"pending\" , see the default block parameter . Example Parameters params: [ '0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b', '0x2' // 2 ] Returns DATA - the code from the given address. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\":[\"0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b\", \"0x2\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x600160008035811a818181146012578301005b601b6001356025565b8060005260206000f25b600060078202905091905056\" } eth_sign The sign method calculates an Ethereum specific signature with: sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))) . By adding a prefix to the message makes the calculated signature recognisable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data (e.g. transaction) and use the signature to impersonate the victim. Note the address to sign with must be unlocked. Parameters account, message DATA , 20 Bytes - address. DATA , N Bytes - message to sign. Returns DATA : Signature Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sign\",\"params\":[\"0x9b2055d370f73ec7d8a03e965129118dc8f5bf83\", \"0xdeadbeaf\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xa3f20717a250c2b0b729b7e5becbff67fdaef7e0699da4de7ca5895b02a170a12d887fd3b17bfdce3481f10bea41f45ba9f709d39ce8325427b57afcfc994cee1b\" } An example how to use solidity ecrecover to verify the signature calculated with eth_sign can be found here . The contract is deployed on the testnet Ropsten and Rinkeby. eth_sendTransaction Creates new message call transaction or a contract creation, if the data field contains code. Parameters Object - The transaction object from : DATA , 20 Bytes - The address the transaction is send from. to : DATA , 20 Bytes - (optional when creating new contract) The address the transaction is directed to. gas : QUANTITY - (optional, default: 90000) Integer of the gas provided for the transaction execution. It will return unused gas. gasPrice : QUANTITY - (optional, default: To-Be-Determined) Integer of the gasPrice used for each paid gas value : QUANTITY - (optional) Integer of the value sent with this transaction data : DATA - The compiled code of a contract OR the hash of the invoked method signature and encoded parameters. For details see Ethereum Contract ABI nonce : QUANTITY - (optional) Integer of a nonce. This allows to overwrite your own pending transactions that use the same nonce. Example Parameters params: [{ \"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\", \"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\", \"gas\": \"0x76c0\", // 30400 \"gasPrice\": \"0x9184e72a000\", // 10000000000000 \"value\": \"0x9184e72a\", // 2441406250 \"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" }] Returns DATA , 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available. Use eth_getTransactionReceipt to get the contract address, after the transaction was mined, when you created a contract. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendTransaction\",\"params\":[{see above}],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\" } eth_sendRawTransaction Creates new message call transaction or a contract creation for signed transactions. Parameters DATA , The signed transaction data. Example Parameters params: [\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"] Returns DATA , 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available. Use eth_getTransactionReceipt to get the contract address, after the transaction was mined, when you created a contract. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[{see above}],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\" } eth_call Executes a new message call immediately without creating a transaction on the block chain. Parameters Object - The transaction call object from : DATA , 20 Bytes - (optional) The address the transaction is sent from. to : DATA , 20 Bytes - The address the transaction is directed to. gas : QUANTITY - (optional) Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. gasPrice : QUANTITY - (optional) Integer of the gasPrice used for each paid gas value : QUANTITY - (optional) Integer of the value sent with this transaction data : DATA - (optional) Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI in the Solidity documentation QUANTITY|TAG - integer block number, or the string \"latest\" , \"earliest\" or \"pending\" , see the default block parameter Returns DATA - the return value of executed contract. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\":[{see above}],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x\" } eth_estimateGas Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance. Parameters See eth_call parameters, expect that all properties are optional. If no gas limit is specified platone uses the block gas limit from the pending block as an upper bound. As a result the returned estimate might not be enough to executed the call/transaction when the amount of gas is higher than the pending block gas limit. Returns QUANTITY - the amount of gas used. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\":[{see above}],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x5208\" // 21000 } eth_getBlockByHash Returns information about a block by hash. Parameters DATA , 32 Bytes - Hash of a block. Boolean - If true it returns the full transaction objects, if false only the hashes of the transactions. Example Parameters params: [ '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331', true ] Returns Object - A block object, or null when no block was found: number : QUANTITY - the block number. null when its pending block. hash : DATA , 32 Bytes - hash of the block. null when its pending block. parentHash : DATA , 32 Bytes - hash of the parent block. nonce : DATA , 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : DATA , 32 Bytes - SHA3 of the uncles data in the block. logsBloom : DATA , 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : DATA , 32 Bytes - the root of the transaction trie of the block. stateRoot : DATA , 32 Bytes - the root of the final state trie of the block. receiptsRoot : DATA , 32 Bytes - the root of the receipts trie of the block. miner : DATA , 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : QUANTITY - integer of the difficulty for this block. totalDifficulty : QUANTITY - integer of the total difficulty of the chain until this block. extraData : DATA - the \"extra data\" field of this block. size : QUANTITY - integer the size of this block in bytes. gasLimit : QUANTITY - the maximum gas allowed in this block. gasUsed : QUANTITY - the total used gas by all transactions in this block. timestamp : QUANTITY - the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : Array - Array of uncle hashes. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByHash\",\"params\":[\"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\", true],\"id\":1}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": { \"number\": \"0x1b4\", // 436 \"hash\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\", \"parentHash\": \"0x9646252be9520f6e71339a8df9c55e4d7619deeb018d2a3f2d21fc165dde5eb5\", \"nonce\": \"0xe04d296d2460cfb8472af2c5fd05b5a214109c25688d3704aed5484f9a7792f2\", \"sha3Uncles\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\", \"logsBloom\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\", \"transactionsRoot\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\", \"stateRoot\": \"0xd5855eb08b3387c0af375e9cdb6acfc05eb8f519e419b874b6ff2ffda7ed1dff\", \"miner\": \"0x4e65fda2159562a496f9f3522f89122a3088497a\", \"difficulty\": \"0x027f07\", // 163591 \"totalDifficulty\": \"0x027f07\", // 163591 \"extraData\": \"0x0000000000000000000000000000000000000000000000000000000000000000\", \"size\": \"0x027f07\", // 163591 \"gasLimit\": \"0x9f759\", // 653145 \"gasUsed\": \"0x9f759\", // 653145 \"timestamp\": \"0x54e34e8e\" // 1424182926 \"transactions\": [{...},{ ... }] \"uncles\": [\"0x1606e5...\", \"0xd5145a9...\"] } } eth_getBlockByNumber Returns information about a block by block number. Parameters QUANTITY|TAG - integer of a block number, or the string \"earliest\" , \"latest\" or \"pending\" , as in the default block parameter . Boolean - If true it returns the full transaction objects, if false only the hashes of the transactions. Example Parameters params: [ '0x1b4', // 436 true ] Returns See eth_getBlockByHash Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\":[\"0x1b4\", true],\"id\":1}' Result see eth_getBlockByHash eth_getTransactionByHash Returns the information about a transaction requested by transaction hash. Parameters DATA , 32 Bytes - hash of a transaction Example Parameters params: [ \"0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\" ] Returns Object - A transaction object, or null when no transaction was found: blockHash : DATA , 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : QUANTITY - block number where this transaction was in. null when its pending. from : DATA , 20 Bytes - address of the sender. gas : QUANTITY - gas provided by the sender. gasPrice : QUANTITY - gas price provided by the sender in Wei. hash : DATA , 32 Bytes - hash of the transaction. input : DATA - the data send along with the transaction. nonce : QUANTITY - the number of transactions made by the sender prior to this one. to : DATA , 20 Bytes - address of the receiver. null when its a contract creation transaction. transactionIndex : QUANTITY - integer of the transaction's index position in the block. null when its pending. value : QUANTITY - value transferred in Wei. v : QUANTITY - ECDSA recovery id r : QUANTITY - ECDSA signature r s : QUANTITY - ECDSA signature s Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\":[\"0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\"],\"id\":1}' // Result { \"jsonrpc\":\"2.0\", \"id\":1, \"result\":{ \"blockHash\":\"0x1d59ff54b1eb26b013ce3cb5fc9dab3705b415a67127a003c3e61eb445bb8df2\", \"blockNumber\":\"0x5daf3b\", // 6139707 \"from\":\"0xa7d9ddbe1f17865597fbd27ec712455208b6b76d\", \"gas\":\"0xc350\", // 50000 \"gasPrice\":\"0x4a817c800\", // 20000000000 \"hash\":\"0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\", \"input\":\"0x68656c6c6f21\", \"nonce\":\"0x15\", // 21 \"to\":\"0xf02c1c8e6114b1dbe8937a39260b5b0a374432bb\", \"transactionIndex\":\"0x41\", // 65 \"value\":\"0xf3dbb76162000\", // 4290000000000000 \"v\":\"0x25\", // 37 \"r\":\"0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea\", \"s\":\"0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c\" } } eth_getTransactionByBlockHashAndIndex Returns information about a transaction by block hash and transaction index position. Parameters DATA , 32 Bytes - hash of a block. QUANTITY - integer of the transaction index position. Example Parameters params: [ '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331', '0x0' // 0 ] Returns See eth_getTransactionByHash Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockHashAndIndex\",\"params\":[\"0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b\", \"0x0\"],\"id\":1}' Result see eth_getTransactionByHash eth_getTransactionByBlockNumberAndIndex Returns information about a transaction by block number and transaction index position. Parameters QUANTITY|TAG - a block number, or the string \"earliest\" , \"latest\" or \"pending\" , as in the default block parameter . QUANTITY - the transaction index position. Example Parameters params: [ '0x29c', // 668 '0x0' // 0 ] Returns See eth_getTransactionByHash Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\"params\":[\"0x29c\", \"0x0\"],\"id\":1}' Result see eth_getTransactionByHash eth_getTransactionReceipt Returns the receipt of a transaction by transaction hash. Note That the receipt is not available for pending transactions. Parameters DATA , 32 Bytes - hash of a transaction Example Parameters params: [ '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238' ] Returns Object - A transaction receipt object, or null when no receipt was found: transactionHash : DATA , 32 Bytes - hash of the transaction. transactionIndex : QUANTITY - integer of the transaction's index position in the block. blockHash : DATA , 32 Bytes - hash of the block where this transaction was in. blockNumber : QUANTITY - block number where this transaction was in. from : DATA , 20 Bytes - address of the sender. to : DATA , 20 Bytes - address of the receiver. null when it's a contract creation transaction. cumulativeGasUsed : QUANTITY - The total amount of gas used when this transaction was executed in the block. gasUsed : QUANTITY - The amount of gas used by this specific transaction alone. contractAddress : DATA , 20 Bytes - The contract address created, if the transaction was a contract creation, otherwise null . logs : Array - Array of log objects, which this transaction generated. logsBloom : DATA , 256 Bytes - Bloom filter for light clients to quickly retrieve related logs. It also returns either : root : DATA 32 bytes of post-transaction stateroot (pre Byzantium) status : QUANTITY either 1 (success) or 0 (failure) Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\":[\"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": { transactionHash: '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238', transactionIndex: '0x1', // 1 blockNumber: '0xb', // 11 blockHash: '0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b', cumulativeGasUsed: '0x33bc', // 13244 gasUsed: '0x4dc', // 1244 contractAddress: '0xb60e8dd61c5d32be8058bb8eb970870f07233155', // or null, if none was created logs: [{ // logs as returned by getFilterLogs, etc. }, ...], logsBloom: \"0x00...0\", // 256 byte bloom filter status: '0x1' } } eth_pendingTransactions Returns the pending transactions list. Parameters none Returns Array - A list of pending transactions. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_pendingTransactions\",\"params\":[],\"id\":1}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": [{ blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000', blockNumber: null, from: '0x28bdb9c230f4d5e45435e4d006326ee32e46cb31', gas: '0x204734', gasPrice: '0x4a817c800', hash: '0x8dfa6a59307a490d672494a171feee09db511f05e9c097e098edc2881f9ca4f6', input: '0x6080604052600', nonce: '0x12', to: null, transactionIndex: '0x0', value: '0x0', v: '0x3d', r: '0xaabc9ddafffb2ae0bac4107697547d22d9383667d9e97f5409dd6881ce08f13f', s: '0x69e43116be8f842dcd4a0b2f760043737a59534430b762317db21d9ac8c5034' },....,{ blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000', blockNumber: null, from: '0x28bdb9c230f4d5e45435e4d006326ee32e487b31', gas: '0x205940', gasPrice: '0x4a817c800', hash: '0x8e4340ea3983d86e4b6c44249362f716ec9e09849ef9b6e3321140581d2e4dac', input: '0xe4b6c4424936', nonce: '0x14', to: null, transactionIndex: '0x0', value: '0x0', v: '0x3d', r: '0x1ec191ef20b0e9628c4397665977cbe7a53a263c04f6f185132b77fa0fd5ca44', s: '0x8a58e00c63e05cfeae4f1cf19f05ce82079dc4d5857e2cc281b7797d58b5faf' }] } eth_getUncleByBlockHashAndIndex Returns information about a uncle of a block by hash and uncle index position. Parameters DATA , 32 Bytes - hash a block. QUANTITY - the uncle's index position. params: [ '0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b', '0x0' // 0 ] Returns See eth_getBlockByHash Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockHashAndIndex\",\"params\":[\"0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b\", \"0x0\"],\"id\":1}' Result see eth_getBlockByHash Note : An uncle doesn't contain individual transactions. eth_getUncleByBlockNumberAndIndex Returns information about a uncle of a block by number and uncle index position. Parameters QUANTITY|TAG - a block number, or the string \"earliest\" , \"latest\" or \"pending\" , as in the default block parameter . QUANTITY - the uncle's index position. Example Parameters params: [ '0x29c', // 668 '0x0' // 0 ] Returns See eth_getBlockByHash Note : An uncle doesn't contain individual transactions. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\":[\"0x29c\", \"0x0\"],\"id\":1}' Result see eth_getBlockByHash eth_getCompilers (DEPRECATED) Returns a list of available compilers in the client. Parameters none Returns Array - Array of available compilers. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCompilers\",\"params\":[],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": [\"solidity\", \"lll\", \"serpent\"] } eth_compileSolidity (DEPRECATED) Returns compiled solidity code. Parameters String - The source code. Example Parameters params: [ \"contract test { function multiply(uint a) returns(uint d) { return a * 7; } }\", ] Returns DATA - The compiled source code. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_compileSolidity\",\"params\":[\"contract test { function multiply(uint a) returns(uint d) { return a * 7; } }\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": { \"code\": \"0x605880600c6000396000f3006000357c010000000000000000000000000000000000000000000000000000000090048063c6888fa114602e57005b603d6004803590602001506047565b8060005260206000f35b60006007820290506053565b91905056\", \"info\": { \"source\": \"contract test {\\n function multiply(uint a) constant returns(uint d) {\\n return a * 7;\\n }\\n}\\n\", \"language\": \"Solidity\", \"languageVersion\": \"0\", \"compilerVersion\": \"0.9.19\", \"abiDefinition\": [ { \"constant\": true, \"inputs\": [ { \"name\": \"a\", \"type\": \"uint256\" } ], \"name\": \"multiply\", \"outputs\": [ { \"name\": \"d\", \"type\": \"uint256\" } ], \"type\": \"function\" } ], \"userDoc\": { \"methods\": {} }, \"developerDoc\": { \"methods\": {} } } } eth_compileLLL (DEPRECATED) Returns compiled LLL code. Parameters String - The source code. Example Parameters params: [ \"(returnlll (suicide (caller)))\", ] Returns DATA - The compiled source code. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_compileLLL\",\"params\":[\"(returnlll (suicide (caller)))\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x603880600c6000396000f3006001600060e060020a600035048063c6888fa114601857005b6021600435602b565b8060005260206000f35b600081600702905091905056\" // the compiled source code } eth_compileSerpent (DEPRECATED) Returns compiled serpent code. Parameters String - The source code. Example Parameters params: [ \"/* some serpent */\", ] Returns DATA - The compiled source code. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_compileSerpent\",\"params\":[\"/* some serpent */\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x603880600c6000396000f3006001600060e060020a600035048063c6888fa114601857005b6021600435602b565b8060005260206000f35b600081600702905091905056\" // the compiled source code } eth_newFilter Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges . A note on specifying topic filters: Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic filters: * [] \"anything\" * [A] \"A in first position (and anything after)\" * [null, B] \"anything in first position AND B in second position (and anything after)\" * [A, B] \"A in first position AND B in second position (and anything after)\" * [[A, B], [A, B]] \"(A OR B) in first position AND (A OR B) in second position (and anything after)\" Parameters Object - The filter options: fromBlock : QUANTITY|TAG - (optional, default: \"latest\" ) Integer block number, or \"latest\" for the last mined block or \"pending\" , \"earliest\" for not yet mined transactions. toBlock : QUANTITY|TAG - (optional, default: \"latest\" ) Integer block number, or \"latest\" for the last mined block or \"pending\" , \"earliest\" for not yet mined transactions. address : DATA|Array , 20 Bytes - (optional) Contract address or a list of addresses from which logs should originate. topics : Array of DATA , - (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with \"or\" options. Example Parameters params: [{ \"fromBlock\": \"0x1\", \"toBlock\": \"0x2\", \"address\": \"0x8888f1f195afa192cfee860698584c030f4c9db1\", \"topics\": [\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\", null, [\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\", \"0x0000000000000000000000000aff3454fce5edbc8cca8697c15331677e6ebccc\"]] }] Returns QUANTITY - A filter id. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_newFilter\",\"params\":[{\"topics\":[\"0x0000000000000000000000000000000000000000000000000000000012341234\"]}],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x1\" // 1 } eth_newBlockFilter Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges . Parameters None Returns QUANTITY - A filter id. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_newBlockFilter\",\"params\":[],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x1\" // 1 } eth_newPendingTransactionFilter Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges . Parameters None Returns QUANTITY - A filter id. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_newPendingTransactionFilter\",\"params\":[],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x1\" // 1 } eth_uninstallFilter Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additonally Filters timeout when they aren't requested with eth_getFilterChanges for a period of time. Parameters QUANTITY - The filter id. Example Parameters params: [ \"0xb\" // 11 ] Returns Boolean - true if the filter was successfully uninstalled, otherwise false . Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_uninstallFilter\",\"params\":[\"0xb\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": true } eth_getFilterChanges Polling method for a filter, which returns an array of logs which occurred since last poll. Parameters QUANTITY - the filter id. Example Parameters params: [ \"0x16\" // 22 ] Returns Array - Array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes ( DATA , 32 Bytes), e.g. [\"0x3454645634534...\"] . For filters created with eth_newPendingTransactionFilter the return are transaction hashes ( DATA , 32 Bytes), e.g. [\"0x6345343454645...\"] . For filters created with eth_newFilter logs are objects with following params: removed : TAG - true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : QUANTITY - integer of the log index position in the block. null when its pending log. transactionIndex : QUANTITY - integer of the transactions index position log was created from. null when its pending log. transactionHash : DATA , 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : DATA , 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : QUANTITY - the block number where this log was in. null when its pending. null when its pending log. address : DATA , 20 Bytes - address from which this log originated. data : DATA - contains the non-indexed arguments of the log. topics : Array of DATA - Array of 0 to 4 32 Bytes DATA of indexed log arguments. (In solidity : The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256) ), except you declared the event with the anonymous specifier.) Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getFilterChanges\",\"params\":[\"0x16\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": [{ \"logIndex\": \"0x1\", // 1 \"blockNumber\":\"0x1b4\", // 436 \"blockHash\": \"0x8216c5785ac562ff41e2dcfdf5785ac562ff41e2dcfdf829c5a142f1fccd7d\", \"transactionHash\": \"0xdf829c5a142f1fccd7d8216c5785ac562ff41e2dcfdf5785ac562ff41e2dcf\", \"transactionIndex\": \"0x0\", // 0 \"address\": \"0x16c5785ac562ff41e2dcfdf829c5a142f1fccd7d\", \"data\":\"0x0000000000000000000000000000000000000000000000000000000000000000\", \"topics\": [\"0x59ebeb90bc63057b6515673c3ecf9438e5058bca0f92585014eced636878c9a5\"] },{ ... }] } eth_getFilterLogs Returns an array of all logs matching filter with given id. Parameters QUANTITY - The filter id. Example Parameters params: [ \"0x16\" // 22 ] Returns See eth_getFilterChanges Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getFilterLogs\",\"params\":[\"0x16\"],\"id\":74}' Result see eth_getFilterChanges eth_getLogs Returns an array of all logs matching a given filter object. Parameters Object - The filter options: fromBlock : QUANTITY|TAG - (optional, default: \"latest\" ) Integer block number, or \"latest\" for the last mined block or \"pending\" , \"earliest\" for not yet mined transactions. toBlock : QUANTITY|TAG - (optional, default: \"latest\" ) Integer block number, or \"latest\" for the last mined block or \"pending\" , \"earliest\" for not yet mined transactions. address : DATA|Array , 20 Bytes - (optional) Contract address or a list of addresses from which logs should originate. topics : Array of DATA , - (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with \"or\" options. blockhash : DATA , 32 Bytes - (optional) With the addition of EIP-234 (platone >= v1.8.13 or Parity >= v2.1.0), blockHash is a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash . Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash . If blockHash is present in the filter criteria, then neither fromBlock nor toBlock are allowed. Example Parameters params: [{ \"topics\": [\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\"] }] Returns See eth_getFilterChanges Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getLogs\",\"params\":[{\"topics\":[\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\"]}],\"id\":74}' Result see eth_getFilterChanges eth_getWork Returns the hash of the current block, the seedHash, and the boundary condition to be met (\"target\"). Parameters none Returns Array - Array with the following properties: 1. DATA , 32 Bytes - current block header pow-hash 2. DATA , 32 Bytes - the seed hash used for the DAG. 3. DATA , 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\":[],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": [ \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\", \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\", \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\" ] } eth_submitWork Used for submitting a proof-of-work solution. Parameters DATA , 8 Bytes - The nonce found (64 bits) DATA , 32 Bytes - The header's pow-hash (256 bits) DATA , 32 Bytes - The mix digest (256 bits) Example Parameters params: [ \"0x0000000000000001\", \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\", \"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\" ] Returns Boolean - returns true if the provided solution is valid, otherwise false . Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\":\"eth_submitWork\", \"params\":[\"0x0000000000000001\", \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\", \"0xD1GE5700000000000000000000000000D1GE5700000000000000000000000000\"],\"id\":73}' // Result { \"id\":73, \"jsonrpc\":\"2.0\", \"result\": true } eth_submitHashrate Used for submitting mining hashrate. Parameters Hashrate , a hexadecimal string representation (32 bytes) of the hash rate ID , String - A random hexadecimal(32 bytes) ID identifying the client Example Parameters params: [ \"0x0000000000000000000000000000000000000000000000000000000000500000\", \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\" ] Returns Boolean - returns true if submitting went through succesfully and false otherwise. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\":\"eth_submitHashrate\", \"params\":[\"0x0000000000000000000000000000000000000000000000000000000000500000\", \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\"],\"id\":73}' // Result { \"id\":73, \"jsonrpc\":\"2.0\", \"result\": true } eth_getProof Returns the account- and storage-values of the specified account including the Merkle-proof. getProof-Parameters DATA , 20 bytes - address of the account or contract ARRAY , 32 Bytes - array of storage-keys which should be proofed and included. See eth_getStorageAt QUANTITY|TAG - integer block number, or the string \"latest\" or \"earliest\", see the default block parameter Example Parameters params: [\"0x1234567890123456789012345678901234567890\",[\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\"latest\"] getProof-Returns Returns Object - A account object: balance : QUANTITY - the balance of the account. See eth_getBalance codeHash : DATA , 32 Bytes - hash of the code of the account. For a simple Account without code it will return \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\" nonce : QUANTITY , - nonce of the account. See eth_getTransactionCount storageHash : DATA , 32 Bytes - SHA3 of the StorageRoot. All storage will deliver a MerkleProof starting with this rootHash. accountProof : ARRAY - Array of rlp-serialized MerkleTree-Nodes, starting with the stateRoot-Node, following the path of the SHA3 (address) as key. storageProof : ARRAY - Array of storage-entries as requested. Each entry is a object with these properties: key : QUANTITY - the requested storage key value : QUANTITY - the storage value proof : ARRAY - Array of rlp-serialized MerkleTree-Nodes, starting with the storageHash-Node, following the path of the SHA3 (key) as path. getProof-Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getProof\",\"params\":[\"0x1234567890123456789012345678901234567890\",[\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\"latest\"],\"id\":1}' -H \"Content-type:application/json\" http://localhost:8545 // Result { \"jsonrpc\": \"2.0\", \"id\": 1, \"result\": { \"address\": \"0x1234567890123456789012345678901234567890\", \"accountProof\": [ \"0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80\", \"0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80\", \"0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080\", \"0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080\" ], \"balance\": \"0x0\", \"codeHash\": \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\", \"nonce\": \"0x0\", \"storageHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\", \"storageProof\": [ { \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000000\", \"value\": \"0x0\", \"proof\": [] }, { \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000001\", \"value\": \"0x0\", \"proof\": [] } ] } } db_putString Stores a string in the local database. Note this function is deprecated and will be removed in the future. Parameters String - Database name. String - Key name. String - String to store. Example Parameters params: [ \"testDB\", \"myKey\", \"myString\" ] Returns Boolean - returns true if the value was stored, otherwise false . Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"db_putString\",\"params\":[\"testDB\",\"myKey\",\"myString\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": true } db_getString Returns string from the local database. Note this function is deprecated and will be removed in the future. Parameters String - Database name. String - Key name. Example Parameters params: [ \"testDB\", \"myKey\", ] Returns String - The previously stored string. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"db_getString\",\"params\":[\"testDB\",\"myKey\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": \"myString\" } db_putHex Stores binary data in the local database. Note this function is deprecated and will be removed in the future. Parameters String - Database name. String - Key name. DATA - The data to store. Example Parameters params: [ \"testDB\", \"myKey\", \"0x68656c6c6f20776f726c64\" ] Returns Boolean - returns true if the value was stored, otherwise false . Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"db_putHex\",\"params\":[\"testDB\",\"myKey\",\"0x68656c6c6f20776f726c64\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": true } db_platoneex Returns binary data from the local database. Note this function is deprecated and will be removed in the future. Parameters String - Database name. String - Key name. Example Parameters params: [ \"testDB\", \"myKey\", ] Returns DATA - The previously stored data. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"db_platoneex\",\"params\":[\"testDB\",\"myKey\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": \"0x68656c6c6f20776f726c64\" } shh_version Returns the current whisper protocol version. Parameters none Returns String - The current whisper protocol version Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_version\",\"params\":[],\"id\":67}' // Result { \"id\":67, \"jsonrpc\": \"2.0\", \"result\": \"2\" } shh_post Sends a whisper message. Parameters Object - The whisper post object: from : DATA , 60 Bytes - (optional) The identity of the sender. to : DATA , 60 Bytes - (optional) The identity of the receiver. When present whisper will encrypt the message so that only the receiver can decrypt it. topics : Array of DATA - Array of DATA topics, for the receiver to identify messages. payload : DATA - The payload of the message. priority : QUANTITY - The integer of the priority in a range from ... (?). ttl : QUANTITY - integer of the time to live in seconds. Example Parameters params: [{ from: \"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\", to: \"0x3e245533f97284d442460f2998cd41858798ddf04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a0d4d661997d3940272b717b1\", topics: [\"0x776869737065722d636861742d636c69656e74\", \"0x4d5a695276454c39425154466b61693532\"], payload: \"0x7b2274797065223a226d6\", priority: \"0x64\", ttl: \"0x64\", }] Returns Boolean - returns true if the message was send, otherwise false . Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_post\",\"params\":[{\"from\":\"0xc931d93e97ab07fe42d923478ba2465f2..\",\"topics\": [\"0x68656c6c6f20776f726c64\"],\"payload\":\"0x68656c6c6f20776f726c64\",\"ttl\":0x64,\"priority\":0x64}],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": true } shh_newIdentity Creates new whisper identity in the client. Parameters none Returns DATA , 60 Bytes - the address of the new identiy. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_newIdentity\",\"params\":[],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xc931d93e97ab07fe42d923478ba2465f283f440fd6cabea4dd7a2c807108f651b7135d1d6ca9007d5b68aa497e4619ac10aa3b27726e1863c1fd9b570d99bbaf\" } shh_hasIdentity Checks if the client hold the private keys for a given identity. Parameters DATA , 60 Bytes - The identity address to check. Example Parameters params: [ \"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\" ] Returns Boolean - returns true if the client holds the privatekey for that identity, otherwise false . Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_hasIdentity\",\"params\":[\"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": true } shh_newGroup Creates a new group. Parameters none Returns DATA , 60 Bytes - the address of the new group. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_newGroup\",\"params\":[],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xc65f283f440fd6cabea4dd7a2c807108f651b7135d1d6ca90931d93e97ab07fe42d923478ba2407d5b68aa497e4619ac10aa3b27726e1863c1fd9b570d99bbaf\" } shh_addToGroup Adds a whisper identity to the group. Parameters DATA , 60 Bytes - The identity address to add to a group. Example Parameters params: [ \"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\" ] Returns Boolean - returns true if the identity was successfully added to the group, otherwise false . Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_addToGroup\",\"params\":[\"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": true } shh_newFilter Creates filter to notify, when client receives whisper message matching the filter options. Parameters Object - The filter options: to : DATA , 60 Bytes - (optional) Identity of the receiver. When present it will try to decrypt any incoming message if the client holds the private key to this identity. topics : Array of DATA - Array of DATA topics which the incoming message's topics should match. You can use the following combinations: [A, B] = A && B [A, [B, C]] = A && (B || C) [null, A, B] = ANYTHING && A && B null works as a wildcard Example Parameters params: [{ \"topics\": ['0x12341234bf4b564f'], \"to\": \"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\" }] Returns QUANTITY - The newly created filter. Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_newFilter\",\"params\":[{\"topics\": ['0x12341234bf4b564f'],\"to\": \"0x2341234bf4b2341234bf4b564f...\"}],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": \"0x7\" // 7 } shh_uninstallFilter Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additonally Filters timeout when they aren't requested with shh_getFilterChanges for a period of time. Parameters QUANTITY - The filter id. Example Parameters params: [ \"0x7\" // 7 ] Returns Boolean - true if the filter was successfully uninstalled, otherwise false . Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_uninstallFilter\",\"params\":[\"0x7\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": true } shh_getFilterChanges Polling method for whisper filters. Returns new messages since the last call of this method. Note calling the shh_getMessages method, will reset the buffer for this method, so that you won't receive duplicate messages. Parameters QUANTITY - The filter id. Example Parameters params: [ \"0x7\" // 7 ] Returns Array - Array of messages received since last poll: hash : DATA , 32 Bytes (?) - The hash of the message. from : DATA , 60 Bytes - The sender of the message, if a sender was specified. to : DATA , 60 Bytes - The receiver of the message, if a receiver was specified. expiry : QUANTITY - Integer of the time in seconds when this message should expire (?). ttl : QUANTITY - Integer of the time the message should float in the system in seconds (?). sent : QUANTITY - Integer of the unix timestamp when the message was sent. topics : Array of DATA - Array of DATA topics the message contained. payload : DATA - The payload of the message. workProved : QUANTITY - Integer of the work this message required before it was send (?). Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_getFilterChanges\",\"params\":[\"0x7\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": [{ \"hash\": \"0x33eb2da77bf3527e28f8bf493650b1879b08c4f2a362beae4ba2f71bafcd91f9\", \"from\": \"0x3ec052fc33..\", \"to\": \"0x87gdf76g8d7fgdfg...\", \"expiry\": \"0x54caa50a\", // 1422566666 \"sent\": \"0x54ca9ea2\", // 1422565026 \"ttl\": \"0x64\", // 100 \"topics\": [\"0x6578616d\"], \"payload\": \"0x7b2274797065223a226d657373616765222c2263686...\", \"workProved\": \"0x0\" }] } shh_getMessages Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages. Parameters QUANTITY - The filter id. Example Parameters params: [ \"0x7\" // 7 ] Returns See shh_getFilterChanges Example // Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_getMessages\",\"params\":[\"0x7\"],\"id\":73}' Result see shh_getFilterChanges","title":"JSON-RPC API"},{"location":"JSON-RPC_API/JSON-RPC_API/#json-rpc-api","text":"JSON is a lightweight data-interchange format. It can represent numbers, strings, ordered sequences of values, and collections of name/value pairs. JSON-RPC is a stateless, light-weight remote procedure call (RPC) protocol. Primarily this specification defines several data structures and the rules around their processing. It is transport agnostic in that the concepts can be used within the same process, over sockets, over HTTP, or in many various message passing environments. It uses JSON ( RFC 4627 ) as data format. platone has pub/sub support. Read this page for more information. Open Ethereum has pub/sub support. Read this for more information. Hyperledger Besu has pub/sub support. Read this for more information.","title":"JSON RPC API"},{"location":"JSON-RPC_API/JSON-RPC_API/#javascript-api","text":"To talk to an ethereum node from inside a JavaScript application use the web3.js library, which gives a convenient interface for the RPC methods. See the JavaScript API for more.","title":"JavaScript API"},{"location":"JSON-RPC_API/JSON-RPC_API/#json-rpc-endpoint","text":"Default JSON-RPC endpoints: Client URL Go http://localhost:6790","title":"JSON-RPC Endpoint"},{"location":"JSON-RPC_API/JSON-RPC_API/#go","text":"You can start the HTTP JSON-RPC with the --rpc flag platone --rpc change the default port (8545) and listing address (localhost) with: platone --rpc --rpcaddr <ip> --rpcport <portnumber> If accessing the RPC from a browser, CORS will need to be enabled with the appropriate domain set. Otherwise, JavaScript calls are limit by the same-origin policy and requests will fail: platone --rpc --rpccorsdomain \"http://localhost:3000\" The JSON RPC can also be started from the platone console using the admin.startRPC(addr, port) command.","title":"Go"},{"location":"JSON-RPC_API/JSON-RPC_API/#c","text":"First start the node by running aleth application: build/aleth/aleth Then start the JSON-RPC proxy (defaults to '~/.ethereum/platone.ipc' and 'http://127.0.0.1:8545'): scripts/jsonrpcproxy.py If you use non-default IPC path or JSON-RPC options, you can specify : scripts/jsonrpcproxy.py <path to your node's platone.ipc> <URL for this proxy server>","title":"C++"},{"location":"JSON-RPC_API/JSON-RPC_API/#python","text":"In python the JSONRPC server is currently started by default and listens on 127.0.0.1:4000 You can change the port and listen address by giving a config option. pyethapp -c jsonrpc.listen_port=4002 -c jsonrpc.listen_host=127.0.0.2 run","title":"Python"},{"location":"JSON-RPC_API/JSON-RPC_API/#json-rpc-support","text":"cpp-ethereum go-ethereum py-ethereum parity pantheon JSON-RPC 1.0 \u2713 JSON-RPC 2.0 \u2713 \u2713 \u2713 \u2713 \u2713 Batch requests \u2713 \u2713 \u2713 \u2713 \u2713 HTTP \u2713 \u2713 \u2713 \u2713 \u2713 IPC \u2713 \u2713 \u2713 WS \u2713 \u2713 \u2713","title":"JSON-RPC support"},{"location":"JSON-RPC_API/JSON-RPC_API/#hex-value-encoding","text":"At present there are two key datatypes that are passed over JSON: unformatted byte arrays and quantities. Both are passed with a hex encoding, however with different requirements to formatting: When encoding QUANTITIES (integers, numbers): encode as hex, prefix with \"0x\", the most compact representation (slight exception: zero should be represented as \"0x0\"). Examples: - 0x41 (65 in decimal) - 0x400 (1024 in decimal) - WRONG: 0x (should always have at least one digit - zero is \"0x0\") - WRONG: 0x0400 (no leading zeroes allowed) - WRONG: ff (must be prefixed 0x) When encoding UNFORMATTED DATA (byte arrays, account addresses, hashes, bytecode arrays): encode as hex, prefix with \"0x\", two hex digits per byte. Examples: - 0x41 (size 1, \"A\") - 0x004200 (size 3, \"\\0B\\0\") - 0x (size 0, \"\") - WRONG: 0xf0f0f (must be even number of digits) - WRONG: 004200 (must be prefixed 0x) Currently cpp-ethereum , go-ethereum and parity provide JSON-RPC communication over http and IPC (unix socket Linux and OSX/named pipes on Windows). Version 1.4 of go-ethereum, version 1.6 of Parity and version 0.8 of Pantheon onwards have websocket support.","title":"HEX value encoding"},{"location":"JSON-RPC_API/JSON-RPC_API/#the-default-block-parameter","text":"The following methods have an extra default block parameter: eth_getBalance eth_getCode eth_getTransactionCount eth_getStorageAt eth_call When requests are made that act on the state of ethereum, the last default block parameter determines the height of the block. The following options are possible for the defaultBlock parameter: HEX String - an integer block number String \"earliest\" for the earliest/genesis block String \"latest\" - for the latest mined block String \"pending\" - for the pending state/transactions","title":"The default block parameter"},{"location":"JSON-RPC_API/JSON-RPC_API/#curl-examples-explained","text":"The curl options below might return a response where the node complains about the content type, this is because the --data option sets the content type to application/x-www-form-urlencoded . If your node does complain, manually set the header by placing -H \"Content-Type: application/json\" at the start of the call. The examples also do not include the URL/IP & port combination which must be the last argument given to curl e.x. 127.0.0.1:8545","title":"Curl Examples Explained"},{"location":"JSON-RPC_API/JSON-RPC_API/#json-rpc-methods","text":"web3_clientVersion web3_sha3 net_version net_peerCount net_listening eth_protocolVersion eth_syncing eth_coinbase eth_mining eth_hashrate eth_gasPrice eth_accounts eth_blockNumber eth_getBalance eth_getStorageAt eth_getTransactionCount eth_getBlockTransactionCountByHash eth_getBlockTransactionCountByNumber eth_getUncleCountByBlockHash eth_getUncleCountByBlockNumber eth_getCode eth_sign eth_sendTransaction eth_sendRawTransaction eth_call eth_estimateGas eth_getBlockByHash eth_getBlockByNumber eth_getTransactionByHash eth_getTransactionByBlockHashAndIndex eth_getTransactionByBlockNumberAndIndex eth_getTransactionReceipt eth_pendingTransactions eth_getUncleByBlockHashAndIndex eth_getUncleByBlockNumberAndIndex eth_getCompilers eth_compileLLL eth_compileSolidity eth_compileSerpent eth_newFilter eth_newBlockFilter eth_newPendingTransactionFilter eth_uninstallFilter eth_getFilterChanges eth_getFilterLogs eth_getLogs eth_getWork eth_submitWork eth_submitHashrate eth_getProof db_putString db_getString db_putHex db_platoneex shh_post shh_version shh_newIdentity shh_hasIdentity shh_newGroup shh_addToGroup shh_newFilter shh_uninstallFilter shh_getFilterChanges shh_getMessages","title":"JSON-RPC methods"},{"location":"JSON-RPC_API/JSON-RPC_API/#json-rpc-api-reference","text":"","title":"JSON RPC API Reference"},{"location":"JSON-RPC_API/JSON-RPC_API/#web3_clientversion","text":"Returns the current client version.","title":"web3_clientVersion"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns","text":"String - The current client version.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":67}' // Result { \"id\":67, \"jsonrpc\":\"2.0\", \"result\": \"Mist/v0.9.3/darwin/go1.4.1\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#web3_sha3","text":"Returns Keccak-256 ( not the standardized SHA3-256) of the given data.","title":"web3_sha3"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_1","text":"DATA - the data to convert into a SHA3 hash.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters","text":"params: [ \"0x68656c6c6f20776f726c64\" ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_1","text":"DATA - The SHA3 result of the given string.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_1","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_sha3\",\"params\":[\"0x68656c6c6f20776f726c64\"],\"id\":64}' // Result { \"id\":64, \"jsonrpc\": \"2.0\", \"result\": \"0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#net_version","text":"Returns the current network id.","title":"net_version"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_2","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_2","text":"String - The current network id. - \"1\" : Ethereum Mainnet - \"2\" : Morden Testnet (deprecated) - \"3\" : Ropsten Testnet - \"4\" : Rinkeby Testnet - \"5\" : Goerli Testnet - \"42\" : Kovan Testnet","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_2","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":67}' // Result { \"id\":67, \"jsonrpc\": \"2.0\", \"result\": \"3\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#net_listening","text":"Returns true if client is actively listening for network connections.","title":"net_listening"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_3","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_3","text":"Boolean - true when listening, otherwise false .","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_3","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_listening\",\"params\":[],\"id\":67}' // Result { \"id\":67, \"jsonrpc\":\"2.0\", \"result\":true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#net_peercount","text":"Returns number of peers currently connected to the client.","title":"net_peerCount"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_4","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_4","text":"QUANTITY - integer of the number of connected peers.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_4","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_peerCount\",\"params\":[],\"id\":74}' // Result { \"id\":74, \"jsonrpc\": \"2.0\", \"result\": \"0x2\" // 2 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_protocolversion","text":"Returns the current ethereum protocol version.","title":"eth_protocolVersion"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_5","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_5","text":"String - The current ethereum protocol version.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_5","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_protocolVersion\",\"params\":[],\"id\":67}' // Result { \"id\":67, \"jsonrpc\": \"2.0\", \"result\": \"0x54\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_syncing","text":"Returns an object with data about the sync status or false .","title":"eth_syncing"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_6","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_6","text":"Object|Boolean , An object with sync status data or FALSE , when not syncing: - startingBlock : QUANTITY - The block at which the import started (will only be reset, after the sync reached his head) - currentBlock : QUANTITY - The current block, same as eth_blockNumber - highestBlock : QUANTITY - The estimated highest block","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_6","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\":[],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": { startingBlock: '0x384', currentBlock: '0x386', highestBlock: '0x454' } } // Or when not syncing { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": false }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_coinbase","text":"Returns the client coinbase address.","title":"eth_coinbase"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_7","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_7","text":"DATA , 20 bytes - the current coinbase address.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_7","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_coinbase\",\"params\":[],\"id\":64}' // Result { \"id\":64, \"jsonrpc\": \"2.0\", \"result\": \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_mining","text":"Returns true if client is actively mining new blocks.","title":"eth_mining"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_8","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_8","text":"Boolean - returns true of the client is mining, otherwise false .","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_8","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_mining\",\"params\":[],\"id\":71}' // Result { \"id\":71, \"jsonrpc\": \"2.0\", \"result\": true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_hashrate","text":"Returns the number of hashes per second that the node is mining with.","title":"eth_hashrate"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_9","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_9","text":"QUANTITY - number of hashes per second.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_9","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_hashrate\",\"params\":[],\"id\":71}' // Result { \"id\":71, \"jsonrpc\": \"2.0\", \"result\": \"0x38a\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_gasprice","text":"Returns the current price per gas in wei.","title":"eth_gasPrice"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_10","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_10","text":"QUANTITY - integer of the current gas price in wei.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_10","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_gasPrice\",\"params\":[],\"id\":73}' // Result { \"id\":73, \"jsonrpc\": \"2.0\", \"result\": \"0x09184e72a000\" // 10000000000000 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_accounts","text":"Returns a list of addresses owned by client.","title":"eth_accounts"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_11","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_11","text":"Array of DATA , 20 Bytes - addresses owned by the client.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_11","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_accounts\",\"params\":[],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\"] }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_blocknumber","text":"Returns the number of most recent block.","title":"eth_blockNumber"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_12","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_12","text":"QUANTITY - integer of the current block number the client is on.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_12","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}' // Result { \"id\":83, \"jsonrpc\": \"2.0\", \"result\": \"0xc94\" // 1207 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getbalance","text":"Returns the balance of the account of given address.","title":"eth_getBalance"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_13","text":"DATA , 20 Bytes - address to check for balance. QUANTITY|TAG - integer block number, or the string \"latest\" , \"earliest\" or \"pending\" , see the default block parameter","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_1","text":"params: [ '0xc94770007dda54cF92009BFF0dE90c06F603a09f', 'latest' ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_13","text":"QUANTITY - integer of the current balance in wei.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_13","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\":[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\", \"latest\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x0234c8a3397aab58\" // 158972490234375000 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getstorageat","text":"Returns the value from a storage position at a given address.","title":"eth_getStorageAt"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_14","text":"DATA , 20 Bytes - address of the storage. QUANTITY - integer of the position in the storage. QUANTITY|TAG - integer block number, or the string \"latest\" , \"earliest\" or \"pending\" , see the default block parameter","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_14","text":"DATA - the value at this storage position.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_14","text":"Calculating the correct position depends on the storage to retrieve. Consider the following contract deployed at 0x295a70b2de5e3953354a6a8344e616ed314d7251 by address 0x391694e7e0b0cce554cb130d723a9d27458f9298 . contract Storage { uint pos0; mapping(address => uint) pos1; function Storage() { pos0 = 1234; pos1[msg.sender] = 5678; } } Retrieving the value of pos0 is straight forward: curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x0\", \"latest\"], \"id\": 1}' localhost:8545 {\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"0x00000000000000000000000000000000000000000000000000000000000004d2\"} Retrieving an element of the map is harder. The position of an element in the map is calculated with: keccack(LeftPad32(key, 0), LeftPad32(map position, 0)) This means to retrieve the storage on pos1[\"0x391694e7e0b0cce554cb130d723a9d27458f9298\"] we need to calculate the position with: keccak(decodeHex(\"000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298\" + \"0000000000000000000000000000000000000000000000000000000000000001\")) The platone console which comes with the web3 library can be used to make the calculation: > var key = \"000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298\" + \"0000000000000000000000000000000000000000000000000000000000000001\" undefined > web3.sha3(key, {\"encoding\": \"hex\"}) \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" Now to fetch the storage: curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"], \"id\": 1}' localhost:8545 {\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"0x000000000000000000000000000000000000000000000000000000000000162e\"}","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_gettransactioncount","text":"Returns the number of transactions sent from an address.","title":"eth_getTransactionCount"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_15","text":"DATA , 20 Bytes - address. QUANTITY|TAG - integer block number, or the string \"latest\" , \"earliest\" or \"pending\" , see the default block parameter","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_2","text":"params: [ '0xc94770007dda54cF92009BFF0dE90c06F603a09f', 'latest' // state at the latest block ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_15","text":"QUANTITY - integer of the number of transactions send from this address.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_15","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionCount\",\"params\":[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x1\" // 1 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getblocktransactioncountbyhash","text":"Returns the number of transactions in a block from a block matching the given block hash.","title":"eth_getBlockTransactionCountByHash"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_16","text":"DATA , 32 Bytes - hash of a block.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_3","text":"params: [ '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238' ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_16","text":"QUANTITY - integer of the number of transactions in this block.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_16","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByHash\",\"params\":[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xc\" // 11 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getblocktransactioncountbynumber","text":"Returns the number of transactions in a block matching the given block number.","title":"eth_getBlockTransactionCountByNumber"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_17","text":"QUANTITY|TAG - integer of a block number, or the string \"earliest\" , \"latest\" or \"pending\" , as in the default block parameter .","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_4","text":"params: [ '0xe8', // 232 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_17","text":"QUANTITY - integer of the number of transactions in this block.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_17","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByNumber\",\"params\":[\"0xe8\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xa\" // 10 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getunclecountbyblockhash","text":"Returns the number of uncles in a block from a block matching the given block hash.","title":"eth_getUncleCountByBlockHash"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_18","text":"DATA , 32 Bytes - hash of a block.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_5","text":"params: [ '0xc94770007dda54cF92009BFF0dE90c06F603a09f' ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_18","text":"QUANTITY - integer of the number of uncles in this block.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_18","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockHash\",\"params\":[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xc\" // 1 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getunclecountbyblocknumber","text":"Returns the number of uncles in a block from a block matching the given block number.","title":"eth_getUncleCountByBlockNumber"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_19","text":"QUANTITY|TAG - integer of a block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter . params: [ '0xe8', // 232 ]","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_19","text":"QUANTITY - integer of the number of uncles in this block.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_19","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockNumber\",\"params\":[\"0xe8\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x1\" // 1 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getcode","text":"Returns code at a given address.","title":"eth_getCode"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_20","text":"DATA , 20 Bytes - address. QUANTITY|TAG - integer block number, or the string \"latest\" , \"earliest\" or \"pending\" , see the default block parameter .","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_6","text":"params: [ '0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b', '0x2' // 2 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_20","text":"DATA - the code from the given address.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_20","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\":[\"0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b\", \"0x2\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x600160008035811a818181146012578301005b601b6001356025565b8060005260206000f25b600060078202905091905056\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_sign","text":"The sign method calculates an Ethereum specific signature with: sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))) . By adding a prefix to the message makes the calculated signature recognisable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data (e.g. transaction) and use the signature to impersonate the victim. Note the address to sign with must be unlocked.","title":"eth_sign"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_21","text":"account, message DATA , 20 Bytes - address. DATA , N Bytes - message to sign.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_21","text":"DATA : Signature","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_21","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sign\",\"params\":[\"0x9b2055d370f73ec7d8a03e965129118dc8f5bf83\", \"0xdeadbeaf\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xa3f20717a250c2b0b729b7e5becbff67fdaef7e0699da4de7ca5895b02a170a12d887fd3b17bfdce3481f10bea41f45ba9f709d39ce8325427b57afcfc994cee1b\" } An example how to use solidity ecrecover to verify the signature calculated with eth_sign can be found here . The contract is deployed on the testnet Ropsten and Rinkeby.","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_sendtransaction","text":"Creates new message call transaction or a contract creation, if the data field contains code.","title":"eth_sendTransaction"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_22","text":"Object - The transaction object from : DATA , 20 Bytes - The address the transaction is send from. to : DATA , 20 Bytes - (optional when creating new contract) The address the transaction is directed to. gas : QUANTITY - (optional, default: 90000) Integer of the gas provided for the transaction execution. It will return unused gas. gasPrice : QUANTITY - (optional, default: To-Be-Determined) Integer of the gasPrice used for each paid gas value : QUANTITY - (optional) Integer of the value sent with this transaction data : DATA - The compiled code of a contract OR the hash of the invoked method signature and encoded parameters. For details see Ethereum Contract ABI nonce : QUANTITY - (optional) Integer of a nonce. This allows to overwrite your own pending transactions that use the same nonce.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_7","text":"params: [{ \"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\", \"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\", \"gas\": \"0x76c0\", // 30400 \"gasPrice\": \"0x9184e72a000\", // 10000000000000 \"value\": \"0x9184e72a\", // 2441406250 \"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" }]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_22","text":"DATA , 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available. Use eth_getTransactionReceipt to get the contract address, after the transaction was mined, when you created a contract.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_22","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendTransaction\",\"params\":[{see above}],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_sendrawtransaction","text":"Creates new message call transaction or a contract creation for signed transactions.","title":"eth_sendRawTransaction"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_23","text":"DATA , The signed transaction data.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_8","text":"params: [\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_23","text":"DATA , 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available. Use eth_getTransactionReceipt to get the contract address, after the transaction was mined, when you created a contract.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_23","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[{see above}],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_call","text":"Executes a new message call immediately without creating a transaction on the block chain.","title":"eth_call"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_24","text":"Object - The transaction call object from : DATA , 20 Bytes - (optional) The address the transaction is sent from. to : DATA , 20 Bytes - The address the transaction is directed to. gas : QUANTITY - (optional) Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. gasPrice : QUANTITY - (optional) Integer of the gasPrice used for each paid gas value : QUANTITY - (optional) Integer of the value sent with this transaction data : DATA - (optional) Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI in the Solidity documentation QUANTITY|TAG - integer block number, or the string \"latest\" , \"earliest\" or \"pending\" , see the default block parameter","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_24","text":"DATA - the return value of executed contract.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_24","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\":[{see above}],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_estimategas","text":"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance.","title":"eth_estimateGas"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_25","text":"See eth_call parameters, expect that all properties are optional. If no gas limit is specified platone uses the block gas limit from the pending block as an upper bound. As a result the returned estimate might not be enough to executed the call/transaction when the amount of gas is higher than the pending block gas limit.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_25","text":"QUANTITY - the amount of gas used.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_25","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\":[{see above}],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x5208\" // 21000 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getblockbyhash","text":"Returns information about a block by hash.","title":"eth_getBlockByHash"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_26","text":"DATA , 32 Bytes - Hash of a block. Boolean - If true it returns the full transaction objects, if false only the hashes of the transactions.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_9","text":"params: [ '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331', true ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_26","text":"Object - A block object, or null when no block was found: number : QUANTITY - the block number. null when its pending block. hash : DATA , 32 Bytes - hash of the block. null when its pending block. parentHash : DATA , 32 Bytes - hash of the parent block. nonce : DATA , 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : DATA , 32 Bytes - SHA3 of the uncles data in the block. logsBloom : DATA , 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : DATA , 32 Bytes - the root of the transaction trie of the block. stateRoot : DATA , 32 Bytes - the root of the final state trie of the block. receiptsRoot : DATA , 32 Bytes - the root of the receipts trie of the block. miner : DATA , 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : QUANTITY - integer of the difficulty for this block. totalDifficulty : QUANTITY - integer of the total difficulty of the chain until this block. extraData : DATA - the \"extra data\" field of this block. size : QUANTITY - integer the size of this block in bytes. gasLimit : QUANTITY - the maximum gas allowed in this block. gasUsed : QUANTITY - the total used gas by all transactions in this block. timestamp : QUANTITY - the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : Array - Array of uncle hashes.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_26","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByHash\",\"params\":[\"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\", true],\"id\":1}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": { \"number\": \"0x1b4\", // 436 \"hash\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\", \"parentHash\": \"0x9646252be9520f6e71339a8df9c55e4d7619deeb018d2a3f2d21fc165dde5eb5\", \"nonce\": \"0xe04d296d2460cfb8472af2c5fd05b5a214109c25688d3704aed5484f9a7792f2\", \"sha3Uncles\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\", \"logsBloom\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\", \"transactionsRoot\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\", \"stateRoot\": \"0xd5855eb08b3387c0af375e9cdb6acfc05eb8f519e419b874b6ff2ffda7ed1dff\", \"miner\": \"0x4e65fda2159562a496f9f3522f89122a3088497a\", \"difficulty\": \"0x027f07\", // 163591 \"totalDifficulty\": \"0x027f07\", // 163591 \"extraData\": \"0x0000000000000000000000000000000000000000000000000000000000000000\", \"size\": \"0x027f07\", // 163591 \"gasLimit\": \"0x9f759\", // 653145 \"gasUsed\": \"0x9f759\", // 653145 \"timestamp\": \"0x54e34e8e\" // 1424182926 \"transactions\": [{...},{ ... }] \"uncles\": [\"0x1606e5...\", \"0xd5145a9...\"] } }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getblockbynumber","text":"Returns information about a block by block number.","title":"eth_getBlockByNumber"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_27","text":"QUANTITY|TAG - integer of a block number, or the string \"earliest\" , \"latest\" or \"pending\" , as in the default block parameter . Boolean - If true it returns the full transaction objects, if false only the hashes of the transactions.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_10","text":"params: [ '0x1b4', // 436 true ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_27","text":"See eth_getBlockByHash","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_27","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\":[\"0x1b4\", true],\"id\":1}' Result see eth_getBlockByHash","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_gettransactionbyhash","text":"Returns the information about a transaction requested by transaction hash.","title":"eth_getTransactionByHash"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_28","text":"DATA , 32 Bytes - hash of a transaction","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_11","text":"params: [ \"0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\" ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_28","text":"Object - A transaction object, or null when no transaction was found: blockHash : DATA , 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : QUANTITY - block number where this transaction was in. null when its pending. from : DATA , 20 Bytes - address of the sender. gas : QUANTITY - gas provided by the sender. gasPrice : QUANTITY - gas price provided by the sender in Wei. hash : DATA , 32 Bytes - hash of the transaction. input : DATA - the data send along with the transaction. nonce : QUANTITY - the number of transactions made by the sender prior to this one. to : DATA , 20 Bytes - address of the receiver. null when its a contract creation transaction. transactionIndex : QUANTITY - integer of the transaction's index position in the block. null when its pending. value : QUANTITY - value transferred in Wei. v : QUANTITY - ECDSA recovery id r : QUANTITY - ECDSA signature r s : QUANTITY - ECDSA signature s","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_28","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\":[\"0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\"],\"id\":1}' // Result { \"jsonrpc\":\"2.0\", \"id\":1, \"result\":{ \"blockHash\":\"0x1d59ff54b1eb26b013ce3cb5fc9dab3705b415a67127a003c3e61eb445bb8df2\", \"blockNumber\":\"0x5daf3b\", // 6139707 \"from\":\"0xa7d9ddbe1f17865597fbd27ec712455208b6b76d\", \"gas\":\"0xc350\", // 50000 \"gasPrice\":\"0x4a817c800\", // 20000000000 \"hash\":\"0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\", \"input\":\"0x68656c6c6f21\", \"nonce\":\"0x15\", // 21 \"to\":\"0xf02c1c8e6114b1dbe8937a39260b5b0a374432bb\", \"transactionIndex\":\"0x41\", // 65 \"value\":\"0xf3dbb76162000\", // 4290000000000000 \"v\":\"0x25\", // 37 \"r\":\"0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea\", \"s\":\"0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c\" } }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_gettransactionbyblockhashandindex","text":"Returns information about a transaction by block hash and transaction index position.","title":"eth_getTransactionByBlockHashAndIndex"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_29","text":"DATA , 32 Bytes - hash of a block. QUANTITY - integer of the transaction index position.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_12","text":"params: [ '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331', '0x0' // 0 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_29","text":"See eth_getTransactionByHash","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_29","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockHashAndIndex\",\"params\":[\"0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b\", \"0x0\"],\"id\":1}' Result see eth_getTransactionByHash","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_gettransactionbyblocknumberandindex","text":"Returns information about a transaction by block number and transaction index position.","title":"eth_getTransactionByBlockNumberAndIndex"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_30","text":"QUANTITY|TAG - a block number, or the string \"earliest\" , \"latest\" or \"pending\" , as in the default block parameter . QUANTITY - the transaction index position.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_13","text":"params: [ '0x29c', // 668 '0x0' // 0 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_30","text":"See eth_getTransactionByHash","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_30","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\"params\":[\"0x29c\", \"0x0\"],\"id\":1}' Result see eth_getTransactionByHash","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_gettransactionreceipt","text":"Returns the receipt of a transaction by transaction hash. Note That the receipt is not available for pending transactions.","title":"eth_getTransactionReceipt"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_31","text":"DATA , 32 Bytes - hash of a transaction","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_14","text":"params: [ '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238' ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_31","text":"Object - A transaction receipt object, or null when no receipt was found: transactionHash : DATA , 32 Bytes - hash of the transaction. transactionIndex : QUANTITY - integer of the transaction's index position in the block. blockHash : DATA , 32 Bytes - hash of the block where this transaction was in. blockNumber : QUANTITY - block number where this transaction was in. from : DATA , 20 Bytes - address of the sender. to : DATA , 20 Bytes - address of the receiver. null when it's a contract creation transaction. cumulativeGasUsed : QUANTITY - The total amount of gas used when this transaction was executed in the block. gasUsed : QUANTITY - The amount of gas used by this specific transaction alone. contractAddress : DATA , 20 Bytes - The contract address created, if the transaction was a contract creation, otherwise null . logs : Array - Array of log objects, which this transaction generated. logsBloom : DATA , 256 Bytes - Bloom filter for light clients to quickly retrieve related logs. It also returns either : root : DATA 32 bytes of post-transaction stateroot (pre Byzantium) status : QUANTITY either 1 (success) or 0 (failure)","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_31","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\":[\"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": { transactionHash: '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238', transactionIndex: '0x1', // 1 blockNumber: '0xb', // 11 blockHash: '0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b', cumulativeGasUsed: '0x33bc', // 13244 gasUsed: '0x4dc', // 1244 contractAddress: '0xb60e8dd61c5d32be8058bb8eb970870f07233155', // or null, if none was created logs: [{ // logs as returned by getFilterLogs, etc. }, ...], logsBloom: \"0x00...0\", // 256 byte bloom filter status: '0x1' } }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_pendingtransactions","text":"Returns the pending transactions list.","title":"eth_pendingTransactions"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_32","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_32","text":"Array - A list of pending transactions.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_32","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_pendingTransactions\",\"params\":[],\"id\":1}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": [{ blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000', blockNumber: null, from: '0x28bdb9c230f4d5e45435e4d006326ee32e46cb31', gas: '0x204734', gasPrice: '0x4a817c800', hash: '0x8dfa6a59307a490d672494a171feee09db511f05e9c097e098edc2881f9ca4f6', input: '0x6080604052600', nonce: '0x12', to: null, transactionIndex: '0x0', value: '0x0', v: '0x3d', r: '0xaabc9ddafffb2ae0bac4107697547d22d9383667d9e97f5409dd6881ce08f13f', s: '0x69e43116be8f842dcd4a0b2f760043737a59534430b762317db21d9ac8c5034' },....,{ blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000', blockNumber: null, from: '0x28bdb9c230f4d5e45435e4d006326ee32e487b31', gas: '0x205940', gasPrice: '0x4a817c800', hash: '0x8e4340ea3983d86e4b6c44249362f716ec9e09849ef9b6e3321140581d2e4dac', input: '0xe4b6c4424936', nonce: '0x14', to: null, transactionIndex: '0x0', value: '0x0', v: '0x3d', r: '0x1ec191ef20b0e9628c4397665977cbe7a53a263c04f6f185132b77fa0fd5ca44', s: '0x8a58e00c63e05cfeae4f1cf19f05ce82079dc4d5857e2cc281b7797d58b5faf' }] }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getunclebyblockhashandindex","text":"Returns information about a uncle of a block by hash and uncle index position.","title":"eth_getUncleByBlockHashAndIndex"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_33","text":"DATA , 32 Bytes - hash a block. QUANTITY - the uncle's index position. params: [ '0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b', '0x0' // 0 ]","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_33","text":"See eth_getBlockByHash","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_33","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockHashAndIndex\",\"params\":[\"0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b\", \"0x0\"],\"id\":1}' Result see eth_getBlockByHash Note : An uncle doesn't contain individual transactions.","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getunclebyblocknumberandindex","text":"Returns information about a uncle of a block by number and uncle index position.","title":"eth_getUncleByBlockNumberAndIndex"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_34","text":"QUANTITY|TAG - a block number, or the string \"earliest\" , \"latest\" or \"pending\" , as in the default block parameter . QUANTITY - the uncle's index position.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_15","text":"params: [ '0x29c', // 668 '0x0' // 0 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_34","text":"See eth_getBlockByHash Note : An uncle doesn't contain individual transactions.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_34","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\":[\"0x29c\", \"0x0\"],\"id\":1}' Result see eth_getBlockByHash","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getcompilers-deprecated","text":"Returns a list of available compilers in the client.","title":"eth_getCompilers (DEPRECATED)"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_35","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_35","text":"Array - Array of available compilers.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_35","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCompilers\",\"params\":[],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": [\"solidity\", \"lll\", \"serpent\"] }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_compilesolidity-deprecated","text":"Returns compiled solidity code.","title":"eth_compileSolidity (DEPRECATED)"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_36","text":"String - The source code.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_16","text":"params: [ \"contract test { function multiply(uint a) returns(uint d) { return a * 7; } }\", ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_36","text":"DATA - The compiled source code.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_36","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_compileSolidity\",\"params\":[\"contract test { function multiply(uint a) returns(uint d) { return a * 7; } }\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": { \"code\": \"0x605880600c6000396000f3006000357c010000000000000000000000000000000000000000000000000000000090048063c6888fa114602e57005b603d6004803590602001506047565b8060005260206000f35b60006007820290506053565b91905056\", \"info\": { \"source\": \"contract test {\\n function multiply(uint a) constant returns(uint d) {\\n return a * 7;\\n }\\n}\\n\", \"language\": \"Solidity\", \"languageVersion\": \"0\", \"compilerVersion\": \"0.9.19\", \"abiDefinition\": [ { \"constant\": true, \"inputs\": [ { \"name\": \"a\", \"type\": \"uint256\" } ], \"name\": \"multiply\", \"outputs\": [ { \"name\": \"d\", \"type\": \"uint256\" } ], \"type\": \"function\" } ], \"userDoc\": { \"methods\": {} }, \"developerDoc\": { \"methods\": {} } } }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_compilelll-deprecated","text":"Returns compiled LLL code.","title":"eth_compileLLL (DEPRECATED)"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_37","text":"String - The source code.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_17","text":"params: [ \"(returnlll (suicide (caller)))\", ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_37","text":"DATA - The compiled source code.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_37","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_compileLLL\",\"params\":[\"(returnlll (suicide (caller)))\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x603880600c6000396000f3006001600060e060020a600035048063c6888fa114601857005b6021600435602b565b8060005260206000f35b600081600702905091905056\" // the compiled source code }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_compileserpent-deprecated","text":"Returns compiled serpent code.","title":"eth_compileSerpent (DEPRECATED)"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_38","text":"String - The source code.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_18","text":"params: [ \"/* some serpent */\", ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_38","text":"DATA - The compiled source code.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_38","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_compileSerpent\",\"params\":[\"/* some serpent */\"],\"id\":1}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x603880600c6000396000f3006001600060e060020a600035048063c6888fa114601857005b6021600435602b565b8060005260206000f35b600081600702905091905056\" // the compiled source code }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_newfilter","text":"Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges .","title":"eth_newFilter"},{"location":"JSON-RPC_API/JSON-RPC_API/#a-note-on-specifying-topic-filters","text":"Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic filters: * [] \"anything\" * [A] \"A in first position (and anything after)\" * [null, B] \"anything in first position AND B in second position (and anything after)\" * [A, B] \"A in first position AND B in second position (and anything after)\" * [[A, B], [A, B]] \"(A OR B) in first position AND (A OR B) in second position (and anything after)\"","title":"A note on specifying topic filters:"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_39","text":"Object - The filter options: fromBlock : QUANTITY|TAG - (optional, default: \"latest\" ) Integer block number, or \"latest\" for the last mined block or \"pending\" , \"earliest\" for not yet mined transactions. toBlock : QUANTITY|TAG - (optional, default: \"latest\" ) Integer block number, or \"latest\" for the last mined block or \"pending\" , \"earliest\" for not yet mined transactions. address : DATA|Array , 20 Bytes - (optional) Contract address or a list of addresses from which logs should originate. topics : Array of DATA , - (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with \"or\" options.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_19","text":"params: [{ \"fromBlock\": \"0x1\", \"toBlock\": \"0x2\", \"address\": \"0x8888f1f195afa192cfee860698584c030f4c9db1\", \"topics\": [\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\", null, [\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\", \"0x0000000000000000000000000aff3454fce5edbc8cca8697c15331677e6ebccc\"]] }]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_39","text":"QUANTITY - A filter id.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_39","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_newFilter\",\"params\":[{\"topics\":[\"0x0000000000000000000000000000000000000000000000000000000012341234\"]}],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x1\" // 1 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_newblockfilter","text":"Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges .","title":"eth_newBlockFilter"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_40","text":"None","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_40","text":"QUANTITY - A filter id.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_40","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_newBlockFilter\",\"params\":[],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x1\" // 1 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_newpendingtransactionfilter","text":"Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges .","title":"eth_newPendingTransactionFilter"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_41","text":"None","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_41","text":"QUANTITY - A filter id.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_41","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_newPendingTransactionFilter\",\"params\":[],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0x1\" // 1 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_uninstallfilter","text":"Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additonally Filters timeout when they aren't requested with eth_getFilterChanges for a period of time.","title":"eth_uninstallFilter"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_42","text":"QUANTITY - The filter id.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_20","text":"params: [ \"0xb\" // 11 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_42","text":"Boolean - true if the filter was successfully uninstalled, otherwise false .","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_42","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_uninstallFilter\",\"params\":[\"0xb\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getfilterchanges","text":"Polling method for a filter, which returns an array of logs which occurred since last poll.","title":"eth_getFilterChanges"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_43","text":"QUANTITY - the filter id.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_21","text":"params: [ \"0x16\" // 22 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_43","text":"Array - Array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes ( DATA , 32 Bytes), e.g. [\"0x3454645634534...\"] . For filters created with eth_newPendingTransactionFilter the return are transaction hashes ( DATA , 32 Bytes), e.g. [\"0x6345343454645...\"] . For filters created with eth_newFilter logs are objects with following params: removed : TAG - true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : QUANTITY - integer of the log index position in the block. null when its pending log. transactionIndex : QUANTITY - integer of the transactions index position log was created from. null when its pending log. transactionHash : DATA , 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : DATA , 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : QUANTITY - the block number where this log was in. null when its pending. null when its pending log. address : DATA , 20 Bytes - address from which this log originated. data : DATA - contains the non-indexed arguments of the log. topics : Array of DATA - Array of 0 to 4 32 Bytes DATA of indexed log arguments. (In solidity : The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256) ), except you declared the event with the anonymous specifier.)","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_43","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getFilterChanges\",\"params\":[\"0x16\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": [{ \"logIndex\": \"0x1\", // 1 \"blockNumber\":\"0x1b4\", // 436 \"blockHash\": \"0x8216c5785ac562ff41e2dcfdf5785ac562ff41e2dcfdf829c5a142f1fccd7d\", \"transactionHash\": \"0xdf829c5a142f1fccd7d8216c5785ac562ff41e2dcfdf5785ac562ff41e2dcf\", \"transactionIndex\": \"0x0\", // 0 \"address\": \"0x16c5785ac562ff41e2dcfdf829c5a142f1fccd7d\", \"data\":\"0x0000000000000000000000000000000000000000000000000000000000000000\", \"topics\": [\"0x59ebeb90bc63057b6515673c3ecf9438e5058bca0f92585014eced636878c9a5\"] },{ ... }] }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getfilterlogs","text":"Returns an array of all logs matching filter with given id.","title":"eth_getFilterLogs"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_44","text":"QUANTITY - The filter id.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_22","text":"params: [ \"0x16\" // 22 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_44","text":"See eth_getFilterChanges","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_44","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getFilterLogs\",\"params\":[\"0x16\"],\"id\":74}' Result see eth_getFilterChanges","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getlogs","text":"Returns an array of all logs matching a given filter object.","title":"eth_getLogs"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_45","text":"Object - The filter options: fromBlock : QUANTITY|TAG - (optional, default: \"latest\" ) Integer block number, or \"latest\" for the last mined block or \"pending\" , \"earliest\" for not yet mined transactions. toBlock : QUANTITY|TAG - (optional, default: \"latest\" ) Integer block number, or \"latest\" for the last mined block or \"pending\" , \"earliest\" for not yet mined transactions. address : DATA|Array , 20 Bytes - (optional) Contract address or a list of addresses from which logs should originate. topics : Array of DATA , - (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with \"or\" options. blockhash : DATA , 32 Bytes - (optional) With the addition of EIP-234 (platone >= v1.8.13 or Parity >= v2.1.0), blockHash is a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash . Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash . If blockHash is present in the filter criteria, then neither fromBlock nor toBlock are allowed.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_23","text":"params: [{ \"topics\": [\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\"] }]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_45","text":"See eth_getFilterChanges","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_45","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getLogs\",\"params\":[{\"topics\":[\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\"]}],\"id\":74}' Result see eth_getFilterChanges","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getwork","text":"Returns the hash of the current block, the seedHash, and the boundary condition to be met (\"target\").","title":"eth_getWork"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_46","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_46","text":"Array - Array with the following properties: 1. DATA , 32 Bytes - current block header pow-hash 2. DATA , 32 Bytes - the seed hash used for the DAG. 3. DATA , 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_46","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\":[],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": [ \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\", \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\", \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\" ] }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_submitwork","text":"Used for submitting a proof-of-work solution.","title":"eth_submitWork"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_47","text":"DATA , 8 Bytes - The nonce found (64 bits) DATA , 32 Bytes - The header's pow-hash (256 bits) DATA , 32 Bytes - The mix digest (256 bits)","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_24","text":"params: [ \"0x0000000000000001\", \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\", \"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\" ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_47","text":"Boolean - returns true if the provided solution is valid, otherwise false .","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_47","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\":\"eth_submitWork\", \"params\":[\"0x0000000000000001\", \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\", \"0xD1GE5700000000000000000000000000D1GE5700000000000000000000000000\"],\"id\":73}' // Result { \"id\":73, \"jsonrpc\":\"2.0\", \"result\": true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_submithashrate","text":"Used for submitting mining hashrate.","title":"eth_submitHashrate"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_48","text":"Hashrate , a hexadecimal string representation (32 bytes) of the hash rate ID , String - A random hexadecimal(32 bytes) ID identifying the client","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_25","text":"params: [ \"0x0000000000000000000000000000000000000000000000000000000000500000\", \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\" ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_48","text":"Boolean - returns true if submitting went through succesfully and false otherwise.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_48","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\":\"eth_submitHashrate\", \"params\":[\"0x0000000000000000000000000000000000000000000000000000000000500000\", \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\"],\"id\":73}' // Result { \"id\":73, \"jsonrpc\":\"2.0\", \"result\": true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#eth_getproof","text":"Returns the account- and storage-values of the specified account including the Merkle-proof.","title":"eth_getProof"},{"location":"JSON-RPC_API/JSON-RPC_API/#getproof-parameters","text":"DATA , 20 bytes - address of the account or contract ARRAY , 32 Bytes - array of storage-keys which should be proofed and included. See eth_getStorageAt QUANTITY|TAG - integer block number, or the string \"latest\" or \"earliest\", see the default block parameter","title":"getProof-Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_26","text":"params: [\"0x1234567890123456789012345678901234567890\",[\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\"latest\"]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#getproof-returns","text":"Returns Object - A account object: balance : QUANTITY - the balance of the account. See eth_getBalance codeHash : DATA , 32 Bytes - hash of the code of the account. For a simple Account without code it will return \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\" nonce : QUANTITY , - nonce of the account. See eth_getTransactionCount storageHash : DATA , 32 Bytes - SHA3 of the StorageRoot. All storage will deliver a MerkleProof starting with this rootHash. accountProof : ARRAY - Array of rlp-serialized MerkleTree-Nodes, starting with the stateRoot-Node, following the path of the SHA3 (address) as key. storageProof : ARRAY - Array of storage-entries as requested. Each entry is a object with these properties: key : QUANTITY - the requested storage key value : QUANTITY - the storage value proof : ARRAY - Array of rlp-serialized MerkleTree-Nodes, starting with the storageHash-Node, following the path of the SHA3 (key) as path.","title":"getProof-Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#getproof-example","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getProof\",\"params\":[\"0x1234567890123456789012345678901234567890\",[\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\"latest\"],\"id\":1}' -H \"Content-type:application/json\" http://localhost:8545 // Result { \"jsonrpc\": \"2.0\", \"id\": 1, \"result\": { \"address\": \"0x1234567890123456789012345678901234567890\", \"accountProof\": [ \"0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80\", \"0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80\", \"0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080\", \"0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080\" ], \"balance\": \"0x0\", \"codeHash\": \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\", \"nonce\": \"0x0\", \"storageHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\", \"storageProof\": [ { \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000000\", \"value\": \"0x0\", \"proof\": [] }, { \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000001\", \"value\": \"0x0\", \"proof\": [] } ] } }","title":"getProof-Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#db_putstring","text":"Stores a string in the local database. Note this function is deprecated and will be removed in the future.","title":"db_putString"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_49","text":"String - Database name. String - Key name. String - String to store.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_27","text":"params: [ \"testDB\", \"myKey\", \"myString\" ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_49","text":"Boolean - returns true if the value was stored, otherwise false .","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_49","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"db_putString\",\"params\":[\"testDB\",\"myKey\",\"myString\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#db_getstring","text":"Returns string from the local database. Note this function is deprecated and will be removed in the future.","title":"db_getString"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_50","text":"String - Database name. String - Key name.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_28","text":"params: [ \"testDB\", \"myKey\", ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_50","text":"String - The previously stored string.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_50","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"db_getString\",\"params\":[\"testDB\",\"myKey\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": \"myString\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#db_puthex","text":"Stores binary data in the local database. Note this function is deprecated and will be removed in the future.","title":"db_putHex"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_51","text":"String - Database name. String - Key name. DATA - The data to store.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_29","text":"params: [ \"testDB\", \"myKey\", \"0x68656c6c6f20776f726c64\" ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_51","text":"Boolean - returns true if the value was stored, otherwise false .","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_51","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"db_putHex\",\"params\":[\"testDB\",\"myKey\",\"0x68656c6c6f20776f726c64\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#db_platoneex","text":"Returns binary data from the local database. Note this function is deprecated and will be removed in the future.","title":"db_platoneex"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_52","text":"String - Database name. String - Key name.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_30","text":"params: [ \"testDB\", \"myKey\", ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_52","text":"DATA - The previously stored data.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_52","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"db_platoneex\",\"params\":[\"testDB\",\"myKey\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": \"0x68656c6c6f20776f726c64\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#shh_version","text":"Returns the current whisper protocol version.","title":"shh_version"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_53","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_53","text":"String - The current whisper protocol version","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_53","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_version\",\"params\":[],\"id\":67}' // Result { \"id\":67, \"jsonrpc\": \"2.0\", \"result\": \"2\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#shh_post","text":"Sends a whisper message.","title":"shh_post"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_54","text":"Object - The whisper post object: from : DATA , 60 Bytes - (optional) The identity of the sender. to : DATA , 60 Bytes - (optional) The identity of the receiver. When present whisper will encrypt the message so that only the receiver can decrypt it. topics : Array of DATA - Array of DATA topics, for the receiver to identify messages. payload : DATA - The payload of the message. priority : QUANTITY - The integer of the priority in a range from ... (?). ttl : QUANTITY - integer of the time to live in seconds.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_31","text":"params: [{ from: \"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\", to: \"0x3e245533f97284d442460f2998cd41858798ddf04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a0d4d661997d3940272b717b1\", topics: [\"0x776869737065722d636861742d636c69656e74\", \"0x4d5a695276454c39425154466b61693532\"], payload: \"0x7b2274797065223a226d6\", priority: \"0x64\", ttl: \"0x64\", }]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_54","text":"Boolean - returns true if the message was send, otherwise false .","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_54","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_post\",\"params\":[{\"from\":\"0xc931d93e97ab07fe42d923478ba2465f2..\",\"topics\": [\"0x68656c6c6f20776f726c64\"],\"payload\":\"0x68656c6c6f20776f726c64\",\"ttl\":0x64,\"priority\":0x64}],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#shh_newidentity","text":"Creates new whisper identity in the client.","title":"shh_newIdentity"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_55","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_55","text":"DATA , 60 Bytes - the address of the new identiy.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_55","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_newIdentity\",\"params\":[],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xc931d93e97ab07fe42d923478ba2465f283f440fd6cabea4dd7a2c807108f651b7135d1d6ca9007d5b68aa497e4619ac10aa3b27726e1863c1fd9b570d99bbaf\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#shh_hasidentity","text":"Checks if the client hold the private keys for a given identity.","title":"shh_hasIdentity"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_56","text":"DATA , 60 Bytes - The identity address to check.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_32","text":"params: [ \"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\" ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_56","text":"Boolean - returns true if the client holds the privatekey for that identity, otherwise false .","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_56","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_hasIdentity\",\"params\":[\"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#shh_newgroup","text":"Creates a new group.","title":"shh_newGroup"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_57","text":"none","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_57","text":"DATA , 60 Bytes - the address of the new group.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_57","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_newGroup\",\"params\":[],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": \"0xc65f283f440fd6cabea4dd7a2c807108f651b7135d1d6ca90931d93e97ab07fe42d923478ba2407d5b68aa497e4619ac10aa3b27726e1863c1fd9b570d99bbaf\" }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#shh_addtogroup","text":"Adds a whisper identity to the group.","title":"shh_addToGroup"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_58","text":"DATA , 60 Bytes - The identity address to add to a group.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_33","text":"params: [ \"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\" ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_58","text":"Boolean - returns true if the identity was successfully added to the group, otherwise false .","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_58","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_addToGroup\",\"params\":[\"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\": \"2.0\", \"result\": true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#shh_newfilter","text":"Creates filter to notify, when client receives whisper message matching the filter options.","title":"shh_newFilter"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_59","text":"Object - The filter options: to : DATA , 60 Bytes - (optional) Identity of the receiver. When present it will try to decrypt any incoming message if the client holds the private key to this identity. topics : Array of DATA - Array of DATA topics which the incoming message's topics should match. You can use the following combinations: [A, B] = A && B [A, [B, C]] = A && (B || C) [null, A, B] = ANYTHING && A && B null works as a wildcard","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_34","text":"params: [{ \"topics\": ['0x12341234bf4b564f'], \"to\": \"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\" }]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_59","text":"QUANTITY - The newly created filter.","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_59","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_newFilter\",\"params\":[{\"topics\": ['0x12341234bf4b564f'],\"to\": \"0x2341234bf4b2341234bf4b564f...\"}],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": \"0x7\" // 7 }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#shh_uninstallfilter","text":"Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additonally Filters timeout when they aren't requested with shh_getFilterChanges for a period of time.","title":"shh_uninstallFilter"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_60","text":"QUANTITY - The filter id.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_35","text":"params: [ \"0x7\" // 7 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_60","text":"Boolean - true if the filter was successfully uninstalled, otherwise false .","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_60","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_uninstallFilter\",\"params\":[\"0x7\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": true }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#shh_getfilterchanges","text":"Polling method for whisper filters. Returns new messages since the last call of this method. Note calling the shh_getMessages method, will reset the buffer for this method, so that you won't receive duplicate messages.","title":"shh_getFilterChanges"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_61","text":"QUANTITY - The filter id.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_36","text":"params: [ \"0x7\" // 7 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_61","text":"Array - Array of messages received since last poll: hash : DATA , 32 Bytes (?) - The hash of the message. from : DATA , 60 Bytes - The sender of the message, if a sender was specified. to : DATA , 60 Bytes - The receiver of the message, if a receiver was specified. expiry : QUANTITY - Integer of the time in seconds when this message should expire (?). ttl : QUANTITY - Integer of the time the message should float in the system in seconds (?). sent : QUANTITY - Integer of the unix timestamp when the message was sent. topics : Array of DATA - Array of DATA topics the message contained. payload : DATA - The payload of the message. workProved : QUANTITY - Integer of the work this message required before it was send (?).","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_61","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_getFilterChanges\",\"params\":[\"0x7\"],\"id\":73}' // Result { \"id\":1, \"jsonrpc\":\"2.0\", \"result\": [{ \"hash\": \"0x33eb2da77bf3527e28f8bf493650b1879b08c4f2a362beae4ba2f71bafcd91f9\", \"from\": \"0x3ec052fc33..\", \"to\": \"0x87gdf76g8d7fgdfg...\", \"expiry\": \"0x54caa50a\", // 1422566666 \"sent\": \"0x54ca9ea2\", // 1422565026 \"ttl\": \"0x64\", // 100 \"topics\": [\"0x6578616d\"], \"payload\": \"0x7b2274797065223a226d657373616765222c2263686...\", \"workProved\": \"0x0\" }] }","title":"Example"},{"location":"JSON-RPC_API/JSON-RPC_API/#shh_getmessages","text":"Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.","title":"shh_getMessages"},{"location":"JSON-RPC_API/JSON-RPC_API/#parameters_62","text":"QUANTITY - The filter id.","title":"Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#example-parameters_37","text":"params: [ \"0x7\" // 7 ]","title":"Example Parameters"},{"location":"JSON-RPC_API/JSON-RPC_API/#returns_62","text":"See shh_getFilterChanges","title":"Returns"},{"location":"JSON-RPC_API/JSON-RPC_API/#example_62","text":"// Request curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"shh_getMessages\",\"params\":[\"0x7\"],\"id\":73}' Result see shh_getFilterChanges","title":"Example"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/","text":"1. \u533a\u5757\u94fe \u81ea2009\u5e74\u6bd4\u7279\u5e01\u7684\u521b\u4e16\u533a\u5757\u8bde\u751f\uff0c\u52302014\u5e74\u533a\u5757\u94fe\u6982\u5ff5\u7684\u63d0\u51fa\uff0c\u533a\u5757\u94fe\u6280\u672f\u7ecf\u5386\u4e86\u542f\u8499\u3001\u8ba4\u77e5\u3001\u63a2\u7d22\u9636\u6bb5\uff0c\u8fd1\u4e9b\u5e74\u5df2\u5728\u91d1\u878d\u3001\u5546\u4e1a\u3001\u7ec4\u7ec7\u534f\u4f5c\u4e0e\u6cbb\u7406\u7b49\u5404\u65b9\u9762\u9010\u6e10\u5448\u73b0\u51fa\u4e86\u5176\u4ef7\u503c\uff0c\u53d7\u5230\u5404\u5b9e\u4f53\u884c\u4e1a\u4e43\u81f3\u56fd\u5bb6\u6218\u7565\u5c42\u9762\u7684\u91cd\u89c6\u3002\u533a\u5757\u94fe\u57282015\u4e16\u754c\u7ecf\u6d4e\u8bba\u575b\u88ab\u5217\u4e3a\u672a\u6765\u516d\u5927\u8d8b\u52bf\u4e4b\u4e00\uff0c\u4e5f\u88abGartner\u5217\u5165\u4f01\u4e1a\u7ec4\u7ec7\u57282019\u5e74\u9700\u8981\u63a2\u7a76\u7684\u5341\u5927\u6218\u7565\u6027\u6280\u672f\u30022016\u5e7412\u670815\u65e5\uff0c\u5728\u56fd\u52a1\u9662\u5370\u53d1\u7684\u300a\u201c\u5341\u4e09\u4e94\u201d\u56fd\u5bb6\u4fe1\u606f\u5316\u89c4\u5212\u300b\u4e2d\uff0c\u5f3a\u8c03\u4e86\u9700\u52a0\u5f3a\u533a\u5757\u94fe\u7b49\u65b0\u6280\u672f\u7684\u521b\u65b0\u3001\u8bd5\u9a8c\u548c\u5e94\u7528\uff0c\u6765\u62a2\u5360\u65b0\u4e00\u4ee3\u4fe1\u606f\u6280\u672f\u4e3b\u5bfc\u6743\u3002 1.1 \u57fa\u672c\u6982\u5ff5 1.1.1 \u94fe\u5f0f\u7ed3\u6784\u548c\u5b58\u50a8 \u533a\u5757\u94fe\uff1a\u7531\u4e00\u4e2a\u4e2a\u533a\u5757\u524d\u540e\u94fe\u63a5\u7ec4\u6210\uff0c\u662f\u201c\u4f7f\u7528\u5bc6\u7801\u6280\u672f\u5c06\u5171\u8bc6\u786e\u8ba4\u7684\u533a\u5757\u6309\u987a\u5e8f\u8ffd\u52a0\u5f62\u6210\u7684\u5206\u5e03\u5f0f\u8d26\u672c\u201d \u533a\u5757\uff1a\u6bcf\u4e00\u4e2a\u533a\u5757\u5305\u542b\u4e86\u524d\u4e00\u4e2a\u533a\u5757\u7684\u54c8\u5e0c\u3001\u76f8\u5e94\u7684\u65f6\u95f4\u6233\u4ee5\u53ca\u4ea4\u6613\u6570\u636e\u7b49\uff1b\u533a\u5757\u94fe\u4e2d\u7b2c\u4e00\u4e2a\u533a\u5757\u901a\u5e38\u79f0\u4e3a\u201c\u521b\u4e16\u533a\u5757\u201d \u4ea4\u6613\u6570\u636e\uff1a\u4ea4\u6613\u7684\u539f\u59cb\u6570\u636e\u4ee5\u53ca\u4f7f\u7528\u8fd9\u4e9b\u4ea4\u6613\u6570\u636e\u6784\u9020\u7684\u9ed8\u514b\u5c14\u6811\u7684\u6839\u54c8\u5e0c\u90fd\u5b58\u50a8\u5728\u533a\u5757\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u4ea4\u6613\u6570\u636e\u7684\u7be1\u6539\u5c06\u5bfc\u81f4\u533a\u5757\u4e2d\u7684\u6570\u636e\u88ab\u6539\u52a8 1.1.2 \u5171\u8bc6 \u533a\u5757\u94fe\u901a\u8fc7\u5171\u8bc6\u7b97\u6cd5\u8fbe\u6210\u5982\u4e0b\u5171\u8bc6\uff1a \u4ea4\u6613\u7684\u6709\u6548\u6027\uff1a\u4ea4\u6613\u88ab\u9a8c\u8bc1\u6709\u6548 \u4ea4\u6613\u96c6\u5408\u548c\u987a\u5e8f\u7684\u4e00\u81f4\u6027\uff1a\u533a\u5757\u94fe\u8d26\u672c\u4e2d\u4ea4\u6613\u7684\u96c6\u5408\u548c\u987a\u5e8f\u5728\u5404\u8282\u70b9\u4e2d\u662f\u4e00\u81f4\u7684 \u5728\u533a\u5757\u94fe\u9886\u57df\uff0c\u91c7\u7528PoW\uff08\u5de5\u4f5c\u91cf\u8bc1\u660e\u7b97\u6cd5\uff09\u3001PoS/DPoS\uff08\u6743\u76ca\u8bc1\u660e\u7b97\u6cd5/\u4ee3\u7406\u6743\u76ca\u8bc1\u660e\u7b97\u6cd5\uff09\u4e0e\u7c7bBFT\u7b97\u6cd5\u7b49\u7ed3\u5408\u7684\u5171\u8bc6\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u662f\u4e1a\u754c\u4e3b\u6d41\u7684\u5171\u8bc6\u7b97\u6cd5\u3002\u4e0e\u7ecf\u5178\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u7b97\u6cd5\uff08Raft, Paxos, etc.\uff09\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4eec\u878d\u5165\u4e86\u7ecf\u6d4e\u5b66\u535a\u5f08\u7684\u6982\u5ff5\u3002 1.1.3 \u667a\u80fd\u5408\u7ea6 \u667a\u80fd\u5408\u7ea6\u6982\u5ff5\u662f 90 \u5e74\u4ee3\u7531Nick Szabo\u9996\u6b21\u63d0\u51fa\uff0c\u662f\u6307\u662f\u4e00\u79cd\u65e8\u5728\u4ee5\u4fe1\u606f\u5316\u65b9\u5f0f\u4f20\u64ad\u3001\u9a8c\u8bc1\u6216\u6267\u884c\u5408\u540c\u7684\u8ba1\u7b97\u673a\u534f\u8bae\uff0c\u4e14\u4e0d\u4f9d\u8d56\u4e8e\u7b2c\u4e09\u65b9\u3002 \u8fd9\u4e2a\u6982\u5ff5\u5728\u4ee5\u592a\u574a\u4e2d\u88ab\u9996\u6b21\u5b9e\u73b0\u5e76\u4e3a\u5927\u4f17\u6240\u719f\u77e5\u3002\u4f46\u662f\u5728\u4ee5\u592a\u574a\u548c\u4eca\u5929\u7684\u533a\u5757\u94fe\u884c\u4e1a\u4e2d\uff0c\u667a\u80fd\u5408\u7ea6\u73b0\u5728\u901a\u5e38\u662f\u6307\u4e00\u6bb5\u8fd0\u884c\u5728\u533a\u5757\u94fe\u4e0a\u7684\u901a\u7528\u7a0b\u5e8f\uff0c\u4e0d\u518d\u5c40\u9650\u4e8e\u5408\u7ea6\u3002 1.2 \u8054\u76df\u94fe \u6309\u7167\u8bb8\u53ef\u548c\u6743\u9650\u7ef4\u5ea6\u5212\u5206\uff0c\u5f53\u524d\u533a\u5757\u94fe\u53ef\u5206\u4e3a\u516c\u6709\u94fe\u3001\u8054\u76df\u94fe\u548c\u4e13\u6709\u94fe\u3002 \u516c\u6709\u94fe\u5373\u65e0\u987b\u8bb8\u53ef\u7684\u533a\u5757\u94fe\u7cfb\u7edf\uff0c\u4efb\u4f55\u4e2a\u4f53\u90fd\u53ef\u4ee5\u81ea\u7531\u8fdb\u5165\u548c\u9000\u51fa\uff0c\u4e5f\u53ef\u4ee5\u5728\u5176\u4e2d\u5199\u5165\u3001\u8bfb\u53d6\u3001\u53c2\u4e0e\u4ea4\u6613\uff0c\u5982\u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a\u7b49\u3002 \u8054\u76df\u94fe\u6307\u7531\u8054\u76df\u6210\u5458\u7ef4\u62a4\u7684\u533a\u5757\u94fe\uff0c\u901a\u5e38\u8bbe\u8ba1\u6709\u7ebf\u4e0b\u8ba4\u53ef\u7684\u8282\u70b9\u51c6\u5165\u3001\u7528\u6237\u7ba1\u7406\u548c\u6743\u9650\u63a7\u5236\u673a\u5236\u3002\u8054\u76df\u94fe\u53ef\u5927\u5e45\u964d\u4f4e\u5f02\u5730\u7ed3\u7b97\u6210\u672c\u548c\u65f6\u95f4\uff0c\u6bd4\u73b0\u6709\u7cfb\u7edf\u66f4\u7b80\u5355\uff0c\u6548\u7387\u66f4\u9ad8\uff0c\u540c\u65f6\u7ee7\u627f\u53bb\u4e2d\u5fc3\u5316\u4f18\u70b9\u51cf\u8f7b\u5784\u65ad\u538b\u529b\u3002 \u4e13\u6709\u94fe\u6307\u5404\u4e2a\u8282\u70b9\u7684\u5199\u5165\u6743\u9650\u6536\u5f52\u5185\u90e8\u63a7\u5236\uff0c\u800c\u8bfb\u53d6\u6743\u9650\u53ef\u89c6\u9700\u6c42\u6709\u9009\u62e9\u6027\u5730\u5bf9\u5916\u5f00\u653e\u3002\u4e13\u6709\u94fe\u5177\u5907\u533a\u5757\u94fe\u591a\u8282\u70b9\u8fd0\u884c\u7684\u901a\u7528\u7ed3\u6784\uff0c\u9002\u7528\u4e8e\u542b\u591a\u7ea7\u673a\u6784\u7684\u7ec4\u7ec7\u8fdb\u884c\u5185\u90e8\u6570\u636e\u7ba1\u7406\u4e0e\u5ba1\u8ba1\u3002 1.2.1 \u8054\u76df\u94fe\u7684\u7279\u70b9 \u6743\u9650\u63a7\u5236\uff1a \u51c6\u5165\u6743\u9650\uff1a\u5177\u5907\u6b64\u6743\u9650\u7684\u8282\u70b9\u624d\u53ef\u4ee5\u63a5\u5165\u7f51\u7edc\uff1b \u5171\u8bc6\u6743\u9650\uff1a\u5177\u5907\u6b64\u6743\u9650\u7684\u8282\u70b9\u624d\u53ef\u4ee5\u53c2\u4e0e\u533a\u5757\u94fe\u7684\u5171\u8bc6\uff1b \u4e1a\u52a1\u6743\u9650\uff1a\u5bf9\u94fe\u4e0a\u7684\u64cd\u4f5c\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u7684\u6743\u9650\u8bbe\u5b9a\uff0c\u6bd4\u5982\u90e8\u7f72\u5408\u7ea6\u3001\u7ba1\u7406\u89d2\u8272\u7b49\uff1b \u5b89\u5168\u9690\u79c1\uff1a \u901a\u8fc7\u6743\u9650\u63a7\u5236\uff0c\u4e25\u683c\u7684\u4fdd\u62a4\u6570\u636e\u9690\u79c1\uff0c\u907f\u514d\u6570\u636e\u6cc4\u9732\uff1b \u901a\u8fc7\u5bc6\u7801\u5b66\u6280\u672f\uff0c\u5728\u4e0d\u6cc4\u9732\u6570\u636e\u7684\u524d\u63d0\u4e0b\uff0c\u8fdb\u884c\u6570\u636e\u4ea4\u4e92\uff1b \u5171\u8bc6\u6548\u7387\uff1a \u57fa\u4e8e\u4f01\u4e1a\u5e94\u7528\u573a\u666f\uff0c\u53ef\u4ee5\u727a\u7272\u90e8\u5206\u4e0d\u9700\u8981\u7684\u53bb\u4e2d\u5fc3\u5316\u7a0b\u5ea6\uff0c\u63d0\u9ad8\u5171\u8bc6\u6548\u7387 \u5171\u8bc6\u5b89\u5168: \u5b89\u5168\u7a33\u5b9a\u7684\u5171\u8bc6\u7b97\u6cd5\uff0c\u4e0d\u53ef\u5206\u53c9 2. \u8054\u76df\u533a\u5757\u94fe\u5e73\u53f0 - PlatONE 2.1 \u57fa\u672c\u6982\u5ff5 \u8282\u70b9 PlatONE\u4e2d\u7684\u8282\u70b9\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u7c7b\uff1a \u89c2\u5bdf\u8005\u8282\u70b9: \u53ea\u8d1f\u8d23\u540c\u6b65\u533a\u5757\uff0c\u4e0d\u53c2\u4e0e\u51fa\u5757\u3002\u7cfb\u7edf\u4e2d\u5c06\u4f1a\u4e00\u76f4\u5b58\u5728\u51e0\u4e2a\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\uff0c\u7528\u4e8e\u7a33\u5b9a\u540c\u6b65\u533a\u5757\uff0c\u540c\u65f6\u4e5f\u7528\u4e8e\u88ab\u5176\u4ed6\u7684\u8282\u70b9\u6307\u5b9a\u4e3abootnodes\u8fdb\u884c\u8fde\u63a5; \u5171\u8bc6\u8282\u70b9: \u53c2\u4e0e\u51fa\u5757\uff0c\u4ee5\u53ca\u540c\u6b65\u533a\u5757; \u8d26\u6237 \u76f8\u6bd4\u8d26\u6237\u6a21\u578b\uff0cUTXO\u4e0d\u652f\u6301\u667a\u80fd\u5408\u7ea6\uff0c\u800c\u5f88\u591a\u7684DAG\u9879\u76ee\u4e5f\u5728\u79ef\u6781\u63a2\u7d22\u667a\u80fd\u5408\u7ea6\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u6210\u719f\u7a33\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u6b64PlatONE\u9009\u62e9\u6210\u719f\u7a33\u5b9a\u652f\u6301\u667a\u80fd\u5408\u7ea6\u7684\u8d26\u6237\u6a21\u578b\u3002PlatONE\u4e2d\uff0c\u6bcf\u4e2a\u8d26\u6237\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5173\u8054\u7684\u72b6\u6001(state)\u548c\u4e00\u4e2a20\u5b57\u8282\u7684\u5730\u5740(address)\u3002\u8d26\u6237\u5206\u4e3a\u4e24\u7c7b\uff1a \u666e\u901a\u8d26\u6237: \u8be5\u7c7b\u578b\u8d26\u6237\u7531\u79c1\u94a5\u63a7\u5236\uff0c\u7528\u6237\u53ef\u901a\u8fc7\u94b1\u5305\u5ba2\u6237\u7aef\u751f\u6210\u3002\u5728PlatONE\u4e2d\uff0c\u666e\u901a\u8d26\u6237\u53ef\u4ee5\u521b\u5efa\u4ea4\u6613\uff0c\u5e76\u4f7f\u7528\u79c1\u94a5\u5bf9\u4ea4\u6613\u7b7e\u540d\u3002\u666e\u901a\u8d26\u6237\u9664\u4fdd\u5b58\u8d26\u6237\u4f59\u989d\u5916\uff0c\u667a\u80fd\u5408\u7ea6\u53ef\u88ab\u6388\u6743\u6269\u5c55\u548c\u8bbf\u95ee\u81ea\u5b9a\u4e49\u5c5e\u6027\u3002 \u5408\u7ea6\u8d26\u6237: \u8be5\u7c7b\u578b\u8d26\u6237\u6ca1\u6709\u79c1\u94a5\uff0c\u7531\u4ee3\u7801\u63a7\u5236\uff0c\u5408\u7ea6\u8d26\u6237\u5730\u5740\u5728\u90e8\u7f72\u5408\u7ea6\u65f6\u4ea7\u751f\u3002\u4e0e\u666e\u901a\u8d26\u6237\u4e0d\u540c\uff0c\u5408\u7ea6\u8d26\u6237\u4e0d\u80fd\u81ea\u884c\u53d1\u8d77\u65b0\u7684\u4ea4\u6613\u3002\u6bcf\u5f53\u5408\u7ea6\u8d26\u6237\u6536\u5230\u4e00\u6761\u6d88\u606f\uff0c\u5408\u7ea6\u5185\u90e8\u7684\u4ee3\u7801\u5c31\u4f1a\u88ab\u6fc0\u6d3b\uff0c\u5141\u8bb8\u5b83\u5bf9\u5185\u90e8\u5b58\u50a8\u8fdb\u884c\u8bfb\u53d6\u548c\u5199\u5165\uff0c\u4ee5\u53ca\u53d1\u9001\u5176\u5b83\u6d88\u606f\u6216\u8005\u521b\u5efa\u5408\u7ea6\u3002 \u667a\u80fd\u5408\u7ea6(Wasm\u4ecb\u7ecd) Wasm\u5408\u7ea6\u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210wasm\u6267\u884c\u3002\u89e6\u53d1Wasm\u5408\u7ea6\u7684\u4ea4\u6613\u7531\u5171\u8bc6\u8282\u70b9\u6253\u5305\uff0c\u5168\u7f51\u8282\u70b9\u91cd\u590d\u6267\u884c\u9a8c\u8bc1\u3002Wasm\u5408\u7ea6\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u516c\u5171\u8d26\u672c\u4e2d\u3002 \u53ef\u9a8c\u8bc1\u5408\u7ea6\u7684\u5f00\u53d1\u548c\u53d1\u5e03\u8ddfWasm\u5408\u7ea6\u6ca1\u6709\u533a\u522b\uff0c\u6700\u7ec8\u4e5f\u662f\u7f16\u8bd1\u6210wasm\u6267\u884c\u3002\u53ef\u9a8c\u8bc1\u5408\u7ea6\u7684\u72b6\u6001\u8f6c\u6362\u5728\u94fe\u4e0b\u7531\u8ba1\u7b97\u8282\u70b9\u5f02\u6b65\u6267\u884c\uff0c\u8ba1\u7b97\u5b8c\u6210\u540e\u65b0\u7684\u72b6\u6001\u548c\u72b6\u6001\u8f6c\u6362\u8bc1\u660e\u63d0\u4ea4\u5230\u94fe\u4e0a\uff0c\u5168\u7f51\u8282\u70b9\u53ef\u5feb\u901f\u9a8c\u8bc1\u6b63\u786e\u6027\u5e76\u5c06\u65b0\u7684\u72b6\u6001\u66f4\u65b0\u5230\u516c\u5171\u8d26\u672c\u4e2d\u3002\u53ef\u9a8c\u8bc1\u5408\u7ea6\u53ef\u652f\u6301\u590d\u6742\u3001\u7e41\u91cd\u7684\u8ba1\u7b97\u903b\u8f91\u800c\u4e0d\u5f71\u54cd\u6574\u6761\u94fe\u7684\u6027\u80fd\u3002 \u9690\u79c1\u5408\u7ea6\u540c\u6837\u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210llvm ir\u4e2d\u95f4\u8bed\u8a00\u6267\u884c\u3002\u9690\u79c1\u5408\u7ea6\u7684\u8f93\u5165\u6570\u636e\u4fdd\u5b58\u5728\u6570\u636e\u8282\u70b9\u672c\u5730\uff0c\u7531\u6570\u636e\u8282\u70b9\u5728\u94fe\u4e0b\u4ee5\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u65b9\u5f0f\u8fdb\u884c\u9690\u79c1\u8ba1\u7b97\uff0c\u5e76\u63d0\u4ea4\u8ba1\u7b97\u7ed3\u679c\u5230\u94fe\u4e0a\u3002 2.1.1 PlatONE\u4e2d\u7684\u5171\u8bc6\u7b97\u6cd5 PlatONE\u7684\u5171\u8bc6\u4e3a\u9ad8\u5ea6\u4f18\u5316\u7684BFT\u7c7b\u5171\u8bc6\u7b97\u6cd5\uff0c\u5176\u5bb9\u9519\u7387\u4e3a1/3\uff0c\u5728\u4fdd\u7559\u5373\u65f6\u786e\u8ba4\uff08instant finality\uff09\u7684\u5173\u952e\u7279\u6027\u7684\u540c\u65f6\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u53bb\u4e2d\u5fc3\u5316\u7684\u7a0b\u5ea6\u3002\u5171\u8bc6\u53ef\u4ee5\u4fdd\u8bc1\u4e0a\u94fe\u7684\u533a\u5757\u662f\u786e\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u94fe\u4e0d\u4f1a\u51fa\u73b0\u5206\u53c9\uff0c\u540c\u65f6\u6bcf\u4e00\u4e2a\u6709\u6548\u7684\u533a\u5757\u90fd\u4f1a\u63d2\u5165\u5230\u94fe\u4e0a\u3002 PlatONE\u7684\u5171\u8bc6\u652f\u6301\u8d85\u8fc7100\u4e2a\u5171\u8bc6\u8282\u70b9\u3002\u76f8\u5bf9\u4e8e\u5176\u4ed6\u4e00\u4e9b\u5e38\u89c1\u7684BFT\u5171\u8bc6\uff0cPlatONE\u7684\u5171\u8bc6\u7684\u6027\u80fd\u6709\u663e\u8457\u7684\u63d0\u5347\u3002\u572810\u4e2a\u5171\u8bc6\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0cTPS \u63a5\u8fd1 1000\u3002 PlatONE\u7684\u5171\u8bc6\u8fd0\u884c\u7684\u76f8\u5173\u53c2\u6570\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u4e14 PlatONE\u7684\u5171\u8bc6\u4e2d\u7684\u5171\u8bc6\u8282\u70b9\u96c6\u5408\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u66f4\u65b0\u3002\u8fd1\u671f\u8ba1\u5212\u652f\u6301\u5171\u8bc6\u7684\u63d2\u4ef6\u5316\uff0c\u4ee5\u53ca\u5171\u8bc6\u7684\u53ef\u5ba1\u8ba1\u6027\u7b49\u3002 PlatONE\u5171\u8bc6\u662f\u5728 round \u4e0a\u8fdb\u884c\u7684\u3002\u5728\u7279\u5b9a\u7684 round \u4e0a\uff0c\u901a\u8fc7\u9884\u5148\u8bbe\u7f6e\u7684\u7b56\u7565\u9009\u53d6\u4e00\u4e2a\u51fa\u5757\u8005\u8282\u70b9\u3002\u51fa\u5757\u8005\u8282\u70b9\u7684\u9009\u53d6\u7b56\u7565\u76ee\u524d\u652f\u6301\u4e24\u79cd\uff1around robin \u548c sticky proposer\u3002 \u51fa\u5757\u8005\u8282\u70b9\u63d0\u8bae\u533a\u5757\u540e\uff0c\u5404\u5171\u8bc6\u8282\u70b9\u8fdb\u884c\u5171\u8bc6\u3002\u5171\u8bc6\u5206\u4e09\u9636\u6bb5\uff0c\u5176\u4e2d\u540e\u4e24\u4e2a\u9636\u6bb5\u4e3a\u6295\u7968\u9636\u6bb5\uff0c\u7528\u4ee5\u4fdd\u8bc1 safety\u3002PlatONE\u5171\u8bc6\u4f7f\u7528 round change \u673a\u5236\u7ed3\u5408\u9501\u5b9a\u548c\u89e3\u9501\u673a\u5236\u6765\u4fdd\u8bc1\u5171\u8bc6\u7684\u7684 liveness \u3002\u901a\u8fc7\u4f18\u5316\u89e3\u9501\u673a\u5236\uff0c\u89e3\u51b3\u4e86\u4e1a\u754c\u591a\u4e2a\u77e5\u540d\u9879\u76ee\u5185\u5b58\u5728\u7684\u5171\u8bc6\u6b7b\u9501\u95ee\u9898\u3002 PlatONE\u5171\u8bc6\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u94fe\u4e0a\u7684\u533a\u5757\u751f\u6210\u5171\u8bc6\u8bc1\u660e\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u8be5\u533a\u5757\u7684\u5404\u5171\u8bc6\u8282\u70b9\u7684\u6709\u6548\u7b7e\u540d\uff0c\u56e0\u800c\u533a\u5757\u53ef\u4ee5\u8fdb\u884c\u81ea\u9a8c\u8bc1\uff0c\u540c\u65f6\u4e5f\u80fd\u652f\u6301\u8f7b\u8282\u70b9\u3002 2.1.2 PlatONE\u4e2d\u7684\u6743\u9650\u6a21\u578b \u6839\u636e\u7cfb\u7edf\u4e2d\u7684\u4e0d\u540c\u5b9e\u4f53\u5bf9\u8c61\uff0cPlatONE\u5c06\u6743\u9650\u7ba1\u7406\u8fdb\u884c\u4e86\u6a21\u5757\u5316\u7684\u62c6\u5206\u3002\u9488\u5bf9\u7cfb\u7edf\u4e2d\u7528\u6237\u8d26\u6237\u3001\u8282\u70b9\u548c\u667a\u80fd\u5408\u7ea6\uff0c\u8fd9\u4e09\u7c7b\u5b9e\u4f53\u7684\u4e0d\u540c\u884c\u4e3a\uff0c\u5206\u522b\u8bbe\u8ba1\u4e86\u7528\u6237\u89d2\u8272\u7ba1\u7406\u6a21\u5757\u3001\u8282\u70b9\u7ba1\u7406\u6a21\u5757\u548c\u5408\u7ea6\u9632\u706b\u5899\u6a21\u5757\u6765\u8fdb\u884c\u6743\u9650\u7684\u63a7\u5236\u548c\u7ba1\u7406\u3002 \u89d2\u8272\u7ba1\u7406 PlatONE\u6839\u636e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u8bbe\u5b9a\u4e86\u4e0d\u540c\u7684\u7528\u6237\u89d2\u8272\uff0c\u5e76\u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u7684\u65b9\u5f0f\u5bf9\u7528\u6237\u7684\u89d2\u8272\u8fdb\u884c\u7ba1\u7406\u3002\u6839\u636e\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u7528\u6237\u5728\u7cfb\u7edf\u4e2d\u88ab\u8d4b\u4e88\u4e0d\u540c\u7684\u6743\u9650\u3002\u76ee\u524d\u8bbe\u5b9a\u4e86\u5982\u4e0b\u89d2\u8272\uff1a \u6bcf\u4e2a\u89d2\u8272\u7684\u6743\u9650\u8303\u56f4\u5982\u4e0b\uff1a \u8282\u70b9\u7ba1\u7406 PlatONE\u901a\u8fc7\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u5bf9\u8282\u70b9\u8fdb\u884c\u7ba1\u7406\uff0c\u5305\u62ec\u8282\u70b9\u662f\u5426\u80fd\u591f\u63a5\u5165\u7f51\u7edc\uff0c\u8282\u70b9\u662f\u5426\u80fd\u591f\u53c2\u4e0e\u5171\u8bc6\u4ee5\u53ca\u8282\u70b9\u4fe1\u606f\u7684\u7ef4\u62a4\u7b49\u529f\u80fd\u3002\u6839\u636e\u4e4b\u524d\u7528\u6237\u89d2\u8272\u7684\u8bbe\u5b9a\uff0c\u53ea\u6709chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e09\u7c7b\u7528\u6237\u624d\u53ef\u4ee5\u8bbe\u7f6e\u7cfb\u7edf\u5408\u7ea6\u4e2d\u7684\u8282\u70b9\u6570\u636e\uff0c\u5f53\u9700\u8981\u6dfb\u52a0\u8282\u70b9\u3001\u66f4\u65b0\u8282\u70b9\u72b6\u6001\u3001\u5220\u9664\u8282\u70b9\u65f6\u90fd\u9700\u8981\u8fd9\u4e09\u7c7b\u8d26\u6237\u6765\u8c03\u7528\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fnodeAdmin\u4ec5\u53ef\u4ee5\u7ba1\u7406\u81ea\u5df1\u52a0\u5165\u7684\u8282\u70b9\uff0cchainCreator\u548cchainAdmin\u53ef\u4ee5\u7ba1\u7406\u6240\u6709\u8282\u70b9\u3002 \u5408\u7ea6\u9632\u706b\u5899 PlatONE\u4e2d\u5408\u7ea6\u7684\u8c03\u7528\u6743\u9650\u7531\u5408\u7ea6\u9632\u706b\u5899\u63a7\u5236\uff0c\u53ea\u6709\u5408\u7ea6\u7684\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5408\u7ea6\u7684\u9632\u706b\u5899\u3002 \u5408\u7ea6\u9632\u706b\u5899\u5177\u5907\u5408\u7ea6\u63a5\u53e3\u7ea7\u522b\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u5217\u8868\u5b9e\u73b0\uff1a ACCEPT: \u53ef\u4ee5\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u767d\u540d\u5355 REJECT: \u62d2\u7edd\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u9ed1\u540d\u5355 2.2 \u67b6\u6784\u56fe 2.3 \u529f\u80fd\u4ecb\u7ecd \u5171\u8bc6\u7b97\u6cd5 IBFT VRF \u667a\u80fd\u5408\u7ea6 \u5408\u7ea6\u6570\u636e\u8fc1\u79fb GasFee \u9690\u79c1\u8d27\u5e01 \u865a\u62df\u673a WASM EVM CNS \u6743\u9650\u6a21\u578b \u5bc6\u7801\u5b66\u65b9\u6848","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#1","text":"\u81ea2009\u5e74\u6bd4\u7279\u5e01\u7684\u521b\u4e16\u533a\u5757\u8bde\u751f\uff0c\u52302014\u5e74\u533a\u5757\u94fe\u6982\u5ff5\u7684\u63d0\u51fa\uff0c\u533a\u5757\u94fe\u6280\u672f\u7ecf\u5386\u4e86\u542f\u8499\u3001\u8ba4\u77e5\u3001\u63a2\u7d22\u9636\u6bb5\uff0c\u8fd1\u4e9b\u5e74\u5df2\u5728\u91d1\u878d\u3001\u5546\u4e1a\u3001\u7ec4\u7ec7\u534f\u4f5c\u4e0e\u6cbb\u7406\u7b49\u5404\u65b9\u9762\u9010\u6e10\u5448\u73b0\u51fa\u4e86\u5176\u4ef7\u503c\uff0c\u53d7\u5230\u5404\u5b9e\u4f53\u884c\u4e1a\u4e43\u81f3\u56fd\u5bb6\u6218\u7565\u5c42\u9762\u7684\u91cd\u89c6\u3002\u533a\u5757\u94fe\u57282015\u4e16\u754c\u7ecf\u6d4e\u8bba\u575b\u88ab\u5217\u4e3a\u672a\u6765\u516d\u5927\u8d8b\u52bf\u4e4b\u4e00\uff0c\u4e5f\u88abGartner\u5217\u5165\u4f01\u4e1a\u7ec4\u7ec7\u57282019\u5e74\u9700\u8981\u63a2\u7a76\u7684\u5341\u5927\u6218\u7565\u6027\u6280\u672f\u30022016\u5e7412\u670815\u65e5\uff0c\u5728\u56fd\u52a1\u9662\u5370\u53d1\u7684\u300a\u201c\u5341\u4e09\u4e94\u201d\u56fd\u5bb6\u4fe1\u606f\u5316\u89c4\u5212\u300b\u4e2d\uff0c\u5f3a\u8c03\u4e86\u9700\u52a0\u5f3a\u533a\u5757\u94fe\u7b49\u65b0\u6280\u672f\u7684\u521b\u65b0\u3001\u8bd5\u9a8c\u548c\u5e94\u7528\uff0c\u6765\u62a2\u5360\u65b0\u4e00\u4ee3\u4fe1\u606f\u6280\u672f\u4e3b\u5bfc\u6743\u3002","title":"1. \u533a\u5757\u94fe"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#11","text":"","title":"1.1 \u57fa\u672c\u6982\u5ff5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#111","text":"\u533a\u5757\u94fe\uff1a\u7531\u4e00\u4e2a\u4e2a\u533a\u5757\u524d\u540e\u94fe\u63a5\u7ec4\u6210\uff0c\u662f\u201c\u4f7f\u7528\u5bc6\u7801\u6280\u672f\u5c06\u5171\u8bc6\u786e\u8ba4\u7684\u533a\u5757\u6309\u987a\u5e8f\u8ffd\u52a0\u5f62\u6210\u7684\u5206\u5e03\u5f0f\u8d26\u672c\u201d \u533a\u5757\uff1a\u6bcf\u4e00\u4e2a\u533a\u5757\u5305\u542b\u4e86\u524d\u4e00\u4e2a\u533a\u5757\u7684\u54c8\u5e0c\u3001\u76f8\u5e94\u7684\u65f6\u95f4\u6233\u4ee5\u53ca\u4ea4\u6613\u6570\u636e\u7b49\uff1b\u533a\u5757\u94fe\u4e2d\u7b2c\u4e00\u4e2a\u533a\u5757\u901a\u5e38\u79f0\u4e3a\u201c\u521b\u4e16\u533a\u5757\u201d \u4ea4\u6613\u6570\u636e\uff1a\u4ea4\u6613\u7684\u539f\u59cb\u6570\u636e\u4ee5\u53ca\u4f7f\u7528\u8fd9\u4e9b\u4ea4\u6613\u6570\u636e\u6784\u9020\u7684\u9ed8\u514b\u5c14\u6811\u7684\u6839\u54c8\u5e0c\u90fd\u5b58\u50a8\u5728\u533a\u5757\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u4ea4\u6613\u6570\u636e\u7684\u7be1\u6539\u5c06\u5bfc\u81f4\u533a\u5757\u4e2d\u7684\u6570\u636e\u88ab\u6539\u52a8","title":"1.1.1 \u94fe\u5f0f\u7ed3\u6784\u548c\u5b58\u50a8"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#112","text":"\u533a\u5757\u94fe\u901a\u8fc7\u5171\u8bc6\u7b97\u6cd5\u8fbe\u6210\u5982\u4e0b\u5171\u8bc6\uff1a \u4ea4\u6613\u7684\u6709\u6548\u6027\uff1a\u4ea4\u6613\u88ab\u9a8c\u8bc1\u6709\u6548 \u4ea4\u6613\u96c6\u5408\u548c\u987a\u5e8f\u7684\u4e00\u81f4\u6027\uff1a\u533a\u5757\u94fe\u8d26\u672c\u4e2d\u4ea4\u6613\u7684\u96c6\u5408\u548c\u987a\u5e8f\u5728\u5404\u8282\u70b9\u4e2d\u662f\u4e00\u81f4\u7684 \u5728\u533a\u5757\u94fe\u9886\u57df\uff0c\u91c7\u7528PoW\uff08\u5de5\u4f5c\u91cf\u8bc1\u660e\u7b97\u6cd5\uff09\u3001PoS/DPoS\uff08\u6743\u76ca\u8bc1\u660e\u7b97\u6cd5/\u4ee3\u7406\u6743\u76ca\u8bc1\u660e\u7b97\u6cd5\uff09\u4e0e\u7c7bBFT\u7b97\u6cd5\u7b49\u7ed3\u5408\u7684\u5171\u8bc6\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u662f\u4e1a\u754c\u4e3b\u6d41\u7684\u5171\u8bc6\u7b97\u6cd5\u3002\u4e0e\u7ecf\u5178\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u7b97\u6cd5\uff08Raft, Paxos, etc.\uff09\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4eec\u878d\u5165\u4e86\u7ecf\u6d4e\u5b66\u535a\u5f08\u7684\u6982\u5ff5\u3002","title":"1.1.2 \u5171\u8bc6"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#113","text":"\u667a\u80fd\u5408\u7ea6\u6982\u5ff5\u662f 90 \u5e74\u4ee3\u7531Nick Szabo\u9996\u6b21\u63d0\u51fa\uff0c\u662f\u6307\u662f\u4e00\u79cd\u65e8\u5728\u4ee5\u4fe1\u606f\u5316\u65b9\u5f0f\u4f20\u64ad\u3001\u9a8c\u8bc1\u6216\u6267\u884c\u5408\u540c\u7684\u8ba1\u7b97\u673a\u534f\u8bae\uff0c\u4e14\u4e0d\u4f9d\u8d56\u4e8e\u7b2c\u4e09\u65b9\u3002 \u8fd9\u4e2a\u6982\u5ff5\u5728\u4ee5\u592a\u574a\u4e2d\u88ab\u9996\u6b21\u5b9e\u73b0\u5e76\u4e3a\u5927\u4f17\u6240\u719f\u77e5\u3002\u4f46\u662f\u5728\u4ee5\u592a\u574a\u548c\u4eca\u5929\u7684\u533a\u5757\u94fe\u884c\u4e1a\u4e2d\uff0c\u667a\u80fd\u5408\u7ea6\u73b0\u5728\u901a\u5e38\u662f\u6307\u4e00\u6bb5\u8fd0\u884c\u5728\u533a\u5757\u94fe\u4e0a\u7684\u901a\u7528\u7a0b\u5e8f\uff0c\u4e0d\u518d\u5c40\u9650\u4e8e\u5408\u7ea6\u3002","title":"1.1.3 \u667a\u80fd\u5408\u7ea6"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#12","text":"\u6309\u7167\u8bb8\u53ef\u548c\u6743\u9650\u7ef4\u5ea6\u5212\u5206\uff0c\u5f53\u524d\u533a\u5757\u94fe\u53ef\u5206\u4e3a\u516c\u6709\u94fe\u3001\u8054\u76df\u94fe\u548c\u4e13\u6709\u94fe\u3002 \u516c\u6709\u94fe\u5373\u65e0\u987b\u8bb8\u53ef\u7684\u533a\u5757\u94fe\u7cfb\u7edf\uff0c\u4efb\u4f55\u4e2a\u4f53\u90fd\u53ef\u4ee5\u81ea\u7531\u8fdb\u5165\u548c\u9000\u51fa\uff0c\u4e5f\u53ef\u4ee5\u5728\u5176\u4e2d\u5199\u5165\u3001\u8bfb\u53d6\u3001\u53c2\u4e0e\u4ea4\u6613\uff0c\u5982\u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a\u7b49\u3002 \u8054\u76df\u94fe\u6307\u7531\u8054\u76df\u6210\u5458\u7ef4\u62a4\u7684\u533a\u5757\u94fe\uff0c\u901a\u5e38\u8bbe\u8ba1\u6709\u7ebf\u4e0b\u8ba4\u53ef\u7684\u8282\u70b9\u51c6\u5165\u3001\u7528\u6237\u7ba1\u7406\u548c\u6743\u9650\u63a7\u5236\u673a\u5236\u3002\u8054\u76df\u94fe\u53ef\u5927\u5e45\u964d\u4f4e\u5f02\u5730\u7ed3\u7b97\u6210\u672c\u548c\u65f6\u95f4\uff0c\u6bd4\u73b0\u6709\u7cfb\u7edf\u66f4\u7b80\u5355\uff0c\u6548\u7387\u66f4\u9ad8\uff0c\u540c\u65f6\u7ee7\u627f\u53bb\u4e2d\u5fc3\u5316\u4f18\u70b9\u51cf\u8f7b\u5784\u65ad\u538b\u529b\u3002 \u4e13\u6709\u94fe\u6307\u5404\u4e2a\u8282\u70b9\u7684\u5199\u5165\u6743\u9650\u6536\u5f52\u5185\u90e8\u63a7\u5236\uff0c\u800c\u8bfb\u53d6\u6743\u9650\u53ef\u89c6\u9700\u6c42\u6709\u9009\u62e9\u6027\u5730\u5bf9\u5916\u5f00\u653e\u3002\u4e13\u6709\u94fe\u5177\u5907\u533a\u5757\u94fe\u591a\u8282\u70b9\u8fd0\u884c\u7684\u901a\u7528\u7ed3\u6784\uff0c\u9002\u7528\u4e8e\u542b\u591a\u7ea7\u673a\u6784\u7684\u7ec4\u7ec7\u8fdb\u884c\u5185\u90e8\u6570\u636e\u7ba1\u7406\u4e0e\u5ba1\u8ba1\u3002","title":"1.2 \u8054\u76df\u94fe"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#121","text":"\u6743\u9650\u63a7\u5236\uff1a \u51c6\u5165\u6743\u9650\uff1a\u5177\u5907\u6b64\u6743\u9650\u7684\u8282\u70b9\u624d\u53ef\u4ee5\u63a5\u5165\u7f51\u7edc\uff1b \u5171\u8bc6\u6743\u9650\uff1a\u5177\u5907\u6b64\u6743\u9650\u7684\u8282\u70b9\u624d\u53ef\u4ee5\u53c2\u4e0e\u533a\u5757\u94fe\u7684\u5171\u8bc6\uff1b \u4e1a\u52a1\u6743\u9650\uff1a\u5bf9\u94fe\u4e0a\u7684\u64cd\u4f5c\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u7684\u6743\u9650\u8bbe\u5b9a\uff0c\u6bd4\u5982\u90e8\u7f72\u5408\u7ea6\u3001\u7ba1\u7406\u89d2\u8272\u7b49\uff1b \u5b89\u5168\u9690\u79c1\uff1a \u901a\u8fc7\u6743\u9650\u63a7\u5236\uff0c\u4e25\u683c\u7684\u4fdd\u62a4\u6570\u636e\u9690\u79c1\uff0c\u907f\u514d\u6570\u636e\u6cc4\u9732\uff1b \u901a\u8fc7\u5bc6\u7801\u5b66\u6280\u672f\uff0c\u5728\u4e0d\u6cc4\u9732\u6570\u636e\u7684\u524d\u63d0\u4e0b\uff0c\u8fdb\u884c\u6570\u636e\u4ea4\u4e92\uff1b \u5171\u8bc6\u6548\u7387\uff1a \u57fa\u4e8e\u4f01\u4e1a\u5e94\u7528\u573a\u666f\uff0c\u53ef\u4ee5\u727a\u7272\u90e8\u5206\u4e0d\u9700\u8981\u7684\u53bb\u4e2d\u5fc3\u5316\u7a0b\u5ea6\uff0c\u63d0\u9ad8\u5171\u8bc6\u6548\u7387 \u5171\u8bc6\u5b89\u5168: \u5b89\u5168\u7a33\u5b9a\u7684\u5171\u8bc6\u7b97\u6cd5\uff0c\u4e0d\u53ef\u5206\u53c9","title":"1.2.1 \u8054\u76df\u94fe\u7684\u7279\u70b9"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#2-platone","text":"","title":"2. \u8054\u76df\u533a\u5757\u94fe\u5e73\u53f0 - PlatONE"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#21","text":"\u8282\u70b9 PlatONE\u4e2d\u7684\u8282\u70b9\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u7c7b\uff1a \u89c2\u5bdf\u8005\u8282\u70b9: \u53ea\u8d1f\u8d23\u540c\u6b65\u533a\u5757\uff0c\u4e0d\u53c2\u4e0e\u51fa\u5757\u3002\u7cfb\u7edf\u4e2d\u5c06\u4f1a\u4e00\u76f4\u5b58\u5728\u51e0\u4e2a\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\uff0c\u7528\u4e8e\u7a33\u5b9a\u540c\u6b65\u533a\u5757\uff0c\u540c\u65f6\u4e5f\u7528\u4e8e\u88ab\u5176\u4ed6\u7684\u8282\u70b9\u6307\u5b9a\u4e3abootnodes\u8fdb\u884c\u8fde\u63a5; \u5171\u8bc6\u8282\u70b9: \u53c2\u4e0e\u51fa\u5757\uff0c\u4ee5\u53ca\u540c\u6b65\u533a\u5757; \u8d26\u6237 \u76f8\u6bd4\u8d26\u6237\u6a21\u578b\uff0cUTXO\u4e0d\u652f\u6301\u667a\u80fd\u5408\u7ea6\uff0c\u800c\u5f88\u591a\u7684DAG\u9879\u76ee\u4e5f\u5728\u79ef\u6781\u63a2\u7d22\u667a\u80fd\u5408\u7ea6\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u6210\u719f\u7a33\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u6b64PlatONE\u9009\u62e9\u6210\u719f\u7a33\u5b9a\u652f\u6301\u667a\u80fd\u5408\u7ea6\u7684\u8d26\u6237\u6a21\u578b\u3002PlatONE\u4e2d\uff0c\u6bcf\u4e2a\u8d26\u6237\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5173\u8054\u7684\u72b6\u6001(state)\u548c\u4e00\u4e2a20\u5b57\u8282\u7684\u5730\u5740(address)\u3002\u8d26\u6237\u5206\u4e3a\u4e24\u7c7b\uff1a \u666e\u901a\u8d26\u6237: \u8be5\u7c7b\u578b\u8d26\u6237\u7531\u79c1\u94a5\u63a7\u5236\uff0c\u7528\u6237\u53ef\u901a\u8fc7\u94b1\u5305\u5ba2\u6237\u7aef\u751f\u6210\u3002\u5728PlatONE\u4e2d\uff0c\u666e\u901a\u8d26\u6237\u53ef\u4ee5\u521b\u5efa\u4ea4\u6613\uff0c\u5e76\u4f7f\u7528\u79c1\u94a5\u5bf9\u4ea4\u6613\u7b7e\u540d\u3002\u666e\u901a\u8d26\u6237\u9664\u4fdd\u5b58\u8d26\u6237\u4f59\u989d\u5916\uff0c\u667a\u80fd\u5408\u7ea6\u53ef\u88ab\u6388\u6743\u6269\u5c55\u548c\u8bbf\u95ee\u81ea\u5b9a\u4e49\u5c5e\u6027\u3002 \u5408\u7ea6\u8d26\u6237: \u8be5\u7c7b\u578b\u8d26\u6237\u6ca1\u6709\u79c1\u94a5\uff0c\u7531\u4ee3\u7801\u63a7\u5236\uff0c\u5408\u7ea6\u8d26\u6237\u5730\u5740\u5728\u90e8\u7f72\u5408\u7ea6\u65f6\u4ea7\u751f\u3002\u4e0e\u666e\u901a\u8d26\u6237\u4e0d\u540c\uff0c\u5408\u7ea6\u8d26\u6237\u4e0d\u80fd\u81ea\u884c\u53d1\u8d77\u65b0\u7684\u4ea4\u6613\u3002\u6bcf\u5f53\u5408\u7ea6\u8d26\u6237\u6536\u5230\u4e00\u6761\u6d88\u606f\uff0c\u5408\u7ea6\u5185\u90e8\u7684\u4ee3\u7801\u5c31\u4f1a\u88ab\u6fc0\u6d3b\uff0c\u5141\u8bb8\u5b83\u5bf9\u5185\u90e8\u5b58\u50a8\u8fdb\u884c\u8bfb\u53d6\u548c\u5199\u5165\uff0c\u4ee5\u53ca\u53d1\u9001\u5176\u5b83\u6d88\u606f\u6216\u8005\u521b\u5efa\u5408\u7ea6\u3002 \u667a\u80fd\u5408\u7ea6(Wasm\u4ecb\u7ecd) Wasm\u5408\u7ea6\u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210wasm\u6267\u884c\u3002\u89e6\u53d1Wasm\u5408\u7ea6\u7684\u4ea4\u6613\u7531\u5171\u8bc6\u8282\u70b9\u6253\u5305\uff0c\u5168\u7f51\u8282\u70b9\u91cd\u590d\u6267\u884c\u9a8c\u8bc1\u3002Wasm\u5408\u7ea6\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u516c\u5171\u8d26\u672c\u4e2d\u3002 \u53ef\u9a8c\u8bc1\u5408\u7ea6\u7684\u5f00\u53d1\u548c\u53d1\u5e03\u8ddfWasm\u5408\u7ea6\u6ca1\u6709\u533a\u522b\uff0c\u6700\u7ec8\u4e5f\u662f\u7f16\u8bd1\u6210wasm\u6267\u884c\u3002\u53ef\u9a8c\u8bc1\u5408\u7ea6\u7684\u72b6\u6001\u8f6c\u6362\u5728\u94fe\u4e0b\u7531\u8ba1\u7b97\u8282\u70b9\u5f02\u6b65\u6267\u884c\uff0c\u8ba1\u7b97\u5b8c\u6210\u540e\u65b0\u7684\u72b6\u6001\u548c\u72b6\u6001\u8f6c\u6362\u8bc1\u660e\u63d0\u4ea4\u5230\u94fe\u4e0a\uff0c\u5168\u7f51\u8282\u70b9\u53ef\u5feb\u901f\u9a8c\u8bc1\u6b63\u786e\u6027\u5e76\u5c06\u65b0\u7684\u72b6\u6001\u66f4\u65b0\u5230\u516c\u5171\u8d26\u672c\u4e2d\u3002\u53ef\u9a8c\u8bc1\u5408\u7ea6\u53ef\u652f\u6301\u590d\u6742\u3001\u7e41\u91cd\u7684\u8ba1\u7b97\u903b\u8f91\u800c\u4e0d\u5f71\u54cd\u6574\u6761\u94fe\u7684\u6027\u80fd\u3002 \u9690\u79c1\u5408\u7ea6\u540c\u6837\u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210llvm ir\u4e2d\u95f4\u8bed\u8a00\u6267\u884c\u3002\u9690\u79c1\u5408\u7ea6\u7684\u8f93\u5165\u6570\u636e\u4fdd\u5b58\u5728\u6570\u636e\u8282\u70b9\u672c\u5730\uff0c\u7531\u6570\u636e\u8282\u70b9\u5728\u94fe\u4e0b\u4ee5\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u65b9\u5f0f\u8fdb\u884c\u9690\u79c1\u8ba1\u7b97\uff0c\u5e76\u63d0\u4ea4\u8ba1\u7b97\u7ed3\u679c\u5230\u94fe\u4e0a\u3002","title":"2.1 \u57fa\u672c\u6982\u5ff5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#211-platone","text":"PlatONE\u7684\u5171\u8bc6\u4e3a\u9ad8\u5ea6\u4f18\u5316\u7684BFT\u7c7b\u5171\u8bc6\u7b97\u6cd5\uff0c\u5176\u5bb9\u9519\u7387\u4e3a1/3\uff0c\u5728\u4fdd\u7559\u5373\u65f6\u786e\u8ba4\uff08instant finality\uff09\u7684\u5173\u952e\u7279\u6027\u7684\u540c\u65f6\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u53bb\u4e2d\u5fc3\u5316\u7684\u7a0b\u5ea6\u3002\u5171\u8bc6\u53ef\u4ee5\u4fdd\u8bc1\u4e0a\u94fe\u7684\u533a\u5757\u662f\u786e\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u94fe\u4e0d\u4f1a\u51fa\u73b0\u5206\u53c9\uff0c\u540c\u65f6\u6bcf\u4e00\u4e2a\u6709\u6548\u7684\u533a\u5757\u90fd\u4f1a\u63d2\u5165\u5230\u94fe\u4e0a\u3002 PlatONE\u7684\u5171\u8bc6\u652f\u6301\u8d85\u8fc7100\u4e2a\u5171\u8bc6\u8282\u70b9\u3002\u76f8\u5bf9\u4e8e\u5176\u4ed6\u4e00\u4e9b\u5e38\u89c1\u7684BFT\u5171\u8bc6\uff0cPlatONE\u7684\u5171\u8bc6\u7684\u6027\u80fd\u6709\u663e\u8457\u7684\u63d0\u5347\u3002\u572810\u4e2a\u5171\u8bc6\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0cTPS \u63a5\u8fd1 1000\u3002 PlatONE\u7684\u5171\u8bc6\u8fd0\u884c\u7684\u76f8\u5173\u53c2\u6570\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u4e14 PlatONE\u7684\u5171\u8bc6\u4e2d\u7684\u5171\u8bc6\u8282\u70b9\u96c6\u5408\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u66f4\u65b0\u3002\u8fd1\u671f\u8ba1\u5212\u652f\u6301\u5171\u8bc6\u7684\u63d2\u4ef6\u5316\uff0c\u4ee5\u53ca\u5171\u8bc6\u7684\u53ef\u5ba1\u8ba1\u6027\u7b49\u3002 PlatONE\u5171\u8bc6\u662f\u5728 round \u4e0a\u8fdb\u884c\u7684\u3002\u5728\u7279\u5b9a\u7684 round \u4e0a\uff0c\u901a\u8fc7\u9884\u5148\u8bbe\u7f6e\u7684\u7b56\u7565\u9009\u53d6\u4e00\u4e2a\u51fa\u5757\u8005\u8282\u70b9\u3002\u51fa\u5757\u8005\u8282\u70b9\u7684\u9009\u53d6\u7b56\u7565\u76ee\u524d\u652f\u6301\u4e24\u79cd\uff1around robin \u548c sticky proposer\u3002 \u51fa\u5757\u8005\u8282\u70b9\u63d0\u8bae\u533a\u5757\u540e\uff0c\u5404\u5171\u8bc6\u8282\u70b9\u8fdb\u884c\u5171\u8bc6\u3002\u5171\u8bc6\u5206\u4e09\u9636\u6bb5\uff0c\u5176\u4e2d\u540e\u4e24\u4e2a\u9636\u6bb5\u4e3a\u6295\u7968\u9636\u6bb5\uff0c\u7528\u4ee5\u4fdd\u8bc1 safety\u3002PlatONE\u5171\u8bc6\u4f7f\u7528 round change \u673a\u5236\u7ed3\u5408\u9501\u5b9a\u548c\u89e3\u9501\u673a\u5236\u6765\u4fdd\u8bc1\u5171\u8bc6\u7684\u7684 liveness \u3002\u901a\u8fc7\u4f18\u5316\u89e3\u9501\u673a\u5236\uff0c\u89e3\u51b3\u4e86\u4e1a\u754c\u591a\u4e2a\u77e5\u540d\u9879\u76ee\u5185\u5b58\u5728\u7684\u5171\u8bc6\u6b7b\u9501\u95ee\u9898\u3002 PlatONE\u5171\u8bc6\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u94fe\u4e0a\u7684\u533a\u5757\u751f\u6210\u5171\u8bc6\u8bc1\u660e\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u8be5\u533a\u5757\u7684\u5404\u5171\u8bc6\u8282\u70b9\u7684\u6709\u6548\u7b7e\u540d\uff0c\u56e0\u800c\u533a\u5757\u53ef\u4ee5\u8fdb\u884c\u81ea\u9a8c\u8bc1\uff0c\u540c\u65f6\u4e5f\u80fd\u652f\u6301\u8f7b\u8282\u70b9\u3002","title":"2.1.1 PlatONE\u4e2d\u7684\u5171\u8bc6\u7b97\u6cd5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#212-platone","text":"\u6839\u636e\u7cfb\u7edf\u4e2d\u7684\u4e0d\u540c\u5b9e\u4f53\u5bf9\u8c61\uff0cPlatONE\u5c06\u6743\u9650\u7ba1\u7406\u8fdb\u884c\u4e86\u6a21\u5757\u5316\u7684\u62c6\u5206\u3002\u9488\u5bf9\u7cfb\u7edf\u4e2d\u7528\u6237\u8d26\u6237\u3001\u8282\u70b9\u548c\u667a\u80fd\u5408\u7ea6\uff0c\u8fd9\u4e09\u7c7b\u5b9e\u4f53\u7684\u4e0d\u540c\u884c\u4e3a\uff0c\u5206\u522b\u8bbe\u8ba1\u4e86\u7528\u6237\u89d2\u8272\u7ba1\u7406\u6a21\u5757\u3001\u8282\u70b9\u7ba1\u7406\u6a21\u5757\u548c\u5408\u7ea6\u9632\u706b\u5899\u6a21\u5757\u6765\u8fdb\u884c\u6743\u9650\u7684\u63a7\u5236\u548c\u7ba1\u7406\u3002 \u89d2\u8272\u7ba1\u7406 PlatONE\u6839\u636e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u8bbe\u5b9a\u4e86\u4e0d\u540c\u7684\u7528\u6237\u89d2\u8272\uff0c\u5e76\u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u7684\u65b9\u5f0f\u5bf9\u7528\u6237\u7684\u89d2\u8272\u8fdb\u884c\u7ba1\u7406\u3002\u6839\u636e\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u7528\u6237\u5728\u7cfb\u7edf\u4e2d\u88ab\u8d4b\u4e88\u4e0d\u540c\u7684\u6743\u9650\u3002\u76ee\u524d\u8bbe\u5b9a\u4e86\u5982\u4e0b\u89d2\u8272\uff1a \u6bcf\u4e2a\u89d2\u8272\u7684\u6743\u9650\u8303\u56f4\u5982\u4e0b\uff1a \u8282\u70b9\u7ba1\u7406 PlatONE\u901a\u8fc7\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u5bf9\u8282\u70b9\u8fdb\u884c\u7ba1\u7406\uff0c\u5305\u62ec\u8282\u70b9\u662f\u5426\u80fd\u591f\u63a5\u5165\u7f51\u7edc\uff0c\u8282\u70b9\u662f\u5426\u80fd\u591f\u53c2\u4e0e\u5171\u8bc6\u4ee5\u53ca\u8282\u70b9\u4fe1\u606f\u7684\u7ef4\u62a4\u7b49\u529f\u80fd\u3002\u6839\u636e\u4e4b\u524d\u7528\u6237\u89d2\u8272\u7684\u8bbe\u5b9a\uff0c\u53ea\u6709chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e09\u7c7b\u7528\u6237\u624d\u53ef\u4ee5\u8bbe\u7f6e\u7cfb\u7edf\u5408\u7ea6\u4e2d\u7684\u8282\u70b9\u6570\u636e\uff0c\u5f53\u9700\u8981\u6dfb\u52a0\u8282\u70b9\u3001\u66f4\u65b0\u8282\u70b9\u72b6\u6001\u3001\u5220\u9664\u8282\u70b9\u65f6\u90fd\u9700\u8981\u8fd9\u4e09\u7c7b\u8d26\u6237\u6765\u8c03\u7528\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fnodeAdmin\u4ec5\u53ef\u4ee5\u7ba1\u7406\u81ea\u5df1\u52a0\u5165\u7684\u8282\u70b9\uff0cchainCreator\u548cchainAdmin\u53ef\u4ee5\u7ba1\u7406\u6240\u6709\u8282\u70b9\u3002 \u5408\u7ea6\u9632\u706b\u5899 PlatONE\u4e2d\u5408\u7ea6\u7684\u8c03\u7528\u6743\u9650\u7531\u5408\u7ea6\u9632\u706b\u5899\u63a7\u5236\uff0c\u53ea\u6709\u5408\u7ea6\u7684\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5408\u7ea6\u7684\u9632\u706b\u5899\u3002 \u5408\u7ea6\u9632\u706b\u5899\u5177\u5907\u5408\u7ea6\u63a5\u53e3\u7ea7\u522b\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u5217\u8868\u5b9e\u73b0\uff1a ACCEPT: \u53ef\u4ee5\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u767d\u540d\u5355 REJECT: \u62d2\u7edd\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u9ed1\u540d\u5355","title":"2.1.2 PlatONE\u4e2d\u7684\u6743\u9650\u6a21\u578b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#22","text":"","title":"2.2 \u67b6\u6784\u56fe"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/PlatONE%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#23","text":"\u5171\u8bc6\u7b97\u6cd5 IBFT VRF \u667a\u80fd\u5408\u7ea6 \u5408\u7ea6\u6570\u636e\u8fc1\u79fb GasFee \u9690\u79c1\u8d27\u5e01 \u865a\u62df\u673a WASM EVM CNS \u6743\u9650\u6a21\u578b \u5bc6\u7801\u5b66\u65b9\u6848","title":"2.3 \u529f\u80fd\u4ecb\u7ecd"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/","text":"1. \u6982\u8ff0 2. PanGu\u7b80\u4ecb 2.1. CBFT\u5171\u8bc6\u5f15\u64ce 2.2. Wasm\u5408\u7ea6\u5f15\u64ce 3. \u67b6\u6784\u56fe 4. \u5171\u8bc6\u7684\u4f18\u5316 5. \u7cfb\u7edf\u5408\u7ea6 6. \u6743\u9650\u7ba1\u7406 6.1. \u5e73\u53f0\u89d2\u8272\u6743\u9650 6.2. \u5408\u7ea6\u9632\u706b\u5899 7. \u5e73\u53f0\u89d2\u8272\u63a5\u53e3\u5c01\u88c5 8. \u6269\u5c55\u8c03\u7528\u63a5\u53e3\u5c01\u88c5 9. CNS\u670d\u52a1 1. \u6982\u8ff0 PlatONE\u57fa\u4e8ePanGu\u5f00\u53d1\u3002 PanGu\u662f\u4e00\u4e2a\u533a\u5757\u94fe\u5f00\u53d1\u6846\u67b6\uff0c\u5176\u53ef\u505a\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u7cfb\u7edf\u8fd0\u884c\u8d77\u6765\u3002\u53ef\u4ee5\u7406\u89e3\u4e3aPanGu\u4e3aBCOS2.0\u63d0\u4f9b\u4e86\u533a\u5757\u94fe\u7684\u57fa\u7840\u8bbe\u65bd\u3002 2. PanGu\u7b80\u4ecb PanGu\u5b9e\u73b0\u4e86\u533a\u5757\u94fe\u7cfb\u7edf\u82e5\u5e72\u5fc5\u8981\u7ec4\u4ef6\u3002\u672c\u6587\u4ec5\u4ecb\u7ecd\u5176\u5171\u8bc6\u5f15\u64ce\u548c\u5408\u7ea6\u5f15\u64ce\u3002 2.1. CBFT\u5171\u8bc6\u5f15\u64ce Concurrent Byzantine Fault Tolerance\uff08\u7b80\u79f0CBFT\uff09, \u5e76\u884c\u62dc\u5360\u5ead\u5bb9\u9519\u7cfb\u7edf\u3002\u5728\u4fdd\u8bc1\u6d3b\u6027\u3001\u5b89\u5168\u6027\u548c\u9ad8\u6548\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u63d0\u4f9b\u4e86 (n-1)/3 \u7684\u5bb9\u9519\u6027\u3002\u4e3b\u8981\u7279\u70b9\u652f\u6301\u5e76\u884c\u51fa\u5757\u53ca\u5171\u8bc6\uff0c\u5927\u5927\u7684\u63d0\u9ad8\u4e86\u51fa\u5757\u7684\u901f\u7387\uff0c\u53ef\u66f4\u597d\u7684\u6ee1\u8db3\u8d85\u9ad8\u9891\u4ea4\u6613\u91cf\u7684\u9700\u6c42\u3002 2.2. Wasm\u5408\u7ea6\u5f15\u64ce WebAssembly\uff08\u7b80\u79f0Wasm\uff09\u662f\u4e00\u79cd\u65b0\u7684\u9002\u5408\u4e8e\u7f16\u8bd1\u5230Web\u7684\uff0c\u53ef\u79fb\u690d\u7684\uff0c\u5927\u5c0f\u548c\u52a0\u8f7d\u65f6\u95f4\u9ad8\u6548\u7684\u683c\u5f0f\u3002\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u4e0e\u5e73\u53f0\u65e0\u5173\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u683c\u5f0f\u3002Wasm \u53ef\u4ee5\u7531C++/Rust\u7b49\u9ad8\u7ea7\u8bed\u8a00\u7f16\u8bd1\u800c\u6765\u3002 PanGu\u652f\u6301C++\u7f16\u5199Wasm\u667a\u80fd\u5408\u7ea6\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u57fa\u7840\u6a21\u677f\u5e93\uff0c\u4ee5\u964d\u4f4e\u5f00\u53d1\u95e8\u69db\u3002 3. \u67b6\u6784\u56fe 4. \u5171\u8bc6\u7684\u4f18\u5316 \u65f6\u949f\u540c\u6b65\u673a\u5236 \u7531\u4e8eCBFT\u51fa\u5757\u673a\u5236\u5f3a\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u65f6\u95f4\u6233\uff0c\u56e0\u6b64\u9700\u8981\u5f15\u5165\u65f6\u949f\u540c\u6b65\u673a\u5236\u3002 NTP\u670d\u52a1\u7531\u6839\u8282\u70b9\u6765\u63d0\u4f9b\u3002 \u65f6\u949f\u540c\u6b65\u5728\u6bcf\u4e00\u8f6e\u5171\u8bc6\u5b8c\u6210\u540e\u8fdb\u884c\u4e00\u6b21\u3002 \u91cd\u4ea4\u6613\u7684\u5904\u7406 \u91cd\u4ea4\u6613\u662f\u6307\u9700\u8981\u8f83\u957f\u7684\u65f6\u95f4\u53bb\u6267\u884c\u7684\u4ea4\u6613\u3002 \u8bbe\u7f6e\u5355\u7b14\u4ea4\u6613\u5141\u8bb8\u7684\u6700\u5927\u6267\u884c\u65f6\u95f4\uff0c\u5f53\u524d\u51fa\u5757\u8282\u70b9\u5728\u51fa\u5757\u65f6\uff0c\u82e5\u67d0\u7b14\u4ea4\u6613\u672a\u5728\u5141\u8bb8\u7684\u65f6\u95f4\u5185\u6267\u884c\u5b8c\u6210\uff0c\u5219\u56de\u6eda\u533a\u5757\u72b6\u6001\u4e3a\u8be5\u7b14\u4ea4\u6613\u6267\u884c\u524d\u7684\u72b6\u6001\uff0c\u5c06\u8be5\u7b14\u4ea4\u6613\u4ece\u4ea4\u6613\u961f\u5217\u4e2d\u5220\u9664\u3002 \u88ab\u4e00\u4e2a\u8282\u70b9\u4e22\u5f03\u7684\u91cd\u4ea4\u6613\u4ecd\u6709\u673a\u4f1a\u5728\u5176\u4ed6\u8282\u70b9\u4e0a\u88ab\u6253\u5305\u3002 Nonce\u673a\u5236\u6539\u9020 \u4e3a\u4e86\u4f7f\u4ea4\u6613\u53ef\u4ee5\u88ab\u4e22\u5f03\uff0c\u9700\u8981\u5bf9Nonce\u673a\u5236\u8fdb\u884c\u6539\u9020\u3002 Nonce\u7684\u751f\u6210\u89c4\u5219\u4fee\u6539\u4e3a\u7531\u4ea4\u6613\u53d1\u8d77\u65b9\u751f\u621032\u5b57\u8282\u7684\u968f\u673a\u6570\u3002 \u4ea4\u6613\u91cd\u653e\u68c0\u6d4b\u65f6\u4ee5\u4ea4\u6613Hash\u4e3a\u952e\u503c\u3002 \u6f5c\u5728\u95ee\u9898 \u82e5NTP\u670d\u52a1\u5668\u53d7\u5230\u653b\u51fb\uff0c\u5171\u8bc6\u673a\u5236\u662f\u5426\u56e0\u6b64\u762b\u75ea\uff1f \u662f\u5426\u5f15\u5165\u53bb\u4e2d\u5fc3\u5316\u7684\u65f6\u949f\u540c\u6b65\uff1f 5. \u7cfb\u7edf\u5408\u7ea6 \u5185\u7f6e\u7cfb\u7edf\u5408\u7ea6 \u5408\u7ea6\u7ba1\u7406\u5408\u7ea6 \u4e3a\u5176\u4ed6\u5408\u7ea6\u63d0\u4f9b\u6ce8\u518c\u767b\u8bb0\u670d\u52a1\uff0c\u4f1a\u767b\u8bb0\u5408\u7ea6\u7684\u5730\u5740\u3001\u540d\u79f0\u3001\u7248\u672c\u53f7\u3001\u53d1\u884c\u4eba\u7b49\u4fe1\u606f\uff0c\u4e3aCNS\u670d\u52a1\u63d0\u4f9b\u4fe1\u606f\u3002 \u5916\u7f6e\u7cfb\u7edf\u5408\u7ea6 \u53c2\u6570\u7ba1\u7406\u5408\u7ea6 \u5c06\u4e00\u4e9b\u53ef\u53d8\u7684\u7cfb\u7edf\u53c2\u6570\u653e\u7f6e\u5728\u53c2\u6570\u7ba1\u7406\u5408\u7ea6\u4e2d\uff0c\u4ee5\u4fbf\u5728\u7cfb\u7edf\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u53ef\u6839\u636e\u5b9e\u9645\u9700\u8981\u8c03\u6574\u3002 \u5e73\u53f0\u7528\u6237\u7533\u8bf7\u5408\u7ea6 \u7ba1\u7406\u6240\u6709\u7684\u5e73\u53f0\u7528\u6237\u7533\u8bf7\u4fe1\u606f\u53ca\u5ba1\u6838\u4fe1\u606f\uff0c\u7533\u8bf7\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u5e73\u53f0\u7528\u6237\u4fe1\u606f\u624d\u4f1a\u767b\u8bb0\u4e8e\u5e73\u53f0\u7528\u6237\u7ba1\u7406\u5408\u7ea6\u3002 \u5e73\u53f0\u7528\u6237\u7ba1\u7406\u5408\u7ea6 \u7ba1\u7406\u6240\u6709\u7684\u5e73\u53f0\u7528\u6237\u4fe1\u606f\uff0c\u53ea\u6709\u5e73\u53f0\u5c42\u7528\u6237\u624d\u80fd\u88ab\u5206\u914d\u5e73\u53f0\u89d2\u8272\u3002 \u5e73\u53f0\u89d2\u8272\u7533\u8bf7\u5408\u7ea6 \u7ba1\u7406\u6240\u6709\u7684\u5e73\u53f0\u7528\u6237\u63d0\u4ea4\u7684\u89d2\u8272\u7533\u8bf7\uff0c\u7533\u8bf7\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u89d2\u8272\u5bf9\u5e94\u7684\u7528\u6237\u4fe1\u606f\u624d\u4f1a\u767b\u8bb0\u4e8e\u5e73\u53f0\u89d2\u8272\u7ba1\u7406\u5408\u7ea6\u3002 \u8282\u70b9\u7533\u8bf7\u5408\u7ea6 \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9\u7533\u8bf7\u4fe1\u606f\u53ca\u5ba1\u6838\u4fe1\u606f\uff0c\u8282\u70b9\u7533\u8bf7\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u8282\u70b9\u4fe1\u606f\u624d\u4f1a\u767b\u8bb0\u4e8e\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002 \u8282\u70b9\u7ba1\u7406\u5408\u7ea6 \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u8282\u70b9\u5305\u62ec\u5171\u8bc6\u8282\u70b9\u548c\u975e\u5171\u8bc6\u8282\u70b9\uff0c\u8282\u70b9\u4fe1\u606f\u5305\u62ec\u8282\u70b9\u516c\u94a5\u3001\u8bc1\u4e66\u3001\u7ba1\u7406\u5458\u3001\u540d\u79f0\u7b49\u7b49\u3002 6. \u6743\u9650\u7ba1\u7406 6.1. \u5e73\u53f0\u89d2\u8272\u6743\u9650 \u5728\u5e73\u53f0\u5c42\u9762\u4e0a\u5b9a\u4e49\u94fe\u521b\u5efa\u8005\u3001\u94fe\u7ba1\u7406\u5458\u3001\u8282\u70b9\u7ba1\u7406\u5458\u3001\u5408\u7ea6\u7ba1\u7406\u5458\u3001\u5408\u7ea6\u90e8\u7f72\u8005\u7b49\u591a\u79cd\u89d2\u8272\u3002 \u94fe\u521b\u5efa\u8005 \u94fe\u521b\u5efa\u8005\u5728\u94fe\u521d\u59cb\u5316\u65f6\u786e\u5b9a\uff0c\u8c03\u7528\u521d\u59cb\u5316\u63a5\u53e3\u7684\u8d26\u6237\u7528\u6237\u5373\u6210\u4e3a\u94fe\u521b\u5efa\u8005\u3002\u94fe\u521b\u5efa\u8005\u4e0d\u53ef\u88ab\u66f4\u6539\u3002 \u94fe\u521b\u5efa\u8005\u6743\u9650\u5982\u4e0b\uff1a \u6307\u5b9a\u6216\u53d6\u6d88\u94fe\u7ba1\u7406\u5458\uff1b \u6307\u5b9a\u6216\u53d6\u6d88\u8282\u70b9\u7ba1\u7406\u5458\uff1b \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u90e8\u7f72\u8005\uff1b \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u7ba1\u7406\u5458\uff1b \u65b0\u52a0\u8282\u70b9\uff1b \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9\uff1b \u90e8\u7f72\u5408\u7ea6\uff1b \u4e3a\u81ea\u5df1\u90e8\u7f72\u7684\u5408\u7ea6\u8bbe\u7f6e\u9632\u706b\u5899\uff1b \u5ba1\u6838\u5df2\u90e8\u7f72\u7684\u5408\u7ea6\uff1b \u94fe\u7ba1\u7406\u5458 \u94fe\u7ba1\u7406\u5458\u7531\u94fe\u521b\u5efa\u8005\u6307\u5b9a\u6216\u53d6\u6d88\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u3002 \u94fe\u7ba1\u7406\u5458\u6743\u9650\u5982\u4e0b\uff1a \u6307\u5b9a\u6216\u53d6\u6d88\u8282\u70b9\u7ba1\u7406\u5458\uff1b \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u90e8\u7f72\u8005\uff1b \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u7ba1\u7406\u5458\uff1b \u65b0\u52a0\u8282\u70b9\uff1b \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9\uff1b \u90e8\u7f72\u5408\u7ea6\uff1b \u4e3a\u81ea\u5df1\u90e8\u7f72\u7684\u5408\u7ea6\u8bbe\u7f6e\u9632\u706b\u5899\uff1b \u5ba1\u6838\u5df2\u90e8\u7f72\u7684\u5408\u7ea6\uff1b \u8282\u70b9\u7ba1\u7406\u5458 \u8282\u70b9\u7ba1\u7406\u5458\u7531\u94fe\u521b\u5efa\u8005\u6216\u94fe\u7ba1\u7406\u5458\u6307\u5b9a\u6216\u53d6\u6d88\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u3002 \u8282\u70b9\u7ba1\u7406\u6743\u9650\u5982\u4e0b\uff1a \u65b0\u52a0\u8282\u70b9\uff1b \u7ba1\u7406\u81ea\u5df1\u52a0\u7684\u8282\u70b9\uff1b \u5408\u7ea6\u7ba1\u7406\u5458 \u5408\u7ea6\u7ba1\u7406\u5458\u7531\u94fe\u521b\u5efa\u8005\u6216\u94fe\u7ba1\u7406\u5458\u6307\u5b9a\u6216\u53d6\u6d88\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u3002 \u5408\u7ea6\u7ba1\u7406\u5458\u6743\u9650\u5982\u4e0b\uff1a \u5ba1\u6838\u5df2\u90e8\u7f72\u7684\u5408\u7ea6; \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u90e8\u7f72\u8005\uff1b \u5408\u7ea6\u90e8\u7f72\u8005 \u5408\u7ea6\u90e8\u7f72\u8005\u7531\u94fe\u521b\u5efa\u8005\u6216\u94fe\u7ba1\u7406\u5458\u6216\u5408\u7ea6\u7ba1\u7406\u5458\u6307\u5b9a\u6216\u53d6\u6d88\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u3002\u5982\u679c\u94fe\u88ab\u8bbe\u7f6e\u4e3a\u9700\u8981\u6388\u6743\u624d\u80fd\u90e8\u7f72\u90e8\u7f72\u5408\u7ea6\uff0c\u62e5\u6709\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u666e\u901a\u5e73\u53f0\u7528\u6237\u624d\u53ef\u4ee5\u90e8\u7f72\u5408\u7ea6\u3002 6.2. \u5408\u7ea6\u9632\u706b\u5899 \u5408\u7ea6\u8c03\u7528\u6743\u9650\u63a7\u5236\u662f\u6307\u5bf9\u53d1\u5411\u5408\u7ea6\u7684\u4ea4\u6613\u8fdb\u884c\u6743\u9650\u63a7\u5236\u3002\u4e3a\u6bcf\u4e2a\u5408\u7ea6\u589e\u52a0\u4e86\u4e00\u4e2a\u5c5e\u6027\uff0c\u79f0\u4e3a\u5408\u7ea6\u9632\u706b\u5899\uff0c\u5408\u7ea6\u9632\u706b\u5899\u7684\u63a7\u5236\u89c4\u5219\u7c7b\u4f3c\u4e8eLinux\u7684iptables\u7684\u8fdb\u5165\u89c4\u5219\u3002 \u53ea\u6709\u5408\u7ea6\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\uff0c\u56e0\u6b64\u5408\u7ea6\u9632\u706b\u5899\u5177\u6709\u53bb\u4e2d\u5fc3\u5316\u7684\u5c5e\u6027\u3002 \u5408\u7ea6\u9632\u706b\u5899\u72ec\u7acb\u4e8e\u5408\u7ea6\u7684\u4ee3\u7801\u903b\u8f91\uff0c\u5408\u7ea6\u4ee3\u7801\u53ea\u9700\u8981\u5173\u6ce8\u4e1a\u52a1\u903b\u8f91\u800c\u4e0d\u9700\u8981\u5173\u6ce8\u88ab\u8c03\u7528\u7684\u6743\u9650\u3002Dapp\u5f00\u53d1\u8005\u53ef\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u7279\u5f81\u5bf9\u81ea\u5df1\u7684\u5408\u7ea6\u8bbe\u7f6e\u9632\u706b\u5899\u89c4\u5219\u3002 7. \u5e73\u53f0\u89d2\u8272\u63a5\u53e3\u5c01\u88c5 \u9700\u8981\u5bf9\u7cfb\u7edf\u5408\u7ea6\u5728\u8de8\u5408\u7ea6\u8c03\u7528\u65f6\u9891\u7e41\u7528\u5230\u7684\u5e73\u53f0\u89d2\u8272\u63a5\u53e3\u8fdb\u884c\u5c01\u88c5\u3002 bool __sys_isChainOwer(Address); bool __sys_isChainAdmin(Address); bool __sys_isNodeAdmin(Address); bool __sys_isValidUser(Address); bool __sys_isContractAdmin(Address); bool __sys_isContractDeployer(Address); bool __sys_setChainAdmin(Address); bool __sys_setNodeAdmin(Address); bool __sys_setContractAdmin(Address); bool __sys_setContractDeployer(Address); 8. \u6269\u5c55\u8c03\u7528\u63a5\u53e3\u5c01\u88c5 \u7531\u5e95\u5c42\u5411\u5408\u7ea6\u5c42\u63d0\u4f9b\u7684\u8c03\u7528\u4e3a\u6269\u5c55\u8c03\u7528. \u5e95\u5c42\u4f7f\u7528\u4e00\u4e2a\u865a\u62df\u5408\u7ea6\u5730\u57400x00000000000000000000000000000000000000ec\uff08\u7b80\u5199\u4e3a0xec\uff09\uff0c\u5411\u5408\u7ea6\u63d0\u4f9b\u8c03\u7528\u670d\u52a1\u3002\u6bcf\u4e00\u4e2a\u6269\u5c55\u8c03\u7528\u53ef\u770b\u4f5c\u662f0xec\u5408\u7ea6\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5e95\u5c42\u901a\u8fc7\u62e6\u622a\u5730\u5740\u53ca\u65b9\u6cd5\u7684\u65b9\u5f0f\u63d0\u4f9b\u670d\u52a1\u3002 \u9488\u5bf9\u6bcf\u4e00\u4e2a\u6269\u5c55\u8c03\u7528\uff0c\u4f1a\u5728\u5408\u7ea6\u5c42\u5c01\u88c5\u4e00\u4e2a\u63a5\u53e3\u3002 string __sys_PAIL_encrypt(const string& _number, const string& _pubkey); string __sys_PAIL_homAdd(string _cipher1, string _cipher2, string _pubkey); stirng __sys_PAIL_homSub(string _cipher1, string _cipher2, string _pubkey); bool __sys_NIZK_verifyProof(const string& _pai, const string& _fromBalCipher, const string& _fromAmountCipher, const string& _toAmountCipher, const string& _fromPubkey, const string& _toPubkey); 9. CNS\u670d\u52a1 CNS\u5168\u79f0\u4e3aContract Name Service\uff0c\u529f\u80fd\u7c7b\u4f3c\u4e8eDNS\uff0c\u4f7f\u5f97\u8d26\u6237\u7528\u6237\u5728\u53d1\u9001\u4ea4\u6613\u65f6\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u5408\u7ea6\u7684\u540d\u79f0\u548c\u7248\u672c\u53f7\u3002\u5f53\u7248\u672c\u53f7\u7f3a\u7701\u65f6\u4f7f\u7528\u6700\u9ad8\u7248\u672c\u3002 \u5728\u4ea4\u6613\u53d1\u9001\u63a5\u53e3\u4e2d\u589e\u52a0\u5b57\u6bb5\u4ee5\u533a\u5206\u4ea4\u6613\u7c7b\u578b\uff0c\u4ea4\u6613\u7b7e\u540d\u9700\u8981\u6db5\u76d6\u65b0\u589e\u5b57\u6bb5\u3002","title":"PlatONE Design"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#1","text":"PlatONE\u57fa\u4e8ePanGu\u5f00\u53d1\u3002 PanGu\u662f\u4e00\u4e2a\u533a\u5757\u94fe\u5f00\u53d1\u6846\u67b6\uff0c\u5176\u53ef\u505a\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u7cfb\u7edf\u8fd0\u884c\u8d77\u6765\u3002\u53ef\u4ee5\u7406\u89e3\u4e3aPanGu\u4e3aBCOS2.0\u63d0\u4f9b\u4e86\u533a\u5757\u94fe\u7684\u57fa\u7840\u8bbe\u65bd\u3002","title":"1. \u6982\u8ff0"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#2-pangu","text":"PanGu\u5b9e\u73b0\u4e86\u533a\u5757\u94fe\u7cfb\u7edf\u82e5\u5e72\u5fc5\u8981\u7ec4\u4ef6\u3002\u672c\u6587\u4ec5\u4ecb\u7ecd\u5176\u5171\u8bc6\u5f15\u64ce\u548c\u5408\u7ea6\u5f15\u64ce\u3002","title":"2. PanGu\u7b80\u4ecb"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#21-cbft","text":"Concurrent Byzantine Fault Tolerance\uff08\u7b80\u79f0CBFT\uff09, \u5e76\u884c\u62dc\u5360\u5ead\u5bb9\u9519\u7cfb\u7edf\u3002\u5728\u4fdd\u8bc1\u6d3b\u6027\u3001\u5b89\u5168\u6027\u548c\u9ad8\u6548\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u63d0\u4f9b\u4e86 (n-1)/3 \u7684\u5bb9\u9519\u6027\u3002\u4e3b\u8981\u7279\u70b9\u652f\u6301\u5e76\u884c\u51fa\u5757\u53ca\u5171\u8bc6\uff0c\u5927\u5927\u7684\u63d0\u9ad8\u4e86\u51fa\u5757\u7684\u901f\u7387\uff0c\u53ef\u66f4\u597d\u7684\u6ee1\u8db3\u8d85\u9ad8\u9891\u4ea4\u6613\u91cf\u7684\u9700\u6c42\u3002","title":"2.1. CBFT\u5171\u8bc6\u5f15\u64ce"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#22-wasm","text":"WebAssembly\uff08\u7b80\u79f0Wasm\uff09\u662f\u4e00\u79cd\u65b0\u7684\u9002\u5408\u4e8e\u7f16\u8bd1\u5230Web\u7684\uff0c\u53ef\u79fb\u690d\u7684\uff0c\u5927\u5c0f\u548c\u52a0\u8f7d\u65f6\u95f4\u9ad8\u6548\u7684\u683c\u5f0f\u3002\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u4e0e\u5e73\u53f0\u65e0\u5173\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u683c\u5f0f\u3002Wasm \u53ef\u4ee5\u7531C++/Rust\u7b49\u9ad8\u7ea7\u8bed\u8a00\u7f16\u8bd1\u800c\u6765\u3002 PanGu\u652f\u6301C++\u7f16\u5199Wasm\u667a\u80fd\u5408\u7ea6\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u57fa\u7840\u6a21\u677f\u5e93\uff0c\u4ee5\u964d\u4f4e\u5f00\u53d1\u95e8\u69db\u3002","title":"2.2. Wasm\u5408\u7ea6\u5f15\u64ce"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#3","text":"","title":"3. \u67b6\u6784\u56fe"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#4","text":"\u65f6\u949f\u540c\u6b65\u673a\u5236 \u7531\u4e8eCBFT\u51fa\u5757\u673a\u5236\u5f3a\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u65f6\u95f4\u6233\uff0c\u56e0\u6b64\u9700\u8981\u5f15\u5165\u65f6\u949f\u540c\u6b65\u673a\u5236\u3002 NTP\u670d\u52a1\u7531\u6839\u8282\u70b9\u6765\u63d0\u4f9b\u3002 \u65f6\u949f\u540c\u6b65\u5728\u6bcf\u4e00\u8f6e\u5171\u8bc6\u5b8c\u6210\u540e\u8fdb\u884c\u4e00\u6b21\u3002 \u91cd\u4ea4\u6613\u7684\u5904\u7406 \u91cd\u4ea4\u6613\u662f\u6307\u9700\u8981\u8f83\u957f\u7684\u65f6\u95f4\u53bb\u6267\u884c\u7684\u4ea4\u6613\u3002 \u8bbe\u7f6e\u5355\u7b14\u4ea4\u6613\u5141\u8bb8\u7684\u6700\u5927\u6267\u884c\u65f6\u95f4\uff0c\u5f53\u524d\u51fa\u5757\u8282\u70b9\u5728\u51fa\u5757\u65f6\uff0c\u82e5\u67d0\u7b14\u4ea4\u6613\u672a\u5728\u5141\u8bb8\u7684\u65f6\u95f4\u5185\u6267\u884c\u5b8c\u6210\uff0c\u5219\u56de\u6eda\u533a\u5757\u72b6\u6001\u4e3a\u8be5\u7b14\u4ea4\u6613\u6267\u884c\u524d\u7684\u72b6\u6001\uff0c\u5c06\u8be5\u7b14\u4ea4\u6613\u4ece\u4ea4\u6613\u961f\u5217\u4e2d\u5220\u9664\u3002 \u88ab\u4e00\u4e2a\u8282\u70b9\u4e22\u5f03\u7684\u91cd\u4ea4\u6613\u4ecd\u6709\u673a\u4f1a\u5728\u5176\u4ed6\u8282\u70b9\u4e0a\u88ab\u6253\u5305\u3002 Nonce\u673a\u5236\u6539\u9020 \u4e3a\u4e86\u4f7f\u4ea4\u6613\u53ef\u4ee5\u88ab\u4e22\u5f03\uff0c\u9700\u8981\u5bf9Nonce\u673a\u5236\u8fdb\u884c\u6539\u9020\u3002 Nonce\u7684\u751f\u6210\u89c4\u5219\u4fee\u6539\u4e3a\u7531\u4ea4\u6613\u53d1\u8d77\u65b9\u751f\u621032\u5b57\u8282\u7684\u968f\u673a\u6570\u3002 \u4ea4\u6613\u91cd\u653e\u68c0\u6d4b\u65f6\u4ee5\u4ea4\u6613Hash\u4e3a\u952e\u503c\u3002 \u6f5c\u5728\u95ee\u9898 \u82e5NTP\u670d\u52a1\u5668\u53d7\u5230\u653b\u51fb\uff0c\u5171\u8bc6\u673a\u5236\u662f\u5426\u56e0\u6b64\u762b\u75ea\uff1f \u662f\u5426\u5f15\u5165\u53bb\u4e2d\u5fc3\u5316\u7684\u65f6\u949f\u540c\u6b65\uff1f","title":"4. \u5171\u8bc6\u7684\u4f18\u5316"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#5","text":"\u5185\u7f6e\u7cfb\u7edf\u5408\u7ea6 \u5408\u7ea6\u7ba1\u7406\u5408\u7ea6 \u4e3a\u5176\u4ed6\u5408\u7ea6\u63d0\u4f9b\u6ce8\u518c\u767b\u8bb0\u670d\u52a1\uff0c\u4f1a\u767b\u8bb0\u5408\u7ea6\u7684\u5730\u5740\u3001\u540d\u79f0\u3001\u7248\u672c\u53f7\u3001\u53d1\u884c\u4eba\u7b49\u4fe1\u606f\uff0c\u4e3aCNS\u670d\u52a1\u63d0\u4f9b\u4fe1\u606f\u3002 \u5916\u7f6e\u7cfb\u7edf\u5408\u7ea6 \u53c2\u6570\u7ba1\u7406\u5408\u7ea6 \u5c06\u4e00\u4e9b\u53ef\u53d8\u7684\u7cfb\u7edf\u53c2\u6570\u653e\u7f6e\u5728\u53c2\u6570\u7ba1\u7406\u5408\u7ea6\u4e2d\uff0c\u4ee5\u4fbf\u5728\u7cfb\u7edf\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u53ef\u6839\u636e\u5b9e\u9645\u9700\u8981\u8c03\u6574\u3002 \u5e73\u53f0\u7528\u6237\u7533\u8bf7\u5408\u7ea6 \u7ba1\u7406\u6240\u6709\u7684\u5e73\u53f0\u7528\u6237\u7533\u8bf7\u4fe1\u606f\u53ca\u5ba1\u6838\u4fe1\u606f\uff0c\u7533\u8bf7\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u5e73\u53f0\u7528\u6237\u4fe1\u606f\u624d\u4f1a\u767b\u8bb0\u4e8e\u5e73\u53f0\u7528\u6237\u7ba1\u7406\u5408\u7ea6\u3002 \u5e73\u53f0\u7528\u6237\u7ba1\u7406\u5408\u7ea6 \u7ba1\u7406\u6240\u6709\u7684\u5e73\u53f0\u7528\u6237\u4fe1\u606f\uff0c\u53ea\u6709\u5e73\u53f0\u5c42\u7528\u6237\u624d\u80fd\u88ab\u5206\u914d\u5e73\u53f0\u89d2\u8272\u3002 \u5e73\u53f0\u89d2\u8272\u7533\u8bf7\u5408\u7ea6 \u7ba1\u7406\u6240\u6709\u7684\u5e73\u53f0\u7528\u6237\u63d0\u4ea4\u7684\u89d2\u8272\u7533\u8bf7\uff0c\u7533\u8bf7\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u89d2\u8272\u5bf9\u5e94\u7684\u7528\u6237\u4fe1\u606f\u624d\u4f1a\u767b\u8bb0\u4e8e\u5e73\u53f0\u89d2\u8272\u7ba1\u7406\u5408\u7ea6\u3002 \u8282\u70b9\u7533\u8bf7\u5408\u7ea6 \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9\u7533\u8bf7\u4fe1\u606f\u53ca\u5ba1\u6838\u4fe1\u606f\uff0c\u8282\u70b9\u7533\u8bf7\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u8282\u70b9\u4fe1\u606f\u624d\u4f1a\u767b\u8bb0\u4e8e\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002 \u8282\u70b9\u7ba1\u7406\u5408\u7ea6 \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u8282\u70b9\u5305\u62ec\u5171\u8bc6\u8282\u70b9\u548c\u975e\u5171\u8bc6\u8282\u70b9\uff0c\u8282\u70b9\u4fe1\u606f\u5305\u62ec\u8282\u70b9\u516c\u94a5\u3001\u8bc1\u4e66\u3001\u7ba1\u7406\u5458\u3001\u540d\u79f0\u7b49\u7b49\u3002","title":"5. \u7cfb\u7edf\u5408\u7ea6"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#6","text":"","title":"6. \u6743\u9650\u7ba1\u7406"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#61","text":"\u5728\u5e73\u53f0\u5c42\u9762\u4e0a\u5b9a\u4e49\u94fe\u521b\u5efa\u8005\u3001\u94fe\u7ba1\u7406\u5458\u3001\u8282\u70b9\u7ba1\u7406\u5458\u3001\u5408\u7ea6\u7ba1\u7406\u5458\u3001\u5408\u7ea6\u90e8\u7f72\u8005\u7b49\u591a\u79cd\u89d2\u8272\u3002 \u94fe\u521b\u5efa\u8005 \u94fe\u521b\u5efa\u8005\u5728\u94fe\u521d\u59cb\u5316\u65f6\u786e\u5b9a\uff0c\u8c03\u7528\u521d\u59cb\u5316\u63a5\u53e3\u7684\u8d26\u6237\u7528\u6237\u5373\u6210\u4e3a\u94fe\u521b\u5efa\u8005\u3002\u94fe\u521b\u5efa\u8005\u4e0d\u53ef\u88ab\u66f4\u6539\u3002 \u94fe\u521b\u5efa\u8005\u6743\u9650\u5982\u4e0b\uff1a \u6307\u5b9a\u6216\u53d6\u6d88\u94fe\u7ba1\u7406\u5458\uff1b \u6307\u5b9a\u6216\u53d6\u6d88\u8282\u70b9\u7ba1\u7406\u5458\uff1b \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u90e8\u7f72\u8005\uff1b \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u7ba1\u7406\u5458\uff1b \u65b0\u52a0\u8282\u70b9\uff1b \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9\uff1b \u90e8\u7f72\u5408\u7ea6\uff1b \u4e3a\u81ea\u5df1\u90e8\u7f72\u7684\u5408\u7ea6\u8bbe\u7f6e\u9632\u706b\u5899\uff1b \u5ba1\u6838\u5df2\u90e8\u7f72\u7684\u5408\u7ea6\uff1b \u94fe\u7ba1\u7406\u5458 \u94fe\u7ba1\u7406\u5458\u7531\u94fe\u521b\u5efa\u8005\u6307\u5b9a\u6216\u53d6\u6d88\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u3002 \u94fe\u7ba1\u7406\u5458\u6743\u9650\u5982\u4e0b\uff1a \u6307\u5b9a\u6216\u53d6\u6d88\u8282\u70b9\u7ba1\u7406\u5458\uff1b \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u90e8\u7f72\u8005\uff1b \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u7ba1\u7406\u5458\uff1b \u65b0\u52a0\u8282\u70b9\uff1b \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9\uff1b \u90e8\u7f72\u5408\u7ea6\uff1b \u4e3a\u81ea\u5df1\u90e8\u7f72\u7684\u5408\u7ea6\u8bbe\u7f6e\u9632\u706b\u5899\uff1b \u5ba1\u6838\u5df2\u90e8\u7f72\u7684\u5408\u7ea6\uff1b \u8282\u70b9\u7ba1\u7406\u5458 \u8282\u70b9\u7ba1\u7406\u5458\u7531\u94fe\u521b\u5efa\u8005\u6216\u94fe\u7ba1\u7406\u5458\u6307\u5b9a\u6216\u53d6\u6d88\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u3002 \u8282\u70b9\u7ba1\u7406\u6743\u9650\u5982\u4e0b\uff1a \u65b0\u52a0\u8282\u70b9\uff1b \u7ba1\u7406\u81ea\u5df1\u52a0\u7684\u8282\u70b9\uff1b \u5408\u7ea6\u7ba1\u7406\u5458 \u5408\u7ea6\u7ba1\u7406\u5458\u7531\u94fe\u521b\u5efa\u8005\u6216\u94fe\u7ba1\u7406\u5458\u6307\u5b9a\u6216\u53d6\u6d88\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u3002 \u5408\u7ea6\u7ba1\u7406\u5458\u6743\u9650\u5982\u4e0b\uff1a \u5ba1\u6838\u5df2\u90e8\u7f72\u7684\u5408\u7ea6; \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u90e8\u7f72\u8005\uff1b \u5408\u7ea6\u90e8\u7f72\u8005 \u5408\u7ea6\u90e8\u7f72\u8005\u7531\u94fe\u521b\u5efa\u8005\u6216\u94fe\u7ba1\u7406\u5458\u6216\u5408\u7ea6\u7ba1\u7406\u5458\u6307\u5b9a\u6216\u53d6\u6d88\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u3002\u5982\u679c\u94fe\u88ab\u8bbe\u7f6e\u4e3a\u9700\u8981\u6388\u6743\u624d\u80fd\u90e8\u7f72\u90e8\u7f72\u5408\u7ea6\uff0c\u62e5\u6709\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u666e\u901a\u5e73\u53f0\u7528\u6237\u624d\u53ef\u4ee5\u90e8\u7f72\u5408\u7ea6\u3002","title":"6.1. \u5e73\u53f0\u89d2\u8272\u6743\u9650"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#62","text":"\u5408\u7ea6\u8c03\u7528\u6743\u9650\u63a7\u5236\u662f\u6307\u5bf9\u53d1\u5411\u5408\u7ea6\u7684\u4ea4\u6613\u8fdb\u884c\u6743\u9650\u63a7\u5236\u3002\u4e3a\u6bcf\u4e2a\u5408\u7ea6\u589e\u52a0\u4e86\u4e00\u4e2a\u5c5e\u6027\uff0c\u79f0\u4e3a\u5408\u7ea6\u9632\u706b\u5899\uff0c\u5408\u7ea6\u9632\u706b\u5899\u7684\u63a7\u5236\u89c4\u5219\u7c7b\u4f3c\u4e8eLinux\u7684iptables\u7684\u8fdb\u5165\u89c4\u5219\u3002 \u53ea\u6709\u5408\u7ea6\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\uff0c\u56e0\u6b64\u5408\u7ea6\u9632\u706b\u5899\u5177\u6709\u53bb\u4e2d\u5fc3\u5316\u7684\u5c5e\u6027\u3002 \u5408\u7ea6\u9632\u706b\u5899\u72ec\u7acb\u4e8e\u5408\u7ea6\u7684\u4ee3\u7801\u903b\u8f91\uff0c\u5408\u7ea6\u4ee3\u7801\u53ea\u9700\u8981\u5173\u6ce8\u4e1a\u52a1\u903b\u8f91\u800c\u4e0d\u9700\u8981\u5173\u6ce8\u88ab\u8c03\u7528\u7684\u6743\u9650\u3002Dapp\u5f00\u53d1\u8005\u53ef\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u7279\u5f81\u5bf9\u81ea\u5df1\u7684\u5408\u7ea6\u8bbe\u7f6e\u9632\u706b\u5899\u89c4\u5219\u3002","title":"6.2. \u5408\u7ea6\u9632\u706b\u5899"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#7","text":"\u9700\u8981\u5bf9\u7cfb\u7edf\u5408\u7ea6\u5728\u8de8\u5408\u7ea6\u8c03\u7528\u65f6\u9891\u7e41\u7528\u5230\u7684\u5e73\u53f0\u89d2\u8272\u63a5\u53e3\u8fdb\u884c\u5c01\u88c5\u3002 bool __sys_isChainOwer(Address); bool __sys_isChainAdmin(Address); bool __sys_isNodeAdmin(Address); bool __sys_isValidUser(Address); bool __sys_isContractAdmin(Address); bool __sys_isContractDeployer(Address); bool __sys_setChainAdmin(Address); bool __sys_setNodeAdmin(Address); bool __sys_setContractAdmin(Address); bool __sys_setContractDeployer(Address);","title":"7. \u5e73\u53f0\u89d2\u8272\u63a5\u53e3\u5c01\u88c5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#8","text":"\u7531\u5e95\u5c42\u5411\u5408\u7ea6\u5c42\u63d0\u4f9b\u7684\u8c03\u7528\u4e3a\u6269\u5c55\u8c03\u7528. \u5e95\u5c42\u4f7f\u7528\u4e00\u4e2a\u865a\u62df\u5408\u7ea6\u5730\u57400x00000000000000000000000000000000000000ec\uff08\u7b80\u5199\u4e3a0xec\uff09\uff0c\u5411\u5408\u7ea6\u63d0\u4f9b\u8c03\u7528\u670d\u52a1\u3002\u6bcf\u4e00\u4e2a\u6269\u5c55\u8c03\u7528\u53ef\u770b\u4f5c\u662f0xec\u5408\u7ea6\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5e95\u5c42\u901a\u8fc7\u62e6\u622a\u5730\u5740\u53ca\u65b9\u6cd5\u7684\u65b9\u5f0f\u63d0\u4f9b\u670d\u52a1\u3002 \u9488\u5bf9\u6bcf\u4e00\u4e2a\u6269\u5c55\u8c03\u7528\uff0c\u4f1a\u5728\u5408\u7ea6\u5c42\u5c01\u88c5\u4e00\u4e2a\u63a5\u53e3\u3002 string __sys_PAIL_encrypt(const string& _number, const string& _pubkey); string __sys_PAIL_homAdd(string _cipher1, string _cipher2, string _pubkey); stirng __sys_PAIL_homSub(string _cipher1, string _cipher2, string _pubkey); bool __sys_NIZK_verifyProof(const string& _pai, const string& _fromBalCipher, const string& _fromAmountCipher, const string& _toAmountCipher, const string& _fromPubkey, const string& _toPubkey);","title":"8. \u6269\u5c55\u8c03\u7528\u63a5\u53e3\u5c01\u88c5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/PlatONE-Design/#9-cns","text":"CNS\u5168\u79f0\u4e3aContract Name Service\uff0c\u529f\u80fd\u7c7b\u4f3c\u4e8eDNS\uff0c\u4f7f\u5f97\u8d26\u6237\u7528\u6237\u5728\u53d1\u9001\u4ea4\u6613\u65f6\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u5408\u7ea6\u7684\u540d\u79f0\u548c\u7248\u672c\u53f7\u3002\u5f53\u7248\u672c\u53f7\u7f3a\u7701\u65f6\u4f7f\u7528\u6700\u9ad8\u7248\u672c\u3002 \u5728\u4ea4\u6613\u53d1\u9001\u63a5\u53e3\u4e2d\u589e\u52a0\u5b57\u6bb5\u4ee5\u533a\u5206\u4ea4\u6613\u7c7b\u578b\uff0c\u4ea4\u6613\u7b7e\u540d\u9700\u8981\u6db5\u76d6\u65b0\u589e\u5b57\u6bb5\u3002","title":"9. CNS\u670d\u52a1"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/%E4%BB%8B%E7%BB%8D/","text":"PlatONE\u4e2d\u7684\u57fa\u672c\u6982\u5ff5 \u8282\u70b9 PlatONE\u4e2d\u7684\u8282\u70b9\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u7c7b\uff1a \u89c2\u5bdf\u8005\u8282\u70b9: \u53ea\u8d1f\u8d23\u540c\u6b65\u533a\u5757\uff0c\u4e0d\u53c2\u4e0e\u51fa\u5757\u3002\u7cfb\u7edf\u4e2d\u5c06\u4f1a\u4e00\u76f4\u5b58\u5728\u51e0\u4e2a\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\uff0c\u7528\u4e8e\u7a33\u5b9a\u540c\u6b65\u533a\u5757\uff0c\u540c\u65f6\u4e5f\u7528\u4e8e\u88ab\u5176\u4ed6\u7684\u8282\u70b9\u6307\u5b9a\u4e3abootnodes\u8fdb\u884c\u8fde\u63a5; \u5171\u8bc6\u8282\u70b9: \u53c2\u4e0e\u51fa\u5757\uff0c\u4ee5\u53ca\u540c\u6b65\u533a\u5757; \u8d26\u6237 \u76f8\u6bd4\u8d26\u6237\u6a21\u578b\uff0cUTXO\u4e0d\u652f\u6301\u667a\u80fd\u5408\u7ea6\uff0c\u800c\u5f88\u591a\u7684DAG\u9879\u76ee\u4e5f\u5728\u79ef\u6781\u63a2\u7d22\u667a\u80fd\u5408\u7ea6\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u6210\u719f\u7a33\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u6b64PlatONE\u9009\u62e9\u6210\u719f\u7a33\u5b9a\u652f\u6301\u667a\u80fd\u5408\u7ea6\u7684\u8d26\u6237\u6a21\u578b\u3002PlatONE\u4e2d\uff0c\u6bcf\u4e2a\u8d26\u6237\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5173\u8054\u7684\u72b6\u6001(state)\u548c\u4e00\u4e2a20\u5b57\u8282\u7684\u5730\u5740(address)\u3002\u8d26\u6237\u5206\u4e3a\u4e24\u7c7b\uff1a \u666e\u901a\u8d26\u6237: \u8be5\u7c7b\u578b\u8d26\u6237\u7531\u79c1\u94a5\u63a7\u5236\uff0c\u7528\u6237\u53ef\u901a\u8fc7\u94b1\u5305\u5ba2\u6237\u7aef\u751f\u6210\u3002\u5728PlatONE\u4e2d\uff0c\u666e\u901a\u8d26\u6237\u53ef\u4ee5\u521b\u5efa\u4ea4\u6613\uff0c\u5e76\u4f7f\u7528\u79c1\u94a5\u5bf9\u4ea4\u6613\u7b7e\u540d\u3002\u666e\u901a\u8d26\u6237\u9664\u4fdd\u5b58\u8d26\u6237\u4f59\u989d\u5916\uff0c\u667a\u80fd\u5408\u7ea6\u53ef\u88ab\u6388\u6743\u6269\u5c55\u548c\u8bbf\u95ee\u81ea\u5b9a\u4e49\u5c5e\u6027\u3002 \u5408\u7ea6\u8d26\u6237: \u8be5\u7c7b\u578b\u8d26\u6237\u6ca1\u6709\u79c1\u94a5\uff0c\u7531\u4ee3\u7801\u63a7\u5236\uff0c\u5408\u7ea6\u8d26\u6237\u5730\u5740\u5728\u90e8\u7f72\u5408\u7ea6\u65f6\u4ea7\u751f\u3002\u4e0e\u666e\u901a\u8d26\u6237\u4e0d\u540c\uff0c\u5408\u7ea6\u8d26\u6237\u4e0d\u80fd\u81ea\u884c\u53d1\u8d77\u65b0\u7684\u4ea4\u6613\u3002\u6bcf\u5f53\u5408\u7ea6\u8d26\u6237\u6536\u5230\u4e00\u6761\u6d88\u606f\uff0c\u5408\u7ea6\u5185\u90e8\u7684\u4ee3\u7801\u5c31\u4f1a\u88ab\u6fc0\u6d3b\uff0c\u5141\u8bb8\u5b83\u5bf9\u5185\u90e8\u5b58\u50a8\u8fdb\u884c\u8bfb\u53d6\u548c\u5199\u5165\uff0c\u4ee5\u53ca\u53d1\u9001\u5176\u5b83\u6d88\u606f\u6216\u8005\u521b\u5efa\u5408\u7ea6\u3002 \u667a\u80fd\u5408\u7ea6(Wasm\u4ecb\u7ecd) Wasm\u5408\u7ea6\u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210wasm\u6267\u884c\u3002\u89e6\u53d1Wasm\u5408\u7ea6\u7684\u4ea4\u6613\u7531\u5171\u8bc6\u8282\u70b9\u6253\u5305\uff0c\u5168\u7f51\u8282\u70b9\u91cd\u590d\u6267\u884c\u9a8c\u8bc1\u3002Wasm\u5408\u7ea6\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u516c\u5171\u8d26\u672c\u4e2d\u3002 \u53ef\u9a8c\u8bc1\u5408\u7ea6\u7684\u5f00\u53d1\u548c\u53d1\u5e03\u8ddfWasm\u5408\u7ea6\u6ca1\u6709\u533a\u522b\uff0c\u6700\u7ec8\u4e5f\u662f\u7f16\u8bd1\u6210wasm\u6267\u884c\u3002\u53ef\u9a8c\u8bc1\u5408\u7ea6\u7684\u72b6\u6001\u8f6c\u6362\u5728\u94fe\u4e0b\u7531\u8ba1\u7b97\u8282\u70b9\u5f02\u6b65\u6267\u884c\uff0c\u8ba1\u7b97\u5b8c\u6210\u540e\u65b0\u7684\u72b6\u6001\u548c\u72b6\u6001\u8f6c\u6362\u8bc1\u660e\u63d0\u4ea4\u5230\u94fe\u4e0a\uff0c\u5168\u7f51\u8282\u70b9\u53ef\u5feb\u901f\u9a8c\u8bc1\u6b63\u786e\u6027\u5e76\u5c06\u65b0\u7684\u72b6\u6001\u66f4\u65b0\u5230\u516c\u5171\u8d26\u672c\u4e2d\u3002\u53ef\u9a8c\u8bc1\u5408\u7ea6\u53ef\u652f\u6301\u590d\u6742\u3001\u7e41\u91cd\u7684\u8ba1\u7b97\u903b\u8f91\u800c\u4e0d\u5f71\u54cd\u6574\u6761\u94fe\u7684\u6027\u80fd\u3002 \u9690\u79c1\u5408\u7ea6\u540c\u6837\u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210llvm ir\u4e2d\u95f4\u8bed\u8a00\u6267\u884c\u3002\u9690\u79c1\u5408\u7ea6\u7684\u8f93\u5165\u6570\u636e\u4fdd\u5b58\u5728\u6570\u636e\u8282\u70b9\u672c\u5730\uff0c\u7531\u6570\u636e\u8282\u70b9\u5728\u94fe\u4e0b\u4ee5\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u65b9\u5f0f\u8fdb\u884c\u9690\u79c1\u8ba1\u7b97\uff0c\u5e76\u63d0\u4ea4\u8ba1\u7b97\u7ed3\u679c\u5230\u94fe\u4e0a\u3002 PlatONE\u4e2d\u7684\u5171\u8bc6\u7b97\u6cd5 PlatONE\u7684\u5171\u8bc6\u4e3a\u9ad8\u5ea6\u4f18\u5316\u7684BFT\u7c7b\u5171\u8bc6\u7b97\u6cd5\uff0c\u5176\u5bb9\u9519\u7387\u4e3a1/3\uff0c\u5728\u4fdd\u7559\u5373\u65f6\u786e\u8ba4\uff08instant finality\uff09\u7684\u5173\u952e\u7279\u6027\u7684\u540c\u65f6\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u53bb\u4e2d\u5fc3\u5316\u7684\u7a0b\u5ea6\u3002\u5171\u8bc6\u53ef\u4ee5\u4fdd\u8bc1\u4e0a\u94fe\u7684\u533a\u5757\u662f\u786e\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u94fe\u4e0d\u4f1a\u51fa\u73b0\u5206\u53c9\uff0c\u540c\u65f6\u6bcf\u4e00\u4e2a\u6709\u6548\u7684\u533a\u5757\u90fd\u4f1a\u63d2\u5165\u5230\u94fe\u4e0a\u3002 PlatONE\u7684\u5171\u8bc6\u652f\u6301\u8d85\u8fc7100\u4e2a\u5171\u8bc6\u8282\u70b9\u3002\u76f8\u5bf9\u4e8e\u5176\u4ed6\u4e00\u4e9b\u5e38\u89c1\u7684BFT\u5171\u8bc6\uff0cPlatONE\u7684\u5171\u8bc6\u7684\u6027\u80fd\u6709\u663e\u8457\u7684\u63d0\u5347\u3002\u572810\u4e2a\u5171\u8bc6\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0cTPS \u63a5\u8fd1 1000\u3002 PlatONE\u7684\u5171\u8bc6\u8fd0\u884c\u7684\u76f8\u5173\u53c2\u6570\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u4e14 PlatONE\u7684\u5171\u8bc6\u4e2d\u7684\u5171\u8bc6\u8282\u70b9\u96c6\u5408\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u66f4\u65b0\u3002\u8fd1\u671f\u8ba1\u5212\u652f\u6301\u5171\u8bc6\u7684\u63d2\u4ef6\u5316\uff0c\u4ee5\u53ca\u5171\u8bc6\u7684\u53ef\u5ba1\u8ba1\u6027\u7b49\u3002 PlatONE\u5171\u8bc6\u662f\u5728 round \u4e0a\u8fdb\u884c\u7684\u3002\u5728\u7279\u5b9a\u7684 round \u4e0a\uff0c\u901a\u8fc7\u9884\u5148\u8bbe\u7f6e\u7684\u7b56\u7565\u9009\u53d6\u4e00\u4e2a\u51fa\u5757\u8005\u8282\u70b9\u3002\u51fa\u5757\u8005\u8282\u70b9\u7684\u9009\u53d6\u7b56\u7565\u76ee\u524d\u652f\u6301\u4e24\u79cd\uff1around robin \u548c sticky proposer\u3002 \u51fa\u5757\u8005\u8282\u70b9\u63d0\u8bae\u533a\u5757\u540e\uff0c\u5404\u5171\u8bc6\u8282\u70b9\u8fdb\u884c\u5171\u8bc6\u3002\u5171\u8bc6\u5206\u4e09\u9636\u6bb5\uff0c\u5176\u4e2d\u540e\u4e24\u4e2a\u9636\u6bb5\u4e3a\u6295\u7968\u9636\u6bb5\uff0c\u7528\u4ee5\u4fdd\u8bc1 safety\u3002PlatONE\u5171\u8bc6\u4f7f\u7528 round change \u673a\u5236\u7ed3\u5408\u9501\u5b9a\u548c\u89e3\u9501\u673a\u5236\u6765\u4fdd\u8bc1\u5171\u8bc6\u7684\u7684 liveness \u3002\u901a\u8fc7\u4f18\u5316\u89e3\u9501\u673a\u5236\uff0c\u89e3\u51b3\u4e86\u4e1a\u754c\u591a\u4e2a\u77e5\u540d\u9879\u76ee\u5185\u5b58\u5728\u7684\u5171\u8bc6\u6b7b\u9501\u95ee\u9898\u3002 PlatONE\u5171\u8bc6\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u94fe\u4e0a\u7684\u533a\u5757\u751f\u6210\u5171\u8bc6\u8bc1\u660e\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u8be5\u533a\u5757\u7684\u5404\u5171\u8bc6\u8282\u70b9\u7684\u6709\u6548\u7b7e\u540d\uff0c\u56e0\u800c\u533a\u5757\u53ef\u4ee5\u8fdb\u884c\u81ea\u9a8c\u8bc1\uff0c\u540c\u65f6\u4e5f\u80fd\u652f\u6301\u8f7b\u8282\u70b9\u3002 PlatONE\u4e2d\u7684\u6743\u9650\u6a21\u578b \u6839\u636e\u7cfb\u7edf\u4e2d\u7684\u4e0d\u540c\u5b9e\u4f53\u5bf9\u8c61\uff0cPlatONE\u5c06\u6743\u9650\u7ba1\u7406\u8fdb\u884c\u4e86\u6a21\u5757\u5316\u7684\u62c6\u5206\u3002\u9488\u5bf9\u7cfb\u7edf\u4e2d\u7528\u6237\u8d26\u6237\u3001\u8282\u70b9\u548c\u667a\u80fd\u5408\u7ea6\uff0c\u8fd9\u4e09\u7c7b\u5b9e\u4f53\u7684\u4e0d\u540c\u884c\u4e3a\uff0c\u5206\u522b\u8bbe\u8ba1\u4e86\u7528\u6237\u89d2\u8272\u7ba1\u7406\u6a21\u5757\u3001\u8282\u70b9\u7ba1\u7406\u6a21\u5757\u548c\u5408\u7ea6\u9632\u706b\u5899\u6a21\u5757\u6765\u8fdb\u884c\u6743\u9650\u7684\u63a7\u5236\u548c\u7ba1\u7406\u3002 \u89d2\u8272\u7ba1\u7406 PlatONE\u6839\u636e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u8bbe\u5b9a\u4e86\u4e0d\u540c\u7684\u7528\u6237\u89d2\u8272\uff0c\u5e76\u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u7684\u65b9\u5f0f\u5bf9\u7528\u6237\u7684\u89d2\u8272\u8fdb\u884c\u7ba1\u7406\u3002\u6839\u636e\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u7528\u6237\u5728\u7cfb\u7edf\u4e2d\u88ab\u8d4b\u4e88\u4e0d\u540c\u7684\u6743\u9650\u3002\u76ee\u524d\u8bbe\u5b9a\u4e86\u5982\u4e0b\u89d2\u8272\uff1a \u6bcf\u4e2a\u89d2\u8272\u7684\u6743\u9650\u8303\u56f4\u5982\u4e0b\uff1a \u8282\u70b9\u7ba1\u7406 PlatONE\u901a\u8fc7\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u5bf9\u8282\u70b9\u8fdb\u884c\u7ba1\u7406\uff0c\u5305\u62ec\u8282\u70b9\u662f\u5426\u80fd\u591f\u63a5\u5165\u7f51\u7edc\uff0c\u8282\u70b9\u662f\u5426\u80fd\u591f\u53c2\u4e0e\u5171\u8bc6\u4ee5\u53ca\u8282\u70b9\u4fe1\u606f\u7684\u7ef4\u62a4\u7b49\u529f\u80fd\u3002\u6839\u636e\u4e4b\u524d\u7528\u6237\u89d2\u8272\u7684\u8bbe\u5b9a\uff0c\u53ea\u6709chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e09\u7c7b\u7528\u6237\u624d\u53ef\u4ee5\u8bbe\u7f6e\u7cfb\u7edf\u5408\u7ea6\u4e2d\u7684\u8282\u70b9\u6570\u636e\uff0c\u5f53\u9700\u8981\u6dfb\u52a0\u8282\u70b9\u3001\u66f4\u65b0\u8282\u70b9\u72b6\u6001\u3001\u5220\u9664\u8282\u70b9\u65f6\u90fd\u9700\u8981\u8fd9\u4e09\u7c7b\u8d26\u6237\u6765\u8c03\u7528\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fnodeAdmin\u4ec5\u53ef\u4ee5\u7ba1\u7406\u81ea\u5df1\u52a0\u5165\u7684\u8282\u70b9\uff0cchainCreator\u548cchainAdmin\u53ef\u4ee5\u7ba1\u7406\u6240\u6709\u8282\u70b9\u3002 \u5408\u7ea6\u9632\u706b\u5899 PlatONE\u4e2d\u5408\u7ea6\u7684\u8c03\u7528\u6743\u9650\u7531\u5408\u7ea6\u9632\u706b\u5899\u63a7\u5236\uff0c\u53ea\u6709\u5408\u7ea6\u7684\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5408\u7ea6\u7684\u9632\u706b\u5899\u3002 \u5408\u7ea6\u9632\u706b\u5899\u5177\u5907\u5408\u7ea6\u63a5\u53e3\u7ea7\u522b\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u5217\u8868\u5b9e\u73b0\uff1a ACCEPT: \u53ef\u4ee5\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u767d\u540d\u5355 REJECT: \u62d2\u7edd\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u9ed1\u540d\u5355","title":"\u4ecb\u7ecd"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/%E4%BB%8B%E7%BB%8D/#platone","text":"\u8282\u70b9 PlatONE\u4e2d\u7684\u8282\u70b9\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u7c7b\uff1a \u89c2\u5bdf\u8005\u8282\u70b9: \u53ea\u8d1f\u8d23\u540c\u6b65\u533a\u5757\uff0c\u4e0d\u53c2\u4e0e\u51fa\u5757\u3002\u7cfb\u7edf\u4e2d\u5c06\u4f1a\u4e00\u76f4\u5b58\u5728\u51e0\u4e2a\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\uff0c\u7528\u4e8e\u7a33\u5b9a\u540c\u6b65\u533a\u5757\uff0c\u540c\u65f6\u4e5f\u7528\u4e8e\u88ab\u5176\u4ed6\u7684\u8282\u70b9\u6307\u5b9a\u4e3abootnodes\u8fdb\u884c\u8fde\u63a5; \u5171\u8bc6\u8282\u70b9: \u53c2\u4e0e\u51fa\u5757\uff0c\u4ee5\u53ca\u540c\u6b65\u533a\u5757; \u8d26\u6237 \u76f8\u6bd4\u8d26\u6237\u6a21\u578b\uff0cUTXO\u4e0d\u652f\u6301\u667a\u80fd\u5408\u7ea6\uff0c\u800c\u5f88\u591a\u7684DAG\u9879\u76ee\u4e5f\u5728\u79ef\u6781\u63a2\u7d22\u667a\u80fd\u5408\u7ea6\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u6210\u719f\u7a33\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u6b64PlatONE\u9009\u62e9\u6210\u719f\u7a33\u5b9a\u652f\u6301\u667a\u80fd\u5408\u7ea6\u7684\u8d26\u6237\u6a21\u578b\u3002PlatONE\u4e2d\uff0c\u6bcf\u4e2a\u8d26\u6237\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5173\u8054\u7684\u72b6\u6001(state)\u548c\u4e00\u4e2a20\u5b57\u8282\u7684\u5730\u5740(address)\u3002\u8d26\u6237\u5206\u4e3a\u4e24\u7c7b\uff1a \u666e\u901a\u8d26\u6237: \u8be5\u7c7b\u578b\u8d26\u6237\u7531\u79c1\u94a5\u63a7\u5236\uff0c\u7528\u6237\u53ef\u901a\u8fc7\u94b1\u5305\u5ba2\u6237\u7aef\u751f\u6210\u3002\u5728PlatONE\u4e2d\uff0c\u666e\u901a\u8d26\u6237\u53ef\u4ee5\u521b\u5efa\u4ea4\u6613\uff0c\u5e76\u4f7f\u7528\u79c1\u94a5\u5bf9\u4ea4\u6613\u7b7e\u540d\u3002\u666e\u901a\u8d26\u6237\u9664\u4fdd\u5b58\u8d26\u6237\u4f59\u989d\u5916\uff0c\u667a\u80fd\u5408\u7ea6\u53ef\u88ab\u6388\u6743\u6269\u5c55\u548c\u8bbf\u95ee\u81ea\u5b9a\u4e49\u5c5e\u6027\u3002 \u5408\u7ea6\u8d26\u6237: \u8be5\u7c7b\u578b\u8d26\u6237\u6ca1\u6709\u79c1\u94a5\uff0c\u7531\u4ee3\u7801\u63a7\u5236\uff0c\u5408\u7ea6\u8d26\u6237\u5730\u5740\u5728\u90e8\u7f72\u5408\u7ea6\u65f6\u4ea7\u751f\u3002\u4e0e\u666e\u901a\u8d26\u6237\u4e0d\u540c\uff0c\u5408\u7ea6\u8d26\u6237\u4e0d\u80fd\u81ea\u884c\u53d1\u8d77\u65b0\u7684\u4ea4\u6613\u3002\u6bcf\u5f53\u5408\u7ea6\u8d26\u6237\u6536\u5230\u4e00\u6761\u6d88\u606f\uff0c\u5408\u7ea6\u5185\u90e8\u7684\u4ee3\u7801\u5c31\u4f1a\u88ab\u6fc0\u6d3b\uff0c\u5141\u8bb8\u5b83\u5bf9\u5185\u90e8\u5b58\u50a8\u8fdb\u884c\u8bfb\u53d6\u548c\u5199\u5165\uff0c\u4ee5\u53ca\u53d1\u9001\u5176\u5b83\u6d88\u606f\u6216\u8005\u521b\u5efa\u5408\u7ea6\u3002 \u667a\u80fd\u5408\u7ea6(Wasm\u4ecb\u7ecd) Wasm\u5408\u7ea6\u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210wasm\u6267\u884c\u3002\u89e6\u53d1Wasm\u5408\u7ea6\u7684\u4ea4\u6613\u7531\u5171\u8bc6\u8282\u70b9\u6253\u5305\uff0c\u5168\u7f51\u8282\u70b9\u91cd\u590d\u6267\u884c\u9a8c\u8bc1\u3002Wasm\u5408\u7ea6\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u516c\u5171\u8d26\u672c\u4e2d\u3002 \u53ef\u9a8c\u8bc1\u5408\u7ea6\u7684\u5f00\u53d1\u548c\u53d1\u5e03\u8ddfWasm\u5408\u7ea6\u6ca1\u6709\u533a\u522b\uff0c\u6700\u7ec8\u4e5f\u662f\u7f16\u8bd1\u6210wasm\u6267\u884c\u3002\u53ef\u9a8c\u8bc1\u5408\u7ea6\u7684\u72b6\u6001\u8f6c\u6362\u5728\u94fe\u4e0b\u7531\u8ba1\u7b97\u8282\u70b9\u5f02\u6b65\u6267\u884c\uff0c\u8ba1\u7b97\u5b8c\u6210\u540e\u65b0\u7684\u72b6\u6001\u548c\u72b6\u6001\u8f6c\u6362\u8bc1\u660e\u63d0\u4ea4\u5230\u94fe\u4e0a\uff0c\u5168\u7f51\u8282\u70b9\u53ef\u5feb\u901f\u9a8c\u8bc1\u6b63\u786e\u6027\u5e76\u5c06\u65b0\u7684\u72b6\u6001\u66f4\u65b0\u5230\u516c\u5171\u8d26\u672c\u4e2d\u3002\u53ef\u9a8c\u8bc1\u5408\u7ea6\u53ef\u652f\u6301\u590d\u6742\u3001\u7e41\u91cd\u7684\u8ba1\u7b97\u903b\u8f91\u800c\u4e0d\u5f71\u54cd\u6574\u6761\u94fe\u7684\u6027\u80fd\u3002 \u9690\u79c1\u5408\u7ea6\u540c\u6837\u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210llvm ir\u4e2d\u95f4\u8bed\u8a00\u6267\u884c\u3002\u9690\u79c1\u5408\u7ea6\u7684\u8f93\u5165\u6570\u636e\u4fdd\u5b58\u5728\u6570\u636e\u8282\u70b9\u672c\u5730\uff0c\u7531\u6570\u636e\u8282\u70b9\u5728\u94fe\u4e0b\u4ee5\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u65b9\u5f0f\u8fdb\u884c\u9690\u79c1\u8ba1\u7b97\uff0c\u5e76\u63d0\u4ea4\u8ba1\u7b97\u7ed3\u679c\u5230\u94fe\u4e0a\u3002","title":"PlatONE\u4e2d\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/%E4%BB%8B%E7%BB%8D/#platone_1","text":"PlatONE\u7684\u5171\u8bc6\u4e3a\u9ad8\u5ea6\u4f18\u5316\u7684BFT\u7c7b\u5171\u8bc6\u7b97\u6cd5\uff0c\u5176\u5bb9\u9519\u7387\u4e3a1/3\uff0c\u5728\u4fdd\u7559\u5373\u65f6\u786e\u8ba4\uff08instant finality\uff09\u7684\u5173\u952e\u7279\u6027\u7684\u540c\u65f6\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u53bb\u4e2d\u5fc3\u5316\u7684\u7a0b\u5ea6\u3002\u5171\u8bc6\u53ef\u4ee5\u4fdd\u8bc1\u4e0a\u94fe\u7684\u533a\u5757\u662f\u786e\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u94fe\u4e0d\u4f1a\u51fa\u73b0\u5206\u53c9\uff0c\u540c\u65f6\u6bcf\u4e00\u4e2a\u6709\u6548\u7684\u533a\u5757\u90fd\u4f1a\u63d2\u5165\u5230\u94fe\u4e0a\u3002 PlatONE\u7684\u5171\u8bc6\u652f\u6301\u8d85\u8fc7100\u4e2a\u5171\u8bc6\u8282\u70b9\u3002\u76f8\u5bf9\u4e8e\u5176\u4ed6\u4e00\u4e9b\u5e38\u89c1\u7684BFT\u5171\u8bc6\uff0cPlatONE\u7684\u5171\u8bc6\u7684\u6027\u80fd\u6709\u663e\u8457\u7684\u63d0\u5347\u3002\u572810\u4e2a\u5171\u8bc6\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0cTPS \u63a5\u8fd1 1000\u3002 PlatONE\u7684\u5171\u8bc6\u8fd0\u884c\u7684\u76f8\u5173\u53c2\u6570\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u4e14 PlatONE\u7684\u5171\u8bc6\u4e2d\u7684\u5171\u8bc6\u8282\u70b9\u96c6\u5408\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u66f4\u65b0\u3002\u8fd1\u671f\u8ba1\u5212\u652f\u6301\u5171\u8bc6\u7684\u63d2\u4ef6\u5316\uff0c\u4ee5\u53ca\u5171\u8bc6\u7684\u53ef\u5ba1\u8ba1\u6027\u7b49\u3002 PlatONE\u5171\u8bc6\u662f\u5728 round \u4e0a\u8fdb\u884c\u7684\u3002\u5728\u7279\u5b9a\u7684 round \u4e0a\uff0c\u901a\u8fc7\u9884\u5148\u8bbe\u7f6e\u7684\u7b56\u7565\u9009\u53d6\u4e00\u4e2a\u51fa\u5757\u8005\u8282\u70b9\u3002\u51fa\u5757\u8005\u8282\u70b9\u7684\u9009\u53d6\u7b56\u7565\u76ee\u524d\u652f\u6301\u4e24\u79cd\uff1around robin \u548c sticky proposer\u3002 \u51fa\u5757\u8005\u8282\u70b9\u63d0\u8bae\u533a\u5757\u540e\uff0c\u5404\u5171\u8bc6\u8282\u70b9\u8fdb\u884c\u5171\u8bc6\u3002\u5171\u8bc6\u5206\u4e09\u9636\u6bb5\uff0c\u5176\u4e2d\u540e\u4e24\u4e2a\u9636\u6bb5\u4e3a\u6295\u7968\u9636\u6bb5\uff0c\u7528\u4ee5\u4fdd\u8bc1 safety\u3002PlatONE\u5171\u8bc6\u4f7f\u7528 round change \u673a\u5236\u7ed3\u5408\u9501\u5b9a\u548c\u89e3\u9501\u673a\u5236\u6765\u4fdd\u8bc1\u5171\u8bc6\u7684\u7684 liveness \u3002\u901a\u8fc7\u4f18\u5316\u89e3\u9501\u673a\u5236\uff0c\u89e3\u51b3\u4e86\u4e1a\u754c\u591a\u4e2a\u77e5\u540d\u9879\u76ee\u5185\u5b58\u5728\u7684\u5171\u8bc6\u6b7b\u9501\u95ee\u9898\u3002 PlatONE\u5171\u8bc6\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u94fe\u4e0a\u7684\u533a\u5757\u751f\u6210\u5171\u8bc6\u8bc1\u660e\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u8be5\u533a\u5757\u7684\u5404\u5171\u8bc6\u8282\u70b9\u7684\u6709\u6548\u7b7e\u540d\uff0c\u56e0\u800c\u533a\u5757\u53ef\u4ee5\u8fdb\u884c\u81ea\u9a8c\u8bc1\uff0c\u540c\u65f6\u4e5f\u80fd\u652f\u6301\u8f7b\u8282\u70b9\u3002","title":"PlatONE\u4e2d\u7684\u5171\u8bc6\u7b97\u6cd5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/%E4%BB%8B%E7%BB%8D/#platone_2","text":"\u6839\u636e\u7cfb\u7edf\u4e2d\u7684\u4e0d\u540c\u5b9e\u4f53\u5bf9\u8c61\uff0cPlatONE\u5c06\u6743\u9650\u7ba1\u7406\u8fdb\u884c\u4e86\u6a21\u5757\u5316\u7684\u62c6\u5206\u3002\u9488\u5bf9\u7cfb\u7edf\u4e2d\u7528\u6237\u8d26\u6237\u3001\u8282\u70b9\u548c\u667a\u80fd\u5408\u7ea6\uff0c\u8fd9\u4e09\u7c7b\u5b9e\u4f53\u7684\u4e0d\u540c\u884c\u4e3a\uff0c\u5206\u522b\u8bbe\u8ba1\u4e86\u7528\u6237\u89d2\u8272\u7ba1\u7406\u6a21\u5757\u3001\u8282\u70b9\u7ba1\u7406\u6a21\u5757\u548c\u5408\u7ea6\u9632\u706b\u5899\u6a21\u5757\u6765\u8fdb\u884c\u6743\u9650\u7684\u63a7\u5236\u548c\u7ba1\u7406\u3002 \u89d2\u8272\u7ba1\u7406 PlatONE\u6839\u636e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u8bbe\u5b9a\u4e86\u4e0d\u540c\u7684\u7528\u6237\u89d2\u8272\uff0c\u5e76\u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u7684\u65b9\u5f0f\u5bf9\u7528\u6237\u7684\u89d2\u8272\u8fdb\u884c\u7ba1\u7406\u3002\u6839\u636e\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u7528\u6237\u5728\u7cfb\u7edf\u4e2d\u88ab\u8d4b\u4e88\u4e0d\u540c\u7684\u6743\u9650\u3002\u76ee\u524d\u8bbe\u5b9a\u4e86\u5982\u4e0b\u89d2\u8272\uff1a \u6bcf\u4e2a\u89d2\u8272\u7684\u6743\u9650\u8303\u56f4\u5982\u4e0b\uff1a \u8282\u70b9\u7ba1\u7406 PlatONE\u901a\u8fc7\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u5bf9\u8282\u70b9\u8fdb\u884c\u7ba1\u7406\uff0c\u5305\u62ec\u8282\u70b9\u662f\u5426\u80fd\u591f\u63a5\u5165\u7f51\u7edc\uff0c\u8282\u70b9\u662f\u5426\u80fd\u591f\u53c2\u4e0e\u5171\u8bc6\u4ee5\u53ca\u8282\u70b9\u4fe1\u606f\u7684\u7ef4\u62a4\u7b49\u529f\u80fd\u3002\u6839\u636e\u4e4b\u524d\u7528\u6237\u89d2\u8272\u7684\u8bbe\u5b9a\uff0c\u53ea\u6709chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e09\u7c7b\u7528\u6237\u624d\u53ef\u4ee5\u8bbe\u7f6e\u7cfb\u7edf\u5408\u7ea6\u4e2d\u7684\u8282\u70b9\u6570\u636e\uff0c\u5f53\u9700\u8981\u6dfb\u52a0\u8282\u70b9\u3001\u66f4\u65b0\u8282\u70b9\u72b6\u6001\u3001\u5220\u9664\u8282\u70b9\u65f6\u90fd\u9700\u8981\u8fd9\u4e09\u7c7b\u8d26\u6237\u6765\u8c03\u7528\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fnodeAdmin\u4ec5\u53ef\u4ee5\u7ba1\u7406\u81ea\u5df1\u52a0\u5165\u7684\u8282\u70b9\uff0cchainCreator\u548cchainAdmin\u53ef\u4ee5\u7ba1\u7406\u6240\u6709\u8282\u70b9\u3002 \u5408\u7ea6\u9632\u706b\u5899 PlatONE\u4e2d\u5408\u7ea6\u7684\u8c03\u7528\u6743\u9650\u7531\u5408\u7ea6\u9632\u706b\u5899\u63a7\u5236\uff0c\u53ea\u6709\u5408\u7ea6\u7684\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5408\u7ea6\u7684\u9632\u706b\u5899\u3002 \u5408\u7ea6\u9632\u706b\u5899\u5177\u5907\u5408\u7ea6\u63a5\u53e3\u7ea7\u522b\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u5217\u8868\u5b9e\u73b0\uff1a ACCEPT: \u53ef\u4ee5\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u767d\u540d\u5355 REJECT: \u62d2\u7edd\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u9ed1\u540d\u5355","title":"PlatONE\u4e2d\u7684\u6743\u9650\u6a21\u578b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/CNS/CNS-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/","text":"\u5408\u7ea6\u547d\u540d\u670d\u52a1CNS \u5728\u76ee\u524d\u4e3b\u6d41\u7684\u533a\u5757\u94fe\u4e2d\uff0c\u7528\u6237\u662f\u901a\u8fc7\u5730\u5740\u6765\u8bbf\u95ee\u667a\u80fd\u5408\u7ea6\u7684\uff0c\u6bd4\u5982\u4ee5\u592a\u574a\u3002\u667a\u80fd\u5408\u7ea6\u7684\u5730\u5740\u662f\u4e00\u6bb5\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u7528\u6237\u9700\u8981\u8bb0\u4f4f\u8fd9\u6bb5\u5197\u957f\u7684\u5b57\u7b26\u4e32\u624d\u80fd\u8bbf\u95ee\u94fe\u4e0a\u7684\u667a\u80fd\u5408\u7ea6\u3002\u5f53\u5408\u7ea6\u9700\u8981\u5347\u7ea7\u65f6\uff0c\u91cd\u65b0\u90e8\u7f72\u5408\u7ea6\u53c8\u4f1a\u4ea7\u751f\u65b0\u7684\u5730\u5740\uff0c\u6240\u6709\u4f9d\u8d56\u4e8e\u8be5\u5408\u7ea6\u7684\u6a21\u5757\u90fd\u9700\u8981\u505a\u76f8\u5e94\u66f4\u65b0\u3002\u663e\u7136\u73b0\u6709\u8bbf\u95ee\u5408\u7ea6\u7684\u65b9\u5f0f\u5bf9\u7528\u6237\u662f\u4e0d\u53cb\u597d\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5728PlatONE\u4e2d\u5b9e\u73b0\u4e86\u5408\u7ea6\u547d\u540d\u670d\u52a1\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u53ca\u7248\u672c\u53f7\u6765\u8bbf\u95ee\u667a\u80fd\u5408\u7ea6\u3002 \u5408\u7ea6\u547d\u540d\u670d\u52a1\u82f1\u6587\u5168\u79f0\u4e3aContract Name Service\uff0c\u7b80\u79f0CNS\u3002\u5408\u7ea6\u547d\u540d\u670d\u52a1\u7ef4\u62a4\u4e86\u540d\u79f0\u3001\u7248\u672c\u5230\u5408\u7ea6\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u63d0\u4f9b\u4e86\u5bf9\u7cfb\u7edf\u4e2d\u5408\u7ea6\u7684\u7ba1\u7406\u529f\u80fd\uff0c\u5305\u62ec\u5408\u7ea6\u7684\u6ce8\u518c\u548c\u6ce8\u9500\uff0c\u5408\u7ea6\u6ce8\u518c\u4fe1\u606f\u548c\u5730\u5740\u7684\u67e5\u8be2\u7b49\u529f\u80fd\u3002 PlatONE\u4f7f\u7528\u7cfb\u7edf\u5408\u7ea6\u5b9e\u73b0\u4e86\u5408\u7ea6\u547d\u540d\u670d\u52a1\uff0c\u7528\u6237\u90e8\u7f72\u5408\u7ea6\u540e\u53ef\u4ee5\u5c06\u8be5\u5408\u7ea6\u6ce8\u518c\u5230\u7cfb\u7edf\u5408\u7ea6\u4e2d\uff0c\u540e\u7eed\u8c03\u7528\u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u53ca\u7248\u672c\u8fdb\u884c\u8c03\u7528\uff0c\u800c\u65e0\u9700\u4f7f\u7528\u5408\u7ea6\u5730\u5740\u3002\u5982\u679c\u4ea4\u6613\u662f\u6839\u636e\u5408\u7ea6\u540d\u79f0\u3001\u7248\u672c\u6765\u8c03\u7528\u5408\u7ea6\uff0cPlatONE\u5e95\u5c42\u81ea\u52a8\u5728\u7cfb\u7edf\u5408\u7ea6\u4e2d\u67e5\u8be2\u540d\u79f0\u7248\u672c\u5bf9\u5e94\u7684\u5408\u7ea6\u5730\u5740\uff0c\u7136\u540e\u8c03\u7528\u8be5\u5730\u5740\u7684\u5408\u7ea6\u3002","title":"CNS"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/CNS/CNS-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#cns","text":"\u5728\u76ee\u524d\u4e3b\u6d41\u7684\u533a\u5757\u94fe\u4e2d\uff0c\u7528\u6237\u662f\u901a\u8fc7\u5730\u5740\u6765\u8bbf\u95ee\u667a\u80fd\u5408\u7ea6\u7684\uff0c\u6bd4\u5982\u4ee5\u592a\u574a\u3002\u667a\u80fd\u5408\u7ea6\u7684\u5730\u5740\u662f\u4e00\u6bb5\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u7528\u6237\u9700\u8981\u8bb0\u4f4f\u8fd9\u6bb5\u5197\u957f\u7684\u5b57\u7b26\u4e32\u624d\u80fd\u8bbf\u95ee\u94fe\u4e0a\u7684\u667a\u80fd\u5408\u7ea6\u3002\u5f53\u5408\u7ea6\u9700\u8981\u5347\u7ea7\u65f6\uff0c\u91cd\u65b0\u90e8\u7f72\u5408\u7ea6\u53c8\u4f1a\u4ea7\u751f\u65b0\u7684\u5730\u5740\uff0c\u6240\u6709\u4f9d\u8d56\u4e8e\u8be5\u5408\u7ea6\u7684\u6a21\u5757\u90fd\u9700\u8981\u505a\u76f8\u5e94\u66f4\u65b0\u3002\u663e\u7136\u73b0\u6709\u8bbf\u95ee\u5408\u7ea6\u7684\u65b9\u5f0f\u5bf9\u7528\u6237\u662f\u4e0d\u53cb\u597d\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5728PlatONE\u4e2d\u5b9e\u73b0\u4e86\u5408\u7ea6\u547d\u540d\u670d\u52a1\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u53ca\u7248\u672c\u53f7\u6765\u8bbf\u95ee\u667a\u80fd\u5408\u7ea6\u3002 \u5408\u7ea6\u547d\u540d\u670d\u52a1\u82f1\u6587\u5168\u79f0\u4e3aContract Name Service\uff0c\u7b80\u79f0CNS\u3002\u5408\u7ea6\u547d\u540d\u670d\u52a1\u7ef4\u62a4\u4e86\u540d\u79f0\u3001\u7248\u672c\u5230\u5408\u7ea6\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u63d0\u4f9b\u4e86\u5bf9\u7cfb\u7edf\u4e2d\u5408\u7ea6\u7684\u7ba1\u7406\u529f\u80fd\uff0c\u5305\u62ec\u5408\u7ea6\u7684\u6ce8\u518c\u548c\u6ce8\u9500\uff0c\u5408\u7ea6\u6ce8\u518c\u4fe1\u606f\u548c\u5730\u5740\u7684\u67e5\u8be2\u7b49\u529f\u80fd\u3002 PlatONE\u4f7f\u7528\u7cfb\u7edf\u5408\u7ea6\u5b9e\u73b0\u4e86\u5408\u7ea6\u547d\u540d\u670d\u52a1\uff0c\u7528\u6237\u90e8\u7f72\u5408\u7ea6\u540e\u53ef\u4ee5\u5c06\u8be5\u5408\u7ea6\u6ce8\u518c\u5230\u7cfb\u7edf\u5408\u7ea6\u4e2d\uff0c\u540e\u7eed\u8c03\u7528\u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u53ca\u7248\u672c\u8fdb\u884c\u8c03\u7528\uff0c\u800c\u65e0\u9700\u4f7f\u7528\u5408\u7ea6\u5730\u5740\u3002\u5982\u679c\u4ea4\u6613\u662f\u6839\u636e\u5408\u7ea6\u540d\u79f0\u3001\u7248\u672c\u6765\u8c03\u7528\u5408\u7ea6\uff0cPlatONE\u5e95\u5c42\u81ea\u52a8\u5728\u7cfb\u7edf\u5408\u7ea6\u4e2d\u67e5\u8be2\u540d\u79f0\u7248\u672c\u5bf9\u5e94\u7684\u5408\u7ea6\u5730\u5740\uff0c\u7136\u540e\u8c03\u7528\u8be5\u5730\u5740\u7684\u5408\u7ea6\u3002","title":"\u5408\u7ea6\u547d\u540d\u670d\u52a1CNS"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/","text":"IBFT \u5171\u8bc6\u7b97\u6cd5 1. \u6982\u8ff0 PlatONE \u4e2d\u7684\u5171\u8bc6\u4e3a\u9ad8\u5ea6\u4f18\u5316\u7684BFT\u7c7b\u5171\u8bc6\u7b97\u6cd5\uff0c\u5176\u5bb9\u9519\u7387\u4e3a1/3\uff0c\u5728\u4fdd\u7559\u5373\u65f6\u786e\u8ba4\uff08instant finality\uff09\u7684\u5173\u952e\u7279\u6027\u7684\u540c\u65f6,\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u53bb\u4e2d\u5fc3\u5316\u7684\u7a0b\u5ea6\u3002\u5171\u8bc6\u53ef\u4ee5\u4fdd\u8bc1\u4e0a\u94fe\u7684\u533a\u5757\u662f\u786e\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u94fe\u4e0d\u4f1a\u51fa\u73b0\u5206\u53c9\uff0c\u540c\u65f6\u6bcf\u4e00\u4e2a\u6709\u6548\u7684\u533a\u5757\u90fd\u4f1a\u63d2\u5165\u5230\u94fe\u4e0a\u3002 PlatONE \u7684\u5171\u8bc6\u652f\u6301\u8d85\u8fc7100\u4e2a\u5171\u8bc6\u8282\u70b9\u3002\u76f8\u5bf9\u4e8e\u5176\u4ed6\u4e00\u4e9b\u5e38\u89c1\u7684BFT\u5171\u8bc6\uff0cPlatONE \u7684\u5171\u8bc6\u7684\u6027\u80fd\u6709\u663e\u8457\u7684\u63d0\u5347\u3002\u572810\u4e2a\u5171\u8bc6\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0cTPS \u63a5\u8fd1 1000\u3002 PlatONE \u7684\u5171\u8bc6\u8fd0\u884c\u7684\u76f8\u5173\u53c2\u6570\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u4e14 PlatONE \u7684\u5171\u8bc6\u4e2d\u7684\u5171\u8bc6\u8282\u70b9\u96c6\u5408\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u66f4\u65b0\u3002\u8fd1\u671f\u8ba1\u5212\u652f\u6301\u5171\u8bc6\u7684\u63d2\u4ef6\u5316\uff0c\u4ee5\u53ca\u5171\u8bc6\u7684\u53ef\u5ba1\u8ba1\u6027\u7b49\u3002 PlatONE \u5171\u8bc6\u662f\u5728 round \u4e0a\u8fdb\u884c\u7684\u3002\u5728\u7279\u5b9a\u7684 round \u4e0a\uff0c\u901a\u8fc7\u9884\u5148\u8bbe\u7f6e\u7684\u7b56\u7565\u9009\u53d6\u4e00\u4e2a\u51fa\u5757\u8005\u8282\u70b9\u3002\u51fa\u5757\u8005\u8282\u70b9\u7684\u9009\u53d6\u7b56\u7565\u76ee\u524d\u652f\u6301\u4e24\u79cd\uff1around robin \u548c sticky proposer\u3002 \u51fa\u5757\u8005\u8282\u70b9\u63d0\u8bae\u533a\u5757\u540e\uff0c\u5404\u5171\u8bc6\u8282\u70b9\u8fdb\u884c\u5171\u8bc6\u3002\u5171\u8bc6\u5206\u4e09\u9636\u6bb5\uff0c\u5176\u4e2d\u540e\u4e24\u4e2a\u9636\u6bb5\u4e3a\u6295\u7968\u9636\u6bb5\uff0c\u7528\u4ee5\u4fdd\u8bc1 Safety\u3002PlatONE \u5171\u8bc6\u4f7f\u7528 round change \u673a\u5236\u7ed3\u5408\u9501\u5b9a\u548c\u89e3\u9501\u673a\u5236\u6765\u4fdd\u8bc1\u5171\u8bc6\u7684\u7684 liveness \u3002\u901a\u8fc7\u4f18\u5316\u89e3\u9501\u673a\u5236\uff0c\u89e3\u51b3\u4e86\u4e1a\u754c\u591a\u4e2a\u77e5\u540d\u9879\u76ee\u5185\u5b58\u5728\u7684\u5171\u8bc6\u6b7b\u9501\u95ee\u9898\u3002 PlatONE \u5171\u8bc6\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u94fe\u4e0a\u7684\u533a\u5757\u751f\u6210\u5171\u8bc6\u8bc1\u660e\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u8be5\u533a\u5757\u7684\u5404\u5171\u8bc6\u8282\u70b9\u7684\u6709\u6548\u7b7e\u540d\uff0c\u56e0\u800c\u533a\u5757\u53ef\u4ee5\u8fdb\u884c\u81ea\u9a8c\u8bc1\uff0c\u540c\u65f6\u4e5f\u80fd\u652f\u6301\u8f7b\u8282\u70b9\u3002 \u533a\u5757\u4e2d\u5982\u679c\u4e0d\u5305\u542b\u4ea4\u6613\uff0c\u5219\u79f0\u4e3a\u7a7a\u533a\u5757\u3002PlatONE \u76ee\u524d\u652f\u6301\u4e0d\u51fa\u7a7a\u533a\u5757\uff0c\u4e5f\u5c31\u662f\u4e0a\u94fe\u7684\u533a\u5757\u4e2d\u90fd\u542b\u6709\u4ea4\u6613\u3002\u4e0d\u51fa\u7a7a\u533a\u5757\u7684\u673a\u5236\u53ef\u4ee5\u6709\u6548\u5730\u8282\u7701\u533a\u5757\u94fe\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 \u4ee5\u4e0b\u5177\u4f53\u4ecb\u7ecd PlatONE \u4e2d\u7684\u5171\u8bc6\u7b97\u6cd5\u3002 2. \u5171\u8bc6\u8282\u70b9\u9009\u53d6\u673a\u5236 \u8282\u70b9\u7684\u7c7b\u578b\u548c\u72b6\u6001 \u8282\u70b9\u5206\u4e3a\u5171\u8bc6\u8282\u70b9\uff08validator\uff09\u548c\u89c2\u5bdf\u5458\u8282\u70b9\u4e24\u79cd\u7c7b\u578b\u3002\u5bf9\u4e8e\u5171\u8bc6\u8282\u70b9\u6765\u8bf4\uff0c\u5b58\u5728\u4e24\u79cd\u72b6\u6001\uff1a\u6b63\u5e38\u548c\u9694\u79bb\u3002\u53ea\u6709\u5904\u4e8e\u6b63\u5e38\u72b6\u6001\u7684\u5171\u8bc6\u8282\u70b9\u624d\u53ef\u4ee5\u53c2\u4e0e\u5171\u8bc6\u548c\u6253\u5305\u533a\u5757\u3002 \u5171\u8bc6\u8282\u70b9\u7684\u9009\u53d6\u673a\u5236 \u8282\u70b9\u7ba1\u7406\uff08NodeManager\uff09\u7cfb\u7edf\u5408\u7ea6\u8bbe\u8ba1\u7528\u4e8e\u5b58\u50a8\u548c\u7ba1\u7406\u8282\u70b9\u4fe1\u606f\u3002\u53ef\u4ee5\u901a\u8fc7\u8282\u70b9\u7533\u8bf7\uff08NodeRegister\uff09\u7cfb\u7edf\u5408\u7ea6\u7533\u8bf7\u6ce8\u518c\u5171\u8bc6\u8282\u70b9\uff0c\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u7533\u8bf7\u8282\u70b9\u7684\u7c7b\u578b\u4f1a\u66f4\u65b0\u4e3a\u5171\u8bc6\u8282\u70b9\uff0c\u66f4\u65b0\u540e\u7684\u8282\u70b9\u4fe1\u606f\u5b58\u50a8\u5728\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u4e2d\uff0c\u5e76\u4e14\u53ef\u88ab\u67e5\u8be2\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u6839\u636e\u9700\u8981\u66f4\u65b0\u5171\u8bc6\u8282\u70b9\u7684\u72b6\u6001\uff0c\u6765\u51b3\u5b9a\u5171\u8bc6\u8282\u70b9\u662f\u5426\u53ef\u4ee5\u53c2\u52a0\u5171\u8bc6\u3002 \u5171\u8bc6\u8282\u70b9\u96c6\u5408\u7684\u83b7\u53d6 \u94fe\u4e0a\u6bcf\u6b21\u4ea7\u751f\u65b0\u533a\u5757\u540e\uff0c\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u4e2d\u6700\u65b0\u7684\u8282\u70b9\u4fe1\u606f\u90fd\u4f1a\u88ab\u8bfb\u53d6\uff0c\u5e76\u4e14\u6700\u65b0\u7684\u5171\u8bc6\u8282\u70b9\u96c6\u5408\u4f1a\u88ab\u4fdd\u5b58\u4e0b\u6765\uff0c\u5e76\u88ab\u5171\u8bc6\u5f15\u64ce\u8bfb\u53d6\u548c\u4f7f\u7528\u3002 3. \u5171\u8bc6\u6d41\u7a0b 3.1. \u6b63\u5e38\u6d41\u7a0b 3.1.1. \u5b9a\u4e49 \u4ee5\u4e0b\u662f\u4e00\u4e9b\u91cd\u8981\u672f\u8bed\u6216\u6982\u5ff5\u7684\u5b9a\u4e49\u3002 +2/3 \u8868\u793a\"\u8d85\u8fc7 2/3\". NEW ROUND : \u65b0\u7684round\u4e2d\u4f1a\u786e\u5b9a\u4e00\u4e2a\u65b0\u7684\u533a\u5757\u63d0\u8bae\u8005\uff08\u6bd4\u5982\u91c7\u7528round robin\u7b97\u6cd5\uff09\uff0c\u5728\u65b0\u7684round\u5f00\u59cb\u65f6\uff0c\u5404\u5171\u8bc6\u8282\u70b9\u7b49\u5f85\u63a5\u6536 PRE-PREPARE \u6d88\u606f\u3002 PRE-PREPARED : validator\u8282\u70b9\u63a5\u6536\u5230\u4e86 PRE-PREPARE \u6d88\u606f\uff0c\u540c\u65f6\u5e7f\u64ad PREPARE \u6d88\u606f\u4e4b\u540e\u8fdb\u5165\u8fd9\u79cd\u72b6\u6001\u3002\u4e4b\u540e\uff0cvalidator\u8282\u70b9\u7b49\u5f85\u5e76\u63a5\u6536 +2/3 \u7684 PREPARE \u6216 COMMIT \u6d88\u606f\u3002\uff08\u6ce8\uff1a\u6709\u7684validator\u8282\u70b9\u56e0\u9501\u5b9a\u5728\u63d0\u8bae\u533a\u5757\u4e0a\uff0c\u4f1a\u5728\u6536\u5230 PRE-PREPARE \u6d88\u606f\u540e\u76f4\u63a5\u5e7f\u64ad COMMIT \u6d88\u606f\u3002\u56e0\u6b64\uff0c\u8fd9\u91ccvalidator\u8282\u70b9\u7b49\u5f85\u5e76\u63a5\u6536 PREPARE \u6216 COMMIT \u6d88\u606f\uff09 PREPARED : validator\u8282\u70b9\u63a5\u6536\u5230\u4e86 +2/3 \u7684 PREPARE \u6d88\u606f\uff0c\u540c\u65f6\u5e7f\u64ad COMMIT \u6d88\u606f\u4e4b\u540e\u8fdb\u5165\u8fd9\u79cd\u72b6\u6001\u3002\u4e4b\u540e\uff0cvalidator\u8282\u70b9\u7b49\u5f85\u5e76\u63a5\u6536 +2/3 \u7684 COMMIT \u6d88\u606f\u3002 COMMITTED : validator\u8282\u70b9\u63a5\u6536\u5230\u4e86 +2/3 \u7684 COMMIT \u6d88\u606f\uff0c\u8fdb\u5165\u5230\u8fd9\u79cd\u72b6\u6001\u3002\u6b64\u65f6\uff0c\u53ef\u4ee5\u5c06\u63d0\u8bae\u7684\u533a\u5757\u63d2\u5165\u5230\u533a\u5757\u94fe\u4e0a\u4e86 FINAL COMMITTED : \u65b0\u7684\u533a\u5757\u6210\u529f\u4e0a\u94fe\u540e\uff0cvalidator\u8282\u70b9\u8fdb\u5165\u5230\u8fd9\u79cd\u72b6\u6001\u3002\u6b64\u65f6\uff0c\u8282\u70b9\u51c6\u5907\u8fdb\u5165\u4e0b\u4e00\u4e2around ROUND CHANGE : validator\u8282\u70b9\u7b49\u5f85\u63a5\u6536 +2/3 \u7684\u3001\u9488\u5bf9\u540c\u4e00\u4e2a\u63d0\u8baeround\u7684 ROUND CHANGE \u6d88\u606f 3.1.2. \u9009\u53d6proposer\u7684\u89c4\u5219 Round robin \u7b97\u6cd5\uff08\u76ee\u524d\u91c7\u7528\u7684\uff09 Sticky proposer 3.1.3. \u5171\u8bc6\u6d41\u7a0b\uff08\u4e09\u9636\u6bb5\u534f\u8bae\uff09 \u5171\u8bc6\u6d41\u7a0b\u7531\u4e09\u4e2a\u9636\u6bb5\u7ec4\u6210\uff1a PRE-PREPARE , PREPARE \u548c COMMIT \uff0c\u4e5f\u79f0\u4e3a\u4e09\u9636\u6bb5\u534f\u8bae\u3002 PRE-PREPARE \u9636\u6bb5: \u6bcf\u6b21\u8fdb\u5165\u5230\u4e00\u4e2a\u65b0\u7684round\u65f6\uff0c\u5c31\u4f1a\u5f00\u59cb\u4e09\u9636\u6bb5\u4e2d\u7684\u7b2c\u4e00\u4e2a\u9636\u6bb5\uff0c\u5373 PRE-PREPARE \u9636\u6bb5\u3002\u5728\u8be5\u9636\u6bb5\u4e2d\uff0c Proposer \uff08\u533a\u5757\u63d0\u8bae\u8005\uff09\u8282\u70b9\u751f\u6210\u4e00\u4e2a\u63d0\u8bae\u533a\u5757\uff0c\u5e76\u5e7f\u64ad\u7ed9\u6240\u6709\u7684validator\u8282\u70b9\u3002\u63a5\u7740Proposer\u8282\u70b9\u8fdb\u5165\u5230PRE-PREPARED\u72b6\u6001\u3002\u5176\u4ed6validator \u8282\u70b9\u63a5\u6536\u5230\u6709\u6548\u7684 PRE-PREPARE \u6d88\u606f\u540e\u8fdb\u5165\u5230 PRE-PREPARED \u72b6\u6001\u3002 PREPARE \u9636\u6bb5: \u5728\u8fd9\u4e00\u9636\u6bb5\uff0cvalidator \u8282\u70b9\u5e7f\u64ad PREPARE \u6d88\u606f\u7ed9\u5176\u4ed6validator \u8282\u70b9\uff0c\u5e76\u7b49\u5f85\u63a5\u6536 +2/3 \u7684\u6709\u6548\u7684 PREPARE \u6d88\u606f\u4ece\u800c\u8fdb\u5165\u5230 PREPARED \u72b6\u6001\u3002 COMMIT \u9636\u6bb5: \u5728\u8fd9\u4e00\u9636\u6bb5\uff0cvalidator \u8282\u70b9\u5e7f\u64ad COMMIT \u6d88\u606f\u7ed9\u5176\u4ed6validator \u8282\u70b9\uff0c\u5e76\u7b49\u5f85\u63a5\u6536 +2/3 \u7684\u6709\u6548\u7684 COMMIT \u6d88\u606f\u4ece\u800c\u8fdb\u5165\u5230 COMMITTED \u72b6\u6001\u3002 \u4ee5\u4e0a\u4e09\u9636\u6bb5\u5b8c\u6210\u540e\uff0c\u6574\u4e2a\u5171\u8bc6\u6d41\u7a0b\u5c31\u6210\u529f\u5b8c\u6210\u4e86\u3002 3.1.4. \u72b6\u6001\u8fc1\u79fb: \u4e0b\u56fe\u63cf\u8ff0\u4e86PlatONE\u7684\u5171\u8bc6\u6d41\u7a0b\u7684\u72b6\u6001\u8fc1\u79fb\u8fc7\u7a0b\u3002 NEW ROUND -> PRE-PREPARED : (\u5bf9\u5e94\u4e8e 2.1.3 \u8282\u4e2d\u7684 PRE-PREPARE \u9636\u6bb5) Proposer \u4ecetxpool\u4e2d\u6536\u96c6\u4ea4\u6613\u3002 Proposer \u751f\u6210\u4e00\u4e2a\u63d0\u8bae\u533a\u5757\u5e76\u5e7f\u64ad\u7ed9\u5176\u4ed6validator\u8282\u70b9\uff0c\u63a5\u7740\u5c31\u8fdb\u5165\u5230 PRE-PREPARED \u72b6\u6001\u3002 \u6bcf\u4e00\u4e2a validator \u8282\u70b9\u63a5\u6536\u5230\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684 PRE-PREPARE \u6d88\u606f\u540e\uff0c\u8fdb\u5165\u5230 PRE-PREPARED \u72b6\u6001\uff1a \u63d0\u8bae\u533a\u5757\u6765\u81ea\u4e8e\u6709\u6548\u7684proposer\u8282\u70b9\u3002 \u533a\u5757\u5934\u6709\u6548 \u63d0\u8bae\u533a\u5757\u7684sequence\uff08\u9ad8\u5ea6\uff09\u548cround\u548c validator \u8282\u70b9\u7684\u5f53\u524d\u72b6\u6001\u4e00\u81f4\u3002 Validator \u8282\u70b9\u5e7f\u64ad PREPARE \u6d88\u606f\u7ed9\u5176\u4ed6validator\u8282\u70b9\u3002 PRE-PREPARED -> PREPARED : (\u5bf9\u5e94\u4e8e 2.1.3 \u8282\u4e2d\u7684 PREPARE \u9636\u6bb5) Validator \u63a5\u6536\u5230 +2/3 \u7684\u6709\u6548\u7684 PREPARE \u6d88\u606f\uff0c\u4ece\u800c\u8fdb\u5165\u5230 PREPARED \u72b6\u6001\u3002\u6709\u6548\u7684\u6d88\u606f\u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a sequence \u548c round \u76f8\u4e00\u81f4 \u533a\u5757\u54c8\u5e0c\u4e00\u81f4 \u6d88\u606f\u6765\u81ea\u4e8e\u5df2\u77e5\u7684validator\u8282\u70b9 Validator \u8282\u70b9\u5728\u8fdb\u5165\u5230 PREPARED \u72b6\u6001\u540e\uff0c\u5e7f\u64ad COMMIT \u6d88\u606f\u3002 PREPARED -> COMMITTED : (\u5bf9\u5e94\u4e8e 2.1.3 \u8282\u4e2d\u7684 COMMIT \u9636\u6bb5) Validator \u63a5\u6536\u5230 +2/3 \u7684\u6709\u6548\u7684 COMMIT \u6d88\u606f\uff0c\u4ece\u800c\u8fdb\u5165\u5230 COMMITTED \u72b6\u6001\u3002\u6709\u6548\u7684\u6d88\u606f\u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a sequence \u548c round \u76f8\u4e00\u81f4 \u533a\u5757\u54c8\u5e0c\u4e00\u81f4 \u6d88\u606f\u6765\u81ea\u4e8e\u5df2\u77e5\u7684validator\u8282\u70b9 COMMITTED -> FINAL COMMITTED : Validator \u8282\u70b9\u5c06 +2/3 \u7684commitment\u7b7e\u540d\uff08committed seal\uff09\u6dfb\u52a0\u5230\u533a\u5757\u5934\u7684 extraData \u5b57\u6bb5\u4e2d\uff0c\u5e76\u5c1d\u8bd5\u5c06\u533a\u5757\u63d2\u5165\u5230\u533a\u5757\u94fe\u4e2d\u3002 \u533a\u5757\u4e0a\u94fe\u6210\u529f\u540e\uff0c Validator \u8282\u70b9\u8fdb\u5165\u5230 FINAL COMMITTED \u72b6\u6001\u3002 FINAL COMMITTED -> NEW ROUND : \u5404 Validator \u8282\u70b9\u9009\u53d6\u51fa\u4e00\u4e2a\u65b0\u7684 proposer \u8282\u70b9\uff0c\u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u7684round\u5b9a\u65f6\u5668\u3002 3.2. Round change \u673a\u5236 \u4ee5\u4e0b\u4e09\u79cd\u6761\u4ef6\u90fd\u4f1a\u89e6\u53d1 ROUND CHANGE : Round change\u5b9a\u65f6\u5668\u8d85\u65f6\u89e6\u53d1 \u65e0\u6548\u7684 PREPREPARE \u6d88\u606f \u533a\u5757\u4e0a\u94fe\u5931\u8d25 3.2.1. round change \u7684\u6d41\u7a0b \u5f53\u4e00\u4e2avalidator\u8282\u70b9\u68c0\u6d4b\u5230\u4ee5\u4e0around change\u89e6\u53d1\u6761\u4ef6\u4e4b\u4e00\u6ee1\u8db3\u65f6\uff0c\u5c06\u4f1a\u5e7f\u64ad ROUND CHANGE \u6d88\u606f\uff0c\u5176\u4e2d\u5305\u542b\u8981\u53d8\u66f4\u5230\u7684\u76ee\u6807round\u6570\u503c\uff0c\u540c\u65f6\u7b49\u5f85\u63a5\u6536\u6765\u81ea\u5176\u4ed6validator\u8282\u70b9\u7684 ROUND CHANGE \u6d88\u606f\u3002\u76ee\u6807round\u7684\u6570\u503c\u57fa\u4e8e\u4ee5\u4e0b\u6761\u4ef6\u9009\u53d6\uff1a \u5982\u679cvalidator\u8282\u70b9\u5df2\u7ecf\u4ece\u5176\u4ed6peer\u8282\u70b9\u63a5\u6536\u5230\u4e86 ROUND CHANGE \u6d88\u606f\uff0c\u5219\u4ece\u6240\u6709\u6570\u91cf\u8fbe\u5230 F + 1 \u7684 ROUND CHANGE \u6d88\u606f\u4e2d\u5305\u542b\u7684round\u6570\u503c\u4e2d\u9009\u53d6\u51fa\u6700\u5927\u7684\u90a3\u4e2a\u6570\u503c \u5426\u5219\uff0c\u5c06\u76ee\u6807round\u7684\u6570\u503c\u8bbe\u7f6e\u4e3a\uff1a\u5f53\u524d\u7684round\u6570\u503c+1 \u4efb\u4f55\u65f6\u5019\uff0c\u5982\u679c\u4e00\u4e2avalidator\u8282\u70b9\u63a5\u6536\u5230\u4e86 F + 1 \u6761\u542b\u6709\u76f8\u540c\u7684\u76ee\u6807round\u6570\u503c\u7684 ROUND CHANGE \u6d88\u606f\uff0c\u5c31\u4f1a\u5c06\u8be5round\u6570\u503c\u548c\u5176\u81ea\u5df1\u7684\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u63a5\u6536\u5230\u7684\u6570\u503c\u66f4\u5927\uff0cvalidator\u8282\u70b9\u5c31\u518d\u6b21\u5e7f\u64ad ROUND CHANGE \u6d88\u606f\uff0c\u800c\u6d88\u606f\u4e2d\u7684round\u6570\u503c\u548c\u63a5\u6536\u5230\u7684\u76f8\u540c\u3002 \u4e00\u65e6validator\u8282\u70b9\u63a5\u6536\u5230\u4e86 2F + 1 \u6761\u5e26\u6709\u76f8\u540cround\u6570\u503c\u7684 ROUND CHANGE \u6d88\u606f\uff0c\u5219\u7ed3\u675fround change\u5faa\u73af\uff0c\u786e\u5b9a\u51fa\u65b0\u7684 proposer \u8282\u70b9\uff0c\u4e4b\u540e\u8fdb\u5165\u5230 NEW ROUND \u72b6\u6001\u3002 \u89e6\u53d1validator\u8282\u70b9\u9000\u51faround change\u5faa\u73af\u7684\u53e6\u5916\u4e00\u4e2a\u6761\u4ef6\u662f\u5176\u901a\u8fc7p2p\u540c\u6b65\u673a\u5236\u540c\u6b65\u5230\u9a8c\u8bc1\u540e\u7684\u533a\u5757\u3002 3.3. \u533a\u5757\u9501\u5b9a\u673a\u5236 \u9501\u5b9a\u533a\u5757\u7684\u89e6\u53d1\u6761\u4ef6 \u8282\u70b9 \u9501\u5b9a \u5728\u533a\u5757 B \u3001 round number R \u7684\u542b\u4e49\u662f\u6307\uff0c\u5f53\u524d\u8282\u70b9 \u53ea\u80fd \u5bf9\u533a\u5757 B \u7684\u4fe1\u606f\u6295 commit \u7968 \u3002\u5f53\u4e00\u4e2a\u8282\u70b9\u6536\u5230\u4e86 +2/3 \u4e2a\u5bf9\u533a\u5757 B \u7684 PREPARE \u6295\u7968\u540e\uff0c\u8fdb\u5165 PREPARED \u72b6\u6001\u3002\u6b64\u65f6\uff0c\u8282\u70b9\u88ab\u9501\u5b9a\uff0c\u7b49\u5f85\u63a5\u6536\u5176\u4ed6\u8282\u70b9\u7684 commit \u6295\u7968\u4fe1\u606f\uff0c\u9501\u5b9a\u7684round\u5373\u5f53\u524dround\uff1b \u9501\u5b9a\u533a\u5757\u7684\u673a\u5236 \u9664\u4e86\u5171\u8bc6\u8d77\u59cb\u9636\u6bb5\uff0c\u5f53\u6536\u5230\u66f4\u9ad8\u533a\u5757\u7684\u540c\u6b65\u6570\u636e\u65f6\uff0c\u6216\u5f53\u524d\u9ad8\u5ea6\u6210\u529f\u4ea7\u751f\u533a\u5757\u5e76\u8fbe\u6210\u5171\u8bc6\u65f6\uff0c\u9501\u5b9a\u88ab\u72b6\u6001\u91cd\u7f6e\u4e3a\u975e\u9501\u5b9a\u72b6\u6001\uff0c\u5e76\u5f00\u59cb\u65b0\u4e00\u8f6e\u5bf9\u66f4\u9ad8\u533a\u5757\u5171\u8bc6\u3002\u5982\u672a\u80fd\u5728\u9501\u5b9a\u671f\u95f4\u6536\u5230 +2/3 \u4e2a\u6307\u5b9around\u548c\u533a\u5757\u7684 commit \u6295\u7968\uff0c\u5219\u89e6\u53d1 ROUND CHANGE \u3002\u5e76\u4e14\uff0c\u5728\u7279\u5b9a\u573a\u666f\u4e0b\uff0c\u539f\u6709\u9501\u5b9a\u89e3\u9501\u673a\u5236\u8fd8\u4f1a\u51fa\u73b0\u6b7b\u9501\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5728\u4ee3\u7801\u5c42\u9762\u4e5f\u4f18\u5316\u4e86\u76f8\u5173\u7684\u89e3\u9501\u5b9e\u73b0\u3002\u5177\u4f53\u53ef\u53c2\u8003\u300c2. \u5bf9Istanbul\u9501\u5b9a\u89e3\u9501\u673a\u5236\u7684\u4f18\u5316\u300d\u3002 3.4. Consensus proof \u76ee\u524d\u7684\u5b58\u50a8\u673a\u5236 \u533a\u5757\u4e0a\u94fe\u524d\uff0c\u6bcf\u4e2avalidator\u8282\u70b9\u9700\u8981\u6536\u96c6 2F + 1 \u4e2acommitted seal\u4ee5\u6784\u6210\u4e00\u4e2aconsensus proof\uff08\u5171\u8bc6\u8bc1\u660e\uff09\u3002\u4e00\u65e6validator\u8282\u70b9\u63a5\u6536\u5230\u8db3\u591f\u7684committed seal\uff0c\u5c31\u4f1a\u5c06\u5176\u5b58\u50a8\u4e8e\u533a\u5757\u5934\u7684 extraData \u5b57\u6bb5\u4e2dIstabulExtra\u7ed3\u6784\u4e2d CommittedSeal \u5b57\u6bb5\u4e2d\uff0c\u5e76\u91cd\u65b0\u8ba1\u7b97 extraData \u5b57\u6bb5\uff0c\u7136\u540e\u5c06\u533a\u5757\u63d2\u5165\u5230\u533a\u5757\u94fe\u4e2d\u3002 Committed seal\u8ba1\u7b97\u8fc7\u7a0b\u5982\u4e0b\uff1a Committed seal\u7684\u8ba1\u7b97: \u6bcf\u4e2avalidator\u8282\u70b9\u4f7f\u7528\u5176\u79c1\u94a5\u5bf9\u533a\u5757\u54c8\u5e0c\u7ea7\u8054\u4e0acommit\u6d88\u606f\u4ee3\u7801 COMMIT_MSG_CODE \u7684\u7ed3\u679c\u8fdb\u884c\u7b7e\u540d\uff0c\u5f97\u5230\u7b7e\u540d\u5373\u4e3aCommitted seal\uff1a Committed seal : SignECDSA(Keccak256(CONCAT(Hash, COMMIT_MSG_CODE)), PrivateKey) CONCAT(Hash, COMMIT_MSG_CODE) : \u5c06\u533a\u5757\u54c8\u5e0c\u548ccommit\u6d88\u606f\u4ee3\u7801 COMMIT_MSG_CODE \u8fdb\u884c\u7ea7\u8054 PrivateKey : \u8fdb\u884c\u7b7e\u540d\u7684validator\u8282\u70b9\u7684\u79c1\u94a5 \u4e0a\u9762\u63d0\u5230\u7684 extraData \u662f\u533a\u5757\u5934\u7684\u4e00\u4e2a\u5b57\u6bb5\uff0c\u5176\u6570\u636e\u7ec4\u6210\u4e3a\uff1aEXTRA_VANITY | ISTANBUL_EXTRA\uff0c\u5176\u4e2d|\u7528\u4ee5\u8868\u793a\u5206\u9694EXTRA_VANITY\u548cISTANBUL_EXTRA\u7684\u56fa\u5b9a\u7684\u7d22\u5f15\uff08\u4e0d\u662f\u4e00\u4e2a\u5b9e\u9645\u7684\u5206\u9694\u5b57\u7b26\uff09\u3002 IstabulExtra\u7ed3\u6784\u7684\u7c7b\u578b\u5b9a\u4e49\u5982\u4e0b\uff1a type IstanbulExtra struct { Validators []common.Address //Validator addresses Seal []byte //Proposer seal 65 bytes CommittedSeal [][]byte //Committed seal, 65 * len(Validators) bytes } \u5176\u4e2d\uff0c\u5404\u5b57\u6bb5\u7684\u542b\u4e49\u5982\u4e0b\uff1a + Validators\uff1a\u53c2\u4e0e\u5171\u8bc6\u7684\u5404validator\u8282\u70b9\u7684\u5217\u8868 + Seal\uff1aProposer \u8282\u70b9\u5bf9\u533a\u5757\u7684\u7b7e\u540d\uff0c\u957f\u5ea6\u4e3a65\u5b57\u8282 + CommittedSeal\uff1a\u7528\u4e8e\u5b58\u50a8validator\u8282\u70b9\u6536\u96c6\u5230\u7684committed seal\u5217\u8868","title":"IBFT"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#ibft","text":"","title":"IBFT \u5171\u8bc6\u7b97\u6cd5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#1","text":"PlatONE \u4e2d\u7684\u5171\u8bc6\u4e3a\u9ad8\u5ea6\u4f18\u5316\u7684BFT\u7c7b\u5171\u8bc6\u7b97\u6cd5\uff0c\u5176\u5bb9\u9519\u7387\u4e3a1/3\uff0c\u5728\u4fdd\u7559\u5373\u65f6\u786e\u8ba4\uff08instant finality\uff09\u7684\u5173\u952e\u7279\u6027\u7684\u540c\u65f6,\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u53bb\u4e2d\u5fc3\u5316\u7684\u7a0b\u5ea6\u3002\u5171\u8bc6\u53ef\u4ee5\u4fdd\u8bc1\u4e0a\u94fe\u7684\u533a\u5757\u662f\u786e\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u94fe\u4e0d\u4f1a\u51fa\u73b0\u5206\u53c9\uff0c\u540c\u65f6\u6bcf\u4e00\u4e2a\u6709\u6548\u7684\u533a\u5757\u90fd\u4f1a\u63d2\u5165\u5230\u94fe\u4e0a\u3002 PlatONE \u7684\u5171\u8bc6\u652f\u6301\u8d85\u8fc7100\u4e2a\u5171\u8bc6\u8282\u70b9\u3002\u76f8\u5bf9\u4e8e\u5176\u4ed6\u4e00\u4e9b\u5e38\u89c1\u7684BFT\u5171\u8bc6\uff0cPlatONE \u7684\u5171\u8bc6\u7684\u6027\u80fd\u6709\u663e\u8457\u7684\u63d0\u5347\u3002\u572810\u4e2a\u5171\u8bc6\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0cTPS \u63a5\u8fd1 1000\u3002 PlatONE \u7684\u5171\u8bc6\u8fd0\u884c\u7684\u76f8\u5173\u53c2\u6570\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u4e14 PlatONE \u7684\u5171\u8bc6\u4e2d\u7684\u5171\u8bc6\u8282\u70b9\u96c6\u5408\u53ef\u4ee5\u7075\u6d3b\u5730\u8fdb\u884c\u66f4\u65b0\u3002\u8fd1\u671f\u8ba1\u5212\u652f\u6301\u5171\u8bc6\u7684\u63d2\u4ef6\u5316\uff0c\u4ee5\u53ca\u5171\u8bc6\u7684\u53ef\u5ba1\u8ba1\u6027\u7b49\u3002 PlatONE \u5171\u8bc6\u662f\u5728 round \u4e0a\u8fdb\u884c\u7684\u3002\u5728\u7279\u5b9a\u7684 round \u4e0a\uff0c\u901a\u8fc7\u9884\u5148\u8bbe\u7f6e\u7684\u7b56\u7565\u9009\u53d6\u4e00\u4e2a\u51fa\u5757\u8005\u8282\u70b9\u3002\u51fa\u5757\u8005\u8282\u70b9\u7684\u9009\u53d6\u7b56\u7565\u76ee\u524d\u652f\u6301\u4e24\u79cd\uff1around robin \u548c sticky proposer\u3002 \u51fa\u5757\u8005\u8282\u70b9\u63d0\u8bae\u533a\u5757\u540e\uff0c\u5404\u5171\u8bc6\u8282\u70b9\u8fdb\u884c\u5171\u8bc6\u3002\u5171\u8bc6\u5206\u4e09\u9636\u6bb5\uff0c\u5176\u4e2d\u540e\u4e24\u4e2a\u9636\u6bb5\u4e3a\u6295\u7968\u9636\u6bb5\uff0c\u7528\u4ee5\u4fdd\u8bc1 Safety\u3002PlatONE \u5171\u8bc6\u4f7f\u7528 round change \u673a\u5236\u7ed3\u5408\u9501\u5b9a\u548c\u89e3\u9501\u673a\u5236\u6765\u4fdd\u8bc1\u5171\u8bc6\u7684\u7684 liveness \u3002\u901a\u8fc7\u4f18\u5316\u89e3\u9501\u673a\u5236\uff0c\u89e3\u51b3\u4e86\u4e1a\u754c\u591a\u4e2a\u77e5\u540d\u9879\u76ee\u5185\u5b58\u5728\u7684\u5171\u8bc6\u6b7b\u9501\u95ee\u9898\u3002 PlatONE \u5171\u8bc6\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u94fe\u4e0a\u7684\u533a\u5757\u751f\u6210\u5171\u8bc6\u8bc1\u660e\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u8be5\u533a\u5757\u7684\u5404\u5171\u8bc6\u8282\u70b9\u7684\u6709\u6548\u7b7e\u540d\uff0c\u56e0\u800c\u533a\u5757\u53ef\u4ee5\u8fdb\u884c\u81ea\u9a8c\u8bc1\uff0c\u540c\u65f6\u4e5f\u80fd\u652f\u6301\u8f7b\u8282\u70b9\u3002 \u533a\u5757\u4e2d\u5982\u679c\u4e0d\u5305\u542b\u4ea4\u6613\uff0c\u5219\u79f0\u4e3a\u7a7a\u533a\u5757\u3002PlatONE \u76ee\u524d\u652f\u6301\u4e0d\u51fa\u7a7a\u533a\u5757\uff0c\u4e5f\u5c31\u662f\u4e0a\u94fe\u7684\u533a\u5757\u4e2d\u90fd\u542b\u6709\u4ea4\u6613\u3002\u4e0d\u51fa\u7a7a\u533a\u5757\u7684\u673a\u5236\u53ef\u4ee5\u6709\u6548\u5730\u8282\u7701\u533a\u5757\u94fe\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 \u4ee5\u4e0b\u5177\u4f53\u4ecb\u7ecd PlatONE \u4e2d\u7684\u5171\u8bc6\u7b97\u6cd5\u3002","title":"1. \u6982\u8ff0"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#2","text":"\u8282\u70b9\u7684\u7c7b\u578b\u548c\u72b6\u6001 \u8282\u70b9\u5206\u4e3a\u5171\u8bc6\u8282\u70b9\uff08validator\uff09\u548c\u89c2\u5bdf\u5458\u8282\u70b9\u4e24\u79cd\u7c7b\u578b\u3002\u5bf9\u4e8e\u5171\u8bc6\u8282\u70b9\u6765\u8bf4\uff0c\u5b58\u5728\u4e24\u79cd\u72b6\u6001\uff1a\u6b63\u5e38\u548c\u9694\u79bb\u3002\u53ea\u6709\u5904\u4e8e\u6b63\u5e38\u72b6\u6001\u7684\u5171\u8bc6\u8282\u70b9\u624d\u53ef\u4ee5\u53c2\u4e0e\u5171\u8bc6\u548c\u6253\u5305\u533a\u5757\u3002 \u5171\u8bc6\u8282\u70b9\u7684\u9009\u53d6\u673a\u5236 \u8282\u70b9\u7ba1\u7406\uff08NodeManager\uff09\u7cfb\u7edf\u5408\u7ea6\u8bbe\u8ba1\u7528\u4e8e\u5b58\u50a8\u548c\u7ba1\u7406\u8282\u70b9\u4fe1\u606f\u3002\u53ef\u4ee5\u901a\u8fc7\u8282\u70b9\u7533\u8bf7\uff08NodeRegister\uff09\u7cfb\u7edf\u5408\u7ea6\u7533\u8bf7\u6ce8\u518c\u5171\u8bc6\u8282\u70b9\uff0c\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u7533\u8bf7\u8282\u70b9\u7684\u7c7b\u578b\u4f1a\u66f4\u65b0\u4e3a\u5171\u8bc6\u8282\u70b9\uff0c\u66f4\u65b0\u540e\u7684\u8282\u70b9\u4fe1\u606f\u5b58\u50a8\u5728\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u4e2d\uff0c\u5e76\u4e14\u53ef\u88ab\u67e5\u8be2\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u6839\u636e\u9700\u8981\u66f4\u65b0\u5171\u8bc6\u8282\u70b9\u7684\u72b6\u6001\uff0c\u6765\u51b3\u5b9a\u5171\u8bc6\u8282\u70b9\u662f\u5426\u53ef\u4ee5\u53c2\u52a0\u5171\u8bc6\u3002 \u5171\u8bc6\u8282\u70b9\u96c6\u5408\u7684\u83b7\u53d6 \u94fe\u4e0a\u6bcf\u6b21\u4ea7\u751f\u65b0\u533a\u5757\u540e\uff0c\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u4e2d\u6700\u65b0\u7684\u8282\u70b9\u4fe1\u606f\u90fd\u4f1a\u88ab\u8bfb\u53d6\uff0c\u5e76\u4e14\u6700\u65b0\u7684\u5171\u8bc6\u8282\u70b9\u96c6\u5408\u4f1a\u88ab\u4fdd\u5b58\u4e0b\u6765\uff0c\u5e76\u88ab\u5171\u8bc6\u5f15\u64ce\u8bfb\u53d6\u548c\u4f7f\u7528\u3002","title":"2. \u5171\u8bc6\u8282\u70b9\u9009\u53d6\u673a\u5236"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#3","text":"","title":"3. \u5171\u8bc6\u6d41\u7a0b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#31","text":"","title":"3.1. \u6b63\u5e38\u6d41\u7a0b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#311","text":"\u4ee5\u4e0b\u662f\u4e00\u4e9b\u91cd\u8981\u672f\u8bed\u6216\u6982\u5ff5\u7684\u5b9a\u4e49\u3002 +2/3 \u8868\u793a\"\u8d85\u8fc7 2/3\". NEW ROUND : \u65b0\u7684round\u4e2d\u4f1a\u786e\u5b9a\u4e00\u4e2a\u65b0\u7684\u533a\u5757\u63d0\u8bae\u8005\uff08\u6bd4\u5982\u91c7\u7528round robin\u7b97\u6cd5\uff09\uff0c\u5728\u65b0\u7684round\u5f00\u59cb\u65f6\uff0c\u5404\u5171\u8bc6\u8282\u70b9\u7b49\u5f85\u63a5\u6536 PRE-PREPARE \u6d88\u606f\u3002 PRE-PREPARED : validator\u8282\u70b9\u63a5\u6536\u5230\u4e86 PRE-PREPARE \u6d88\u606f\uff0c\u540c\u65f6\u5e7f\u64ad PREPARE \u6d88\u606f\u4e4b\u540e\u8fdb\u5165\u8fd9\u79cd\u72b6\u6001\u3002\u4e4b\u540e\uff0cvalidator\u8282\u70b9\u7b49\u5f85\u5e76\u63a5\u6536 +2/3 \u7684 PREPARE \u6216 COMMIT \u6d88\u606f\u3002\uff08\u6ce8\uff1a\u6709\u7684validator\u8282\u70b9\u56e0\u9501\u5b9a\u5728\u63d0\u8bae\u533a\u5757\u4e0a\uff0c\u4f1a\u5728\u6536\u5230 PRE-PREPARE \u6d88\u606f\u540e\u76f4\u63a5\u5e7f\u64ad COMMIT \u6d88\u606f\u3002\u56e0\u6b64\uff0c\u8fd9\u91ccvalidator\u8282\u70b9\u7b49\u5f85\u5e76\u63a5\u6536 PREPARE \u6216 COMMIT \u6d88\u606f\uff09 PREPARED : validator\u8282\u70b9\u63a5\u6536\u5230\u4e86 +2/3 \u7684 PREPARE \u6d88\u606f\uff0c\u540c\u65f6\u5e7f\u64ad COMMIT \u6d88\u606f\u4e4b\u540e\u8fdb\u5165\u8fd9\u79cd\u72b6\u6001\u3002\u4e4b\u540e\uff0cvalidator\u8282\u70b9\u7b49\u5f85\u5e76\u63a5\u6536 +2/3 \u7684 COMMIT \u6d88\u606f\u3002 COMMITTED : validator\u8282\u70b9\u63a5\u6536\u5230\u4e86 +2/3 \u7684 COMMIT \u6d88\u606f\uff0c\u8fdb\u5165\u5230\u8fd9\u79cd\u72b6\u6001\u3002\u6b64\u65f6\uff0c\u53ef\u4ee5\u5c06\u63d0\u8bae\u7684\u533a\u5757\u63d2\u5165\u5230\u533a\u5757\u94fe\u4e0a\u4e86 FINAL COMMITTED : \u65b0\u7684\u533a\u5757\u6210\u529f\u4e0a\u94fe\u540e\uff0cvalidator\u8282\u70b9\u8fdb\u5165\u5230\u8fd9\u79cd\u72b6\u6001\u3002\u6b64\u65f6\uff0c\u8282\u70b9\u51c6\u5907\u8fdb\u5165\u4e0b\u4e00\u4e2around ROUND CHANGE : validator\u8282\u70b9\u7b49\u5f85\u63a5\u6536 +2/3 \u7684\u3001\u9488\u5bf9\u540c\u4e00\u4e2a\u63d0\u8baeround\u7684 ROUND CHANGE \u6d88\u606f","title":"3.1.1. \u5b9a\u4e49"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#312-proposer","text":"Round robin \u7b97\u6cd5\uff08\u76ee\u524d\u91c7\u7528\u7684\uff09 Sticky proposer","title":"3.1.2. \u9009\u53d6proposer\u7684\u89c4\u5219"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#313","text":"\u5171\u8bc6\u6d41\u7a0b\u7531\u4e09\u4e2a\u9636\u6bb5\u7ec4\u6210\uff1a PRE-PREPARE , PREPARE \u548c COMMIT \uff0c\u4e5f\u79f0\u4e3a\u4e09\u9636\u6bb5\u534f\u8bae\u3002 PRE-PREPARE \u9636\u6bb5: \u6bcf\u6b21\u8fdb\u5165\u5230\u4e00\u4e2a\u65b0\u7684round\u65f6\uff0c\u5c31\u4f1a\u5f00\u59cb\u4e09\u9636\u6bb5\u4e2d\u7684\u7b2c\u4e00\u4e2a\u9636\u6bb5\uff0c\u5373 PRE-PREPARE \u9636\u6bb5\u3002\u5728\u8be5\u9636\u6bb5\u4e2d\uff0c Proposer \uff08\u533a\u5757\u63d0\u8bae\u8005\uff09\u8282\u70b9\u751f\u6210\u4e00\u4e2a\u63d0\u8bae\u533a\u5757\uff0c\u5e76\u5e7f\u64ad\u7ed9\u6240\u6709\u7684validator\u8282\u70b9\u3002\u63a5\u7740Proposer\u8282\u70b9\u8fdb\u5165\u5230PRE-PREPARED\u72b6\u6001\u3002\u5176\u4ed6validator \u8282\u70b9\u63a5\u6536\u5230\u6709\u6548\u7684 PRE-PREPARE \u6d88\u606f\u540e\u8fdb\u5165\u5230 PRE-PREPARED \u72b6\u6001\u3002 PREPARE \u9636\u6bb5: \u5728\u8fd9\u4e00\u9636\u6bb5\uff0cvalidator \u8282\u70b9\u5e7f\u64ad PREPARE \u6d88\u606f\u7ed9\u5176\u4ed6validator \u8282\u70b9\uff0c\u5e76\u7b49\u5f85\u63a5\u6536 +2/3 \u7684\u6709\u6548\u7684 PREPARE \u6d88\u606f\u4ece\u800c\u8fdb\u5165\u5230 PREPARED \u72b6\u6001\u3002 COMMIT \u9636\u6bb5: \u5728\u8fd9\u4e00\u9636\u6bb5\uff0cvalidator \u8282\u70b9\u5e7f\u64ad COMMIT \u6d88\u606f\u7ed9\u5176\u4ed6validator \u8282\u70b9\uff0c\u5e76\u7b49\u5f85\u63a5\u6536 +2/3 \u7684\u6709\u6548\u7684 COMMIT \u6d88\u606f\u4ece\u800c\u8fdb\u5165\u5230 COMMITTED \u72b6\u6001\u3002 \u4ee5\u4e0a\u4e09\u9636\u6bb5\u5b8c\u6210\u540e\uff0c\u6574\u4e2a\u5171\u8bc6\u6d41\u7a0b\u5c31\u6210\u529f\u5b8c\u6210\u4e86\u3002","title":"3.1.3. \u5171\u8bc6\u6d41\u7a0b\uff08\u4e09\u9636\u6bb5\u534f\u8bae\uff09"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#314","text":"\u4e0b\u56fe\u63cf\u8ff0\u4e86PlatONE\u7684\u5171\u8bc6\u6d41\u7a0b\u7684\u72b6\u6001\u8fc1\u79fb\u8fc7\u7a0b\u3002 NEW ROUND -> PRE-PREPARED : (\u5bf9\u5e94\u4e8e 2.1.3 \u8282\u4e2d\u7684 PRE-PREPARE \u9636\u6bb5) Proposer \u4ecetxpool\u4e2d\u6536\u96c6\u4ea4\u6613\u3002 Proposer \u751f\u6210\u4e00\u4e2a\u63d0\u8bae\u533a\u5757\u5e76\u5e7f\u64ad\u7ed9\u5176\u4ed6validator\u8282\u70b9\uff0c\u63a5\u7740\u5c31\u8fdb\u5165\u5230 PRE-PREPARED \u72b6\u6001\u3002 \u6bcf\u4e00\u4e2a validator \u8282\u70b9\u63a5\u6536\u5230\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684 PRE-PREPARE \u6d88\u606f\u540e\uff0c\u8fdb\u5165\u5230 PRE-PREPARED \u72b6\u6001\uff1a \u63d0\u8bae\u533a\u5757\u6765\u81ea\u4e8e\u6709\u6548\u7684proposer\u8282\u70b9\u3002 \u533a\u5757\u5934\u6709\u6548 \u63d0\u8bae\u533a\u5757\u7684sequence\uff08\u9ad8\u5ea6\uff09\u548cround\u548c validator \u8282\u70b9\u7684\u5f53\u524d\u72b6\u6001\u4e00\u81f4\u3002 Validator \u8282\u70b9\u5e7f\u64ad PREPARE \u6d88\u606f\u7ed9\u5176\u4ed6validator\u8282\u70b9\u3002 PRE-PREPARED -> PREPARED : (\u5bf9\u5e94\u4e8e 2.1.3 \u8282\u4e2d\u7684 PREPARE \u9636\u6bb5) Validator \u63a5\u6536\u5230 +2/3 \u7684\u6709\u6548\u7684 PREPARE \u6d88\u606f\uff0c\u4ece\u800c\u8fdb\u5165\u5230 PREPARED \u72b6\u6001\u3002\u6709\u6548\u7684\u6d88\u606f\u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a sequence \u548c round \u76f8\u4e00\u81f4 \u533a\u5757\u54c8\u5e0c\u4e00\u81f4 \u6d88\u606f\u6765\u81ea\u4e8e\u5df2\u77e5\u7684validator\u8282\u70b9 Validator \u8282\u70b9\u5728\u8fdb\u5165\u5230 PREPARED \u72b6\u6001\u540e\uff0c\u5e7f\u64ad COMMIT \u6d88\u606f\u3002 PREPARED -> COMMITTED : (\u5bf9\u5e94\u4e8e 2.1.3 \u8282\u4e2d\u7684 COMMIT \u9636\u6bb5) Validator \u63a5\u6536\u5230 +2/3 \u7684\u6709\u6548\u7684 COMMIT \u6d88\u606f\uff0c\u4ece\u800c\u8fdb\u5165\u5230 COMMITTED \u72b6\u6001\u3002\u6709\u6548\u7684\u6d88\u606f\u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a sequence \u548c round \u76f8\u4e00\u81f4 \u533a\u5757\u54c8\u5e0c\u4e00\u81f4 \u6d88\u606f\u6765\u81ea\u4e8e\u5df2\u77e5\u7684validator\u8282\u70b9 COMMITTED -> FINAL COMMITTED : Validator \u8282\u70b9\u5c06 +2/3 \u7684commitment\u7b7e\u540d\uff08committed seal\uff09\u6dfb\u52a0\u5230\u533a\u5757\u5934\u7684 extraData \u5b57\u6bb5\u4e2d\uff0c\u5e76\u5c1d\u8bd5\u5c06\u533a\u5757\u63d2\u5165\u5230\u533a\u5757\u94fe\u4e2d\u3002 \u533a\u5757\u4e0a\u94fe\u6210\u529f\u540e\uff0c Validator \u8282\u70b9\u8fdb\u5165\u5230 FINAL COMMITTED \u72b6\u6001\u3002 FINAL COMMITTED -> NEW ROUND : \u5404 Validator \u8282\u70b9\u9009\u53d6\u51fa\u4e00\u4e2a\u65b0\u7684 proposer \u8282\u70b9\uff0c\u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u7684round\u5b9a\u65f6\u5668\u3002","title":"3.1.4. \u72b6\u6001\u8fc1\u79fb:"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#32-round-change","text":"\u4ee5\u4e0b\u4e09\u79cd\u6761\u4ef6\u90fd\u4f1a\u89e6\u53d1 ROUND CHANGE : Round change\u5b9a\u65f6\u5668\u8d85\u65f6\u89e6\u53d1 \u65e0\u6548\u7684 PREPREPARE \u6d88\u606f \u533a\u5757\u4e0a\u94fe\u5931\u8d25","title":"3.2. Round change \u673a\u5236"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#321-round-change","text":"\u5f53\u4e00\u4e2avalidator\u8282\u70b9\u68c0\u6d4b\u5230\u4ee5\u4e0around change\u89e6\u53d1\u6761\u4ef6\u4e4b\u4e00\u6ee1\u8db3\u65f6\uff0c\u5c06\u4f1a\u5e7f\u64ad ROUND CHANGE \u6d88\u606f\uff0c\u5176\u4e2d\u5305\u542b\u8981\u53d8\u66f4\u5230\u7684\u76ee\u6807round\u6570\u503c\uff0c\u540c\u65f6\u7b49\u5f85\u63a5\u6536\u6765\u81ea\u5176\u4ed6validator\u8282\u70b9\u7684 ROUND CHANGE \u6d88\u606f\u3002\u76ee\u6807round\u7684\u6570\u503c\u57fa\u4e8e\u4ee5\u4e0b\u6761\u4ef6\u9009\u53d6\uff1a \u5982\u679cvalidator\u8282\u70b9\u5df2\u7ecf\u4ece\u5176\u4ed6peer\u8282\u70b9\u63a5\u6536\u5230\u4e86 ROUND CHANGE \u6d88\u606f\uff0c\u5219\u4ece\u6240\u6709\u6570\u91cf\u8fbe\u5230 F + 1 \u7684 ROUND CHANGE \u6d88\u606f\u4e2d\u5305\u542b\u7684round\u6570\u503c\u4e2d\u9009\u53d6\u51fa\u6700\u5927\u7684\u90a3\u4e2a\u6570\u503c \u5426\u5219\uff0c\u5c06\u76ee\u6807round\u7684\u6570\u503c\u8bbe\u7f6e\u4e3a\uff1a\u5f53\u524d\u7684round\u6570\u503c+1 \u4efb\u4f55\u65f6\u5019\uff0c\u5982\u679c\u4e00\u4e2avalidator\u8282\u70b9\u63a5\u6536\u5230\u4e86 F + 1 \u6761\u542b\u6709\u76f8\u540c\u7684\u76ee\u6807round\u6570\u503c\u7684 ROUND CHANGE \u6d88\u606f\uff0c\u5c31\u4f1a\u5c06\u8be5round\u6570\u503c\u548c\u5176\u81ea\u5df1\u7684\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u63a5\u6536\u5230\u7684\u6570\u503c\u66f4\u5927\uff0cvalidator\u8282\u70b9\u5c31\u518d\u6b21\u5e7f\u64ad ROUND CHANGE \u6d88\u606f\uff0c\u800c\u6d88\u606f\u4e2d\u7684round\u6570\u503c\u548c\u63a5\u6536\u5230\u7684\u76f8\u540c\u3002 \u4e00\u65e6validator\u8282\u70b9\u63a5\u6536\u5230\u4e86 2F + 1 \u6761\u5e26\u6709\u76f8\u540cround\u6570\u503c\u7684 ROUND CHANGE \u6d88\u606f\uff0c\u5219\u7ed3\u675fround change\u5faa\u73af\uff0c\u786e\u5b9a\u51fa\u65b0\u7684 proposer \u8282\u70b9\uff0c\u4e4b\u540e\u8fdb\u5165\u5230 NEW ROUND \u72b6\u6001\u3002 \u89e6\u53d1validator\u8282\u70b9\u9000\u51faround change\u5faa\u73af\u7684\u53e6\u5916\u4e00\u4e2a\u6761\u4ef6\u662f\u5176\u901a\u8fc7p2p\u540c\u6b65\u673a\u5236\u540c\u6b65\u5230\u9a8c\u8bc1\u540e\u7684\u533a\u5757\u3002","title":"3.2.1. round change \u7684\u6d41\u7a0b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#33","text":"\u9501\u5b9a\u533a\u5757\u7684\u89e6\u53d1\u6761\u4ef6 \u8282\u70b9 \u9501\u5b9a \u5728\u533a\u5757 B \u3001 round number R \u7684\u542b\u4e49\u662f\u6307\uff0c\u5f53\u524d\u8282\u70b9 \u53ea\u80fd \u5bf9\u533a\u5757 B \u7684\u4fe1\u606f\u6295 commit \u7968 \u3002\u5f53\u4e00\u4e2a\u8282\u70b9\u6536\u5230\u4e86 +2/3 \u4e2a\u5bf9\u533a\u5757 B \u7684 PREPARE \u6295\u7968\u540e\uff0c\u8fdb\u5165 PREPARED \u72b6\u6001\u3002\u6b64\u65f6\uff0c\u8282\u70b9\u88ab\u9501\u5b9a\uff0c\u7b49\u5f85\u63a5\u6536\u5176\u4ed6\u8282\u70b9\u7684 commit \u6295\u7968\u4fe1\u606f\uff0c\u9501\u5b9a\u7684round\u5373\u5f53\u524dround\uff1b \u9501\u5b9a\u533a\u5757\u7684\u673a\u5236 \u9664\u4e86\u5171\u8bc6\u8d77\u59cb\u9636\u6bb5\uff0c\u5f53\u6536\u5230\u66f4\u9ad8\u533a\u5757\u7684\u540c\u6b65\u6570\u636e\u65f6\uff0c\u6216\u5f53\u524d\u9ad8\u5ea6\u6210\u529f\u4ea7\u751f\u533a\u5757\u5e76\u8fbe\u6210\u5171\u8bc6\u65f6\uff0c\u9501\u5b9a\u88ab\u72b6\u6001\u91cd\u7f6e\u4e3a\u975e\u9501\u5b9a\u72b6\u6001\uff0c\u5e76\u5f00\u59cb\u65b0\u4e00\u8f6e\u5bf9\u66f4\u9ad8\u533a\u5757\u5171\u8bc6\u3002\u5982\u672a\u80fd\u5728\u9501\u5b9a\u671f\u95f4\u6536\u5230 +2/3 \u4e2a\u6307\u5b9around\u548c\u533a\u5757\u7684 commit \u6295\u7968\uff0c\u5219\u89e6\u53d1 ROUND CHANGE \u3002\u5e76\u4e14\uff0c\u5728\u7279\u5b9a\u573a\u666f\u4e0b\uff0c\u539f\u6709\u9501\u5b9a\u89e3\u9501\u673a\u5236\u8fd8\u4f1a\u51fa\u73b0\u6b7b\u9501\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5728\u4ee3\u7801\u5c42\u9762\u4e5f\u4f18\u5316\u4e86\u76f8\u5173\u7684\u89e3\u9501\u5b9e\u73b0\u3002\u5177\u4f53\u53ef\u53c2\u8003\u300c2. \u5bf9Istanbul\u9501\u5b9a\u89e3\u9501\u673a\u5236\u7684\u4f18\u5316\u300d\u3002","title":"3.3. \u533a\u5757\u9501\u5b9a\u673a\u5236"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/IBFT/Istanbul%E5%85%B1%E8%AF%86/#34-consensus-proof","text":"\u533a\u5757\u4e0a\u94fe\u524d\uff0c\u6bcf\u4e2avalidator\u8282\u70b9\u9700\u8981\u6536\u96c6 2F + 1 \u4e2acommitted seal\u4ee5\u6784\u6210\u4e00\u4e2aconsensus proof\uff08\u5171\u8bc6\u8bc1\u660e\uff09\u3002\u4e00\u65e6validator\u8282\u70b9\u63a5\u6536\u5230\u8db3\u591f\u7684committed seal\uff0c\u5c31\u4f1a\u5c06\u5176\u5b58\u50a8\u4e8e\u533a\u5757\u5934\u7684 extraData \u5b57\u6bb5\u4e2dIstabulExtra\u7ed3\u6784\u4e2d CommittedSeal \u5b57\u6bb5\u4e2d\uff0c\u5e76\u91cd\u65b0\u8ba1\u7b97 extraData \u5b57\u6bb5\uff0c\u7136\u540e\u5c06\u533a\u5757\u63d2\u5165\u5230\u533a\u5757\u94fe\u4e2d\u3002 Committed seal\u8ba1\u7b97\u8fc7\u7a0b\u5982\u4e0b\uff1a Committed seal\u7684\u8ba1\u7b97: \u6bcf\u4e2avalidator\u8282\u70b9\u4f7f\u7528\u5176\u79c1\u94a5\u5bf9\u533a\u5757\u54c8\u5e0c\u7ea7\u8054\u4e0acommit\u6d88\u606f\u4ee3\u7801 COMMIT_MSG_CODE \u7684\u7ed3\u679c\u8fdb\u884c\u7b7e\u540d\uff0c\u5f97\u5230\u7b7e\u540d\u5373\u4e3aCommitted seal\uff1a Committed seal : SignECDSA(Keccak256(CONCAT(Hash, COMMIT_MSG_CODE)), PrivateKey) CONCAT(Hash, COMMIT_MSG_CODE) : \u5c06\u533a\u5757\u54c8\u5e0c\u548ccommit\u6d88\u606f\u4ee3\u7801 COMMIT_MSG_CODE \u8fdb\u884c\u7ea7\u8054 PrivateKey : \u8fdb\u884c\u7b7e\u540d\u7684validator\u8282\u70b9\u7684\u79c1\u94a5 \u4e0a\u9762\u63d0\u5230\u7684 extraData \u662f\u533a\u5757\u5934\u7684\u4e00\u4e2a\u5b57\u6bb5\uff0c\u5176\u6570\u636e\u7ec4\u6210\u4e3a\uff1aEXTRA_VANITY | ISTANBUL_EXTRA\uff0c\u5176\u4e2d|\u7528\u4ee5\u8868\u793a\u5206\u9694EXTRA_VANITY\u548cISTANBUL_EXTRA\u7684\u56fa\u5b9a\u7684\u7d22\u5f15\uff08\u4e0d\u662f\u4e00\u4e2a\u5b9e\u9645\u7684\u5206\u9694\u5b57\u7b26\uff09\u3002 IstabulExtra\u7ed3\u6784\u7684\u7c7b\u578b\u5b9a\u4e49\u5982\u4e0b\uff1a type IstanbulExtra struct { Validators []common.Address //Validator addresses Seal []byte //Proposer seal 65 bytes CommittedSeal [][]byte //Committed seal, 65 * len(Validators) bytes } \u5176\u4e2d\uff0c\u5404\u5b57\u6bb5\u7684\u542b\u4e49\u5982\u4e0b\uff1a + Validators\uff1a\u53c2\u4e0e\u5171\u8bc6\u7684\u5404validator\u8282\u70b9\u7684\u5217\u8868 + Seal\uff1aProposer \u8282\u70b9\u5bf9\u533a\u5757\u7684\u7b7e\u540d\uff0c\u957f\u5ea6\u4e3a65\u5b57\u8282 + CommittedSeal\uff1a\u7528\u4e8e\u5b58\u50a8validator\u8282\u70b9\u6536\u96c6\u5230\u7684committed seal\u5217\u8868","title":"3.4. Consensus proof \u76ee\u524d\u7684\u5b58\u50a8\u673a\u5236"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/","text":"VRF\u673a\u5236 1. \u6982\u8ff0 \u5171\u8bc6\u7b97\u6cd5\u4f5c\u4e3a\u533a\u5757\u94fe\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u9762\u4e34\u7740\u4e00\u4e2a\u91cd\u8981\u7684\u6743\u8861\u95ee\u9898\uff0c\u5373\u5171\u8bc6\u8282\u70b9\u6570\u91cf\u548c\u5171\u8bc6\u6027\u80fd\u4e4b\u95f4\u7684\u6743\u8861\u3002\u5c3d\u7ba1\u5171\u8bc6\u8282\u70b9\u6570\u91cf\u8d8a\u591a\uff0c\u610f\u5473\u7740\u66f4\u9ad8\u7684\u53bb\u4e2d\u5fc3\u5316\u7a0b\u5ea6\uff0c\u4f46\u4e0e\u6b64\u540c\u65f6\u4f1a\u5bfc\u81f4\u5171\u8bc6\u7684\u6027\u80fd\u7684\u964d\u4f4e\u3002\u5728 PlatONE \u4e2d\uff0c\u5171\u8bc6\u7b97\u6cd5\u4e3a BFT \u7c7b\u5171\u8bc6\uff0c\u968f\u7740\u5171\u8bc6\u8282\u70b9\u6570\u91cf\u7684\u589e\u591a\uff0c\u5171\u8bc6\u6d88\u606f\u7684\u6570\u91cf\u4e5f\u968f\u4e4b\u589e\u591a\uff0c\u5bfc\u81f4\u533a\u5757\u94fe\u7684 TPS \u7684\u964d\u4f4e\u3002 \u4e3a\u4e86\u5728\u5171\u8bc6\u8282\u70b9\u6570\u91cf\u548c\u5171\u8bc6\u6027\u80fd\u4e4b\u95f4\u8fdb\u884c\u4e00\u4e2a\u8f83\u597d\u7684\u6298\u8877\uff0cPlatONE \u4e2d\u91c7\u7528\u968f\u673a\u9009\u53d6\u5171\u8bc6\u8282\u70b9\u96c6\u5408\u7684\u673a\u5236\uff0c\u5373\u901a\u8fc7\u4ece\u8f83\u591a\u6570\u91cf\u7684\u5019\u9009\u5171\u8bc6\u8282\u70b9\u4e2d\u968f\u673a\u5730\u9009\u53d6\u4e00\u5b9a\u6570\u91cf\u7684\u8282\u70b9\u6210\u4e3a\u67d0\u4e00\u5468\u671f\u4e2d\u5177\u4f53\u53c2\u4e0e\u5171\u8bc6\u7684\u8282\u70b9\u3002\u5982\u6b64\u4fbf\u80fd\u5728\u4fdd\u8bc1\u8f83\u597d\u7684\u53bb\u4e2d\u5fc3\u5316\u7684\u7a0b\u5ea6\u4ee5\u53ca\u5b89\u5168\u6027\u7684\u540c\u65f6\uff0c\u53c8\u80fd\u591f\u63d0\u4f9b\u8f83\u597d\u7684\u5171\u8bc6\u6027\u80fd\u3002 PlatONE \u4e2d\u968f\u673a\u9009\u53d6\u5171\u8bc6\u8282\u70b9\u7684\u673a\u5236\u57fa\u4e8e VRF\u3002VRF \u5373\u53ef\u9a8c\u8bc1\u968f\u673a\u51fd\u6570\uff08Verifiable Random Function\uff09 \u3002 VRF \u8fd9\u4e2a\u6982\u5ff5\u6700\u65e9\u7531 Micali\uff0cRabin \u548c Vadhan \u4e09\u4e2a\u4eba\u6240\u63d0\u51fa\u3002\u5b83\u662f\u4e00\u4e2a\u4f2a\u968f\u673a\u51fd\u6570\uff0c\u540c\u65f6\u5bf9\u5176\u8f93\u51fa\u7ed3\u679c\u63d0\u4f9b\u53ef\u516c\u5f00\u9a8c\u8bc1\u7684\u8bc1\u660e\u3002 \u5373\u7ed9\u5b9a\u4e00\u4e2a\u8f93\u5165\u503c x \uff0c\u62e5\u6709\u79c1\u94a5 sk \u7684\u4eba\u53ef\u4ee5\u8ba1\u7b97\u4e00\u4e2a\u51fd\u6570\u503c y=F_{sk}(x) \u4ee5\u53ca\u8bc1\u660e \\pi=P_{sk}(x) \u3002 \u5229\u7528\u8bc1\u660e \\pi \u548c\u516c\u94a5 PK=g^{sk} \uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u9a8c\u8bc1 y=F_{sk}(x) \u662f\u5426\u4e3a\u7528\u8be5\u7b97\u6cd5\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u5e76\u4e14\u4e0d\u4f1a\u6cc4\u9732\u4efb\u4f55\u5173\u4e8e\u79c1\u94a5 sk \u7684\u4fe1\u606f\u3002 \u76ee\u524d VRF \u7684\u6784\u9020\u65b9\u6848\u90fd\u662f\u57fa\u4e8e\u968f\u673a\u9884\u793a\u6a21\u578b\u4e0b\u7684\uff0c\u4e3b\u8981\u6709\u4e24\u5927\u7c7b\uff1a\u5176\u4e2d\u4e00\u7c7b\u91c7\u7528\u7684\u662f RSA \u6765\u6784\u9020 VRF\uff0c\u5373 RSA VRF\u3002\u53e6\u4e00\u79cd\u4f7f\u7528\u7684\u662f\u692d\u5706\u66f2\u7ebf\u5bc6\u7801\u5b66\u6765\u6784\u9020 VRF \uff0c\u5373 EC VRF\u3002\u672c\u6587\u4ecb\u7ecd\u7684 VRF \u65b9\u6848\u4e2d\u4f7f\u7528\u7684\u662f EC VRF\u3002 2. \u5171\u8bc6\u548c VRF \u7b97\u6cd5\u4ea4\u4e92\u8bbe\u8ba1 2.1. \u4ea4\u4e92\u56fe VRF \u673a\u5236\u6d89\u53ca\u7684\u7b97\u6cd5\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u4e24\u4e2a\uff1a VRF \u5728\u51fa\u5757\u8282\u70b9\u6253\u5305\u5b8c\u533a\u5757\u4e4b\u540e\u4e3a\u8be5\u533a\u5757\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570\u548c\u8bc1\u660e\uff08proof\uff09\uff0c\u5e76\u4e14\u5b58\u50a8\u5230\u533a\u5757\u4e2d\uff0c\u5f53\u5176\u5b83\u8282\u70b9\u63a5\u6536\u5230\u8be5\u533a\u5757\u65f6\u5bf9\u8bc1\u660e\u548c\u968f\u673a\u6570\u6821\u9a8c\u662f\u5426\u6b63\u786e\u3002 \u4e8c\u9879\u5206\u5e03 \u5728\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\u7684\u65f6\u5019\u901a\u8fc7\u4f7f\u7528\u4e8c\u9879\u5206\u5e03\u6765\u6839\u636e\u6bcf\u4e2a\u5171\u8bc6\u5019\u9009\u8282\u70b9\u7684\u6743\u91cd\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u5019\u9009\u8282\u70b9\u7684\u6982\u7387\uff0c\u8fd9\u6837\u6839\u636e\u6bcf\u4e2a\u8282\u70b9\u7684\u6982\u7387\u53bb\u505a\u9009\u4e3e\uff0c\u6982\u7387\u8d8a\u9ad8\u88ab\u9009\u4e2d\u7684\u51e0\u7387\u8d8a\u9ad8\u3002\u4e3a\u4e86\u589e\u52a0\u9009\u4e3e\u7684\u968f\u673a\u6027\uff0c\u8ba1\u7b97\u6982\u7387\u65f6\u9009\u62e9\u4f7f\u7528 VRF \u751f\u6210\u7684\u968f\u673a\u6570\u6765\u8fdb\u884c\u3002 \u6839\u636e\u4e0a\u56fe\u4e2d\u7684\u6570\u5b57\u989c\u8272\u53ef\u5212\u5206\u4e3a\u4e24\u7c7b\u4ea4\u4e92\u6d41\u7a0b\u6765\u89e6\u53d1\u4e0a\u8ff0\u4e24\u79cd\u7b97\u6cd5\uff1a \u7ea2\u8272\u6570\u5b57\uff1a \u5c5e\u4e8e\u51fa\u5757\u8282\u70b9\u89e6\u53d1\uff0c\u5305\u62ec\u4ee5\u4e0b\u6d41\u7a0b\uff08\u56fe\u4e2d\u6570\u5b57\u8868\u793a\uff09 2\uff1a \u7531 Worker \u5b8c\u6210\u51fa\u5757\u4e4b\u540e\uff0c\u8c03\u7528 VRF \u751f\u6210\u8bc1\u660e\u548c\u968f\u673a\u6570\u5e76\u4e14\u5b58\u50a8\u5230\u8be5\u533a\u5757\u4e2d 4\uff1a \u7531 Worker \u6267\u884c\u5b8c\u4ea4\u6613\uff0c\u8c03\u7528 VrfPlugin\u3002\u5982\u679c\u9700\u8981\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\uff0c\u5219\u8c03\u7528\u4e8c\u9879\u5206\u5e03\u7b97\u6cd5 \u84dd\u8272\u6570\u5b57\uff1a \u5c5e\u4e8e\u975e\u51fa\u5757\u8282\u70b9\u89e6\u53d1\uff08\u56fe\u4e2d\u6570\u5b57\u8868\u793a\uff09 1\uff1a \u7531\u5171\u8bc6\u8282\u70b9\u5728 consensus engine \u63a5\u6536\u5230\u533a\u5757\u65f6\uff0c\u6821\u9a8c\u8be5\u533a\u5757\u7684 VRF \u8f93\u51fa\u503c\u662f\u5426\u6b63\u786e 3\uff1a \u7531\u975e\u5171\u8bc6\u8282\u70b9\u540c\u6b65\u533a\u5757\u540e\uff0c\u6821\u9a8c\u8be5\u533a\u5757\u7684 VRF \u8f93\u51fa\u503c\u662f\u5426\u6b63\u786e 5\uff1a \u7531\u975e\u5171\u8bc6\u8282\u70b9\u540c\u6b65\u533a\u5757\u540e\uff0c\u8c03\u7528 VrfPlugin\u3002\u5982\u679c\u9700\u8981\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\uff0c\u5219\u8c03\u7528\u4e8c\u9879\u5206\u5e03\u7b97\u6cd5 2.2. \u7c7b\u56fe \u5171\u8bc6\u8282\u70b9\u7684\u9009\u4e3e\u662f\u7531 VRF \u548c\u4e8c\u9879\u5206\u5e03\u7ed3\u5408\u6765\u6267\u884c\u7684\u3002\u4e24\u4e2a\u7b97\u6cd5\u662f\u76f8\u4e92\u72ec\u7acb\u5730\u89e6\u53d1\u548c\u6267\u884c\u7684\uff0c\u53ea\u662f\u4e8c\u9879\u5206\u5e03\u7684\u6982\u7387\u8ba1\u7b97\u4f9d\u8d56\u4e8e VRF \u4ea7\u751f\u7684\u968f\u673a\u6027\uff0c\u901a\u8fc7\u968f\u673a\u6027\u53ef\u5b9e\u73b0\u6743\u91cd\u9ad8\u4f4e\u7684\u6982\u7387\u6027\uff0c\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\uff1a \u533a\u5757\u4ea7\u751f\u540e\uff0c\u4e3a\u533a\u5757\u751f\u6210 VRF \u8bc1\u660e\u548c\u968f\u673a\u6570\u5e76\u4e14\u5b58\u50a8\u5230\u533a\u5757\u4e2d\uff1b\u968f\u673a\u6570\u7528\u4f5c\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\uff0c\u8bc1\u660e\u7528\u4f5c\u8bc1\u660e\u8be5\u968f\u673a\u6570\u662f\u7531\u8be5\u51fa\u5757\u8282\u70b9\u6839\u636e\u524d\u4e00\u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\u4ea7\u751f\u7684 \u5728\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\u7684\u65f6\u5019\u5c31\u9700\u8981\u4f7f\u7528\u524d N \u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\u5bf9\u5e94\u5206\u914d\u7ed9 N \u4e2a\u8282\u70b9\u6765\u548c\u5f53\u524d\u533a\u5757\u7684\u968f\u673a\u6570\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u8ba1\u7b97\u4e4b\u540e\u7684\u503c\u4f5c\u4e3a\u4e8c\u9879\u5206\u5e03\u7684\u8f93\u5165\u503c\u6765\u8ba1\u7b97\u6982\u7387 \u6bcf\u4e2a\u8282\u70b9\u88ab\u5206\u914d\u7684\u968f\u673a\u6570\u4e0d\u540c\uff0c\u6240\u4ee5\u8ba1\u7b97\u540e\u6bcf\u4e2a\u8282\u70b9\u7684\u4e8c\u9879\u5206\u5e03\u7684\u8f93\u5165\u503c\u4e5f\u5c31\u4e0d\u540c\uff0c\u6240\u83b7\u53d6\u7684\u4e8c\u9879\u5206\u5e03\u7d2f\u79ef\u5206\u5e03\u66f2\u7ebf\u4e0a\u7684\u70b9\u5c31\u4e0d\u540c\uff0c\u56e0\u6b64\u4ea7\u751f\u4e86\u6982\u7387\u6027 2.3. \u5b58\u50a8 1. Header \u4e2d\u539f\u6709\u5b57\u6bb5 Nonce \uff0c\u8be5\u5b57\u6bb5\u7c7b\u578b\u4e3a []byte \uff0c\u7528\u4f5c\u5b58\u50a8 VRF \u7684\u8bc1\u660e\uff08\u8bc1\u660e\u5b57\u6bb5\u8be6\u89e3\u89c1\u63a5\u53e3\u8bf4\u660e\uff09 2. \u7531\u4e8e\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\u9700\u8981\u5f80\u524d N \u4e2a\uff08\u4e5f\u5c31\u662f\u5019\u9009\u8005\u8282\u70b9\u7684\u4e2a\u6570\uff09\u533a\u5757\u7684\u968f\u673a\u6570\uff0c\u6240\u4ee5\u8fd9\u4e9b\u968f\u673a\u6570\u9700\u8981\u4ee5\u5408\u9002\u65b9\u5f0f\u8fdb\u884c\u5b58\u50a8\u4ee5\u65b9\u4fbf\u8bfb\u53d6\u3002 \u7531\u4e8e N \u4ee3\u8868\u7684\u662f\u5f85\u9009\u4e3e\u7684\u8282\u70b9\u6570\u91cf\uff0c\u662f\u4e0d\u5b9a\u7684\u6570\u5b57\uff0c\u56e0\u6b64\u53ef\u4ee5\u7f13\u5b58\u524d\u82e5\u5e72\u4e2a\u9884\u5148\u786e\u5b9a\u6570\u91cf\u7684\u533a\u5757\u7684\u968f\u673a\u6570\u3002\u8be5\u9884\u5148\u786e\u5b9a\u6570\u91cf\u76ee\u524d\u6682\u5b9a\u4e3a 100\uff0c\u4e14\u8be5\u6570\u5b57\u53ef\u4ee5\u5728\u8282\u70b9\u542f\u52a8\u547d\u4ee4\u884c\u4e2d\u901a\u8fc7\u76f8\u5e94\u7684 flag\uff08\u6682\u5b9a --nonceCache\uff09 \u8fdb\u884c\u6309\u9700\u8bbe\u7f6e\u3002 2.4. \u7b97\u6cd5\u5177\u4f53\u4e1a\u52a1\u903b\u8f91 2.4.1. VRF \u76f8\u5173 \u751f\u6210\u8bc1\u660e \uff1a\u7531\u51fa\u5757\u8282\u70b9\u5728 worker \u7684 commitNewWork \u4e2d\u6267\u884c\u4ea4\u6613\u524d\uff0c\u8c03\u7528 VRF \u7684 Prove \u51fd\u6570\u5bf9\u8be5\u533a\u5757\u751f\u6210\u8bc1\u660e\u548c\u968f\u673a\u6570\u5e76\u5b58\u50a8\u5230 Header \u4e2d\u7684 Nonce \u5b57\u6bb5 \u5171\u8bc6\u8282\u70b9\u63a5\u6536\u533a\u5757 \uff1a\u7531\u5171\u8bc6\u8282\u70b9\u5728\u63a5\u6536\u5230\u63d0\u8bae\u533a\u5757\u540e\uff0c\u8c03\u7528 VRF \u7684 Verify \u51fd\u6570\u5bf9\u8be5\u533a\u5757\u7684\u8bc1\u660e\u6821\u9a8c\u662f\u5426\u6b63\u786e \u975e\u5171\u8bc6\u8282\u70b9\u540c\u6b65\u533a\u5757 \uff1a\u8fd9\u91cc\u975e\u5171\u8bc6\u8282\u70b9\u5305\u62ec\u672c\u5468\u671f\u9009\u4e3e\u524d\u7684\u5171\u8bc6\u5019\u9009\u8282\u70b9\u4ee5\u53ca\u89c2\u5bdf\u8005\u8282\u70b9\u3002\u540c\u6b65\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5206\u522b\u662f downloader \u548c fetcher \u6a21\u5757\uff0c\u5b83\u4eec\u540c\u6b65\u533a\u5757\u4e4b\u540e\u6700\u7ec8\u8c03\u7528 blockChain \u7684 InsertChain \u51fd\u6570\u5904\u7406\u533a\u5757\uff0c\u5728 InsertChain \u51fd\u6570\u4e2d\u8c03\u7528 VRF \u7684 Verify \u51fd\u6570\u5bf9\u8be5\u533a\u5757\u7684\u8bc1\u660e\u6821\u9a8c\u662f\u5426\u6b63\u786e 2.4.2. \u4e8c\u9879\u5206\u5e03\u76f8\u5173 \u51fa\u5757\u8282\u70b9 \uff1a\u5728\u9009\u4e3e\u8fc7\u7a0b\u89e6\u53d1\u65f6\uff0c worker \u4e2d\u6267\u884c\u5b8c\u4ea4\u6613\u4e4b\u540e\u8c03\u7528 VrfPlugin \u7684 Election \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8c03\u7528 binomial_distribution \u9009\u4e3e\u5171\u8bc6\u8282\u70b9 \u975e\u51fa\u5757\u8282\u70b9 \uff1a\u5728\u9009\u4e3e\u8fc7\u7a0b\u89e6\u53d1\u65f6\uff0c blockChain \u4e2d\u6267\u884c\u5b8c\u4ea4\u6613\u4e4b\u540e\u8c03\u7528 VrfPlugin \u7684 Election \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8c03\u7528 binomial_distribution \u8ba1\u7b97\u51fa\u5171\u8bc6\u8282\u70b9\u3002 \u9009\u4e3e\u89e6\u53d1\u6761\u4ef6 \uff1a\u53c2\u6570\u7ba1\u7406\u5408\u7ea6\u4e2d\uff0cVRF \u9009\u4e3e\u6807\u5fd7\u88ab\u89e6\u53d1\u65f6\uff0c\u901a\u8fc7 Config \u6a21\u5757\u7684\u4e8b\u4ef6\u901a\u77e5\u65b9\u5f0f\u901a\u77e5\u5230 VRF \u6a21\u5757\uff0c\u4ece\u800c\u89e6\u53d1 VRF \u5171\u8bc6\u8282\u70b9\u9009\u4e3e\u7684\u8fc7\u7a0b\u3002 2.4.3. binomial_distribution \u9009\u4e3e\u6d41\u7a0b \u83b7\u53d6\u5f85\u9009\u4e3e\u7684\u5171\u8bc6\u5019\u9009\u8282\u70b9\u5217\u8868 \u83b7\u53d6\u5f53\u524d\u533a\u5757\u7684\u968f\u673a\u6570\uff08\u4ece Block \u4e2d\u8c03\u7528 Nonce \u51fd\u6570\u8fd4\u56de\u8bc1\u660e\uff0c\u518d\u8c03\u7528 VRF \u7684 ProofToHash \u51fd\u6570\u8fd4\u56de\u968f\u673a\u6570\uff09 \u6839\u636e\u7f13\u5b58\u4e2d\u4fdd\u5b58\u7684\u968f\u673a\u6570\u83b7\u53d6\u524d N \u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\uff0c\u82e5\u7f13\u5b58\u7684\u968f\u673a\u6570\u4e2a\u6570\u4e0d\u8db3 N \u4e2a\uff0c\u5219\u4ece\u94fe\u4e0a\u8bfb\u53d6\u5269\u4f59\u7684\u533a\u5757\u7684\u968f\u673a\u6570 \u8ba1\u7b97\u5355\u4e2a\u6743\u91cd\u88ab\u9009\u4e2d\u7684\u6982\u7387\uff0cp=(\u5f85\u9009\u4e3e\u5217\u8868\u603b\u6743\u91cd/\u5f85\u9009\u4e3e\u5217\u8868\u4eba\u6570)*\u9009\u4e3e\u4eba\u6570/\u5f85\u9009\u4e3e\u5217\u8868\u603b\u6743\u91cd \u6bcf\u4e2a\u5171\u8bc6\u5019\u9009\u8282\u70b9\u8c03\u7528 NewBinomialDistribution \u51fd\u6570\uff0c\u5e76\u5c06\u5404\u81ea\u7684n(\u6743\u91cd)\u3001\u548c\u4e0a\u4e00\u6b65\u5f97\u5230\u7684p(\u6982\u7387)\uff0c\u4f20\u5165\u51fd\u6570\u4e2d\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61 \u5206\u914d\u968f\u673a\u6570\u7ed9\u6bcf\u4e2a\u5019\u9009\u8282\u70b9\uff0c\u5e76\u4e0e\u5f53\u524d\u533a\u5757\u7684\u968f\u673a\u6570\u505a\u5f02\u6216\uff0c\u5f97\u51fa\u7684\u503c\u518d\u9664\u4ee5(2\u7684256\u6b21\u65b9-1)\u5f97\u51fa0~1\u4e4b\u95f4\u7684\u6982\u7387\u503c targetP \u6bcf\u4e2a\u5019\u9009\u4eba\u8c03\u7528 InverseCumulativeProbability \u51fd\u6570\uff0c\u5e76\u628a\u4e0a\u4e00\u6b65\u5f97\u5230\u7684\u6982\u7387\u503c targetP \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5230\u51fd\u6570\u4e2d\uff0c\u5f97\u51fa targetP \u6240\u5c5e\u7684\u7d2f\u79ef\u5206\u5e03\u66f2\u7ebf\u4e0a\u7684 x \u503c \u6700\u7ec8\u6839\u636e\u6bcf\u4e2a\u9a8c\u8bc1\u4eba\u8ba1\u7b97\u6240\u5f97\u7684 x \u503c\u8fdb\u884c\u5012\u5e8f\u6392\u5e8f\uff0c\u53d6\u524d\u9762 V \u4e2a\u9a8c\u8bc1\u4eba\u4f5c\u4e3a\u4e0b\u4e00\u5468\u671f\u7684\u5171\u8bc6\u8282\u70b9\u3002\u5176\u4e2d V \u662f\u5171\u8bc6\u8282\u70b9\u7684\u4e2a\u6570\u3002V \u7684\u503c\u4ece config \u6a21\u5757\u83b7\u53d6\uff0c\u5373\u6bcf\u6b21 VRF \u9009\u4e3e\u89e6\u53d1\u65f6\uff0c\u4ece\u53c2\u6570\u7ba1\u7406\u5408\u7ea6\u4e2d\u83b7\u53d6\u7684\uff0c\u7531 Config \u6a21\u5757\u4ee5\u53c2\u6570\u5f62\u5f0f\u653e\u5728\u4e8b\u4ef6\u901a\u77e5\u4e2d\u4f20\u9012\u8fc7\u6765\u3002 \u4e0b\u56fe\u4e3a\u524dN\u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\u5f02\u6216\u89c4\u5219\uff1a \uff08N \u7684\u5b9e\u4f8b\u53d6\u503c\u4e3a 101\uff09 \u6309\u5171\u8bc6\u5019\u9009\u8282\u70b9\u7684\u6392\u540d\uff08\u9ed8\u8ba4\u6309\u7167\u8282\u70b9\u5728\u6570\u7ec4\u4e2d\u7684\u987a\u5e8f\uff09\uff0c\u4f9d\u6b21\u5c06\u524d N=101 \u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\u5206\u914d\u7ed9\u5404\u4e2a\u5171\u8bc6\u5019\u9009\u8282\u70b9\u3002\u4f8b\u5982\uff1a\u5f80\u524d1\u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\u5206\u914d\u7ed9\u6700\u540e\u4e00\u540d\u5019\u9009\u8282\u70b9\uff0c\u5f80\u524d\u7b2c2\u4e2a\u5757\u7684\u968f\u673a\u6570\u5206\u914d\u7ed9\u5012\u6570\u7b2c\u4e8c\u540d\u5019\u9009\u8282\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5019\u9009\u8282\u70b9\u8fd8\u62e5\u6709\u5f53\u524d\u533a\u5757\u7684\u968f\u673a\u6570\u3002 2.5. \u5173\u4e8e\u8282\u70b9\u7684\u7c7b\u578b \u5bf9\u5e94\u7740 VRF \u7684\u8bbe\u8ba1\uff0c\u5728\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u4e2d\uff0c\u8282\u70b9\u7c7b\u578b\u4f1a\u6709\u5982\u4e0b\u51e0\u79cd\uff1a \u89c2\u5bdf\u8005\u8282\u70b9 \u4e0d\u53c2\u4e0e\u5171\u8bc6\u8282\u70b9\u7684\u9009\u4e3e\uff0c\u53ea\u540c\u6b65\u533a\u5757 \u5171\u8bc6\u5019\u9009\u8282\u70b9 \u53c2\u4e0e\u5171\u8bc6\u8282\u70b9\u7684\u9009\u4e3e\uff1b\u5982\u679c\u6ca1\u6709\u5728\u672c\u5171\u8bc6\u5468\u671f\u4e2d\u88ab\u9009\u4e3a\u5171\u8bc6\u8282\u70b9\uff0c\u5219\u540c\u6837\u8fdb\u884c\u533a\u5757\u540c\u6b65 \u5171\u8bc6\u8282\u70b9 \u5728\u672c\u5171\u8bc6\u5468\u671f\u5185\u4ece\u5019\u9009\u8282\u70b9\u88ab\u9009\u4e3e\u4e3a\u5171\u8bc6\u8282\u70b9\uff0c\u53c2\u4e0e\u5171\u8bc6\u7684\u8fd0\u884c\u3002\u5728\u4e0b\u4e00\u5171\u8bc6\u5468\u671f\u4e2d\uff0c\u6240\u6709\u7c7b\u578b\u4e3a\u5171\u8bc6\u8282\u70b9\u548c\u5171\u8bc6\u5019\u9009\u8282\u70b9\u7684\u8282\u70b9\u90fd\u5c06\u53c2\u4e0e VRF \u5171\u8bc6\u8282\u70b9\u7684\u9009\u4e3e\u8fc7\u7a0b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709\u89c2\u5bdf\u8005\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u4e0d\u53c2\u4e0e\u5171\u8bc6\u8282\u70b9\u7684\u9009\u4e3e\u3002 2.6. \u5173\u4e8e\u8282\u70b9\u7684\u5c5e\u6027 \u8282\u70b9\u7684\u5c5e\u6027\uff0c\u9664\u5df2\u6709\u7684\u4e4b\u5916\uff0c\u8fd8\u5305\u62ec\uff1a \u8282\u70b9\u7684\u6743\u91cd\uff08\u76ee\u524d\u8282\u70b9\u7684\u6743\u91cd\u9ed8\u8ba4\u76f8\u540c\uff09 2.7. \u7b97\u6cd5\u63a5\u53e3 2.7.1. vrf_secp 256k1 \u4f7f\u7528secp256k1\u66f2\u7ebf\u7684vrf\u7b97\u6cd5\u5b9e\u73b0 ECVRF_prove\u51fd\u6570 \u8be5\u51fd\u6570\u7528\u4e8e\u6839\u636e\u8f93\u5165\u6570\u636e\u6765\u751f\u6210\u968f\u673a\u6570\u548c\u8bc1\u660e\uff0c\u968f\u673a\u6570\u548c\u8bc1\u660e\u662f\u62fc\u63a5\u5728\u540c\u4e00\u4e2abyte\u6570\u7ec4\u91cc\u9762\u7684\uff0c\u524d1~33\u4f4d\u4e3a\u968f\u673a\u6570 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pk []byte \u516c\u94a5 sk []byte \u79c1\u94a5 m []byte \u539f\u59cb\u6570\u636e \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pi []byte \u968f\u673a\u6570\u548c\u8bc1\u660e err error \u5931\u8d25\u9519\u8bef ECVRF_verify\u51fd\u6570 \u8be5\u51fd\u6570\u7528\u4e8e\u6821\u9a8c\u968f\u673a\u6570\u548c\u8bc1\u660e\uff0c\u662f\u5426\u5c5e\u4e8e\u8be5\u516c\u94a5\u751f\u6210\u3001\u662f\u5426\u57fa\u4e8e\u8be5\u539f\u59cb\u6570\u636e\u751f\u6210 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pk []byte \u516c\u94a5 pi []byte \u968f\u673a\u6570\u548c\u8bc1\u660e m []byte \u539f\u59cb\u6570\u636e \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 success bool \u662f\u5426\u6b63\u786e err error \u5931\u8d25\u9519\u8bef ECVRF_proof2hash\u51fd\u6570 \u8be5\u51fd\u6570\u7528\u4e8e\u4ece\u8bc1\u660e\u4e2d\u89e3\u6790\u51fa\u968f\u673a\u6570 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pi []byte \u968f\u673a\u6570\u548c\u8bc1\u660e \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 randomNumber []byte \u4ece\u8bc1\u660epi\u4e2d\u89e3\u6790\u51fa\u6765\u7684\u968f\u673a\u6570 2.7.2. vrf \u8be5\u7c7b\u662f\u5bf9\u5177\u4f53\u5b9e\u73b0\u7b97\u6cd5\u7684\u5c01\u88c5\uff0c\u4e0d\u66b4\u9732\u5177\u4f53\u66f2\u7ebf\uff0c\u53ea\u5bf9\u5916\u63d0\u4f9b\u901a\u7528\u7684\u63a5\u53e3\u548c\u53c2\u6570\uff0c\u7136\u540e\u8c03\u7528\u5177\u4f53\u5b9e\u73b0\u7b97\u6cd5\u7c7b\uff0c\u6784\u9020\u6240\u9700\u53c2\u6570\u4f20\u9012\u8fc7\u53bb Prove\u51fd\u6570 \u751f\u6210\u8bc1\u660e\u548c\u968f\u673a\u6570 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 privateKey ecdsa.PrivateKey \u79c1\u94a5 data []byte \u539f\u59cb\u6570\u636e \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pi []byte \u968f\u673a\u6570\u548c\u8bc1\u660e err error \u5931\u8d25\u9519\u8bef Verify\u51fd\u6570 \u6821\u9a8c\u8bc1\u660e\u548c\u968f\u673a\u6570\u662f\u5426\u6b63\u786e \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 publicKey ecdsa.PublicKey \u516c\u94a5 pi []byte \u8bc1\u660e\u548c\u968f\u673a\u6570 data []byte \u539f\u59cb\u6570\u636e \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 success bool \u662f\u5426\u6b63\u786e err error \u5931\u8d25\u9519\u8bef ProofToHash\u51fd\u6570 \u901a\u8fc7\u8bc1\u660e\u89e3\u6790\u51fa\u968f\u673a\u6570 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pi []byte \u8bc1\u660e\u548c\u968f\u673a\u6570 \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 randomNumber []byte \u4ece\u8bc1\u660epi\u4e2d\u89e3\u6790\u51fa\u6765\u7684\u968f\u673a\u6570 2.7.3. binomial_distribution \u4e8c\u9879\u5206\u5e03\u7b97\u6cd5\u7684\u5b9e\u73b0 NewBinomialDistribution\u51fd\u6570 \u5b9e\u4f8b\u5316\u4e00\u4e2a\u4e8c\u9879\u5206\u5e03\u5bf9\u8c61\uff0c\u7528\u4f5c\u8ba1\u7b97\u6982\u7387\u66f2\u7ebf\u7684\uff0c\u7531\u4e24\u4e2a\u53c2\u6570\u6765\u6784\u6210\uff1a\u6b21\u6570\u548c\u6982\u7387 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 n int \u6743\u91cd\u503c\uff08\u4f2f\u52aa\u5229\u5b9e\u9a8c\u7684\u6b21\u6570\uff09 p float64 \u6210\u529f\u6982\u7387\u503c\uff08\u5355\u6b21\u4f2f\u52aa\u5229\u5b9e\u9a8c\u7684\u6982\u7387\uff09 \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 binomialDistribution BinomialDistribution \u4e8c\u9879\u5206\u5e03\u7ed3\u6784\u4f53 CumulativeProbability\u51fd\u6570 \u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff0c\u8ba1\u7b97\u66f2\u7ebf\u4e0a\u5230\u67d0\u70b9\uff08\u67d0\u6b21\uff09\u4e3a\u6b62\u7684\u8303\u56f4\u7684\u6982\u7387\u503c \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 x int \u6b21\u6570 \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 ret float64 x\u70b9\u4e0a\u7684\u6982\u7387\u503c InverseCumulativeProbability\u51fd\u6570 \u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff0c\u901a\u8fc7\u6982\u7387\u503c\u53cd\u5411\u8ba1\u7b97\u51fa\u6982\u7387\u6240\u5c5e\u7684\u67d0\u70b9\u7684\u503cx \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 p float64 \u67d0\u70b9\uff08\u67d0\u6b21\uff09\u7684\u6982\u7387\u503c \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 x int \u6982\u7387\u503c\u5bf9\u5e94\u7684\u67d0\u70b9\u7684x\u503c","title":"VRF"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#vrf","text":"","title":"VRF\u673a\u5236"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#1","text":"\u5171\u8bc6\u7b97\u6cd5\u4f5c\u4e3a\u533a\u5757\u94fe\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u9762\u4e34\u7740\u4e00\u4e2a\u91cd\u8981\u7684\u6743\u8861\u95ee\u9898\uff0c\u5373\u5171\u8bc6\u8282\u70b9\u6570\u91cf\u548c\u5171\u8bc6\u6027\u80fd\u4e4b\u95f4\u7684\u6743\u8861\u3002\u5c3d\u7ba1\u5171\u8bc6\u8282\u70b9\u6570\u91cf\u8d8a\u591a\uff0c\u610f\u5473\u7740\u66f4\u9ad8\u7684\u53bb\u4e2d\u5fc3\u5316\u7a0b\u5ea6\uff0c\u4f46\u4e0e\u6b64\u540c\u65f6\u4f1a\u5bfc\u81f4\u5171\u8bc6\u7684\u6027\u80fd\u7684\u964d\u4f4e\u3002\u5728 PlatONE \u4e2d\uff0c\u5171\u8bc6\u7b97\u6cd5\u4e3a BFT \u7c7b\u5171\u8bc6\uff0c\u968f\u7740\u5171\u8bc6\u8282\u70b9\u6570\u91cf\u7684\u589e\u591a\uff0c\u5171\u8bc6\u6d88\u606f\u7684\u6570\u91cf\u4e5f\u968f\u4e4b\u589e\u591a\uff0c\u5bfc\u81f4\u533a\u5757\u94fe\u7684 TPS \u7684\u964d\u4f4e\u3002 \u4e3a\u4e86\u5728\u5171\u8bc6\u8282\u70b9\u6570\u91cf\u548c\u5171\u8bc6\u6027\u80fd\u4e4b\u95f4\u8fdb\u884c\u4e00\u4e2a\u8f83\u597d\u7684\u6298\u8877\uff0cPlatONE \u4e2d\u91c7\u7528\u968f\u673a\u9009\u53d6\u5171\u8bc6\u8282\u70b9\u96c6\u5408\u7684\u673a\u5236\uff0c\u5373\u901a\u8fc7\u4ece\u8f83\u591a\u6570\u91cf\u7684\u5019\u9009\u5171\u8bc6\u8282\u70b9\u4e2d\u968f\u673a\u5730\u9009\u53d6\u4e00\u5b9a\u6570\u91cf\u7684\u8282\u70b9\u6210\u4e3a\u67d0\u4e00\u5468\u671f\u4e2d\u5177\u4f53\u53c2\u4e0e\u5171\u8bc6\u7684\u8282\u70b9\u3002\u5982\u6b64\u4fbf\u80fd\u5728\u4fdd\u8bc1\u8f83\u597d\u7684\u53bb\u4e2d\u5fc3\u5316\u7684\u7a0b\u5ea6\u4ee5\u53ca\u5b89\u5168\u6027\u7684\u540c\u65f6\uff0c\u53c8\u80fd\u591f\u63d0\u4f9b\u8f83\u597d\u7684\u5171\u8bc6\u6027\u80fd\u3002 PlatONE \u4e2d\u968f\u673a\u9009\u53d6\u5171\u8bc6\u8282\u70b9\u7684\u673a\u5236\u57fa\u4e8e VRF\u3002VRF \u5373\u53ef\u9a8c\u8bc1\u968f\u673a\u51fd\u6570\uff08Verifiable Random Function\uff09 \u3002 VRF \u8fd9\u4e2a\u6982\u5ff5\u6700\u65e9\u7531 Micali\uff0cRabin \u548c Vadhan \u4e09\u4e2a\u4eba\u6240\u63d0\u51fa\u3002\u5b83\u662f\u4e00\u4e2a\u4f2a\u968f\u673a\u51fd\u6570\uff0c\u540c\u65f6\u5bf9\u5176\u8f93\u51fa\u7ed3\u679c\u63d0\u4f9b\u53ef\u516c\u5f00\u9a8c\u8bc1\u7684\u8bc1\u660e\u3002 \u5373\u7ed9\u5b9a\u4e00\u4e2a\u8f93\u5165\u503c x \uff0c\u62e5\u6709\u79c1\u94a5 sk \u7684\u4eba\u53ef\u4ee5\u8ba1\u7b97\u4e00\u4e2a\u51fd\u6570\u503c y=F_{sk}(x) \u4ee5\u53ca\u8bc1\u660e \\pi=P_{sk}(x) \u3002 \u5229\u7528\u8bc1\u660e \\pi \u548c\u516c\u94a5 PK=g^{sk} \uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u9a8c\u8bc1 y=F_{sk}(x) \u662f\u5426\u4e3a\u7528\u8be5\u7b97\u6cd5\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u5e76\u4e14\u4e0d\u4f1a\u6cc4\u9732\u4efb\u4f55\u5173\u4e8e\u79c1\u94a5 sk \u7684\u4fe1\u606f\u3002 \u76ee\u524d VRF \u7684\u6784\u9020\u65b9\u6848\u90fd\u662f\u57fa\u4e8e\u968f\u673a\u9884\u793a\u6a21\u578b\u4e0b\u7684\uff0c\u4e3b\u8981\u6709\u4e24\u5927\u7c7b\uff1a\u5176\u4e2d\u4e00\u7c7b\u91c7\u7528\u7684\u662f RSA \u6765\u6784\u9020 VRF\uff0c\u5373 RSA VRF\u3002\u53e6\u4e00\u79cd\u4f7f\u7528\u7684\u662f\u692d\u5706\u66f2\u7ebf\u5bc6\u7801\u5b66\u6765\u6784\u9020 VRF \uff0c\u5373 EC VRF\u3002\u672c\u6587\u4ecb\u7ecd\u7684 VRF \u65b9\u6848\u4e2d\u4f7f\u7528\u7684\u662f EC VRF\u3002","title":"1. \u6982\u8ff0"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#2-vrf","text":"","title":"2. \u5171\u8bc6\u548c VRF \u7b97\u6cd5\u4ea4\u4e92\u8bbe\u8ba1"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#21","text":"VRF \u673a\u5236\u6d89\u53ca\u7684\u7b97\u6cd5\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u4e24\u4e2a\uff1a VRF \u5728\u51fa\u5757\u8282\u70b9\u6253\u5305\u5b8c\u533a\u5757\u4e4b\u540e\u4e3a\u8be5\u533a\u5757\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570\u548c\u8bc1\u660e\uff08proof\uff09\uff0c\u5e76\u4e14\u5b58\u50a8\u5230\u533a\u5757\u4e2d\uff0c\u5f53\u5176\u5b83\u8282\u70b9\u63a5\u6536\u5230\u8be5\u533a\u5757\u65f6\u5bf9\u8bc1\u660e\u548c\u968f\u673a\u6570\u6821\u9a8c\u662f\u5426\u6b63\u786e\u3002 \u4e8c\u9879\u5206\u5e03 \u5728\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\u7684\u65f6\u5019\u901a\u8fc7\u4f7f\u7528\u4e8c\u9879\u5206\u5e03\u6765\u6839\u636e\u6bcf\u4e2a\u5171\u8bc6\u5019\u9009\u8282\u70b9\u7684\u6743\u91cd\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u5019\u9009\u8282\u70b9\u7684\u6982\u7387\uff0c\u8fd9\u6837\u6839\u636e\u6bcf\u4e2a\u8282\u70b9\u7684\u6982\u7387\u53bb\u505a\u9009\u4e3e\uff0c\u6982\u7387\u8d8a\u9ad8\u88ab\u9009\u4e2d\u7684\u51e0\u7387\u8d8a\u9ad8\u3002\u4e3a\u4e86\u589e\u52a0\u9009\u4e3e\u7684\u968f\u673a\u6027\uff0c\u8ba1\u7b97\u6982\u7387\u65f6\u9009\u62e9\u4f7f\u7528 VRF \u751f\u6210\u7684\u968f\u673a\u6570\u6765\u8fdb\u884c\u3002 \u6839\u636e\u4e0a\u56fe\u4e2d\u7684\u6570\u5b57\u989c\u8272\u53ef\u5212\u5206\u4e3a\u4e24\u7c7b\u4ea4\u4e92\u6d41\u7a0b\u6765\u89e6\u53d1\u4e0a\u8ff0\u4e24\u79cd\u7b97\u6cd5\uff1a \u7ea2\u8272\u6570\u5b57\uff1a \u5c5e\u4e8e\u51fa\u5757\u8282\u70b9\u89e6\u53d1\uff0c\u5305\u62ec\u4ee5\u4e0b\u6d41\u7a0b\uff08\u56fe\u4e2d\u6570\u5b57\u8868\u793a\uff09 2\uff1a \u7531 Worker \u5b8c\u6210\u51fa\u5757\u4e4b\u540e\uff0c\u8c03\u7528 VRF \u751f\u6210\u8bc1\u660e\u548c\u968f\u673a\u6570\u5e76\u4e14\u5b58\u50a8\u5230\u8be5\u533a\u5757\u4e2d 4\uff1a \u7531 Worker \u6267\u884c\u5b8c\u4ea4\u6613\uff0c\u8c03\u7528 VrfPlugin\u3002\u5982\u679c\u9700\u8981\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\uff0c\u5219\u8c03\u7528\u4e8c\u9879\u5206\u5e03\u7b97\u6cd5 \u84dd\u8272\u6570\u5b57\uff1a \u5c5e\u4e8e\u975e\u51fa\u5757\u8282\u70b9\u89e6\u53d1\uff08\u56fe\u4e2d\u6570\u5b57\u8868\u793a\uff09 1\uff1a \u7531\u5171\u8bc6\u8282\u70b9\u5728 consensus engine \u63a5\u6536\u5230\u533a\u5757\u65f6\uff0c\u6821\u9a8c\u8be5\u533a\u5757\u7684 VRF \u8f93\u51fa\u503c\u662f\u5426\u6b63\u786e 3\uff1a \u7531\u975e\u5171\u8bc6\u8282\u70b9\u540c\u6b65\u533a\u5757\u540e\uff0c\u6821\u9a8c\u8be5\u533a\u5757\u7684 VRF \u8f93\u51fa\u503c\u662f\u5426\u6b63\u786e 5\uff1a \u7531\u975e\u5171\u8bc6\u8282\u70b9\u540c\u6b65\u533a\u5757\u540e\uff0c\u8c03\u7528 VrfPlugin\u3002\u5982\u679c\u9700\u8981\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\uff0c\u5219\u8c03\u7528\u4e8c\u9879\u5206\u5e03\u7b97\u6cd5","title":"2.1. \u4ea4\u4e92\u56fe"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#22","text":"\u5171\u8bc6\u8282\u70b9\u7684\u9009\u4e3e\u662f\u7531 VRF \u548c\u4e8c\u9879\u5206\u5e03\u7ed3\u5408\u6765\u6267\u884c\u7684\u3002\u4e24\u4e2a\u7b97\u6cd5\u662f\u76f8\u4e92\u72ec\u7acb\u5730\u89e6\u53d1\u548c\u6267\u884c\u7684\uff0c\u53ea\u662f\u4e8c\u9879\u5206\u5e03\u7684\u6982\u7387\u8ba1\u7b97\u4f9d\u8d56\u4e8e VRF \u4ea7\u751f\u7684\u968f\u673a\u6027\uff0c\u901a\u8fc7\u968f\u673a\u6027\u53ef\u5b9e\u73b0\u6743\u91cd\u9ad8\u4f4e\u7684\u6982\u7387\u6027\uff0c\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\uff1a \u533a\u5757\u4ea7\u751f\u540e\uff0c\u4e3a\u533a\u5757\u751f\u6210 VRF \u8bc1\u660e\u548c\u968f\u673a\u6570\u5e76\u4e14\u5b58\u50a8\u5230\u533a\u5757\u4e2d\uff1b\u968f\u673a\u6570\u7528\u4f5c\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\uff0c\u8bc1\u660e\u7528\u4f5c\u8bc1\u660e\u8be5\u968f\u673a\u6570\u662f\u7531\u8be5\u51fa\u5757\u8282\u70b9\u6839\u636e\u524d\u4e00\u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\u4ea7\u751f\u7684 \u5728\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\u7684\u65f6\u5019\u5c31\u9700\u8981\u4f7f\u7528\u524d N \u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\u5bf9\u5e94\u5206\u914d\u7ed9 N \u4e2a\u8282\u70b9\u6765\u548c\u5f53\u524d\u533a\u5757\u7684\u968f\u673a\u6570\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u8ba1\u7b97\u4e4b\u540e\u7684\u503c\u4f5c\u4e3a\u4e8c\u9879\u5206\u5e03\u7684\u8f93\u5165\u503c\u6765\u8ba1\u7b97\u6982\u7387 \u6bcf\u4e2a\u8282\u70b9\u88ab\u5206\u914d\u7684\u968f\u673a\u6570\u4e0d\u540c\uff0c\u6240\u4ee5\u8ba1\u7b97\u540e\u6bcf\u4e2a\u8282\u70b9\u7684\u4e8c\u9879\u5206\u5e03\u7684\u8f93\u5165\u503c\u4e5f\u5c31\u4e0d\u540c\uff0c\u6240\u83b7\u53d6\u7684\u4e8c\u9879\u5206\u5e03\u7d2f\u79ef\u5206\u5e03\u66f2\u7ebf\u4e0a\u7684\u70b9\u5c31\u4e0d\u540c\uff0c\u56e0\u6b64\u4ea7\u751f\u4e86\u6982\u7387\u6027","title":"2.2. \u7c7b\u56fe"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#23","text":"1. Header \u4e2d\u539f\u6709\u5b57\u6bb5 Nonce \uff0c\u8be5\u5b57\u6bb5\u7c7b\u578b\u4e3a []byte \uff0c\u7528\u4f5c\u5b58\u50a8 VRF \u7684\u8bc1\u660e\uff08\u8bc1\u660e\u5b57\u6bb5\u8be6\u89e3\u89c1\u63a5\u53e3\u8bf4\u660e\uff09 2. \u7531\u4e8e\u9009\u4e3e\u5171\u8bc6\u8282\u70b9\u9700\u8981\u5f80\u524d N \u4e2a\uff08\u4e5f\u5c31\u662f\u5019\u9009\u8005\u8282\u70b9\u7684\u4e2a\u6570\uff09\u533a\u5757\u7684\u968f\u673a\u6570\uff0c\u6240\u4ee5\u8fd9\u4e9b\u968f\u673a\u6570\u9700\u8981\u4ee5\u5408\u9002\u65b9\u5f0f\u8fdb\u884c\u5b58\u50a8\u4ee5\u65b9\u4fbf\u8bfb\u53d6\u3002 \u7531\u4e8e N \u4ee3\u8868\u7684\u662f\u5f85\u9009\u4e3e\u7684\u8282\u70b9\u6570\u91cf\uff0c\u662f\u4e0d\u5b9a\u7684\u6570\u5b57\uff0c\u56e0\u6b64\u53ef\u4ee5\u7f13\u5b58\u524d\u82e5\u5e72\u4e2a\u9884\u5148\u786e\u5b9a\u6570\u91cf\u7684\u533a\u5757\u7684\u968f\u673a\u6570\u3002\u8be5\u9884\u5148\u786e\u5b9a\u6570\u91cf\u76ee\u524d\u6682\u5b9a\u4e3a 100\uff0c\u4e14\u8be5\u6570\u5b57\u53ef\u4ee5\u5728\u8282\u70b9\u542f\u52a8\u547d\u4ee4\u884c\u4e2d\u901a\u8fc7\u76f8\u5e94\u7684 flag\uff08\u6682\u5b9a --nonceCache\uff09 \u8fdb\u884c\u6309\u9700\u8bbe\u7f6e\u3002","title":"2.3. \u5b58\u50a8"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#24","text":"","title":"2.4. \u7b97\u6cd5\u5177\u4f53\u4e1a\u52a1\u903b\u8f91"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#241-vrf","text":"\u751f\u6210\u8bc1\u660e \uff1a\u7531\u51fa\u5757\u8282\u70b9\u5728 worker \u7684 commitNewWork \u4e2d\u6267\u884c\u4ea4\u6613\u524d\uff0c\u8c03\u7528 VRF \u7684 Prove \u51fd\u6570\u5bf9\u8be5\u533a\u5757\u751f\u6210\u8bc1\u660e\u548c\u968f\u673a\u6570\u5e76\u5b58\u50a8\u5230 Header \u4e2d\u7684 Nonce \u5b57\u6bb5 \u5171\u8bc6\u8282\u70b9\u63a5\u6536\u533a\u5757 \uff1a\u7531\u5171\u8bc6\u8282\u70b9\u5728\u63a5\u6536\u5230\u63d0\u8bae\u533a\u5757\u540e\uff0c\u8c03\u7528 VRF \u7684 Verify \u51fd\u6570\u5bf9\u8be5\u533a\u5757\u7684\u8bc1\u660e\u6821\u9a8c\u662f\u5426\u6b63\u786e \u975e\u5171\u8bc6\u8282\u70b9\u540c\u6b65\u533a\u5757 \uff1a\u8fd9\u91cc\u975e\u5171\u8bc6\u8282\u70b9\u5305\u62ec\u672c\u5468\u671f\u9009\u4e3e\u524d\u7684\u5171\u8bc6\u5019\u9009\u8282\u70b9\u4ee5\u53ca\u89c2\u5bdf\u8005\u8282\u70b9\u3002\u540c\u6b65\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5206\u522b\u662f downloader \u548c fetcher \u6a21\u5757\uff0c\u5b83\u4eec\u540c\u6b65\u533a\u5757\u4e4b\u540e\u6700\u7ec8\u8c03\u7528 blockChain \u7684 InsertChain \u51fd\u6570\u5904\u7406\u533a\u5757\uff0c\u5728 InsertChain \u51fd\u6570\u4e2d\u8c03\u7528 VRF \u7684 Verify \u51fd\u6570\u5bf9\u8be5\u533a\u5757\u7684\u8bc1\u660e\u6821\u9a8c\u662f\u5426\u6b63\u786e","title":"2.4.1. VRF \u76f8\u5173"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#242","text":"\u51fa\u5757\u8282\u70b9 \uff1a\u5728\u9009\u4e3e\u8fc7\u7a0b\u89e6\u53d1\u65f6\uff0c worker \u4e2d\u6267\u884c\u5b8c\u4ea4\u6613\u4e4b\u540e\u8c03\u7528 VrfPlugin \u7684 Election \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8c03\u7528 binomial_distribution \u9009\u4e3e\u5171\u8bc6\u8282\u70b9 \u975e\u51fa\u5757\u8282\u70b9 \uff1a\u5728\u9009\u4e3e\u8fc7\u7a0b\u89e6\u53d1\u65f6\uff0c blockChain \u4e2d\u6267\u884c\u5b8c\u4ea4\u6613\u4e4b\u540e\u8c03\u7528 VrfPlugin \u7684 Election \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8c03\u7528 binomial_distribution \u8ba1\u7b97\u51fa\u5171\u8bc6\u8282\u70b9\u3002 \u9009\u4e3e\u89e6\u53d1\u6761\u4ef6 \uff1a\u53c2\u6570\u7ba1\u7406\u5408\u7ea6\u4e2d\uff0cVRF \u9009\u4e3e\u6807\u5fd7\u88ab\u89e6\u53d1\u65f6\uff0c\u901a\u8fc7 Config \u6a21\u5757\u7684\u4e8b\u4ef6\u901a\u77e5\u65b9\u5f0f\u901a\u77e5\u5230 VRF \u6a21\u5757\uff0c\u4ece\u800c\u89e6\u53d1 VRF \u5171\u8bc6\u8282\u70b9\u9009\u4e3e\u7684\u8fc7\u7a0b\u3002","title":"2.4.2. \u4e8c\u9879\u5206\u5e03\u76f8\u5173"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#243-binomial_distribution","text":"\u83b7\u53d6\u5f85\u9009\u4e3e\u7684\u5171\u8bc6\u5019\u9009\u8282\u70b9\u5217\u8868 \u83b7\u53d6\u5f53\u524d\u533a\u5757\u7684\u968f\u673a\u6570\uff08\u4ece Block \u4e2d\u8c03\u7528 Nonce \u51fd\u6570\u8fd4\u56de\u8bc1\u660e\uff0c\u518d\u8c03\u7528 VRF \u7684 ProofToHash \u51fd\u6570\u8fd4\u56de\u968f\u673a\u6570\uff09 \u6839\u636e\u7f13\u5b58\u4e2d\u4fdd\u5b58\u7684\u968f\u673a\u6570\u83b7\u53d6\u524d N \u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\uff0c\u82e5\u7f13\u5b58\u7684\u968f\u673a\u6570\u4e2a\u6570\u4e0d\u8db3 N \u4e2a\uff0c\u5219\u4ece\u94fe\u4e0a\u8bfb\u53d6\u5269\u4f59\u7684\u533a\u5757\u7684\u968f\u673a\u6570 \u8ba1\u7b97\u5355\u4e2a\u6743\u91cd\u88ab\u9009\u4e2d\u7684\u6982\u7387\uff0cp=(\u5f85\u9009\u4e3e\u5217\u8868\u603b\u6743\u91cd/\u5f85\u9009\u4e3e\u5217\u8868\u4eba\u6570)*\u9009\u4e3e\u4eba\u6570/\u5f85\u9009\u4e3e\u5217\u8868\u603b\u6743\u91cd \u6bcf\u4e2a\u5171\u8bc6\u5019\u9009\u8282\u70b9\u8c03\u7528 NewBinomialDistribution \u51fd\u6570\uff0c\u5e76\u5c06\u5404\u81ea\u7684n(\u6743\u91cd)\u3001\u548c\u4e0a\u4e00\u6b65\u5f97\u5230\u7684p(\u6982\u7387)\uff0c\u4f20\u5165\u51fd\u6570\u4e2d\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61 \u5206\u914d\u968f\u673a\u6570\u7ed9\u6bcf\u4e2a\u5019\u9009\u8282\u70b9\uff0c\u5e76\u4e0e\u5f53\u524d\u533a\u5757\u7684\u968f\u673a\u6570\u505a\u5f02\u6216\uff0c\u5f97\u51fa\u7684\u503c\u518d\u9664\u4ee5(2\u7684256\u6b21\u65b9-1)\u5f97\u51fa0~1\u4e4b\u95f4\u7684\u6982\u7387\u503c targetP \u6bcf\u4e2a\u5019\u9009\u4eba\u8c03\u7528 InverseCumulativeProbability \u51fd\u6570\uff0c\u5e76\u628a\u4e0a\u4e00\u6b65\u5f97\u5230\u7684\u6982\u7387\u503c targetP \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5230\u51fd\u6570\u4e2d\uff0c\u5f97\u51fa targetP \u6240\u5c5e\u7684\u7d2f\u79ef\u5206\u5e03\u66f2\u7ebf\u4e0a\u7684 x \u503c \u6700\u7ec8\u6839\u636e\u6bcf\u4e2a\u9a8c\u8bc1\u4eba\u8ba1\u7b97\u6240\u5f97\u7684 x \u503c\u8fdb\u884c\u5012\u5e8f\u6392\u5e8f\uff0c\u53d6\u524d\u9762 V \u4e2a\u9a8c\u8bc1\u4eba\u4f5c\u4e3a\u4e0b\u4e00\u5468\u671f\u7684\u5171\u8bc6\u8282\u70b9\u3002\u5176\u4e2d V \u662f\u5171\u8bc6\u8282\u70b9\u7684\u4e2a\u6570\u3002V \u7684\u503c\u4ece config \u6a21\u5757\u83b7\u53d6\uff0c\u5373\u6bcf\u6b21 VRF \u9009\u4e3e\u89e6\u53d1\u65f6\uff0c\u4ece\u53c2\u6570\u7ba1\u7406\u5408\u7ea6\u4e2d\u83b7\u53d6\u7684\uff0c\u7531 Config \u6a21\u5757\u4ee5\u53c2\u6570\u5f62\u5f0f\u653e\u5728\u4e8b\u4ef6\u901a\u77e5\u4e2d\u4f20\u9012\u8fc7\u6765\u3002 \u4e0b\u56fe\u4e3a\u524dN\u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\u5f02\u6216\u89c4\u5219\uff1a \uff08N \u7684\u5b9e\u4f8b\u53d6\u503c\u4e3a 101\uff09 \u6309\u5171\u8bc6\u5019\u9009\u8282\u70b9\u7684\u6392\u540d\uff08\u9ed8\u8ba4\u6309\u7167\u8282\u70b9\u5728\u6570\u7ec4\u4e2d\u7684\u987a\u5e8f\uff09\uff0c\u4f9d\u6b21\u5c06\u524d N=101 \u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\u5206\u914d\u7ed9\u5404\u4e2a\u5171\u8bc6\u5019\u9009\u8282\u70b9\u3002\u4f8b\u5982\uff1a\u5f80\u524d1\u4e2a\u533a\u5757\u7684\u968f\u673a\u6570\u5206\u914d\u7ed9\u6700\u540e\u4e00\u540d\u5019\u9009\u8282\u70b9\uff0c\u5f80\u524d\u7b2c2\u4e2a\u5757\u7684\u968f\u673a\u6570\u5206\u914d\u7ed9\u5012\u6570\u7b2c\u4e8c\u540d\u5019\u9009\u8282\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5019\u9009\u8282\u70b9\u8fd8\u62e5\u6709\u5f53\u524d\u533a\u5757\u7684\u968f\u673a\u6570\u3002","title":"2.4.3. binomial_distribution \u9009\u4e3e\u6d41\u7a0b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#25","text":"\u5bf9\u5e94\u7740 VRF \u7684\u8bbe\u8ba1\uff0c\u5728\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u4e2d\uff0c\u8282\u70b9\u7c7b\u578b\u4f1a\u6709\u5982\u4e0b\u51e0\u79cd\uff1a \u89c2\u5bdf\u8005\u8282\u70b9 \u4e0d\u53c2\u4e0e\u5171\u8bc6\u8282\u70b9\u7684\u9009\u4e3e\uff0c\u53ea\u540c\u6b65\u533a\u5757 \u5171\u8bc6\u5019\u9009\u8282\u70b9 \u53c2\u4e0e\u5171\u8bc6\u8282\u70b9\u7684\u9009\u4e3e\uff1b\u5982\u679c\u6ca1\u6709\u5728\u672c\u5171\u8bc6\u5468\u671f\u4e2d\u88ab\u9009\u4e3a\u5171\u8bc6\u8282\u70b9\uff0c\u5219\u540c\u6837\u8fdb\u884c\u533a\u5757\u540c\u6b65 \u5171\u8bc6\u8282\u70b9 \u5728\u672c\u5171\u8bc6\u5468\u671f\u5185\u4ece\u5019\u9009\u8282\u70b9\u88ab\u9009\u4e3e\u4e3a\u5171\u8bc6\u8282\u70b9\uff0c\u53c2\u4e0e\u5171\u8bc6\u7684\u8fd0\u884c\u3002\u5728\u4e0b\u4e00\u5171\u8bc6\u5468\u671f\u4e2d\uff0c\u6240\u6709\u7c7b\u578b\u4e3a\u5171\u8bc6\u8282\u70b9\u548c\u5171\u8bc6\u5019\u9009\u8282\u70b9\u7684\u8282\u70b9\u90fd\u5c06\u53c2\u4e0e VRF \u5171\u8bc6\u8282\u70b9\u7684\u9009\u4e3e\u8fc7\u7a0b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709\u89c2\u5bdf\u8005\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u4e0d\u53c2\u4e0e\u5171\u8bc6\u8282\u70b9\u7684\u9009\u4e3e\u3002","title":"2.5. \u5173\u4e8e\u8282\u70b9\u7684\u7c7b\u578b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#26","text":"\u8282\u70b9\u7684\u5c5e\u6027\uff0c\u9664\u5df2\u6709\u7684\u4e4b\u5916\uff0c\u8fd8\u5305\u62ec\uff1a \u8282\u70b9\u7684\u6743\u91cd\uff08\u76ee\u524d\u8282\u70b9\u7684\u6743\u91cd\u9ed8\u8ba4\u76f8\u540c\uff09","title":"2.6. \u5173\u4e8e\u8282\u70b9\u7684\u5c5e\u6027"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#27","text":"","title":"2.7. \u7b97\u6cd5\u63a5\u53e3"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#271-vrf_secp-256k1","text":"\u4f7f\u7528secp256k1\u66f2\u7ebf\u7684vrf\u7b97\u6cd5\u5b9e\u73b0 ECVRF_prove\u51fd\u6570 \u8be5\u51fd\u6570\u7528\u4e8e\u6839\u636e\u8f93\u5165\u6570\u636e\u6765\u751f\u6210\u968f\u673a\u6570\u548c\u8bc1\u660e\uff0c\u968f\u673a\u6570\u548c\u8bc1\u660e\u662f\u62fc\u63a5\u5728\u540c\u4e00\u4e2abyte\u6570\u7ec4\u91cc\u9762\u7684\uff0c\u524d1~33\u4f4d\u4e3a\u968f\u673a\u6570 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pk []byte \u516c\u94a5 sk []byte \u79c1\u94a5 m []byte \u539f\u59cb\u6570\u636e \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pi []byte \u968f\u673a\u6570\u548c\u8bc1\u660e err error \u5931\u8d25\u9519\u8bef ECVRF_verify\u51fd\u6570 \u8be5\u51fd\u6570\u7528\u4e8e\u6821\u9a8c\u968f\u673a\u6570\u548c\u8bc1\u660e\uff0c\u662f\u5426\u5c5e\u4e8e\u8be5\u516c\u94a5\u751f\u6210\u3001\u662f\u5426\u57fa\u4e8e\u8be5\u539f\u59cb\u6570\u636e\u751f\u6210 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pk []byte \u516c\u94a5 pi []byte \u968f\u673a\u6570\u548c\u8bc1\u660e m []byte \u539f\u59cb\u6570\u636e \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 success bool \u662f\u5426\u6b63\u786e err error \u5931\u8d25\u9519\u8bef ECVRF_proof2hash\u51fd\u6570 \u8be5\u51fd\u6570\u7528\u4e8e\u4ece\u8bc1\u660e\u4e2d\u89e3\u6790\u51fa\u968f\u673a\u6570 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pi []byte \u968f\u673a\u6570\u548c\u8bc1\u660e \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 randomNumber []byte \u4ece\u8bc1\u660epi\u4e2d\u89e3\u6790\u51fa\u6765\u7684\u968f\u673a\u6570","title":"2.7.1. vrf_secp  256k1"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#272-vrf","text":"\u8be5\u7c7b\u662f\u5bf9\u5177\u4f53\u5b9e\u73b0\u7b97\u6cd5\u7684\u5c01\u88c5\uff0c\u4e0d\u66b4\u9732\u5177\u4f53\u66f2\u7ebf\uff0c\u53ea\u5bf9\u5916\u63d0\u4f9b\u901a\u7528\u7684\u63a5\u53e3\u548c\u53c2\u6570\uff0c\u7136\u540e\u8c03\u7528\u5177\u4f53\u5b9e\u73b0\u7b97\u6cd5\u7c7b\uff0c\u6784\u9020\u6240\u9700\u53c2\u6570\u4f20\u9012\u8fc7\u53bb Prove\u51fd\u6570 \u751f\u6210\u8bc1\u660e\u548c\u968f\u673a\u6570 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 privateKey ecdsa.PrivateKey \u79c1\u94a5 data []byte \u539f\u59cb\u6570\u636e \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pi []byte \u968f\u673a\u6570\u548c\u8bc1\u660e err error \u5931\u8d25\u9519\u8bef Verify\u51fd\u6570 \u6821\u9a8c\u8bc1\u660e\u548c\u968f\u673a\u6570\u662f\u5426\u6b63\u786e \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 publicKey ecdsa.PublicKey \u516c\u94a5 pi []byte \u8bc1\u660e\u548c\u968f\u673a\u6570 data []byte \u539f\u59cb\u6570\u636e \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 success bool \u662f\u5426\u6b63\u786e err error \u5931\u8d25\u9519\u8bef ProofToHash\u51fd\u6570 \u901a\u8fc7\u8bc1\u660e\u89e3\u6790\u51fa\u968f\u673a\u6570 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 pi []byte \u8bc1\u660e\u548c\u968f\u673a\u6570 \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 randomNumber []byte \u4ece\u8bc1\u660epi\u4e2d\u89e3\u6790\u51fa\u6765\u7684\u968f\u673a\u6570","title":"2.7.2. vrf"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/VRF/PlatONE%20%E5%85%B1%E8%AF%86%E7%BB%93%E5%90%88%20VRF%20%E6%9C%BA%E5%88%B6/#273-binomial_distribution","text":"\u4e8c\u9879\u5206\u5e03\u7b97\u6cd5\u7684\u5b9e\u73b0 NewBinomialDistribution\u51fd\u6570 \u5b9e\u4f8b\u5316\u4e00\u4e2a\u4e8c\u9879\u5206\u5e03\u5bf9\u8c61\uff0c\u7528\u4f5c\u8ba1\u7b97\u6982\u7387\u66f2\u7ebf\u7684\uff0c\u7531\u4e24\u4e2a\u53c2\u6570\u6765\u6784\u6210\uff1a\u6b21\u6570\u548c\u6982\u7387 \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 n int \u6743\u91cd\u503c\uff08\u4f2f\u52aa\u5229\u5b9e\u9a8c\u7684\u6b21\u6570\uff09 p float64 \u6210\u529f\u6982\u7387\u503c\uff08\u5355\u6b21\u4f2f\u52aa\u5229\u5b9e\u9a8c\u7684\u6982\u7387\uff09 \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 binomialDistribution BinomialDistribution \u4e8c\u9879\u5206\u5e03\u7ed3\u6784\u4f53 CumulativeProbability\u51fd\u6570 \u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff0c\u8ba1\u7b97\u66f2\u7ebf\u4e0a\u5230\u67d0\u70b9\uff08\u67d0\u6b21\uff09\u4e3a\u6b62\u7684\u8303\u56f4\u7684\u6982\u7387\u503c \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 x int \u6b21\u6570 \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 ret float64 x\u70b9\u4e0a\u7684\u6982\u7387\u503c InverseCumulativeProbability\u51fd\u6570 \u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff0c\u901a\u8fc7\u6982\u7387\u503c\u53cd\u5411\u8ba1\u7b97\u51fa\u6982\u7387\u6240\u5c5e\u7684\u67d0\u70b9\u7684\u503cx \u5165\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 p float64 \u67d0\u70b9\uff08\u67d0\u6b21\uff09\u7684\u6982\u7387\u503c \u51fa\u53c2\uff1a \u53c2\u6570\u540d\u79f0 \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0 x int \u6982\u7387\u503c\u5bf9\u5e94\u7684\u67d0\u70b9\u7684x\u503c","title":"2.7.3. binomial_distribution"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/","text":"\u56fd\u5bc6sm2\u7b97\u6cd5 1. \u6982\u8ff0 SM2\u7b97\u6cd5\u662f\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u653f\u5e9c\u91c7\u7528\u7684\u4e00\u79cd\u516c\u94a5\u52a0\u5bc6\u6807\u51c6\uff0c\u7531\u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40\u4e8e2010\u5e7412\u670817\u65e5\u53d1\u5e03\u3002\u5728\u5546\u7528\u5bc6\u7801\u4f53\u7cfb\u4e2d\uff0cSM2\u7528\u4e8e\u66ff\u6362RSA\u7b97\u6cd5\uff0c\u53ef\u7528\u6765\u5b9e\u73b0\u975e\u5bf9\u79f0\u52a0\u5bc6\u3001\u6570\u5b57\u7b7e\u540d\u3001\u5bc6\u94a5\u4ea4\u6362\u7b49\u529f\u80fd\u3002\u4f5c\u4e3a\u4e00\u79cd\u57fa\u4e8e\u692d\u5706\u66f2\u7ebf\u7684\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\uff0cSM2\u7b97\u6cd5\u5728\u76f8\u540c\u5b89\u5168\u7a0b\u5ea6\u4e0b\uff0c\u8f83RSA\u7b97\u6cd5\u5728\u5bc6\u94a5\u89c4\u6a21\u4e0a\u5b58\u5728\u4f18\u52bf\u3002 SM2 RSA \u5bc6\u94a5\u89c4\u6a21 192-256bit 2048-4096bit \u7b97\u6cd5\u6807\u51c6\u5305\u62ec4\u4e2a\u90e8\u5206\uff1a 1. \u603b\u5219\uff0c\u9002\u7528\u4e8e\u57fa\u57df\u4e3a\u7d20\u57df\u548c\u4e8c\u5143\u6269\u57df\u7684\u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\uff1b 2. \u6570\u5b57\u7b7e\u540d\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u5546\u7528\u5bc6\u7801\u5e94\u7528\u4e2d\u7684\u6570\u5b57\u7b7e\u540d\u548c\u9a8c\u8bc1\uff0c\u53ef\u6ee1\u8db3\u591a\u79cd\u5bc6\u7801\u5e94\u7528\u4e2d\u7684\u8eab\u4efd\u8ba4\u8bc1\u548c\u6570\u636e\u5b8c\u6574\u6027\u3001\u771f\u5b9e\u6027\u7684\u5b89\u5168\u9700\u6c42\uff1b 3. \u5bc6\u94a5\u4ea4\u6362\u534f\u8bae\uff0c\u9002\u7528\u4e8e\u5546\u7528\u5bc6\u7801\u5e94\u7528\u4e2d\u7684\u5bc6\u94a5\u4ea4\u6362\uff0c\u53ef\u6ee1\u8db3\u901a\u4fe1\u53cc\u65b9\u7ecf\u8fc7\u4e24\u6b21\u6216\u53ef\u9009\u4e09\u6b21\u4fe1\u606f\u4f20\u9012\u8fc7\u7a0b\uff0c\u8ba1\u7b97\u83b7\u53d6\u4e00\u4e2a\u7531\u53cc\u65b9\u5171\u540c\u51b3\u5b9a\u7684\u5171\u4eab\u79d8\u5bc6\u5bc6\u94a5\uff08\u4f1a\u8bdd\u5bc6\u94a5\uff09\uff1b 4. \u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u5546\u7528\u5bc6\u7801\u5e94\u7528\u4e2d\u7684\u6d88\u606f\u52a0\u89e3\u5bc6\uff0c\u6d88\u606f\u53d1\u9001\u8005\u53ef\u4ee5\u5229\u7528\u63a5\u6536\u8005\u7684\u516c\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u52a0\u5bc6\uff0c\u63a5\u6536\u8005\u7528\u5bf9\u5e94\u7684\u79c1\u94a5\u8fdb\u884c\u89e3\u5bc6\uff1b \u76f8\u5173\u6807\u51c6\u4e3a\u201cGM/T 0003.1-2012 SM2 \u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7b2c1\u90e8\u5206\uff1a\u603b\u5219\u201d\uff0c\u201cGM/T 0003.2-2012 SM2 \u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7b2c2\u90e8\u5206\uff1a\u6570\u5b57\u7b7e\u540d\u7b97\u6cd5\u201d\uff0c\u201cGM/T 0003.3-2012 SM2 \u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7b2c3\u90e8\u5206\uff1a\u5bc6\u94a5\u4ea4\u6362\u534f\u8bae\u201d\uff0c\u201cGM/T 0003.4-2012 SM2 \u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7b2c4\u90e8\u5206\uff1a\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u201d\uff0c\u201cGM/T 0003.5-2012 SM2 \u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7b2c5\u90e8\u5206\uff1a\u53c2\u6570\u5b9a\u4e49\u201c\u3002 2. \u7b7e\u540d\u7b97\u6cd5 \u6570\u5b57\u7b7e\u540d\u662f\u9644\u52a0\u5728\u6570\u636e\u5355\u5143\u4e0a\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u6216\u662f\u5bf9\u6570\u636e\u5355\u5143\u6240\u4f5c\u5bc6\u7801\u53d8\u6362\u7684\u7ed3\u679c\uff0c\u5f53\u6b63\u5e38\u5e94\u7528\u65f6\u63d0\u4f9b\u5982\u4e0b\u670d\u52a1\uff1a \u6570\u636e\u6765\u6e90\u7684\u786e\u8ba4\uff1b \u6570\u636e\u5b8c\u6574\u6027\u7684\u9a8c\u8bc1\uff1b \u7b7e\u540d\u8005\u4e0d\u53ef\u62b5\u8d56\u7684\u4fdd\u8bc1\u3002 \u6570\u5b57\u7b7e\u540d\u7b97\u6cd5\u7531\u4e00\u4e2a\u7b7e\u540d\u8005\u5bf9\u6570\u636e\u4ea7\u751f\u6570\u5b57\u7b7e\u540d\uff0c\u5e76\u7531\u4e00\u4e2a\u9a8c\u8bc1\u8005\u9a8c\u8bc1\u7b7e\u540d\u7684\u53ef\u9760\u6027\u3002\u6bcf\u4e2a\u7b7e\u540d\u8005\u6709\u4e00\u4e2a\u516c\u94a5\u548c\u4e00\u4e2a\u79c1\u94a5\uff0c\u5176\u4e2d\u79c1\u94a5\u7528\u4e8e\u4ea7\u751f\u7b7e\u540d\uff0c\u9a8c\u8bc1\u8005\u7528\u7b7e\u540d\u8005\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\u3002 \u5728\u7b7e\u540d\u7684\u751f\u6210\u8fc7\u7a0b\u4e4b\u524d\uff0c\u8981\u7528\u5bc6\u7801\u6742\u51d1\u51fd\u6570\uff08\u54c8\u5e0c\u51fd\u6570\uff09\u5bf9\u6d88\u606fM (\u5305\u542b Z_A \u548c\u5f85\u7b7e\u6d88\u606fM)\u8fdb\u884c\u538b\u7f29\u3002 \u540c\u7406\uff0c\u5728\u9a8c\u8bc1\u8fc7\u7a0b\u4e4b\u524d\uff0c\u8981\u7528\u5bc6\u7801\u6742\u51d1\u51fd\u6570\u5bf9 M \u2032 (\u5305\u542b Z_A \u548c\u9a8c\u8bc1\u6d88\u606f M\u2032 )\u8fdb\u884c\u538b\u7f29\u3002 2.1. \u7cfb\u7edf\u53c2\u6570 \u692d\u5706\u66f2\u7ebf\u7684\u7cfb\u7edf\u53c2\u6570\u4e3a\uff1a F_q \uff1a\u5305\u542b q \u4e2a\u5143\u7d20\u7684\u7d20\u57df \u692d\u5706\u66f2\u7ebf\u65b9\u7a0b\u7684\u53c2\u6570a\u3001b G \uff1a\u692d\u5706\u66f2\u7ebf\u7684\u57fa\u70b9\uff08 G=(x_G,y_G) \uff09 n \uff1a\u57fa\u70b9G\u7684\u9636\uff0c\u7531\u57fa\u70b9 G \u751f\u6210\u7684\u7fa4\u7684\u5143\u7d20\u7684\u4e2a\u6570 \u53ef\u9009\u9879\uff1an\u7684\u4f59\u56e0\u5b50 h \uff08 h = |E(F_q)|/n \uff09 \u9664\u4e86\u5b9a\u4e49\u4e86\u692d\u5706\u66f2\u7ebf\u7684\u53c2\u6570\u548c\u7b7e\u540d\u7b97\u6cd5\u6240\u9700\u8981\u7684\u8f85\u52a9\u51fd\u6570\uff1a\u54c8\u5e0c\u51fd\u6570\u548c\u968f\u673a\u6570\u53d1\u751f\u5668\u5916\uff0c\u6807\u51c6\u5f15\u5165\u4e86\u7528\u6237\u4fe1\u606f\u6807\u8bc6\u7684\u6982\u5ff5\u3002 \u7b7e\u540d\u8005\u62e5\u6709\u957f\u5ea6\u4e3a entlen_A \u6bd4\u7279\u7684\u53ef\u8fa8\u522b\u6807\u8bc6 ID_A \uff0c\u5728\u6807\u51c6\u89c4\u5b9a\u7684\u7b7e\u540d\u7b97\u6cd5\u4e2d\uff0c\u9700\u8981\u5728\u751f\u6210\u7b7e\u540d\u548c\u9a8c\u8bc1\u7b7e\u540d\u524d\u8ba1\u7b97\u7528\u6237A\u7684\u54c8\u5e0c\u503c Z_A \u3002 Z_A=H_{256}(ENTL_A||ID_A|| a||b||x_G||y_G||x_A||y_A) \uff0c\u5176\u4e2d ENTL_A \u662f\u7531 entl_A \u8f6c\u6362\u800c\u6210\u7684\u4e24\u4e2a\u5b57\u8282\u3002 2.2. \u7b7e\u540d\u751f\u6210 \u9884\u5904\u7406 \u8ba1\u7b97 Z_A \uff1a Z_A=H_{256}(ENTL_A||ID_A|| a||b||x_G||y_G||x_A||y_A) \u7b7e\u540d \u8f93\u5165\uff1aM\uff0c Z_A \uff0c\u79c1\u94a5 d_A \u8f93\u51fa\uff1a\u7b7e\u540d\u5bf9 (r,s) A1: \u6d88\u606f\u5904\u7406\uff1a \\overline M= Z_A||M A2: \u8ba1\u7b97 e=H_v(\\overline M) A3: \u4ea7\u751f\u968f\u673a\u6570 k\\in [1,n-1] A4: \u8ba1\u7b97\u66f2\u7ebf\u70b9 (x_1, y_1)=kG A5: \u8ba1\u7b97 r= (e+x_1)\\ mod\\ n \uff0c \u82e5 r=0 \u6216 r+k=n \u5219\u8fd4\u56deA3 A6: \u8ba1\u7b97 s= ((1+d_A)^{-1} (k- r*d_A))\\ mod\\ n \uff0c\u82e5 s=0 \u5219\u8fd4\u56deA3 A7: \u8f93\u51fa\u7b7e\u540d\u5bf9 (r,s) 2.3. \u7b7e\u540d\u9a8c\u8bc1 \u9884\u5904\u7406 \u8ba1\u7b97 Z_A \uff1a Z_A=H_{256}(ENTL_A||ID_A|| a||b||x_G||y_G||x_A||y_A) \u9a8c\u8bc1 \u8f93\u5165\uff1a\u6d88\u606f M' \uff0c\u7b7e\u540d (r^{'}, s^{'}) \uff0c \u516c\u94a5 P_A \u8f93\u51fa\uff1a1 or 0 B1: \u68c0\u9a8c r\u2032 \u2208[1,n-1] \u662f\u5426\u6210\u7acb\uff0c\u82e5\u4e0d\u6210\u7acb\u5219\u9a8c\u8bc1\u4e0d\u901a\u8fc7\uff1b B2: \u68c0\u9a8c s\u2032 \u2208[1,n-1] \u662f\u5426\u6210\u7acb\uff0c\u82e5\u4e0d\u6210\u7acb\u5219\u9a8c\u8bc1\u4e0d\u901a\u8fc7\uff1b B3: \u6d88\u606f\u5904\u7406\uff1a \\overline M^{'}= Z_A||M B4: \u8ba1\u7b97 e'=H_v(\\overline M^{'}) B5: \u8ba1\u7b97 t = (r'+ s')\\ mod\\ n B6: \u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 (x_1',y_1') = s'G+ tP_A B7: \u8ba1\u7b97 R=(e'+x_1')\\ mod\\ n \uff0c\u68c0\u9a8c R=r' \u662f\u5426\u6210\u7acb\uff0c\u82e5\u6210\u7acb\u5219\u9a8c\u8bc1\u901a\u8fc7\uff1b\u5426\u5219\u9a8c\u8bc1\u4e0d\u901a\u8fc7 2.4. \u6b63\u786e\u6027\u8bf4\u660e \u5c55\u5f00\u6b65\u9aa4B6\u4e2d\u7684\u7b49\u5f0f \\begin{align} s'G+ tP_A &= (s'+ (r'+s')d_A)G \\\\ &= s'(1 + d_A)G + r'd_AG \\end{align} \u6839\u636e\u7b7e\u540d\u751f\u6210\u4e2dA6\u6b65\u9aa4\u7684\u7b49\u5f0f\uff0c\u53ef\u5f97 k= s(1+d_A)+ rd_A \u56e0\u6b64\uff0c\u6b65\u9aa4B6\u4e2d\u7684\u7b49\u5f0f\u53ef\u4ee5\u6062\u590d\u51fa\u7b7e\u540d\u751f\u6210\u7684\u66f2\u7ebf\u70b9 kG 3. \u5bc6\u94a5\u4ea4\u6362 \u5bc6\u94a5\u4ea4\u6362\u534f\u8bae\u662f\u4e24\u4e2a\u7528\u6237A\u548cB\u901a\u8fc7\u4ea4\u4e92\u7684\u4fe1\u606f\u4f20\u9012\uff0c\u7528\u5404\u81ea\u7684\u79c1\u94a5\u548c\u5bf9\u65b9\u7684\u516c\u94a5\u6765\u5546\u5b9a\u4e00\u4e2a\u53ea\u6709\u4ed6\u4eec\u77e5\u9053\u7684\u79d8\u5bc6\u5bc6\u94a5\u3002\u8fd9\u4e2a\u5171\u4eab\u7684\u79d8\u5bc6\u5bc6\u94a5\u901a\u5e38\u7528\u5728\u67d0\u4e2a\u5bf9\u79f0\u5bc6\u7801\u7b97\u6cd5\u4e2d\u3002\u8be5\u5bc6\u94a5\u4ea4\u6362\u534f\u8bae\u80fd\u591f\u7528\u4e8e\u5bc6\u94a5\u7ba1\u7406\u548c\u534f\u5546\u3002 3.1. \u5bc6\u94a5\u4ea4\u6362\u6d41\u7a0b \u7528\u6237A\u548cB\u53cc\u65b9\u4e3a\u4e86\u751f\u6210\u76f8\u540c\u7684\u4f1a\u8bdd\u5bc6\u94a5\uff0c\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u4ea4\u4e92\uff1a \u8bb0 w=\u2308(\u2308log_2(n)\u2309/2)\u2309\u22121\u3002 \u7528\u6237A\uff1a A1\uff1a\u4ea7\u751f\u968f\u673a\u6570 r_A \u2208 [1, n-1] \uff1b A2\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 R_A = [r_A]G=(x_1,y_1) \uff1b A3\uff1a\u5c06 R_A \u53d1\u9001\u7ed9\u7528\u6237B\uff1b \u7528\u6237B\uff1a B1\uff1a\u4ea7\u751f\u968f\u673a\u6570 r_B \u2208 [1, n-1] \uff1b B2\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 R_B = [r_B]G=(x_2,y_2) \uff1b B3\uff1a\u8ba1\u7b97 \\overline x_2 = 2^w + (x_2\\&(2^w \u22121)) \uff1b B4\uff1a\u8ba1\u7b97 t_B = (d_B +\\overline x_2 \u00b7r_B)\\mod\\ n \uff1b B5\uff1a\u9a8c\u8bc1RA\u662f\u5426\u6ee1\u8db3\u692d\u5706\u66f2\u7ebf\u65b9\u7a0b\uff0c\u82e5\u4e0d\u6ee1\u8db3\u5219\u534f\u5546\u5931\u8d25\uff1b\u5426\u5219\u8ba1\u7b97 \\overline x_1 = 2^w + (x_1\\&(2^w \u22121)) B6\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 V = [h \u00b7t_B](P_A +[\\overline x_1]R_A) = (x_V ,y_V ) \uff0c\u82e5V\u662f\u65e0\u7a77\u8fdc\u70b9\uff0c\u5219B\u534f\u5546\u5931\u8d25\uff1b B7\uff1a\u8ba1\u7b97 K_B=KDF(x_V \u2225 y_V \u2225 Z_A \u2225 Z_B,klen) \uff1b B8\uff1a\u5c06 R_B \u53d1\u9001\u7ed9\u7528\u6237A\uff1b \u7528\u6237A\uff1a A4\uff1a\u8ba1\u7b97 \\overline x_1 = 2^w + (x_1\\&(2^w \u22121)) A5\uff1a\u8ba1\u7b97 t_A = (d_A +\\overline x_1 \u00b7r_A)\\mod\\ n \uff1b A6\uff1a\u9a8c\u8bc1 R_B \u662f\u5426\u6ee1\u8db3\u692d\u5706\u66f2\u7ebf\u65b9\u7a0b\uff0c\u82e5\u4e0d\u6ee1\u8db3\u5219\u534f\u5546\u5931\u8d25\uff1b\u5426\u5219\u8ba1\u7b97 \\overline x_2 = 2^w + (x_2\\&(2^w \u22121)) A7\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 U = [h \u00b7t_A](P_B + [\\overline x_2]R_B) = (x_U ,y_U ) \uff0c\u82e5U\u662f\u65e0\u7a77\u8fdc\u70b9\uff0c\u5219A\u534f\u5546\u5931\u8d25\uff1b A8\uff1a\u8ba1\u7b97 K_A=KDF(x_U \u2225 y_U \u2225 Z_A \u2225 Z_B,klen) \uff1b PS\uff1a\u4e0a\u8ff0\u6b65\u9aa4\u7701\u7565\u4e86\u6821\u9a8c\u6b65\u9aa4\u3002 \u6b63\u786e\u6027\u8bf4\u660e\uff1a \u5c06\u6b65\u9aa4B6\u548c\u6b65\u9aa4A7\u4e2d\u751f\u6210\u7684\u692d\u5706\u66f2\u7ebf\u70b9U\u548cV\u5206\u522b\u5c55\u5f00\uff0c\u53ef\u5f97\uff1a (x_V,y_V) = h( (d_B +\\overline x_2 \u00b7r_B))(d_A +\\overline x_1 \u00b7r_A)G (x_U,y_U) = h( (d_A +\\overline x_1 \u00b7r_A))(d_B +\\overline x_2 \u00b7r_B)G 4. \u516c\u94a5\u52a0\u5bc6 \u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u89c4\u5b9a\u53d1\u9001\u8005\u7528\u63a5\u6536\u8005\u7684\u516c\u94a5\u5c06\u6d88\u606f\u52a0\u5bc6\u6210\u5bc6\u6587\uff0c\u63a5\u6536\u8005\u7528\u81ea\u5df2\u7684\u79c1\u94a5\u5bf9\u6536\u5230\u7684\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\u8fd8\u539f\u6210\u539f\u59cb\u6d88\u606f\u3002 4.1. \u8f85\u52a9\u51fd\u6570 klen \u8981\u83b7\u5f97\u7684\u5bc6\u94a5\u6570\u636e\u7684\u6bd4\u7279\u957f\u5ea6 \u53c2\u6570 \u5b9a\u4e49 H_v() \u5176\u8f93\u51fa\u662f\u957f\u5ea6\u6070\u4e3av\u6bd4\u7279\u7684\u54c8\u5e0c\u51fd\u6570 ct 32\u6bd4\u7279\u6784\u6210\u7684\u8ba1\u6570\u5668 \u8f85\u52a9\u51fd\u6570\uff1a \u54c8\u5e0c\u51fd\u6570\uff1a\u4f7f\u7528\u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40\u6279\u51c6\u7684\u5bc6\u7801\u6742\u51d1\u7b97\u6cd5\uff0c\u5982SM3\u5bc6\u7801\u6742\u51d1\u7b97\u6cd5 KDF(Z, klen) : \u521d\u59cb\u5316\u8ba1\u6570\u5668 ct = 0x000000001 \u5bf9i\u4ece1\u5230 \\lceil klen/v \\rceil \u6267\u884c\uff1a \u8ba1\u7b97 H_{a_i} = H_v(Z|| ct) ct ++ //\u4e4b\u6240\u4ee5\u8981\u8ba1\u6570\u5668++\uff0c\u662f\u4e3a\u4e86\u6ee1\u8db3\u6700\u7ec8KDF\u7684\u8f93\u51fa\u662f\u5747\u5300\u968f\u673a\u7684\uff0c\u5982\u679c\u4e0d\u52a0\u7684\u8bdd\uff0c\u5219\u6bcf\u6b21hash\u8f93\u51fa\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u503c\u3002 \u82e5 klen/v \u662f\u6574\u6570\uff0c\u5219 H_a!_{\\lceil klen/v \\rceil} =H_{a_{\\lceil klen/v \\rceil}} \uff0c\u5426\u5219 H_a!_{\\lceil klen/v \\rceil} \u4e3a H_{a_{\\lceil klen/v \\rceil}} \u6700\u5de6\u8fb9\u7684( klen - (v \\times \\lfloor klen/v \\rfloor) )\u6bd4\u7279 K = H_{a_1} || H_{a_2}||...||H_{a_{\\lceil klen/v \\rceil-1}} || H_a!_{\\lceil klen/v \\rceil} 4.2. \u52a0\u5bc6\u6d41\u7a0b \u8f93\u5165\uff1a\u6d88\u606fM\uff0c klen \u4e3a\u6d88\u606f\u7684\u957f\u5ea6\uff0c\u516c\u94a5 P_B \u8f93\u51fa\uff1a\u4e34\u65f6\u516c\u94a5( C_1 )\u3001\u5bc6\u6587\uff08 C_2 \uff09\u3001\u6d88\u606f\u8ba4\u8bc1\u7801\uff08 C_3 \uff09 A1\uff1a\u4ea7\u751f\u968f\u673a\u6570 k\u2208[1,n-1] \uff1b A2\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 C_1=[k]G=(x_1,y_1) A3\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 S=[h]P_B \uff0c\u82e5S\u662f\u65e0\u7a77\u8fdc\u70b9\uff0c\u5219\u62a5\u9519\u5e76\u9000\u51fa\uff1b A4\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 [k]P_B=(x_2,y_2) // A\u4e0eB\u5171\u540c\u6301\u6709\u7684\u5bc6\u94a5\uff0c\u56e0\u4e3aA\u77e5\u9053B\u7684\u516c\u94a5 P_B \uff0c\u7136\u540eB\u662f\u77e5\u9053 C_1=kG \uff0cB\u53ef\u4ee5\u5229\u7528\u81ea\u5df1\u7684\u79c1\u94a5 d_B \u4e0e C_1 \u8ba1\u7b97\u51fa kP_B \u3002 A5\uff1a\u8ba1\u7b97 t=KDF(x_2 \u2225 y_2, klen) \uff0c\u82e5t\u4e3a\u51680\u6bd4\u7279\u4e32\uff0c\u5219\u8fd4\u56deA1\uff1b A6\uff1a\u8ba1\u7b97 C_2 = M \u2295 t \uff1b//t\u4e0d\u80fd\u5168\u4e3a0\uff0c\u5982\u679c\u5168\u4e3a0\uff0c\u5219C_2=M A7\uff1a\u8ba1\u7b97 C_3 = Hash(x_2 \u2225 M \u2225 y_2) \uff1b C_3 \u9a8c\u8bc1\u6d88\u606f\u7684\u5b8c\u6574\u6027\uff0c\u4ee5\u53ca\u9a8c\u8bc1\u7684\u786e\u662fA\u53d1\u51fa\u6765\u7684\u3002 A8\uff1a\u8f93\u51fa\u5bc6\u6587 C = C_1 \u2225 C_2 \u2225 C_3 \u3002 4.3. \u89e3\u5bc6\u6d41\u7a0b \u8f93\u5165\uff1a\u5bc6\u6587 C = C_1 \u2225 C_2 \u2225 C_3 \uff0c\u79c1\u94a5 d_B \u8f93\u51fa\uff1a\u660e\u6587 M' \u6216fail B1\uff1a\u9a8c\u8bc1 C_1 \u662f\u5426\u6ee1\u8db3\u692d\u5706\u66f2\u7ebf\u65b9\u7a0b\uff0c\u82e5\u4e0d\u6ee1\u8db3\u5219\u62a5\u9519\u5e76\u9000\u51fa\uff1b B2\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 S=[h]C_1 \uff0c\u82e5S\u662f\u65e0\u7a77\u8fdc\u70b9\uff0c\u5219\u62a5\u9519\u5e76\u9000\u51fa\uff1b B3\uff1a\u8ba1\u7b97 [d_B]C_1=(x_2,y_2) B4\uff1a\u8ba1\u7b97 t=KDF(x_2 \u2225 y_2, klen) \uff0c\u82e5t\u4e3a\u51680\u6bd4\u7279\u4e32\uff0c\u5219\u62a5\u9519\u5e76\u9000\u51fa\uff1b B5\uff1a\u8ba1\u7b97 M\u2032 = C_2 \u2295 t \uff1b B6\uff1a\u8ba1\u7b97 u = Hash(x_2 \u2225 M\u2032 \u2225 y_2) \uff0c\u68c0\u9a8c u = C_3 \uff0c\u82e5\u68c0\u9a8c\u5931\u8d25\u5219\u62a5\u9519\u5e76\u9000\u51fa\uff1b B7\uff1a\u8f93\u51fa\u660e\u6587 M' \u4ee3\u7406\u91cd\u52a0\u5bc6PRE \u968f\u7740\u5927\u6570\u636e\u548c\u4e91\u7aef\u5b58\u50a8\u670d\u52a1\u7684\u5174\u8d77\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u7528\u6237\u9009\u62e9\u5c06\u6570\u636e\u4ea4\u7531\u4e91\u7aef\u670d\u52a1\u5546\u8fdb\u884c\u5b58\u50a8\u3002\u4e3a\u4e86\u4fdd\u62a4\u7528\u6237\u6570\u636e\u7684\u9690\u79c1\uff0c\u7528\u6237\u5b58\u50a8\u5728\u4e91\u7aef\u7684\u6570\u636e\u662f\u4ee5\u5bc6\u6587\u5f62\u5f0f\u5b58\u5728\u7684\u3002\u5728\u73b0\u5b9e\u5e94\u7528\u4e2d\u5b58\u5728\u7740\u5927\u91cf\u6570\u636e\u5171\u4eab\u7684\u573a\u666f\u3002 \u5728\u4f20\u7edf\u7684\u6570\u636e\u5171\u4eab\u65b9\u6848\u4e2d\uff0c\u7528\u6237\u9700\u5148\u5c06\u52a0\u5bc6\u5b58\u50a8\u5728\u4e91\u7aef\u7684\u6587\u4ef6\u8fdb\u884c\u4e0b\u8f7d\uff0c\u5728\u672c\u5730\u89e3\u5bc6\uff0c\u7136\u540e\u518d\u4f7f\u7528\u5bc6\u94a5\u534f\u5546\u7b49\u65b9\u5f0f\u5c06\u6570\u636e\u5171\u4eab\u7ed9\u6570\u636e\u4f7f\u7528\u65b9\u3002\u800c\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u8017\u8d39\u6570\u636e\u62e5\u6709\u8005\u5927\u91cf\u7684\u901a\u4fe1\u548c\u8ba1\u7b97\u5f00\u9500\uff0c\u5e76\u4e14\u5c06\u5360\u7528\u7528\u6237\u672c\u5730\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 \u4ee3\u7406\u91cd\u52a0\u5bc6\u7684\u63d0\u51fa\u4e3a\u6570\u636e\u5171\u4eab\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\u3002\u5b83\u662f\u4e00\u79cd\u5141\u8bb8\u7b2c\u4e09\u65b9\uff08\u4ee3\u7406\uff09\u5bf9\u5bc6\u6587\u8fdb\u884c\u91cd\u52a0\u5bc6\uff0c\u4ece\u800c\u4f7f\u5f97\u88ab\u6388\u6743\u7528\u6237\uff08\u6570\u636e\u4f7f\u7528\u8005\uff09\u53ef\u4ee5\u89e3\u5bc6\u7684\u65b9\u6848\uff0c\u5b9e\u73b0\u4e86\u5728\u4e0d\u6cc4\u6f0f\u6570\u636e\u62e5\u6709\u8005\u79c1\u5bc6\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\uff0c\u4e91\u7aef\u5bc6\u6587\u6570\u636e\u7684\u5171\u4eab\u3002\u8be5\u65b9\u6848\u8f83\u4f20\u7edf\u65b9\u6848\u5728\u901a\u4fe1\u3001\u8ba1\u7b97\u548c\u5b58\u50a8\u5f00\u9500\u4e0a\u90fd\u5b58\u5728\u660e\u663e\u7684\u4f18\u52bf\uff0c\u5728\u6587\u4ef6\u5171\u4eab\uff0c\u90ae\u4ef6\u8f6c\u53d1\u7b49\u573a\u666f\u4e2d\u5b58\u5728\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u524d\u666f\u3002\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u5982\u4e0b\u4e00\u4e2a\u7b80\u8981\u7684\u4f8b\u5b50\u4ecb\u7ecdPRE\u7684\u6d41\u7a0b\uff1a \u5047\u8bbe\u7528\u6237Alice\u5728\u4e91\u7aef\u52a0\u5bc6\u5b58\u50a8\u4e86\u6587\u4ef6\uff0c\u73b0\u5728Alice\u60f3\u8981\u5c06\u8be5\u6587\u4ef6\u5171\u4eab\u7ed9\u53e6\u4e00\u4e2a\u7528\u6237Bob\u3002\u5176\u505a\u6cd5\u5982\u4e0b\uff1a Alice\u5229\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u548cBob\u7684\u79c1\u94a5/\u516c\u94a5\u751f\u6210\u91cd\u52a0\u5bc6\u5bc6\u94a5 rk_{A\\to B} \uff0c\u5e76\u628a\u8be5\u5bc6\u94a5\u53d1\u9001\u7ed9\u4ee3\u7406\uff1b \u4ee3\u7406\u4f7f\u7528\u91cd\u52a0\u5bc6\u5bc6\u94a5 rk_{A\\to B} \u5bf9Alice\u5b58\u653e\u5728\u4e91\u7aef\u7684\u5bc6\u6587\u6587\u4ef6\u8fdb\u884c\u91cd\u52a0\u5bc6\uff1b Bob\u76f4\u63a5\u4e0b\u8f7d\u91cd\u52a0\u5bc6\u540e\u7684\u6587\u4ef6\uff0c\u5e76\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6570\u636e\u8fdb\u884c\u89e3\u5bc6\u3002 \u96f6\u77e5\u8bc6\u8bc1\u660e \u96f6\u77e5\u8bc6\u8bc1\u660e\u8fd9\u4e2a\u6982\u5ff5\u6700\u65e9\u7531Goldwasser\u3001Micali\u548cRackoff\u63d0\u51fa\u7684\uff0c\u5176\u8868\u8fbe\u6838\u5fc3\u601d\u60f3\u662f\u8bc1\u660e\u8005\u8981\u5411\u9a8c\u8bc1\u8005\u8bc1\u660e\u4e00\u4e2astatement\u7684\u6b63\u786e\u6027\uff0c\u4e0e\u6b64\u540c\u65f6\u4e0d\u6cc4\u9732\u4efb\u4f55\u989d\u5916\u7684\u4fe1\u606f\u3002\u5b83\u5177\u6709\u5982\u4e0b\u4e09\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff1a \u5b8c\u5907\u6027completeness \u5408\u7406\u6027soundness \u96f6\u77e5\u8bc6\u6027zero-knowledge \u8fd1\u51e0\u5e74\u96f6\u77e5\u8bc6\u8bc1\u660e\u88ab\u5e7f\u6cdb\u5e94\u7528\u5230\u533a\u5757\u94fe\u4e2d\uff0c\u5982\u53ef\u9a8c\u8bc1\u7684\u5916\u5305\u8ba1\u7b97\u3001\u533f\u540d\u8bc1\u4e66\u3001\u8303\u56f4\u8bc1\u660e\u3001\u9690\u79c1\u5bc6\u7801\u5b66\u8d27\u5e01\u7b49\u9700\u8981\u5e73\u8861\u9690\u79c1\u6027\u548c\u673a\u5bc6\u6027\u7684\u5e94\u7528\u573a\u666f\uff0c\u5b83\u5df2\u7ecf\u5728\u9690\u79c1\u6027\u548c\u53ef\u6269\u5c55\u6027\u65b9\u9762\u6210\u4e3a\u4e86\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5de5\u5177\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5ba2\u6237\u7aef\u4e0b\u8f7d\u548c\u9a8c\u8bc1\u4ea4\u6613\u9891\u7e41\uff0c\u56e0\u6b64\u8981\u90e8\u7f72\u9ad8\u6548\u5b9e\u7528\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\uff0c\u9700\u8981\u8be5\u534f\u8bae\u7684\u8bc1\u660e\u8db3\u591f\u5c0f\uff0c\u9a8c\u8bc1\u8db3\u591f\u9ad8\u6548\uff08small proof size and fast verification\uff09\u3002\u968f\u7740\u5bc6\u7801\u5b66\u6280\u672f\u7684\u4e0d\u65ad\u53d1\u5c55\uff0c\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u843d\u5730\u5e94\u7528\u5c42\u51fa\u4e0d\u7a77\u3002\u8fd9\u4e9b\u4f18\u79c0\u7684\u9879\u76ee\u5bf9\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u6280\u672f\u7684\u5b9e\u7528\u6027\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u7684\u63a2\u7d22\uff1a \u57fa\u4e8eUTXO\u6a21\u578b\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae \uff1a\u96f6\u77e5\u8bc6\u8bc1\u660e\u5728\u5bc6\u7801\u5b66\u8d27\u5e01\u4e0a\u5177\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\uff0cZcash\u662fzk-SNARKs\u7684\u9996\u4e2a\u5e94\u7528\uff0c\u5b83\u5229\u7528Groth16\u534f\u8bae\uff0c\u5b9e\u73b0\u4e86\u57fa\u4e8eUTXO\u6a21\u578b\u4e0b\u4ea4\u6613\u53cc\u65b9\u5730\u5740\u548c\u91d1\u989d\u7684\u5b8c\u5168\u9690\u85cf\uff0c\u5e76\u4e14\u80fd\u591f\u751f\u6210\u8f83\u77ed\u7684\u9ad8\u6548\u7684\u53ef\u9a8c\u8bc1\u7684\u8bc1\u660e\u3002\u4f46\u662f\u8be5\u6280\u672f\u9700\u8981\u91c7\u7528CRS\u6765\u6784\u9020zk-SNARK\uff0c\u5373\u9700\u8981\u5f15\u5165\u53ef\u4fe1\u7b2c\u4e09\u65b9\u6765\u751f\u6210\u4e00\u7ec4\u516c\u5171\u53c2\u8003\u4e32\uff0c\u4e0e\u6b64\u540c\u65f6\u4e5f\u5f15\u5165\u4e86\u5bf9\u53ef\u4fe1\u7b2c\u4e09\u65b9\u7684\u4fe1\u4efb\u95ee\u9898\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u5229\u7528MPC\u7b49\u6280\u672f\u5b9e\u73b0\u5206\u5e03\u5f0f\u534f\u4f5c\u751f\u6210CRS\uff0c\u4f46\u662f\u4f9d\u7136\u65e0\u6cd5\u5b8c\u5168\u89e3\u51b3CRS\u7684\u5f15\u5165\u5e26\u6765\u7684\u4fe1\u4efb\u95ee\u9898\u3002 \u57fa\u4e8e\u8d26\u6237\u6a21\u578b\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae \uff1a\u5f53\u524d\u7684\u533a\u5757\u94fe\u9690\u79c1\u652f\u4ed8\u7cfb\u7edf\uff0c\u5982Zcash\u548cMonero\u7b49\uff0c\u5747\u662f\u57fa\u4e8eUTXO\u6a21\u578b\uff0c\u800cZether\u534f\u8bae\u80fd\u5b9e\u73b0\u57fa\u4e8e\u8d26\u6237\u6a21\u578b\u7684\u9690\u79c1\u652f\u4ed8\uff0c\u4e14\u80fd\u5b9e\u73b0\u4ea4\u6613\u53cc\u65b9\u548c\u4ea4\u6613\u91d1\u989d\u7684\u533f\u540d\u5316\uff0c\u8be5\u534f\u8bae\u4ee5\u667a\u80fd\u5408\u7ea6\u7684\u5f62\u5f0f\uff0c\u65b9\u4fbf\u5730\u90e8\u7f72\u5230\u57fa\u4e8e\u8d26\u6237\u6a21\u578b\u7684\u533a\u5757\u94fe\u7cfb\u7edf\u4e2d\uff0c\u800c\u4e0d\u9700\u8981\u4fee\u6539\u5e95\u5c42\u94fe\u7684\u903b\u8f91\u3002\u6b64\u5916AZTEC\u534f\u8bae\u91c7\u7528Plonk\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\uff0c\u5b9e\u73b0\u4e86\u57fa\u4e8eEthereum\u8d26\u6237\u6a21\u578b\u4e0b\u7684\u9690\u79c1\u4ea4\u6613\u3002 \u53bbCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae \uff1a\u76ee\u524d\u5728\u533a\u5757\u94fe\u9886\u57df\u4e2d\uff0c\u5927\u90e8\u5206\u9ad8\u6548\u53ef\u9a8c\u8bc1\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u90fd\u4f9d\u8d56\u4e8eCRS\u3002\u56e0\u6b64\u53bbCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u4e5f\u662f\u5404\u4e2a\u9879\u76ee\u91cd\u70b9\u5173\u6ce8\u7684\u8bdd\u9898\u3002\u56f4\u7ed5\u8be5\u70ed\u8bae\u8bdd\u9898\u7684\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u65b9\u5411\uff1a\uff081\uff09\u63a2\u7d22\u5b8c\u5168\u53bbCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\uff0c\u5982bulletproof\u5229\u7528\u5411\u91cf\u5185\u79ef\u7684\u65b9\u6cd5\u5b9e\u73b0\u4e86\u8303\u56f4\u7684\u8bc1\u660e\uff0czk-STARK\u5b9e\u73b0\u65e0\u9700\u53ef\u4fe1\u516c\u5171\u53c2\u6570\u8bbe\u7f6e\u7684\u8bc1\u660e\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u7684\u8bc1\u660e\u8f83\u5927\uff0c\u9a8c\u8bc1\u65f6\u95f4\u4e5f\u8f83\u957f\u3002\u8fd9\u4e5f\u662f\u5b8c\u5168\u53bbCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u4e0d\u80fd\u88ab\u5e7f\u6cdb\u5e94\u7528\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\u3002 CRS\u7684\u53ef\u66f4\u65b0\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae \uff1a\u57fa\u4e8eCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u4f1a\u5f15\u5165\u7b2c\u4e09\u65b9\u4fe1\u4efb\u95ee\u9898\uff0c\u5b8c\u5168\u53bbCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u4ea7\u751f\u7684\u8bc1\u660e\u8f83\u5927\uff0c\u9a8c\u8bc1\u4e0d\u591f\u9ad8\u6548\uff0c\u56e0\u6b64\u6709\u9879\u76ee\u5c1d\u8bd5\u63a2\u7d22\u4ecb\u4e8e\u4e24\u8005\u76f4\u63a5\u7684\u4e00\u79cd\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\uff0c\u5373\u57fa\u4e8e\u53ef\u66f4\u65b0\u7684\u7ed3\u6784\u5316\u53c2\u8003\u4e32\uff08updatable structured reference string\uff09\u7684\u534f\u8bae\uff0c\u5982Sonic\u3001Plonk\u5b83\u4eec\u652f\u6301SRS\u7684\u53ef\u66f4\u65b0\u64cd\u4f5c\uff0c\u8fd9\u4e24\u4e2a\u534f\u8bae\u672c\u8d28\u4e0a\u4ecd\u7136\u662f\u9700\u8981\u53ef\u4fe1\u7684\u53c2\u6570\u8bbe\u7f6e\uff0c\u4f46\u662f\u901a\u8fc7MPC\u7b49\u6280\u672f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u7528\u6237\u5bf9CRS\u5b89\u5168\u6027\u7684\u4fe1\u5fc3\u3002\u76ee\u524dAZTEC\u5229\u7528Plonk\u534f\u8bae\u5b9e\u73b0\u4e86Ethereum\u4e0a\u7684\u9690\u79c1\u4ea4\u6613\u3002 \u53ef\u6269\u5c55\u6027\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae \uff1azk Rollup\u662f\u4e00\u79cd\u65b0\u578b\u7684Layer2\u6269\u5bb9\u65b9\u6848\uff0c\u5c06\u94fe\u4e0a\u7684\u6570\u636e\u653e\u5230layer2\u89e3\u51b3\u3002\u7528\u6237\u53d1\u9001\u7684\u4ea4\u6613\uff0c\u7531relayer\u6536\u96c6\uff0c\u751f\u6210\u96f6\u77e5\u8bc6\u8bc1\u660e\u5c06\u53d1\u5e03\u4ea4\u6613\u540e\u7684\u65b0\u72b6\u6001\u8ddf\u4e4b\u524d\u7684\u72b6\u6001\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u4fdd\u8bc1\u7528\u6237\u72b6\u6001\u53d8\u66f4\u7684\u6b63\u786e\u6027\u3002\u94fe\u4e0a\u53ea\u5b58\u50a8\u7528\u6237\u72b6\u6001\u7684merkle\u6811\u6839\uff0c\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u9a8c\u8bc1\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u6b63\u786e\u6027\u3002 \u57fa\u4e8e\u5177\u4f53\u5e94\u7528\u9700\u6c42\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\uff1a \u5728\u5b9e\u9645\u4e2d\u8fd8\u6709\u8bb8\u591a\u57fa\u4e8e\u5177\u4f53\u5e94\u7528\u9700\u6c42\uff0c\u5e76\u5229\u7528\u4e0a\u8ff0\u63d0\u53ca\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u6280\u672f\u8bbe\u8ba1\u51fa\u7684\u534f\u8bae\uff0c\u5982\u5728\u5b58\u50a8\u573a\u666f\u4e0b\uff0cfilecoin\u7684\u65f6\u7a7a\u8bc1\u660e\uff08proof of spacetime\uff09\u548c\u590d\u5236\u8bc1\u660e\uff08proof of replication\uff09\u662f\u5229\u7528zk-SNARKs\u7684Succinct\u7279\u6027\u7684\u5178\u578b\u6848\u4f8b\uff1b\u5728\u516c\u5e73\u4ea4\u6613\u7684\u573a\u666f\u4e0b\uff0czkPoD\u5b9e\u73b0\u96f6\u4fe1\u4efb\u7684\u53bb\u4e2d\u5fc3\u5316\u516c\u5e73\u4ea4\u6613\u7cfb\u7edf\uff0c\u5728\u4e0d\u53ef\u4fe1\u53cc\u65b9\u4e4b\u95f4\u8fdb\u884c\u4ea4\u6613\uff0c\u786e\u4fdd\u4e70\u5356\u53cc\u65b9\u95f4\u4ea4\u6613\u7684\u516c\u5e73\u6027\u3002 \u76ee\u524d\u96f6\u77e5\u8bc6\u8bc1\u660e\u6280\u672f\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u975e\u5e38\u6210\u719f\uff0c\u5728\u6211\u4eec\u7684\u8054\u76df\u94fe\u4e2d\uff0c\u6211\u4eec\u4f1a\u6839\u636e\u5b9e\u9645\u7684\u573a\u666f\u9700\u6c42\uff0c\u91c7\u7528\u6216\u8bbe\u8ba1\u5bf9\u5e94\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u6765\u6ee1\u8db3\u6211\u4eec\u7684\u573a\u666f\u9700\u6c42\u3002","title":"\u5bc6\u7801\u5b66\u65b9\u6848"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#sm2","text":"","title":"\u56fd\u5bc6sm2\u7b97\u6cd5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#1","text":"SM2\u7b97\u6cd5\u662f\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u653f\u5e9c\u91c7\u7528\u7684\u4e00\u79cd\u516c\u94a5\u52a0\u5bc6\u6807\u51c6\uff0c\u7531\u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40\u4e8e2010\u5e7412\u670817\u65e5\u53d1\u5e03\u3002\u5728\u5546\u7528\u5bc6\u7801\u4f53\u7cfb\u4e2d\uff0cSM2\u7528\u4e8e\u66ff\u6362RSA\u7b97\u6cd5\uff0c\u53ef\u7528\u6765\u5b9e\u73b0\u975e\u5bf9\u79f0\u52a0\u5bc6\u3001\u6570\u5b57\u7b7e\u540d\u3001\u5bc6\u94a5\u4ea4\u6362\u7b49\u529f\u80fd\u3002\u4f5c\u4e3a\u4e00\u79cd\u57fa\u4e8e\u692d\u5706\u66f2\u7ebf\u7684\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\uff0cSM2\u7b97\u6cd5\u5728\u76f8\u540c\u5b89\u5168\u7a0b\u5ea6\u4e0b\uff0c\u8f83RSA\u7b97\u6cd5\u5728\u5bc6\u94a5\u89c4\u6a21\u4e0a\u5b58\u5728\u4f18\u52bf\u3002 SM2 RSA \u5bc6\u94a5\u89c4\u6a21 192-256bit 2048-4096bit \u7b97\u6cd5\u6807\u51c6\u5305\u62ec4\u4e2a\u90e8\u5206\uff1a 1. \u603b\u5219\uff0c\u9002\u7528\u4e8e\u57fa\u57df\u4e3a\u7d20\u57df\u548c\u4e8c\u5143\u6269\u57df\u7684\u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\uff1b 2. \u6570\u5b57\u7b7e\u540d\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u5546\u7528\u5bc6\u7801\u5e94\u7528\u4e2d\u7684\u6570\u5b57\u7b7e\u540d\u548c\u9a8c\u8bc1\uff0c\u53ef\u6ee1\u8db3\u591a\u79cd\u5bc6\u7801\u5e94\u7528\u4e2d\u7684\u8eab\u4efd\u8ba4\u8bc1\u548c\u6570\u636e\u5b8c\u6574\u6027\u3001\u771f\u5b9e\u6027\u7684\u5b89\u5168\u9700\u6c42\uff1b 3. \u5bc6\u94a5\u4ea4\u6362\u534f\u8bae\uff0c\u9002\u7528\u4e8e\u5546\u7528\u5bc6\u7801\u5e94\u7528\u4e2d\u7684\u5bc6\u94a5\u4ea4\u6362\uff0c\u53ef\u6ee1\u8db3\u901a\u4fe1\u53cc\u65b9\u7ecf\u8fc7\u4e24\u6b21\u6216\u53ef\u9009\u4e09\u6b21\u4fe1\u606f\u4f20\u9012\u8fc7\u7a0b\uff0c\u8ba1\u7b97\u83b7\u53d6\u4e00\u4e2a\u7531\u53cc\u65b9\u5171\u540c\u51b3\u5b9a\u7684\u5171\u4eab\u79d8\u5bc6\u5bc6\u94a5\uff08\u4f1a\u8bdd\u5bc6\u94a5\uff09\uff1b 4. \u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u5546\u7528\u5bc6\u7801\u5e94\u7528\u4e2d\u7684\u6d88\u606f\u52a0\u89e3\u5bc6\uff0c\u6d88\u606f\u53d1\u9001\u8005\u53ef\u4ee5\u5229\u7528\u63a5\u6536\u8005\u7684\u516c\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u52a0\u5bc6\uff0c\u63a5\u6536\u8005\u7528\u5bf9\u5e94\u7684\u79c1\u94a5\u8fdb\u884c\u89e3\u5bc6\uff1b \u76f8\u5173\u6807\u51c6\u4e3a\u201cGM/T 0003.1-2012 SM2 \u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7b2c1\u90e8\u5206\uff1a\u603b\u5219\u201d\uff0c\u201cGM/T 0003.2-2012 SM2 \u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7b2c2\u90e8\u5206\uff1a\u6570\u5b57\u7b7e\u540d\u7b97\u6cd5\u201d\uff0c\u201cGM/T 0003.3-2012 SM2 \u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7b2c3\u90e8\u5206\uff1a\u5bc6\u94a5\u4ea4\u6362\u534f\u8bae\u201d\uff0c\u201cGM/T 0003.4-2012 SM2 \u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7b2c4\u90e8\u5206\uff1a\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u201d\uff0c\u201cGM/T 0003.5-2012 SM2 \u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7b2c5\u90e8\u5206\uff1a\u53c2\u6570\u5b9a\u4e49\u201c\u3002","title":"1. \u6982\u8ff0"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#2","text":"\u6570\u5b57\u7b7e\u540d\u662f\u9644\u52a0\u5728\u6570\u636e\u5355\u5143\u4e0a\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u6216\u662f\u5bf9\u6570\u636e\u5355\u5143\u6240\u4f5c\u5bc6\u7801\u53d8\u6362\u7684\u7ed3\u679c\uff0c\u5f53\u6b63\u5e38\u5e94\u7528\u65f6\u63d0\u4f9b\u5982\u4e0b\u670d\u52a1\uff1a \u6570\u636e\u6765\u6e90\u7684\u786e\u8ba4\uff1b \u6570\u636e\u5b8c\u6574\u6027\u7684\u9a8c\u8bc1\uff1b \u7b7e\u540d\u8005\u4e0d\u53ef\u62b5\u8d56\u7684\u4fdd\u8bc1\u3002 \u6570\u5b57\u7b7e\u540d\u7b97\u6cd5\u7531\u4e00\u4e2a\u7b7e\u540d\u8005\u5bf9\u6570\u636e\u4ea7\u751f\u6570\u5b57\u7b7e\u540d\uff0c\u5e76\u7531\u4e00\u4e2a\u9a8c\u8bc1\u8005\u9a8c\u8bc1\u7b7e\u540d\u7684\u53ef\u9760\u6027\u3002\u6bcf\u4e2a\u7b7e\u540d\u8005\u6709\u4e00\u4e2a\u516c\u94a5\u548c\u4e00\u4e2a\u79c1\u94a5\uff0c\u5176\u4e2d\u79c1\u94a5\u7528\u4e8e\u4ea7\u751f\u7b7e\u540d\uff0c\u9a8c\u8bc1\u8005\u7528\u7b7e\u540d\u8005\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\u3002 \u5728\u7b7e\u540d\u7684\u751f\u6210\u8fc7\u7a0b\u4e4b\u524d\uff0c\u8981\u7528\u5bc6\u7801\u6742\u51d1\u51fd\u6570\uff08\u54c8\u5e0c\u51fd\u6570\uff09\u5bf9\u6d88\u606fM (\u5305\u542b Z_A \u548c\u5f85\u7b7e\u6d88\u606fM)\u8fdb\u884c\u538b\u7f29\u3002 \u540c\u7406\uff0c\u5728\u9a8c\u8bc1\u8fc7\u7a0b\u4e4b\u524d\uff0c\u8981\u7528\u5bc6\u7801\u6742\u51d1\u51fd\u6570\u5bf9 M \u2032 (\u5305\u542b Z_A \u548c\u9a8c\u8bc1\u6d88\u606f M\u2032 )\u8fdb\u884c\u538b\u7f29\u3002","title":"2. \u7b7e\u540d\u7b97\u6cd5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#21","text":"\u692d\u5706\u66f2\u7ebf\u7684\u7cfb\u7edf\u53c2\u6570\u4e3a\uff1a F_q \uff1a\u5305\u542b q \u4e2a\u5143\u7d20\u7684\u7d20\u57df \u692d\u5706\u66f2\u7ebf\u65b9\u7a0b\u7684\u53c2\u6570a\u3001b G \uff1a\u692d\u5706\u66f2\u7ebf\u7684\u57fa\u70b9\uff08 G=(x_G,y_G) \uff09 n \uff1a\u57fa\u70b9G\u7684\u9636\uff0c\u7531\u57fa\u70b9 G \u751f\u6210\u7684\u7fa4\u7684\u5143\u7d20\u7684\u4e2a\u6570 \u53ef\u9009\u9879\uff1an\u7684\u4f59\u56e0\u5b50 h \uff08 h = |E(F_q)|/n \uff09 \u9664\u4e86\u5b9a\u4e49\u4e86\u692d\u5706\u66f2\u7ebf\u7684\u53c2\u6570\u548c\u7b7e\u540d\u7b97\u6cd5\u6240\u9700\u8981\u7684\u8f85\u52a9\u51fd\u6570\uff1a\u54c8\u5e0c\u51fd\u6570\u548c\u968f\u673a\u6570\u53d1\u751f\u5668\u5916\uff0c\u6807\u51c6\u5f15\u5165\u4e86\u7528\u6237\u4fe1\u606f\u6807\u8bc6\u7684\u6982\u5ff5\u3002 \u7b7e\u540d\u8005\u62e5\u6709\u957f\u5ea6\u4e3a entlen_A \u6bd4\u7279\u7684\u53ef\u8fa8\u522b\u6807\u8bc6 ID_A \uff0c\u5728\u6807\u51c6\u89c4\u5b9a\u7684\u7b7e\u540d\u7b97\u6cd5\u4e2d\uff0c\u9700\u8981\u5728\u751f\u6210\u7b7e\u540d\u548c\u9a8c\u8bc1\u7b7e\u540d\u524d\u8ba1\u7b97\u7528\u6237A\u7684\u54c8\u5e0c\u503c Z_A \u3002 Z_A=H_{256}(ENTL_A||ID_A|| a||b||x_G||y_G||x_A||y_A) \uff0c\u5176\u4e2d ENTL_A \u662f\u7531 entl_A \u8f6c\u6362\u800c\u6210\u7684\u4e24\u4e2a\u5b57\u8282\u3002","title":"2.1. \u7cfb\u7edf\u53c2\u6570"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#22","text":"\u9884\u5904\u7406 \u8ba1\u7b97 Z_A \uff1a Z_A=H_{256}(ENTL_A||ID_A|| a||b||x_G||y_G||x_A||y_A) \u7b7e\u540d \u8f93\u5165\uff1aM\uff0c Z_A \uff0c\u79c1\u94a5 d_A \u8f93\u51fa\uff1a\u7b7e\u540d\u5bf9 (r,s) A1: \u6d88\u606f\u5904\u7406\uff1a \\overline M= Z_A||M A2: \u8ba1\u7b97 e=H_v(\\overline M) A3: \u4ea7\u751f\u968f\u673a\u6570 k\\in [1,n-1] A4: \u8ba1\u7b97\u66f2\u7ebf\u70b9 (x_1, y_1)=kG A5: \u8ba1\u7b97 r= (e+x_1)\\ mod\\ n \uff0c \u82e5 r=0 \u6216 r+k=n \u5219\u8fd4\u56deA3 A6: \u8ba1\u7b97 s= ((1+d_A)^{-1} (k- r*d_A))\\ mod\\ n \uff0c\u82e5 s=0 \u5219\u8fd4\u56deA3 A7: \u8f93\u51fa\u7b7e\u540d\u5bf9 (r,s)","title":"2.2. \u7b7e\u540d\u751f\u6210"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#23","text":"\u9884\u5904\u7406 \u8ba1\u7b97 Z_A \uff1a Z_A=H_{256}(ENTL_A||ID_A|| a||b||x_G||y_G||x_A||y_A) \u9a8c\u8bc1 \u8f93\u5165\uff1a\u6d88\u606f M' \uff0c\u7b7e\u540d (r^{'}, s^{'}) \uff0c \u516c\u94a5 P_A \u8f93\u51fa\uff1a1 or 0 B1: \u68c0\u9a8c r\u2032 \u2208[1,n-1] \u662f\u5426\u6210\u7acb\uff0c\u82e5\u4e0d\u6210\u7acb\u5219\u9a8c\u8bc1\u4e0d\u901a\u8fc7\uff1b B2: \u68c0\u9a8c s\u2032 \u2208[1,n-1] \u662f\u5426\u6210\u7acb\uff0c\u82e5\u4e0d\u6210\u7acb\u5219\u9a8c\u8bc1\u4e0d\u901a\u8fc7\uff1b B3: \u6d88\u606f\u5904\u7406\uff1a \\overline M^{'}= Z_A||M B4: \u8ba1\u7b97 e'=H_v(\\overline M^{'}) B5: \u8ba1\u7b97 t = (r'+ s')\\ mod\\ n B6: \u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 (x_1',y_1') = s'G+ tP_A B7: \u8ba1\u7b97 R=(e'+x_1')\\ mod\\ n \uff0c\u68c0\u9a8c R=r' \u662f\u5426\u6210\u7acb\uff0c\u82e5\u6210\u7acb\u5219\u9a8c\u8bc1\u901a\u8fc7\uff1b\u5426\u5219\u9a8c\u8bc1\u4e0d\u901a\u8fc7","title":"2.3. \u7b7e\u540d\u9a8c\u8bc1"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#24","text":"\u5c55\u5f00\u6b65\u9aa4B6\u4e2d\u7684\u7b49\u5f0f \\begin{align} s'G+ tP_A &= (s'+ (r'+s')d_A)G \\\\ &= s'(1 + d_A)G + r'd_AG \\end{align} \u6839\u636e\u7b7e\u540d\u751f\u6210\u4e2dA6\u6b65\u9aa4\u7684\u7b49\u5f0f\uff0c\u53ef\u5f97 k= s(1+d_A)+ rd_A \u56e0\u6b64\uff0c\u6b65\u9aa4B6\u4e2d\u7684\u7b49\u5f0f\u53ef\u4ee5\u6062\u590d\u51fa\u7b7e\u540d\u751f\u6210\u7684\u66f2\u7ebf\u70b9 kG","title":"2.4. \u6b63\u786e\u6027\u8bf4\u660e"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#3","text":"\u5bc6\u94a5\u4ea4\u6362\u534f\u8bae\u662f\u4e24\u4e2a\u7528\u6237A\u548cB\u901a\u8fc7\u4ea4\u4e92\u7684\u4fe1\u606f\u4f20\u9012\uff0c\u7528\u5404\u81ea\u7684\u79c1\u94a5\u548c\u5bf9\u65b9\u7684\u516c\u94a5\u6765\u5546\u5b9a\u4e00\u4e2a\u53ea\u6709\u4ed6\u4eec\u77e5\u9053\u7684\u79d8\u5bc6\u5bc6\u94a5\u3002\u8fd9\u4e2a\u5171\u4eab\u7684\u79d8\u5bc6\u5bc6\u94a5\u901a\u5e38\u7528\u5728\u67d0\u4e2a\u5bf9\u79f0\u5bc6\u7801\u7b97\u6cd5\u4e2d\u3002\u8be5\u5bc6\u94a5\u4ea4\u6362\u534f\u8bae\u80fd\u591f\u7528\u4e8e\u5bc6\u94a5\u7ba1\u7406\u548c\u534f\u5546\u3002","title":"3. \u5bc6\u94a5\u4ea4\u6362"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#31","text":"\u7528\u6237A\u548cB\u53cc\u65b9\u4e3a\u4e86\u751f\u6210\u76f8\u540c\u7684\u4f1a\u8bdd\u5bc6\u94a5\uff0c\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u4ea4\u4e92\uff1a \u8bb0 w=\u2308(\u2308log_2(n)\u2309/2)\u2309\u22121\u3002 \u7528\u6237A\uff1a A1\uff1a\u4ea7\u751f\u968f\u673a\u6570 r_A \u2208 [1, n-1] \uff1b A2\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 R_A = [r_A]G=(x_1,y_1) \uff1b A3\uff1a\u5c06 R_A \u53d1\u9001\u7ed9\u7528\u6237B\uff1b \u7528\u6237B\uff1a B1\uff1a\u4ea7\u751f\u968f\u673a\u6570 r_B \u2208 [1, n-1] \uff1b B2\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 R_B = [r_B]G=(x_2,y_2) \uff1b B3\uff1a\u8ba1\u7b97 \\overline x_2 = 2^w + (x_2\\&(2^w \u22121)) \uff1b B4\uff1a\u8ba1\u7b97 t_B = (d_B +\\overline x_2 \u00b7r_B)\\mod\\ n \uff1b B5\uff1a\u9a8c\u8bc1RA\u662f\u5426\u6ee1\u8db3\u692d\u5706\u66f2\u7ebf\u65b9\u7a0b\uff0c\u82e5\u4e0d\u6ee1\u8db3\u5219\u534f\u5546\u5931\u8d25\uff1b\u5426\u5219\u8ba1\u7b97 \\overline x_1 = 2^w + (x_1\\&(2^w \u22121)) B6\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 V = [h \u00b7t_B](P_A +[\\overline x_1]R_A) = (x_V ,y_V ) \uff0c\u82e5V\u662f\u65e0\u7a77\u8fdc\u70b9\uff0c\u5219B\u534f\u5546\u5931\u8d25\uff1b B7\uff1a\u8ba1\u7b97 K_B=KDF(x_V \u2225 y_V \u2225 Z_A \u2225 Z_B,klen) \uff1b B8\uff1a\u5c06 R_B \u53d1\u9001\u7ed9\u7528\u6237A\uff1b \u7528\u6237A\uff1a A4\uff1a\u8ba1\u7b97 \\overline x_1 = 2^w + (x_1\\&(2^w \u22121)) A5\uff1a\u8ba1\u7b97 t_A = (d_A +\\overline x_1 \u00b7r_A)\\mod\\ n \uff1b A6\uff1a\u9a8c\u8bc1 R_B \u662f\u5426\u6ee1\u8db3\u692d\u5706\u66f2\u7ebf\u65b9\u7a0b\uff0c\u82e5\u4e0d\u6ee1\u8db3\u5219\u534f\u5546\u5931\u8d25\uff1b\u5426\u5219\u8ba1\u7b97 \\overline x_2 = 2^w + (x_2\\&(2^w \u22121)) A7\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 U = [h \u00b7t_A](P_B + [\\overline x_2]R_B) = (x_U ,y_U ) \uff0c\u82e5U\u662f\u65e0\u7a77\u8fdc\u70b9\uff0c\u5219A\u534f\u5546\u5931\u8d25\uff1b A8\uff1a\u8ba1\u7b97 K_A=KDF(x_U \u2225 y_U \u2225 Z_A \u2225 Z_B,klen) \uff1b PS\uff1a\u4e0a\u8ff0\u6b65\u9aa4\u7701\u7565\u4e86\u6821\u9a8c\u6b65\u9aa4\u3002 \u6b63\u786e\u6027\u8bf4\u660e\uff1a \u5c06\u6b65\u9aa4B6\u548c\u6b65\u9aa4A7\u4e2d\u751f\u6210\u7684\u692d\u5706\u66f2\u7ebf\u70b9U\u548cV\u5206\u522b\u5c55\u5f00\uff0c\u53ef\u5f97\uff1a (x_V,y_V) = h( (d_B +\\overline x_2 \u00b7r_B))(d_A +\\overline x_1 \u00b7r_A)G (x_U,y_U) = h( (d_A +\\overline x_1 \u00b7r_A))(d_B +\\overline x_2 \u00b7r_B)G","title":"3.1. \u5bc6\u94a5\u4ea4\u6362\u6d41\u7a0b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#4","text":"\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u89c4\u5b9a\u53d1\u9001\u8005\u7528\u63a5\u6536\u8005\u7684\u516c\u94a5\u5c06\u6d88\u606f\u52a0\u5bc6\u6210\u5bc6\u6587\uff0c\u63a5\u6536\u8005\u7528\u81ea\u5df2\u7684\u79c1\u94a5\u5bf9\u6536\u5230\u7684\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\u8fd8\u539f\u6210\u539f\u59cb\u6d88\u606f\u3002","title":"4. \u516c\u94a5\u52a0\u5bc6"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#41","text":"klen \u8981\u83b7\u5f97\u7684\u5bc6\u94a5\u6570\u636e\u7684\u6bd4\u7279\u957f\u5ea6 \u53c2\u6570 \u5b9a\u4e49 H_v() \u5176\u8f93\u51fa\u662f\u957f\u5ea6\u6070\u4e3av\u6bd4\u7279\u7684\u54c8\u5e0c\u51fd\u6570 ct 32\u6bd4\u7279\u6784\u6210\u7684\u8ba1\u6570\u5668 \u8f85\u52a9\u51fd\u6570\uff1a \u54c8\u5e0c\u51fd\u6570\uff1a\u4f7f\u7528\u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40\u6279\u51c6\u7684\u5bc6\u7801\u6742\u51d1\u7b97\u6cd5\uff0c\u5982SM3\u5bc6\u7801\u6742\u51d1\u7b97\u6cd5 KDF(Z, klen) : \u521d\u59cb\u5316\u8ba1\u6570\u5668 ct = 0x000000001 \u5bf9i\u4ece1\u5230 \\lceil klen/v \\rceil \u6267\u884c\uff1a \u8ba1\u7b97 H_{a_i} = H_v(Z|| ct) ct ++ //\u4e4b\u6240\u4ee5\u8981\u8ba1\u6570\u5668++\uff0c\u662f\u4e3a\u4e86\u6ee1\u8db3\u6700\u7ec8KDF\u7684\u8f93\u51fa\u662f\u5747\u5300\u968f\u673a\u7684\uff0c\u5982\u679c\u4e0d\u52a0\u7684\u8bdd\uff0c\u5219\u6bcf\u6b21hash\u8f93\u51fa\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u503c\u3002 \u82e5 klen/v \u662f\u6574\u6570\uff0c\u5219 H_a!_{\\lceil klen/v \\rceil} =H_{a_{\\lceil klen/v \\rceil}} \uff0c\u5426\u5219 H_a!_{\\lceil klen/v \\rceil} \u4e3a H_{a_{\\lceil klen/v \\rceil}} \u6700\u5de6\u8fb9\u7684( klen - (v \\times \\lfloor klen/v \\rfloor) )\u6bd4\u7279 K = H_{a_1} || H_{a_2}||...||H_{a_{\\lceil klen/v \\rceil-1}} || H_a!_{\\lceil klen/v \\rceil}","title":"4.1. \u8f85\u52a9\u51fd\u6570"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#42","text":"\u8f93\u5165\uff1a\u6d88\u606fM\uff0c klen \u4e3a\u6d88\u606f\u7684\u957f\u5ea6\uff0c\u516c\u94a5 P_B \u8f93\u51fa\uff1a\u4e34\u65f6\u516c\u94a5( C_1 )\u3001\u5bc6\u6587\uff08 C_2 \uff09\u3001\u6d88\u606f\u8ba4\u8bc1\u7801\uff08 C_3 \uff09 A1\uff1a\u4ea7\u751f\u968f\u673a\u6570 k\u2208[1,n-1] \uff1b A2\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 C_1=[k]G=(x_1,y_1) A3\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 S=[h]P_B \uff0c\u82e5S\u662f\u65e0\u7a77\u8fdc\u70b9\uff0c\u5219\u62a5\u9519\u5e76\u9000\u51fa\uff1b A4\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 [k]P_B=(x_2,y_2) // A\u4e0eB\u5171\u540c\u6301\u6709\u7684\u5bc6\u94a5\uff0c\u56e0\u4e3aA\u77e5\u9053B\u7684\u516c\u94a5 P_B \uff0c\u7136\u540eB\u662f\u77e5\u9053 C_1=kG \uff0cB\u53ef\u4ee5\u5229\u7528\u81ea\u5df1\u7684\u79c1\u94a5 d_B \u4e0e C_1 \u8ba1\u7b97\u51fa kP_B \u3002 A5\uff1a\u8ba1\u7b97 t=KDF(x_2 \u2225 y_2, klen) \uff0c\u82e5t\u4e3a\u51680\u6bd4\u7279\u4e32\uff0c\u5219\u8fd4\u56deA1\uff1b A6\uff1a\u8ba1\u7b97 C_2 = M \u2295 t \uff1b//t\u4e0d\u80fd\u5168\u4e3a0\uff0c\u5982\u679c\u5168\u4e3a0\uff0c\u5219C_2=M A7\uff1a\u8ba1\u7b97 C_3 = Hash(x_2 \u2225 M \u2225 y_2) \uff1b C_3 \u9a8c\u8bc1\u6d88\u606f\u7684\u5b8c\u6574\u6027\uff0c\u4ee5\u53ca\u9a8c\u8bc1\u7684\u786e\u662fA\u53d1\u51fa\u6765\u7684\u3002 A8\uff1a\u8f93\u51fa\u5bc6\u6587 C = C_1 \u2225 C_2 \u2225 C_3 \u3002","title":"4.2. \u52a0\u5bc6\u6d41\u7a0b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#43","text":"\u8f93\u5165\uff1a\u5bc6\u6587 C = C_1 \u2225 C_2 \u2225 C_3 \uff0c\u79c1\u94a5 d_B \u8f93\u51fa\uff1a\u660e\u6587 M' \u6216fail B1\uff1a\u9a8c\u8bc1 C_1 \u662f\u5426\u6ee1\u8db3\u692d\u5706\u66f2\u7ebf\u65b9\u7a0b\uff0c\u82e5\u4e0d\u6ee1\u8db3\u5219\u62a5\u9519\u5e76\u9000\u51fa\uff1b B2\uff1a\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u70b9 S=[h]C_1 \uff0c\u82e5S\u662f\u65e0\u7a77\u8fdc\u70b9\uff0c\u5219\u62a5\u9519\u5e76\u9000\u51fa\uff1b B3\uff1a\u8ba1\u7b97 [d_B]C_1=(x_2,y_2) B4\uff1a\u8ba1\u7b97 t=KDF(x_2 \u2225 y_2, klen) \uff0c\u82e5t\u4e3a\u51680\u6bd4\u7279\u4e32\uff0c\u5219\u62a5\u9519\u5e76\u9000\u51fa\uff1b B5\uff1a\u8ba1\u7b97 M\u2032 = C_2 \u2295 t \uff1b B6\uff1a\u8ba1\u7b97 u = Hash(x_2 \u2225 M\u2032 \u2225 y_2) \uff0c\u68c0\u9a8c u = C_3 \uff0c\u82e5\u68c0\u9a8c\u5931\u8d25\u5219\u62a5\u9519\u5e76\u9000\u51fa\uff1b B7\uff1a\u8f93\u51fa\u660e\u6587 M'","title":"4.3. \u89e3\u5bc6\u6d41\u7a0b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#pre","text":"\u968f\u7740\u5927\u6570\u636e\u548c\u4e91\u7aef\u5b58\u50a8\u670d\u52a1\u7684\u5174\u8d77\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u7528\u6237\u9009\u62e9\u5c06\u6570\u636e\u4ea4\u7531\u4e91\u7aef\u670d\u52a1\u5546\u8fdb\u884c\u5b58\u50a8\u3002\u4e3a\u4e86\u4fdd\u62a4\u7528\u6237\u6570\u636e\u7684\u9690\u79c1\uff0c\u7528\u6237\u5b58\u50a8\u5728\u4e91\u7aef\u7684\u6570\u636e\u662f\u4ee5\u5bc6\u6587\u5f62\u5f0f\u5b58\u5728\u7684\u3002\u5728\u73b0\u5b9e\u5e94\u7528\u4e2d\u5b58\u5728\u7740\u5927\u91cf\u6570\u636e\u5171\u4eab\u7684\u573a\u666f\u3002 \u5728\u4f20\u7edf\u7684\u6570\u636e\u5171\u4eab\u65b9\u6848\u4e2d\uff0c\u7528\u6237\u9700\u5148\u5c06\u52a0\u5bc6\u5b58\u50a8\u5728\u4e91\u7aef\u7684\u6587\u4ef6\u8fdb\u884c\u4e0b\u8f7d\uff0c\u5728\u672c\u5730\u89e3\u5bc6\uff0c\u7136\u540e\u518d\u4f7f\u7528\u5bc6\u94a5\u534f\u5546\u7b49\u65b9\u5f0f\u5c06\u6570\u636e\u5171\u4eab\u7ed9\u6570\u636e\u4f7f\u7528\u65b9\u3002\u800c\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u8017\u8d39\u6570\u636e\u62e5\u6709\u8005\u5927\u91cf\u7684\u901a\u4fe1\u548c\u8ba1\u7b97\u5f00\u9500\uff0c\u5e76\u4e14\u5c06\u5360\u7528\u7528\u6237\u672c\u5730\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 \u4ee3\u7406\u91cd\u52a0\u5bc6\u7684\u63d0\u51fa\u4e3a\u6570\u636e\u5171\u4eab\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\u3002\u5b83\u662f\u4e00\u79cd\u5141\u8bb8\u7b2c\u4e09\u65b9\uff08\u4ee3\u7406\uff09\u5bf9\u5bc6\u6587\u8fdb\u884c\u91cd\u52a0\u5bc6\uff0c\u4ece\u800c\u4f7f\u5f97\u88ab\u6388\u6743\u7528\u6237\uff08\u6570\u636e\u4f7f\u7528\u8005\uff09\u53ef\u4ee5\u89e3\u5bc6\u7684\u65b9\u6848\uff0c\u5b9e\u73b0\u4e86\u5728\u4e0d\u6cc4\u6f0f\u6570\u636e\u62e5\u6709\u8005\u79c1\u5bc6\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\uff0c\u4e91\u7aef\u5bc6\u6587\u6570\u636e\u7684\u5171\u4eab\u3002\u8be5\u65b9\u6848\u8f83\u4f20\u7edf\u65b9\u6848\u5728\u901a\u4fe1\u3001\u8ba1\u7b97\u548c\u5b58\u50a8\u5f00\u9500\u4e0a\u90fd\u5b58\u5728\u660e\u663e\u7684\u4f18\u52bf\uff0c\u5728\u6587\u4ef6\u5171\u4eab\uff0c\u90ae\u4ef6\u8f6c\u53d1\u7b49\u573a\u666f\u4e2d\u5b58\u5728\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u524d\u666f\u3002\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u5982\u4e0b\u4e00\u4e2a\u7b80\u8981\u7684\u4f8b\u5b50\u4ecb\u7ecdPRE\u7684\u6d41\u7a0b\uff1a \u5047\u8bbe\u7528\u6237Alice\u5728\u4e91\u7aef\u52a0\u5bc6\u5b58\u50a8\u4e86\u6587\u4ef6\uff0c\u73b0\u5728Alice\u60f3\u8981\u5c06\u8be5\u6587\u4ef6\u5171\u4eab\u7ed9\u53e6\u4e00\u4e2a\u7528\u6237Bob\u3002\u5176\u505a\u6cd5\u5982\u4e0b\uff1a Alice\u5229\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u548cBob\u7684\u79c1\u94a5/\u516c\u94a5\u751f\u6210\u91cd\u52a0\u5bc6\u5bc6\u94a5 rk_{A\\to B} \uff0c\u5e76\u628a\u8be5\u5bc6\u94a5\u53d1\u9001\u7ed9\u4ee3\u7406\uff1b \u4ee3\u7406\u4f7f\u7528\u91cd\u52a0\u5bc6\u5bc6\u94a5 rk_{A\\to B} \u5bf9Alice\u5b58\u653e\u5728\u4e91\u7aef\u7684\u5bc6\u6587\u6587\u4ef6\u8fdb\u884c\u91cd\u52a0\u5bc6\uff1b Bob\u76f4\u63a5\u4e0b\u8f7d\u91cd\u52a0\u5bc6\u540e\u7684\u6587\u4ef6\uff0c\u5e76\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6570\u636e\u8fdb\u884c\u89e3\u5bc6\u3002","title":"\u4ee3\u7406\u91cd\u52a0\u5bc6PRE"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88/%E5%AF%86%E7%A0%81%E5%AD%A6%E6%96%B9%E6%A1%88%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D/#_1","text":"\u96f6\u77e5\u8bc6\u8bc1\u660e\u8fd9\u4e2a\u6982\u5ff5\u6700\u65e9\u7531Goldwasser\u3001Micali\u548cRackoff\u63d0\u51fa\u7684\uff0c\u5176\u8868\u8fbe\u6838\u5fc3\u601d\u60f3\u662f\u8bc1\u660e\u8005\u8981\u5411\u9a8c\u8bc1\u8005\u8bc1\u660e\u4e00\u4e2astatement\u7684\u6b63\u786e\u6027\uff0c\u4e0e\u6b64\u540c\u65f6\u4e0d\u6cc4\u9732\u4efb\u4f55\u989d\u5916\u7684\u4fe1\u606f\u3002\u5b83\u5177\u6709\u5982\u4e0b\u4e09\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff1a \u5b8c\u5907\u6027completeness \u5408\u7406\u6027soundness \u96f6\u77e5\u8bc6\u6027zero-knowledge \u8fd1\u51e0\u5e74\u96f6\u77e5\u8bc6\u8bc1\u660e\u88ab\u5e7f\u6cdb\u5e94\u7528\u5230\u533a\u5757\u94fe\u4e2d\uff0c\u5982\u53ef\u9a8c\u8bc1\u7684\u5916\u5305\u8ba1\u7b97\u3001\u533f\u540d\u8bc1\u4e66\u3001\u8303\u56f4\u8bc1\u660e\u3001\u9690\u79c1\u5bc6\u7801\u5b66\u8d27\u5e01\u7b49\u9700\u8981\u5e73\u8861\u9690\u79c1\u6027\u548c\u673a\u5bc6\u6027\u7684\u5e94\u7528\u573a\u666f\uff0c\u5b83\u5df2\u7ecf\u5728\u9690\u79c1\u6027\u548c\u53ef\u6269\u5c55\u6027\u65b9\u9762\u6210\u4e3a\u4e86\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5de5\u5177\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5ba2\u6237\u7aef\u4e0b\u8f7d\u548c\u9a8c\u8bc1\u4ea4\u6613\u9891\u7e41\uff0c\u56e0\u6b64\u8981\u90e8\u7f72\u9ad8\u6548\u5b9e\u7528\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\uff0c\u9700\u8981\u8be5\u534f\u8bae\u7684\u8bc1\u660e\u8db3\u591f\u5c0f\uff0c\u9a8c\u8bc1\u8db3\u591f\u9ad8\u6548\uff08small proof size and fast verification\uff09\u3002\u968f\u7740\u5bc6\u7801\u5b66\u6280\u672f\u7684\u4e0d\u65ad\u53d1\u5c55\uff0c\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u843d\u5730\u5e94\u7528\u5c42\u51fa\u4e0d\u7a77\u3002\u8fd9\u4e9b\u4f18\u79c0\u7684\u9879\u76ee\u5bf9\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u6280\u672f\u7684\u5b9e\u7528\u6027\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u7684\u63a2\u7d22\uff1a \u57fa\u4e8eUTXO\u6a21\u578b\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae \uff1a\u96f6\u77e5\u8bc6\u8bc1\u660e\u5728\u5bc6\u7801\u5b66\u8d27\u5e01\u4e0a\u5177\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\uff0cZcash\u662fzk-SNARKs\u7684\u9996\u4e2a\u5e94\u7528\uff0c\u5b83\u5229\u7528Groth16\u534f\u8bae\uff0c\u5b9e\u73b0\u4e86\u57fa\u4e8eUTXO\u6a21\u578b\u4e0b\u4ea4\u6613\u53cc\u65b9\u5730\u5740\u548c\u91d1\u989d\u7684\u5b8c\u5168\u9690\u85cf\uff0c\u5e76\u4e14\u80fd\u591f\u751f\u6210\u8f83\u77ed\u7684\u9ad8\u6548\u7684\u53ef\u9a8c\u8bc1\u7684\u8bc1\u660e\u3002\u4f46\u662f\u8be5\u6280\u672f\u9700\u8981\u91c7\u7528CRS\u6765\u6784\u9020zk-SNARK\uff0c\u5373\u9700\u8981\u5f15\u5165\u53ef\u4fe1\u7b2c\u4e09\u65b9\u6765\u751f\u6210\u4e00\u7ec4\u516c\u5171\u53c2\u8003\u4e32\uff0c\u4e0e\u6b64\u540c\u65f6\u4e5f\u5f15\u5165\u4e86\u5bf9\u53ef\u4fe1\u7b2c\u4e09\u65b9\u7684\u4fe1\u4efb\u95ee\u9898\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u5229\u7528MPC\u7b49\u6280\u672f\u5b9e\u73b0\u5206\u5e03\u5f0f\u534f\u4f5c\u751f\u6210CRS\uff0c\u4f46\u662f\u4f9d\u7136\u65e0\u6cd5\u5b8c\u5168\u89e3\u51b3CRS\u7684\u5f15\u5165\u5e26\u6765\u7684\u4fe1\u4efb\u95ee\u9898\u3002 \u57fa\u4e8e\u8d26\u6237\u6a21\u578b\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae \uff1a\u5f53\u524d\u7684\u533a\u5757\u94fe\u9690\u79c1\u652f\u4ed8\u7cfb\u7edf\uff0c\u5982Zcash\u548cMonero\u7b49\uff0c\u5747\u662f\u57fa\u4e8eUTXO\u6a21\u578b\uff0c\u800cZether\u534f\u8bae\u80fd\u5b9e\u73b0\u57fa\u4e8e\u8d26\u6237\u6a21\u578b\u7684\u9690\u79c1\u652f\u4ed8\uff0c\u4e14\u80fd\u5b9e\u73b0\u4ea4\u6613\u53cc\u65b9\u548c\u4ea4\u6613\u91d1\u989d\u7684\u533f\u540d\u5316\uff0c\u8be5\u534f\u8bae\u4ee5\u667a\u80fd\u5408\u7ea6\u7684\u5f62\u5f0f\uff0c\u65b9\u4fbf\u5730\u90e8\u7f72\u5230\u57fa\u4e8e\u8d26\u6237\u6a21\u578b\u7684\u533a\u5757\u94fe\u7cfb\u7edf\u4e2d\uff0c\u800c\u4e0d\u9700\u8981\u4fee\u6539\u5e95\u5c42\u94fe\u7684\u903b\u8f91\u3002\u6b64\u5916AZTEC\u534f\u8bae\u91c7\u7528Plonk\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\uff0c\u5b9e\u73b0\u4e86\u57fa\u4e8eEthereum\u8d26\u6237\u6a21\u578b\u4e0b\u7684\u9690\u79c1\u4ea4\u6613\u3002 \u53bbCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae \uff1a\u76ee\u524d\u5728\u533a\u5757\u94fe\u9886\u57df\u4e2d\uff0c\u5927\u90e8\u5206\u9ad8\u6548\u53ef\u9a8c\u8bc1\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u90fd\u4f9d\u8d56\u4e8eCRS\u3002\u56e0\u6b64\u53bbCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u4e5f\u662f\u5404\u4e2a\u9879\u76ee\u91cd\u70b9\u5173\u6ce8\u7684\u8bdd\u9898\u3002\u56f4\u7ed5\u8be5\u70ed\u8bae\u8bdd\u9898\u7684\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u65b9\u5411\uff1a\uff081\uff09\u63a2\u7d22\u5b8c\u5168\u53bbCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\uff0c\u5982bulletproof\u5229\u7528\u5411\u91cf\u5185\u79ef\u7684\u65b9\u6cd5\u5b9e\u73b0\u4e86\u8303\u56f4\u7684\u8bc1\u660e\uff0czk-STARK\u5b9e\u73b0\u65e0\u9700\u53ef\u4fe1\u516c\u5171\u53c2\u6570\u8bbe\u7f6e\u7684\u8bc1\u660e\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u7684\u8bc1\u660e\u8f83\u5927\uff0c\u9a8c\u8bc1\u65f6\u95f4\u4e5f\u8f83\u957f\u3002\u8fd9\u4e5f\u662f\u5b8c\u5168\u53bbCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u4e0d\u80fd\u88ab\u5e7f\u6cdb\u5e94\u7528\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\u3002 CRS\u7684\u53ef\u66f4\u65b0\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae \uff1a\u57fa\u4e8eCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u4f1a\u5f15\u5165\u7b2c\u4e09\u65b9\u4fe1\u4efb\u95ee\u9898\uff0c\u5b8c\u5168\u53bbCRS\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u4ea7\u751f\u7684\u8bc1\u660e\u8f83\u5927\uff0c\u9a8c\u8bc1\u4e0d\u591f\u9ad8\u6548\uff0c\u56e0\u6b64\u6709\u9879\u76ee\u5c1d\u8bd5\u63a2\u7d22\u4ecb\u4e8e\u4e24\u8005\u76f4\u63a5\u7684\u4e00\u79cd\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\uff0c\u5373\u57fa\u4e8e\u53ef\u66f4\u65b0\u7684\u7ed3\u6784\u5316\u53c2\u8003\u4e32\uff08updatable structured reference string\uff09\u7684\u534f\u8bae\uff0c\u5982Sonic\u3001Plonk\u5b83\u4eec\u652f\u6301SRS\u7684\u53ef\u66f4\u65b0\u64cd\u4f5c\uff0c\u8fd9\u4e24\u4e2a\u534f\u8bae\u672c\u8d28\u4e0a\u4ecd\u7136\u662f\u9700\u8981\u53ef\u4fe1\u7684\u53c2\u6570\u8bbe\u7f6e\uff0c\u4f46\u662f\u901a\u8fc7MPC\u7b49\u6280\u672f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u7528\u6237\u5bf9CRS\u5b89\u5168\u6027\u7684\u4fe1\u5fc3\u3002\u76ee\u524dAZTEC\u5229\u7528Plonk\u534f\u8bae\u5b9e\u73b0\u4e86Ethereum\u4e0a\u7684\u9690\u79c1\u4ea4\u6613\u3002 \u53ef\u6269\u5c55\u6027\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae \uff1azk Rollup\u662f\u4e00\u79cd\u65b0\u578b\u7684Layer2\u6269\u5bb9\u65b9\u6848\uff0c\u5c06\u94fe\u4e0a\u7684\u6570\u636e\u653e\u5230layer2\u89e3\u51b3\u3002\u7528\u6237\u53d1\u9001\u7684\u4ea4\u6613\uff0c\u7531relayer\u6536\u96c6\uff0c\u751f\u6210\u96f6\u77e5\u8bc6\u8bc1\u660e\u5c06\u53d1\u5e03\u4ea4\u6613\u540e\u7684\u65b0\u72b6\u6001\u8ddf\u4e4b\u524d\u7684\u72b6\u6001\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u4fdd\u8bc1\u7528\u6237\u72b6\u6001\u53d8\u66f4\u7684\u6b63\u786e\u6027\u3002\u94fe\u4e0a\u53ea\u5b58\u50a8\u7528\u6237\u72b6\u6001\u7684merkle\u6811\u6839\uff0c\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u9a8c\u8bc1\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u6b63\u786e\u6027\u3002 \u57fa\u4e8e\u5177\u4f53\u5e94\u7528\u9700\u6c42\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\uff1a \u5728\u5b9e\u9645\u4e2d\u8fd8\u6709\u8bb8\u591a\u57fa\u4e8e\u5177\u4f53\u5e94\u7528\u9700\u6c42\uff0c\u5e76\u5229\u7528\u4e0a\u8ff0\u63d0\u53ca\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u6280\u672f\u8bbe\u8ba1\u51fa\u7684\u534f\u8bae\uff0c\u5982\u5728\u5b58\u50a8\u573a\u666f\u4e0b\uff0cfilecoin\u7684\u65f6\u7a7a\u8bc1\u660e\uff08proof of spacetime\uff09\u548c\u590d\u5236\u8bc1\u660e\uff08proof of replication\uff09\u662f\u5229\u7528zk-SNARKs\u7684Succinct\u7279\u6027\u7684\u5178\u578b\u6848\u4f8b\uff1b\u5728\u516c\u5e73\u4ea4\u6613\u7684\u573a\u666f\u4e0b\uff0czkPoD\u5b9e\u73b0\u96f6\u4fe1\u4efb\u7684\u53bb\u4e2d\u5fc3\u5316\u516c\u5e73\u4ea4\u6613\u7cfb\u7edf\uff0c\u5728\u4e0d\u53ef\u4fe1\u53cc\u65b9\u4e4b\u95f4\u8fdb\u884c\u4ea4\u6613\uff0c\u786e\u4fdd\u4e70\u5356\u53cc\u65b9\u95f4\u4ea4\u6613\u7684\u516c\u5e73\u6027\u3002 \u76ee\u524d\u96f6\u77e5\u8bc6\u8bc1\u660e\u6280\u672f\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u975e\u5e38\u6210\u719f\uff0c\u5728\u6211\u4eec\u7684\u8054\u76df\u94fe\u4e2d\uff0c\u6211\u4eec\u4f1a\u6839\u636e\u5b9e\u9645\u7684\u573a\u666f\u9700\u6c42\uff0c\u91c7\u7528\u6216\u8bbe\u8ba1\u5bf9\u5e94\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u6765\u6ee1\u8db3\u6211\u4eec\u7684\u573a\u666f\u9700\u6c42\u3002","title":"\u96f6\u77e5\u8bc6\u8bc1\u660e"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/RLP%E7%BC%96%E7%A0%81%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/","text":"1. RLP\u7f16\u7801\u6ce8\u610f\u4e8b\u9879 1.1. \u4e0d\u652f\u6301\u7684\u7c7b\u578b 1.2. \u81ea\u5b9a\u4e49\u7f16\u89e3\u7801\u65b9\u6cd5 1. RLP\u7f16\u7801\u6ce8\u610f\u4e8b\u9879 1.1. \u4e0d\u652f\u6301\u7684\u7c7b\u578b \u975e\u7a7a\u7684interface\u7c7b\u578b\u3002\u4f8b\u5982\uff1a type Reader interface{ Read() } bool\u7c7b\u578b \u6709\u7b26\u53f7\u6574\u578b \u6d6e\u70b9\u7c7b\u578b map channel \u51fd\u6570 1.2. \u81ea\u5b9a\u4e49\u7f16\u89e3\u7801\u65b9\u6cd5 \u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49DecodeRLP\uff0cEncodeRLP\u4e24\u4e2a\u65b9\u6cd5\u6765\u89e3\u51b3\u4ee5\u4e0b\u95ee\u9898 \u4e0d\u53ef\u5bfc\u51fa\u7684\u5b57\u6bb5\u4e0d\u4f1a\u7f16\u7801\u3002 \u975e\u7a7ainterface\u7c7b\u578b map\u7c7b\u578b \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a type Proposal interface { Number() *big.Int } type Preprepare struct { View *View //Proposal\u662f\u4e00\u4e2a\u975e\u7a7aingterface\u7c7b\u578b\uff0c\u5982\u679c\u9700\u8981\u7f16\u89e3\u7801\u6b64\u5b57\u6bb5\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u4e0bEncodeRLP\uff0cDecodeRLP\u65b9\u6cd5 Proposal Proposal //\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u4e0d\u53ef\u4ee5\u5bfc\u51fa\uff0c\u5982\u679c\u9700\u8981\u7f16\u89e3\u7801\u6b64\u5b57\u6bb5\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u4e0bEncodeRLP\uff0cDecodeRLP\u65b9\u6cd5 lockRound *big.Int messages map[common.Address]*message } func (b *Preprepare) EncodeRLP(w io.Writer) error { //\u624b\u52a8\u628a\u54ea\u4e9b\u9700\u8981\u7f16\u7801\u7684\u5bf9\u8c61\u4e00\u4e00\u586b\u5199\u8fdb\u53bb\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u975e\u5bfc\u51fa\u5b57\u6bb5\u8fdb\u884c\u7f16\u7801\uff0c //\u4e5f\u53ef\u4ee5\u5f88\u7075\u6d3b\u7684\u63a7\u5236\u53ea\u5bf9\u54ea\u4e9b\u5b57\u6bb5\u8fdb\u884c\u7f16\u7801 return rlp.Encode(w, []interface{}{b.View, b.Proposal, b.lockRound\uff0c b.Values(}) } func (b *Preprepare) DecodeRLP(s *rlp.Stream) error { //\u6ce8\u610f\u5b57\u6bb5\u7684\u987a\u5e8f\u5fc5\u8981\u548cEncodeRLP\u65b9\u6cd5\u4e2d\u7684\u5b57\u6bb5\u987a\u5e8f\u4e00\u6837 var preprepare struct { View *View Proposal *types.Block //\u5fc5\u987b\u5b9a\u4e49\u4e3aProposal\u63a5\u53e3\u6240\u6307\u5411\u7684\u771f\u6b63\u7684\u7c7b\u578b LockRound *big.Int Messages []*message } if err := s.Decode(&preprepare); err != nil { return err } b.View, b.Proposal = preprepare.View, preprepare.Proposal for _, val := range preprepare.Messages { b.messages[val.Address] = val } return nil } func (b *Preprepare) Values() (result []*message) { for _, v := range b.messages { result = append(result, v) } return result }","title":"RLP\u7f16\u7801\u6ce8\u610f\u4e8b\u9879"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/RLP%E7%BC%96%E7%A0%81%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/#1-rlp","text":"","title":"1. RLP\u7f16\u7801\u6ce8\u610f\u4e8b\u9879"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/RLP%E7%BC%96%E7%A0%81%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/#11","text":"\u975e\u7a7a\u7684interface\u7c7b\u578b\u3002\u4f8b\u5982\uff1a type Reader interface{ Read() } bool\u7c7b\u578b \u6709\u7b26\u53f7\u6574\u578b \u6d6e\u70b9\u7c7b\u578b map channel \u51fd\u6570","title":"1.1. \u4e0d\u652f\u6301\u7684\u7c7b\u578b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/RLP%E7%BC%96%E7%A0%81%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/#12","text":"\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49DecodeRLP\uff0cEncodeRLP\u4e24\u4e2a\u65b9\u6cd5\u6765\u89e3\u51b3\u4ee5\u4e0b\u95ee\u9898 \u4e0d\u53ef\u5bfc\u51fa\u7684\u5b57\u6bb5\u4e0d\u4f1a\u7f16\u7801\u3002 \u975e\u7a7ainterface\u7c7b\u578b map\u7c7b\u578b \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a type Proposal interface { Number() *big.Int } type Preprepare struct { View *View //Proposal\u662f\u4e00\u4e2a\u975e\u7a7aingterface\u7c7b\u578b\uff0c\u5982\u679c\u9700\u8981\u7f16\u89e3\u7801\u6b64\u5b57\u6bb5\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u4e0bEncodeRLP\uff0cDecodeRLP\u65b9\u6cd5 Proposal Proposal //\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u4e0d\u53ef\u4ee5\u5bfc\u51fa\uff0c\u5982\u679c\u9700\u8981\u7f16\u89e3\u7801\u6b64\u5b57\u6bb5\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u4e0bEncodeRLP\uff0cDecodeRLP\u65b9\u6cd5 lockRound *big.Int messages map[common.Address]*message } func (b *Preprepare) EncodeRLP(w io.Writer) error { //\u624b\u52a8\u628a\u54ea\u4e9b\u9700\u8981\u7f16\u7801\u7684\u5bf9\u8c61\u4e00\u4e00\u586b\u5199\u8fdb\u53bb\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u975e\u5bfc\u51fa\u5b57\u6bb5\u8fdb\u884c\u7f16\u7801\uff0c //\u4e5f\u53ef\u4ee5\u5f88\u7075\u6d3b\u7684\u63a7\u5236\u53ea\u5bf9\u54ea\u4e9b\u5b57\u6bb5\u8fdb\u884c\u7f16\u7801 return rlp.Encode(w, []interface{}{b.View, b.Proposal, b.lockRound\uff0c b.Values(}) } func (b *Preprepare) DecodeRLP(s *rlp.Stream) error { //\u6ce8\u610f\u5b57\u6bb5\u7684\u987a\u5e8f\u5fc5\u8981\u548cEncodeRLP\u65b9\u6cd5\u4e2d\u7684\u5b57\u6bb5\u987a\u5e8f\u4e00\u6837 var preprepare struct { View *View Proposal *types.Block //\u5fc5\u987b\u5b9a\u4e49\u4e3aProposal\u63a5\u53e3\u6240\u6307\u5411\u7684\u771f\u6b63\u7684\u7c7b\u578b LockRound *big.Int Messages []*message } if err := s.Decode(&preprepare); err != nil { return err } b.View, b.Proposal = preprepare.View, preprepare.Proposal for _, val := range preprepare.Messages { b.messages[val.Address] = val } return nil } func (b *Preprepare) Values() (result []*message) { for _, v := range b.messages { result = append(result, v) } return result }","title":"1.2. \u81ea\u5b9a\u4e49\u7f16\u89e3\u7801\u65b9\u6cd5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/","text":"\u6570\u636e\u7ed3\u6784\u4e0e\u7f16\u7801\u534f\u8bae \u6570\u636e\u7ed3\u6784\u4e0e\u7f16\u7801\u534f\u8bae \u7f16\u7801\u534f\u8bae RLP\u7f16\u7801\u6ce8\u610f\u4e8b\u9879 \u4ea4\u6613\u7ed3\u6784 \u4ea4\u6613\u56de\u6267 \u7f16\u7801\u534f\u8bae PlatONE\u540c\u65f6\u652f\u6301Wasm\u865a\u62df\u673a\u4e0eEVM\u865a\u62df\u673a\uff0c\u4e14\u5141\u8bb8Wasm\u5408\u7ea6\u4e0eEVM\u5408\u7ea6\u4e4b\u95f4\u7684\u4e92\u8c03\u7528\u3002Wasm\u5408\u7ea6\u76f8\u5173\u4ea4\u6613\u7684data\u5b57\u6bb5\u91c7\u7528RLP\u7f16\u7801\uff0c\u800cevm\u5408\u7ea6\u76f8\u5173\u4ea4\u6613\u7684data\u5b57\u6bb5\u5219\u91c7\u7528\u4ee5\u592a\u574a\u539f\u751f\u7684\u7f16\u7801\u65b9\u5f0f\u3002\u672c\u8282\u7740\u91cd\u4ecb\u7ecdRLP\u7f16\u7801\uff0c\u4ee5\u592a\u574a\u7684\u7f16\u7801\u65b9\u5f0f\u8bf7\u8be6\u89c1 Solidity\u5b98\u7f51 RLP\u7f16\u7801\u6ce8\u610f\u4e8b\u9879 RLP\u7f16\u7801\u6ce8\u610f\u4e8b\u9879 \u4ea4\u6613\u7ed3\u6784 PlatONE\u7684\u4ea4\u6613(Transaction)\u6570\u636e\u7ed3\u6784\u5728\u539f\u4ee5\u592a\u574a\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86txType\u5b57\u6bb5\u3002 name type description from common.Address \u4ea4\u6613\u53d1\u9001\u65b9\u8d26\u6237\u5730\u5740 to *common.Address \u4ea4\u6613\u63a5\u6536\u65b9\u8d26\u6237\u5730\u5740 gas *hexutil.Uint64 \u5355\u6b21\u4ea4\u6613\u5141\u8bb8\u7684gas\u6570\u91cf\uff0c\u7528\u4e8e\u9650\u5236\u5408\u7ea6\u7684\u8fd0\u884c gasPrice *hexutil.Big \u5355\u4f4dgas\u6240\u9700\u7684\u4ef7\u683c\u6570\u91cf value *hexutil.Big (TODO) nonce *hexutil.Uint64 \u4ea4\u6613\u53d1\u9001\u65b9\u4ea7\u751f\u7684\u968f\u673a\u503c\uff0c\u7528\u4e8e\uff1f\uff1f\uff1f txType uint64 \u4ea4\u6613\u7c7b\u578b\uff0c\u76ee\u524dPlatONE\u6709\u516d\u79cd\u4ea4\u6613\u7c7b\u578b\uff1a\u9632\u706b\u5899(fwTxType),\u5408\u7ea6\u8fc1\u79fb(migTxType),\u5408\u7ea6\u540d\u79f0\u8c03\u7528(cnsTxType),\u5408\u7ea6\u90e8\u7f72(deploy),\u666e\u901a\u8c03\u7528,\u8f6c\u8d26(transfer) data *hexutil.Bytes \u4ea4\u6613\u76f8\u5173\u7684\u6570\u636e\uff0c\u7ecf\u8fc7\u7f16\u7801\u5904\u7406\u5f97\u5230\u3002\u90e8\u5206\u4ea4\u6613\u7c7b\u578b\u4f1a\u5728data\u5b57\u6bb5\u4e5f\u9644\u4e0atxType \u4ea4\u6613\u56de\u6267 PlatONE\u4ea4\u6613\u56de\u6267\u5ef6\u7528\u4e86\u4ee5\u592a\u574a\u7684\u4ea4\u6613\u56de\u6267\u6570\u636e\u7ed3\u6784","title":"\u6570\u636e\u7ed3\u6784\u4e0e\u7f16\u7801\u534f\u8bae"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/#_1","text":"\u6570\u636e\u7ed3\u6784\u4e0e\u7f16\u7801\u534f\u8bae \u7f16\u7801\u534f\u8bae RLP\u7f16\u7801\u6ce8\u610f\u4e8b\u9879 \u4ea4\u6613\u7ed3\u6784 \u4ea4\u6613\u56de\u6267","title":"\u6570\u636e\u7ed3\u6784\u4e0e\u7f16\u7801\u534f\u8bae"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/#_2","text":"PlatONE\u540c\u65f6\u652f\u6301Wasm\u865a\u62df\u673a\u4e0eEVM\u865a\u62df\u673a\uff0c\u4e14\u5141\u8bb8Wasm\u5408\u7ea6\u4e0eEVM\u5408\u7ea6\u4e4b\u95f4\u7684\u4e92\u8c03\u7528\u3002Wasm\u5408\u7ea6\u76f8\u5173\u4ea4\u6613\u7684data\u5b57\u6bb5\u91c7\u7528RLP\u7f16\u7801\uff0c\u800cevm\u5408\u7ea6\u76f8\u5173\u4ea4\u6613\u7684data\u5b57\u6bb5\u5219\u91c7\u7528\u4ee5\u592a\u574a\u539f\u751f\u7684\u7f16\u7801\u65b9\u5f0f\u3002\u672c\u8282\u7740\u91cd\u4ecb\u7ecdRLP\u7f16\u7801\uff0c\u4ee5\u592a\u574a\u7684\u7f16\u7801\u65b9\u5f0f\u8bf7\u8be6\u89c1 Solidity\u5b98\u7f51","title":"\u7f16\u7801\u534f\u8bae"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/#rlp","text":"RLP\u7f16\u7801\u6ce8\u610f\u4e8b\u9879","title":"RLP\u7f16\u7801\u6ce8\u610f\u4e8b\u9879"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/#_3","text":"PlatONE\u7684\u4ea4\u6613(Transaction)\u6570\u636e\u7ed3\u6784\u5728\u539f\u4ee5\u592a\u574a\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86txType\u5b57\u6bb5\u3002 name type description from common.Address \u4ea4\u6613\u53d1\u9001\u65b9\u8d26\u6237\u5730\u5740 to *common.Address \u4ea4\u6613\u63a5\u6536\u65b9\u8d26\u6237\u5730\u5740 gas *hexutil.Uint64 \u5355\u6b21\u4ea4\u6613\u5141\u8bb8\u7684gas\u6570\u91cf\uff0c\u7528\u4e8e\u9650\u5236\u5408\u7ea6\u7684\u8fd0\u884c gasPrice *hexutil.Big \u5355\u4f4dgas\u6240\u9700\u7684\u4ef7\u683c\u6570\u91cf value *hexutil.Big (TODO) nonce *hexutil.Uint64 \u4ea4\u6613\u53d1\u9001\u65b9\u4ea7\u751f\u7684\u968f\u673a\u503c\uff0c\u7528\u4e8e\uff1f\uff1f\uff1f txType uint64 \u4ea4\u6613\u7c7b\u578b\uff0c\u76ee\u524dPlatONE\u6709\u516d\u79cd\u4ea4\u6613\u7c7b\u578b\uff1a\u9632\u706b\u5899(fwTxType),\u5408\u7ea6\u8fc1\u79fb(migTxType),\u5408\u7ea6\u540d\u79f0\u8c03\u7528(cnsTxType),\u5408\u7ea6\u90e8\u7f72(deploy),\u666e\u901a\u8c03\u7528,\u8f6c\u8d26(transfer) data *hexutil.Bytes \u4ea4\u6613\u76f8\u5173\u7684\u6570\u636e\uff0c\u7ecf\u8fc7\u7f16\u7801\u5904\u7406\u5f97\u5230\u3002\u90e8\u5206\u4ea4\u6613\u7c7b\u578b\u4f1a\u5728data\u5b57\u6bb5\u4e5f\u9644\u4e0atxType","title":"\u4ea4\u6613\u7ed3\u6784"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%BC%96%E7%A0%81/#_4","text":"PlatONE\u4ea4\u6613\u56de\u6267\u5ef6\u7528\u4e86\u4ee5\u592a\u574a\u7684\u4ea4\u6613\u56de\u6267\u6570\u636e\u7ed3\u6784","title":"\u4ea4\u6613\u56de\u6267"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/EVM%E8%99%9A%E6%8B%9F%E6%9C%BA/","text":"EVM\u865a\u62df\u673a 1. EVM\u539f\u7406 \u4ee5\u592a\u574a\u4e0a\u7684\u865a\u62df\u673a\u79f0\u4e4b\u4e3aEVM\uff0c\u662f\u4e00\u4e2a\u57fa\u4e8e\u6808\u7684\u865a\u62df\u673a\u3002\u73b0\u5728\u6709\u5f88\u591a\u79cd\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u8bed\u8a00\uff0c\u53ea\u8981\u5408\u7ea6\u8bed\u8a00\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u5668\u7f16\u8bd1\u6210\u7b26\u5408EVM\u865a\u62df\u673a\u8981\u6c42\u7684\u7279\u5b9a\u6307\u4ee4\u96c6\uff0c\u5c31\u53ef\u4ee5\u7f16\u5199\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u3002\u73b0\u5728\u6700\u6d41\u884c\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u8bed\u8a00\u662fSolidity\u3002Solidity\u8bed\u8a00\u662f\u4e00\u95e8\u9759\u6001\u8bed\u8a00\uff0c\u5176\u7f16\u8bd1\u5668\u662fsolc\u3002\u901a\u8fc7\u7f16\u8bd1\uff0cSolidity\u8bed\u8a00\u53d8\u6210\u7279\u5b9a\u683c\u5f0f\u7684\u5b57\u8282\u7801\uff0c\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u4ea4\u6613\u7684\u65b9\u5f0f\u53ef\u4ee5\u628a\u5f97\u5230\u7684\u5b57\u8282\u7801\u53d1\u9001\u5e76\u5b58\u50a8\u5230\u533a\u5757\u94fe\u4e0a\u3002 EVM \u4e0d\u662f\u57fa\u4e8e\u5bc4\u5b58\u5668\u7684\uff0c\u800c\u662f\u57fa\u4e8e\u6808\u7684\uff0c\u56e0\u6b64\u6240\u6709\u7684\u8ba1\u7b97\u90fd\u5728\u4e00\u4e2a\u88ab\u79f0\u4e3a \u6808\uff08stack\uff09 \u7684\u533a\u57df\u6267\u884c\u3002 \u6808\u6700\u5927\u67091024\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u957f\u5ea6\u662f\u4e00\u4e2a\u5b57\uff08256\u4f4d\uff09\u3002\u5bf9\u6808\u7684\u8bbf\u95ee\u53ea\u9650\u4e8e\u5176\u9876\u7aef\uff0c\u9650\u5236\u65b9\u5f0f\u4e3a\uff1a\u5141\u8bb8\u62f7\u8d1d\u6700\u9876\u7aef\u768416\u4e2a\u5143\u7d20\u4e2d\u7684\u4e00\u4e2a\u5230\u6808\u9876\uff0c\u6216\u8005\u662f\u4ea4\u6362\u6808\u9876\u5143\u7d20\u548c\u4e0b\u976216\u4e2a\u5143\u7d20\u4e2d\u7684\u4e00\u4e2a\u3002\u6240\u6709\u5176\u4ed6\u64cd\u4f5c\u90fd\u53ea\u80fd\u53d6\u6700\u9876\u7684\u4e24\u4e2a\uff08\u6216\u4e00\u4e2a\uff0c\u6216\u66f4\u591a\uff0c\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u64cd\u4f5c\uff09\u5143\u7d20\uff0c\u8fd0\u7b97\u540e\uff0c\u628a\u7ed3\u679c\u538b\u5165\u6808\u9876\u3002\u5f53\u7136\u53ef\u4ee5\u628a\u6808\u4e0a\u7684\u5143\u7d20\u653e\u5230\u5b58\u50a8\u6216\u5185\u5b58\u4e2d\u3002\u4f46\u662f\u65e0\u6cd5\u53ea\u8bbf\u95ee\u6808\u4e0a\u6307\u5b9a\u6df1\u5ea6\u7684\u90a3\u4e2a\u5143\u7d20\uff0c\u9664\u975e\u5148\u4ece\u6808\u9876\u79fb\u9664\u5176\u4ed6\u5143\u7d20\u3002 1.1. \u6307\u4ee4\u96c6\u7c7b\u578b \u7531\u4e8e\u64cd\u4f5c\u7801\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u5b57\u8282\u4ee5\u5185\uff0c\u6240\u4ee5EVM\u6307\u4ee4\u96c6\u6700\u591a\u53ea\u80fd\u5bb9\u7eb3256\u6761\u6307\u4ee4\u3002\u76ee\u524dEVM\u5df2\u7ecf\u5b9a\u4e49\u4e86\u7ea6142\u6761\u6307\u4ee4\uff0c\u8fd8\u6709100\u591a\u6761\u6307\u4ee4\u53ef\u4f9b\u4ee5\u540e\u6269\u5c55\u3002\u8fd9142\u6761\u6307\u4ee4\u5305\u62ec\u4ee5\u4e0b\u56db\u5927\u7c7b\uff1a \u57fa\u672c\u64cd\u4f5c\u7801\uff1a\u7b97\u672f\u8fd0\u7b97\u6307\u4ee4\uff0c\u6bd4\u8f83\u64cd\u4f5c\u6307\u4ee4\uff0c\u6309\u4f4d\u8fd0\u7b97\u6307\u4ee4\uff0c\u6808\uff0c\u8df3\u8f6c\u6307\u4ee4\uff1b \u5bc6\u7801\u5b66\u8ba1\u7b97\u64cd\u4f5c\u7801\uff1a\u5bc6\u7801\u5b66\u8ba1\u7b97\u6307\u4ee4\uff1b\u4f8b\u5982\uff1akeccak256\uff08\u597d\u50cf\u53ea\u6709\u8fd9\u4e00\u4e2a\uff09 \u5b58\u50a8\u76f8\u5173\u64cd\u4f5c\u7801\uff1amemory\uff0cstorage\u64cd\u4f5c\u6307\u4ee4\uff1b\u4f8b\u5982\uff1amstore\uff0csstore, sload, mload\u7b49\u7b49\u3002 \u4e0e\u533a\u5757\u94fe\u7684\u76f4\u63a5\u63a5\u53e3\u64cd\u4f5c\u7801\uff1acall\u3001blockhash\uff0clog\uff0ccaller\uff0ctimestamp\u7b49\u3002 1.2. \u5185\u5b58 \u5408\u7ea6\u4f1a\u8bd5\u56fe\u4e3a\u6bcf\u4e00\u6b21\u6d88\u606f\u8c03\u7528\u83b7\u53d6\u4e00\u5757\u88ab\u91cd\u65b0\u64e6\u62ed\u5e72\u51c0\u7684\u5185\u5b58\u5b9e\u4f8b\u3002 \u5185\u5b58\u662f\u7ebf\u6027\u7684\uff0c\u53ef\u6309\u5b57\u8282\u7ea7\u5bfb\u5740\uff0c\u4f46\u8bfb\u7684\u957f\u5ea6\u88ab\u9650\u5236\u4e3a256\u4f4d\uff0c\u800c\u5199\u7684\u957f\u5ea6\u53ef\u4ee5\u662f8\u4f4d\u6216256\u4f4d\u3002\u5f53\u8bbf\u95ee\uff08\u65e0\u8bba\u662f\u8bfb\u8fd8\u662f\u5199\uff09\u4e4b\u524d\u4ece\u672a\u8bbf\u95ee\u8fc7\u7684\u5185\u5b58\u5b57\uff08word\uff09\u65f6\uff08\u65e0\u8bba\u662f\u504f\u79fb\u5230\u8be5\u5b57\u5185\u7684\u4efb\u4f55\u4f4d\u7f6e\uff09\uff0c\u5185\u5b58\u5c06\u6309\u5b57\u8fdb\u884c\u6269\u5c55\uff08\u6bcf\u4e2a\u5b57\u662f256\u4f4d\uff09\u3002\u6269\u5bb9\u4e5f\u5c06\u6d88\u8017\u4e00\u5b9a\u7684gas\u3002 \u968f\u7740\u5185\u5b58\u4f7f\u7528\u91cf\u7684\u589e\u957f\uff0c\u5176\u8d39\u7528\u4e5f\u4f1a\u589e\u9ad8\uff08\u4ee5\u5e73\u65b9\u7ea7\u522b\uff09\u3002\u5728\u521d\u59cb\u5316\u5185\u5b58\u65f6\u662f\u4e0d\u4f1a\u8fdb\u884c\u9884\u5148\u5206\u914d\u4efb\u4f55\u5185\u5b58\u7a7a\u95f4\u7684\uff0c\u800c\u662f\u865a\u62df\u673a\u4f1a\u5728\u6267\u884c\u6bcf\u4e2a\u4e00\u4e2a\u6307\u4ee4\u4e4b\u524d\u5148\u8ba1\u7b97\u4e00\u4e0b\u6267\u884c\u8fd9\u4e2a\u6307\u4ee4\u73b0\u5728\u7684\u5185\u5b58\u662f\u5426\u591f\u7528\uff0c\u5982\u679c\u4e0d\u591f\u7528\u7684\u8bdd\uff0c\u5c31\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u6269\u5bb9\u3002 // Resize resizes the memory to size func (m *Memory) Resize(size uint64) { if uint64(m.Len()) < size { m.store = append(m.store, make([]byte, size-uint64(m.Len()))...) } } 1.3. \u90e8\u7f72\u5408\u7ea6 Solidity\u6e90\u7801\u7f16\u8bd1\u6210\u7684\u5b57\u8282\u7801\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u90e8\u5206\u3002\u7b2c\u4e00\u90e8\u5206\u7684 .code \u5305\u542b\u4e86\u4e00\u4e9b\u667a\u80fd\u5408\u7ea6\u521d\u59cb\u5316\u7684\u4ee3\u7801\uff0c\u6bd4\u5982\u6784\u9020\u51fd\u6570\uff0cstate variable\uff08\u5168\u5c40\u53d8\u91cf\uff09\u7684\u8d4b\u503c\u7b49\u64cd\u4f5c\u3002\u5728\u90e8\u7f72\u5408\u7ea6\u65f6\uff0c\u4f1a\u8c03\u7528\u8fd9\u90e8\u5206\u4ee3\u7801\u8fdb\u884c\u521d\u59cb\u5316\u5408\u7ea6\uff0c\u5e76\u628a\u8fd4\u56de\u7684 runtime bytecode \u6c38\u4e45\u5b58\u50a8\u5230storage\u4e2d\u3002\u533a\u5757\u94fe\u6d4f\u89c8\u5668\uff0c\u5982Etherscan\uff0c\u9ed8\u8ba4\u662f\u65e0\u6cd5\u770b\u5230\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u7684\u3002 1.4. \u8c03\u7528\u5408\u7ea6 \u51fd\u6570\u7b7e\u540d\u662f\u4e00\u4e2a4bytes\u7684hash\u503c\uff0c\u7528\u6765\u552f\u4e00\u6807\u8bc6\u667a\u80fd\u5408\u7ea6\u4e2d\u7684\u51fd\u6570\u3002\u5b83\u662f\u901a\u8fc7sha3(\"functionName(type1, type2)\")\uff0c\u53d6\u524d4bytes\u5f97\u5230\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u8be5\u51fd\u6570\u7b7e\u540d\u53ea\u4e0e\u51fd\u6570\u540d\uff0c\u5f62\u5f0f\u53c2\u6570\u7c7b\u578b\u6709\u5173\u3002 \u4ece.data\u5f00\u59cb\uff0c\u662f\u667a\u80fd\u5408\u7ea6\u7684runtime bytecode\uff0c\u4e5f\u5c31\u662f\u5728\u533a\u5757\u94fe\u4e0a\u4fdd\u5b58\u7684\u5408\u7ea6\u7684bytecode\u3002 \u8fd9\u90e8\u5206\u5b57\u8282\u7801\u7684\u5f00\u5934\u662f\u6574\u4e2a\u5408\u7ea6\u7684\u6240\u6709\u53ef\u8c03\u7528\u51fd\u6570\u7684\u51fd\u6570\u7b7e\u540d\uff0c\u5728\u8c03\u7528\u5408\u7ea6\u7684\u51fd\u6570\u65f6\uff0c\u9996\u5148\u901a\u8fc7calldata\u64cd\u4f5c\u7801\u8bfb\u53d6\u8c03\u7528\u51fd\u6570\u7684\u51fd\u6570\u7b7e\u540d\u7684\u524d\u56db\u4e2a\u5b57\u8282\uff0c\u7136\u540eEVM\u662f\u4ece\u5934\u5f00\u59cb\u7ebf\u6027\u7684\u5f80\u4e0b\u4f9d\u6b21\u52a0\u8f7d\u6bcf\u4e2a\u51fd\u6570\u7b7e\u540d\uff0c\u5e76\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u51fd\u6570\u7b7e\u540d\u4e00\u81f4\u7684\u8bdd\uff0c\u5219\u901a\u8fc7jumpi\u6307\u4ee4\u8df3\u8f6c\u5230\u76f8\u5e94\u7684\u51fd\u6570\u8fdb\u884c\u64cd\u4f5c\u3002\u5728EVM\u4e2d\uff0c\u56de\u9000\u51fd\u6570\u662f\u552f\u4e00\u4e00\u4e2a\u672a\u547d\u540d\u7684\u51fd\u6570\uff0c\u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u7684\u51fd\u6570\u7b7e\u540d\u4e5f\u6ca1\u6709\u5339\u914d\u7684\u51fd\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u8c03\u7528\u56de\u9000\u51fd\u6570\u4ece\u800c\u9000\u51fa\u6574\u4e2a\u8c03\u7528\u8fc7\u7a0b\u3002 1.5. \u6848\u4f8b \u4e0b\u9762\u6211\u4eec\u6309\u7167\u4ee5\u4e0b\u6e90\u7801\u8fdb\u884c\u5206\u6790\u3002 pragma solidity ^0.5.11; contract SimpleStorage { uint storedData; function set(uint x) public { storedData = x; } function get() public view returns (uint) { return storedData; } } \u6e90\u7801\u7f16\u8bd1\u540e\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u5982\u4e0b\uff1a 608060405234801561001057600080fd5b5060c68061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806360fe47b11460375780636d4ce63c146062575b600080fd5b606060048036036020811015604b57600080fd5b8101908080359060200190929190505050607e565b005b60686088565b6040518082815260200191505060405180910390f35b8060008190555050565b6000805490509056fea265627a7a72315820f7616ca7610ee51eb34eb9619c012a95b32e296d4fcdefb15c4c6051175c683964736f6c634300050b0032 \u628a\u4ee5\u4e0a\u4ee3\u7801\u4f5c\u4e3a\u4ea4\u6613\u7684data\u90e8\u7f72\u5230\u94fe\u4e0a\uff0c\u4f46\u662f\u4f5c\u4e3a\u5408\u7ea6code\u5b58\u50a8\u5230\u94fe\u4e0a\u7684\u6570\u636e\uff0c\u662f\u4ee5\u4e0a\u6570\u636e\u7684\u5b50\u96c6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3aRuntime ByteCode\u5982\u4e0b\u6240\u793a\uff1a 6080604052348015600f57600080fd5b506004361060325760003560e01c806360fe47b11460375780636d4ce63c146062575b600080fd5b606060048036036020811015604b57600080fd5b8101908080359060200190929190505050607e565b005b60686088565b6040518082815260200191505060405180910390f35b8060008190555050565b6000805490509056fea265627a7a72315820f7616ca7610ee51eb34eb9619c012a95b32e296d4fcdefb15c4c6051175c683964736f6c634300050b0032 \u4e0b\u9762\u6211\u4eec\u6309\u7167\u6e90\u7801\u7684\u6c47\u7f16\u8868\u793a\u6765\u8fdb\u884c\u5177\u4f53\u5206\u6790\u3002 .code PUSH 80 contract SimpleStorage {\\n ... PUSH 40 contract SimpleStorage {\\n ... MSTORE contract SimpleStorage {\\n ... CALLVALUE contract SimpleStorage {\\n ... DUP1 olidity ^ ISZERO a PUSH [tag] 1 a JUMPI a PUSH 0 a DUP1 n REVERT .11;\\ncontrac tag 1 a JUMPDEST a POP contract SimpleStorage {\\n ... PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000 contract SimpleStorage {\\n ... DUP1 contract SimpleStorage {\\n ... PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000 contract SimpleStorage {\\n ... PUSH 0 contract SimpleStorage {\\n ... CODECOPY contract SimpleStorage {\\n ... PUSH 0 contract SimpleStorage {\\n ... RETURN contract SimpleStorage {\\n ... .data 0: .code PUSH 80 contract SimpleStorage {\\n ... PUSH 40 contract SimpleStorage {\\n ... MSTORE contract SimpleStorage {\\n ... CALLVALUE contract SimpleStorage {\\n ... DUP1 olidity ^ ISZERO a PUSH [tag] 1 a JUMPI a PUSH 0 a DUP1 n REVERT .11;\\ncontrac tag 1 a JUMPDEST a POP contract SimpleStorage {\\n ... PUSH 4 contract SimpleStorage {\\n ... CALLDATASIZE contract SimpleStorage {\\n ... LT contract SimpleStorage {\\n ... PUSH [tag] 2 contract SimpleStorage {\\n ... JUMPI contract SimpleStorage {\\n ... PUSH 0 contract SimpleStorage {\\n ... CALLDATALOAD contract SimpleStorage {\\n ... PUSH E0 contract SimpleStorage {\\n ... SHR contract SimpleStorage {\\n ... DUP1 contract SimpleStorage {\\n ... PUSH 60FE47B1 contract SimpleStorage {\\n ... EQ contract SimpleStorage {\\n ... PUSH [tag] 3 contract SimpleStorage {\\n ... JUMPI contract SimpleStorage {\\n ... DUP1 contract SimpleStorage {\\n ... PUSH 6D4CE63C contract SimpleStorage {\\n ... EQ contract SimpleStorage {\\n ... PUSH [tag] 4 contract SimpleStorage {\\n ... JUMPI contract SimpleStorage {\\n ... tag 2 contract SimpleStorage {\\n ... JUMPDEST contract SimpleStorage {\\n ... PUSH 0 contract SimpleStorage {\\n ... DUP1 contract SimpleStorage {\\n ... REVERT contract SimpleStorage {\\n ... tag 3 function set(uint x) public {\\... JUMPDEST function set(uint x) public {\\... PUSH [tag] 5 function set(uint x) public {\\... .... JUMPI ag PUSH 0 r DUP1 o REVERT 5.11;\\ncontra tag 6 ag JUMPDEST ag ..... PUSH [tag] 7 function set(uint x) public {\\... JUMP [in] function set(uint x) public {\\... tag 5 function set(uint x) public {\\... JUMPDEST function set(uint x) public {\\... STOP function set(uint x) public {\\... tag 4 function get() public view ret... JUMPDEST function get() public view ret... PUSH [tag] 8 function get() public view ret... PUSH [tag] 9 function get() public view ret... JUMP [in] function get() public view ret... tag 8 function get() public view ret... JUMPDEST function get() public view ret... ..... RETURN function get() public view ret... tag 7 function set(uint x) public {\\... JUMPDEST function set(uint x) public {\\... ..... JUMP [out] function set(uint x) public {\\... tag 9 function get() public view ret... JUMPDEST function get() public view ret... ...... JUMP [out] function get() public view ret... .data \u5728\u5f00\u59cb\u5904\u6807\u8bc6 .code \u7684\u90e8\u5206\u5c31\u662f\u6211\u4eec\u524d\u9762\u8bf4\u667a\u80fd\u5408\u7ea6\u90e8\u7f72\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u7684\u4ee3\u7801\u3002\u5728EVM\u4e2d0x40\u5730\u5740\u662f\u4e00\u4e2a\u88ab\u9884\u7559\u7684\u5730\u5740\uff0c\u79f0\u4e4b\u4e3a\u201c\u7a7a\u5185\u5b58\u5730\u5740\u201d\uff1a\u5373\u5185\u5b58\u4e2d\u6211\u4eec\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u4e1c\u897f\u7684\u5730\u65b9\uff0c\u4fdd\u8bc1\u6ca1\u6709\u4eba\u4f1a\u8986\u76d6\u5b83\uff08\u9664\u975e\u6211\u4eec\u72af\u4e86\u9519\u8bef\uff09\u3002\u800c0x00\u52300x40\u4e4b\u95f4\u7684\u5185\u5b58\u662f\u7528\u6765\u4fdd\u5b58\u8ba1\u7b97\u54c8\u5e0c\u503c\uff0c\u8fd9\u4e2a\u5bf9\u4e8e\u6620\u5c04\u548c\u5176\u4ed6\u7c7b\u578b\u7684\u52a8\u6001\u6570\u636e\u662f\u5fc5\u9700\u7684\u3002 \u8981\u8c03\u7528get()\u65b9\u6cd5\uff0c\u9700\u8981\u6839\u636esha3(\"get()\")\u5f97\u5230\u524d4\u4e2a\u5b57\u8282\uff0c\u5373\u51fd\u6570\u7b7e\u540d6d4ce63c\u3002 \u5728.code\u4e2d\u7684tag1\uff0cCALLDATASIZE\u4f1a\u83b7\u53d6\u4ea4\u6613\u4f20\u5165\u7684\u53c2\u6570\u957f\u5ea6\uff0cLT\u6307\u4ee4\u6765\u6bd4\u8f83\u662f\u5426\u5c0f\u4e8e4\u4e2a\u5b57\u8282\uff0c\u5982\u679c\u5c0f\u4e8e4\u4e2a\u5b57\u8282\uff0c\u5219\u4f1a\u8df3\u8f6c\u5230tag2\uff0c\u6574\u4e2a\u5408\u7ea6\u8fd0\u884c\u5b8c\u6bd5\u3002\u8fd9\u91cc\u7684\u6267\u884c\u5c31\u662f\u56de\u9000\u51fd\u6570\u3002 \u5982\u679c\u4e0d\u5c0f\u4e8e4\u4e2a\u5b57\u8282\uff0c\u5219\u4f1a\u7ee7\u7eed\u6267\u884cCALLDATALOAD\u6307\u4ee4\uff0cCALLDATALOAD\u4f1a\u628a\u53c2\u6570\u5185\u5bb9\u538b\u5165\u6808\u9876\u3002 \u7136\u540e\u5728\u903b\u8f91\u53f3\u79fb0xE0\uff08224\uff09\u4f4d\uff0c\u539f\u56e0\u662f\u4e3a\u4e86\u51d1\u8db3256\u4f4d\u3002 \u7136\u540e\u901a\u8fc7EQ\u6307\u4ee4\uff0c\u5bf9\u6bd4\u6808\u9876\u7684\u4e24\u4e2a\u6570\u636e\u662f\u5426\u4e00\u81f4\uff0c\u5982\u679c\u4e00\u76f4\u7684\u8bdd\uff0c\u8df3\u8f6c\u5230\u76f8\u5e94\u7684tag\u3002\u5982\u679c\u4e0d\u4e00\u81f4\u7684\u8bdd\uff0c\u7ee7\u7eed\u5411\u4e0b\u6267\u884c\u4e0b\u9762\u7684\u6307\u4ee4\u3002 \u627e\u5230\u4e866d4ce63c\u51fd\u6570\u7b7e\u540d\u7684tag4\uff0c\u6267\u884c\u5176\u4ee3\u7801\u3002 \u5728\u4e8c\u8fdb\u5236\u7684\u5f00\u5934\u90e8\u5206\u901a\u5e38\u662f\u7528\u6765\u5224\u65ad\u4e00\u4e2a\u51fd\u6570\u662f\u5426\u662fpayable\u7684\u3002\u6bd4\u5982CALLVALUE\u6307\u4ee4\u4f1a\u5f97\u5230transacation\u662f\u5426\u53d1\u4e86eth\uff0c\u5982\u679c\u53d1\u4e86eth\uff0cISZERO\u7684\u7ed3\u679c\u5c31\u4f1a\u662ffalse\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6267\u884c\u8df3\u8f6c\u3002\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5bf9\u4e00\u4e2a\u5408\u7ea6\u5730\u5740\u4e0d\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u8f6c\u8d26\u548c\u8c03\u7528\u5408\u7ea6\u4e24\u9879\u4e8b\u60c5\u3002 1.6. PlatONE\u5bf9EVM\u652f\u6301\u60c5\u51b5\u8bf4\u660e PlatONE\u652f\u6301\u4ee5\u592a\u574aByzantine\u7684\u534f\u8bae\uff0c\u540e\u7eed\u66f4\u65b0\u7684evm\u534f\u8bae\u6682\u4e0d\u652f\u6301\uff08\u6bd4\u59822019\u5e74\u66f4\u65b0\u7684Constantinople\u3001Istanbul\u7b49\uff09\u3002 \u5728\u4ee5\u592a\u574aByzantium\u7248\u672c\u4e4b\u540e\uff0c\u76ee\u524d\u6709\u4e00\u4e0b\u51e0\u4e2a\u7248\u672c\uff0c\u5176\u4e2d\u65b0\u589e\u7684\u5b57\u8282\u7801PlatONE\u6682\u4e0d\u652f\u6301 Constantinople\uff082019.1.16\u66f4\u65b0\uff09 Opcodes create2 , extcodehash , shl , shr and sar are available in assembly. Petersburg(2019.2.28\u66f4\u65b0) The compiler behaves the same way as with constantinople. Istanbul (2019.12.7\u66f4\u65b0) Opcodes chainid and selfbalance are available in assembly. \u76ee\u524dPlatONE\u5bf9solidity\u7248\u672c\u6ca1\u6709\u8981\u6c42\uff0c0.4.x\uff5e0.6.x\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u662f\u7f16\u8bd1solidity\u5408\u7ea6\u65f6\u5019\u9700\u8981\u660e\u786e\u6307\u5b9aEVM\u7248\u672c\u4e3aByzantium\uff0c\u56e0\u4e3a\u76ee\u524d \u5982\u679c\u5408\u7ea6\u4e2d\u6d89\u53ca\u5230Byzantium\u7248\u672cEVM\u4e0d\u652f\u6301\u7684\u529f\u80fd\uff0c\u5e95\u5c42\u94fe\u4e5f\u4e0d\u4f1a\u652f\u6301\uff0c\u53d8\u73b0\u4e3a\u5408\u7ea6\u6267\u884c\u65f6gas\u8017\u5c3d\u3002 1.7. \u53c2\u8003\u8d44\u6599 https://solidity.readthedocs.io/en/v0.5.12/ http://remix.ethereum.org/#optimize=false&evmVersion=null&version=soljson-v0.5.11+commit.c082d0b4.js&appVersion=0.7.7 https://blog.csdn.net/Programmer_CJC/article/details/80218649 https://blog.csdn.net/notjusttech/article/details/80363911 https://arvanaghi.com/blog/reversing-ethereum-smart-contracts/ https://blog.trustlook.com/understand-evm-bytecode-part-1/ https://www.ratingtoken.net/news/41b22c70febd11e8a867795a7618abd3 http://qyuan.top/2019/09/12/evm/","title":"EVM\u865a\u62df\u673a"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/EVM%E8%99%9A%E6%8B%9F%E6%9C%BA/#evm","text":"","title":"EVM\u865a\u62df\u673a"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/EVM%E8%99%9A%E6%8B%9F%E6%9C%BA/#1-evm","text":"\u4ee5\u592a\u574a\u4e0a\u7684\u865a\u62df\u673a\u79f0\u4e4b\u4e3aEVM\uff0c\u662f\u4e00\u4e2a\u57fa\u4e8e\u6808\u7684\u865a\u62df\u673a\u3002\u73b0\u5728\u6709\u5f88\u591a\u79cd\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u8bed\u8a00\uff0c\u53ea\u8981\u5408\u7ea6\u8bed\u8a00\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u5668\u7f16\u8bd1\u6210\u7b26\u5408EVM\u865a\u62df\u673a\u8981\u6c42\u7684\u7279\u5b9a\u6307\u4ee4\u96c6\uff0c\u5c31\u53ef\u4ee5\u7f16\u5199\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u3002\u73b0\u5728\u6700\u6d41\u884c\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u8bed\u8a00\u662fSolidity\u3002Solidity\u8bed\u8a00\u662f\u4e00\u95e8\u9759\u6001\u8bed\u8a00\uff0c\u5176\u7f16\u8bd1\u5668\u662fsolc\u3002\u901a\u8fc7\u7f16\u8bd1\uff0cSolidity\u8bed\u8a00\u53d8\u6210\u7279\u5b9a\u683c\u5f0f\u7684\u5b57\u8282\u7801\uff0c\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u4ea4\u6613\u7684\u65b9\u5f0f\u53ef\u4ee5\u628a\u5f97\u5230\u7684\u5b57\u8282\u7801\u53d1\u9001\u5e76\u5b58\u50a8\u5230\u533a\u5757\u94fe\u4e0a\u3002 EVM \u4e0d\u662f\u57fa\u4e8e\u5bc4\u5b58\u5668\u7684\uff0c\u800c\u662f\u57fa\u4e8e\u6808\u7684\uff0c\u56e0\u6b64\u6240\u6709\u7684\u8ba1\u7b97\u90fd\u5728\u4e00\u4e2a\u88ab\u79f0\u4e3a \u6808\uff08stack\uff09 \u7684\u533a\u57df\u6267\u884c\u3002 \u6808\u6700\u5927\u67091024\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u957f\u5ea6\u662f\u4e00\u4e2a\u5b57\uff08256\u4f4d\uff09\u3002\u5bf9\u6808\u7684\u8bbf\u95ee\u53ea\u9650\u4e8e\u5176\u9876\u7aef\uff0c\u9650\u5236\u65b9\u5f0f\u4e3a\uff1a\u5141\u8bb8\u62f7\u8d1d\u6700\u9876\u7aef\u768416\u4e2a\u5143\u7d20\u4e2d\u7684\u4e00\u4e2a\u5230\u6808\u9876\uff0c\u6216\u8005\u662f\u4ea4\u6362\u6808\u9876\u5143\u7d20\u548c\u4e0b\u976216\u4e2a\u5143\u7d20\u4e2d\u7684\u4e00\u4e2a\u3002\u6240\u6709\u5176\u4ed6\u64cd\u4f5c\u90fd\u53ea\u80fd\u53d6\u6700\u9876\u7684\u4e24\u4e2a\uff08\u6216\u4e00\u4e2a\uff0c\u6216\u66f4\u591a\uff0c\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u64cd\u4f5c\uff09\u5143\u7d20\uff0c\u8fd0\u7b97\u540e\uff0c\u628a\u7ed3\u679c\u538b\u5165\u6808\u9876\u3002\u5f53\u7136\u53ef\u4ee5\u628a\u6808\u4e0a\u7684\u5143\u7d20\u653e\u5230\u5b58\u50a8\u6216\u5185\u5b58\u4e2d\u3002\u4f46\u662f\u65e0\u6cd5\u53ea\u8bbf\u95ee\u6808\u4e0a\u6307\u5b9a\u6df1\u5ea6\u7684\u90a3\u4e2a\u5143\u7d20\uff0c\u9664\u975e\u5148\u4ece\u6808\u9876\u79fb\u9664\u5176\u4ed6\u5143\u7d20\u3002","title":"1. EVM\u539f\u7406"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/EVM%E8%99%9A%E6%8B%9F%E6%9C%BA/#11","text":"\u7531\u4e8e\u64cd\u4f5c\u7801\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u5b57\u8282\u4ee5\u5185\uff0c\u6240\u4ee5EVM\u6307\u4ee4\u96c6\u6700\u591a\u53ea\u80fd\u5bb9\u7eb3256\u6761\u6307\u4ee4\u3002\u76ee\u524dEVM\u5df2\u7ecf\u5b9a\u4e49\u4e86\u7ea6142\u6761\u6307\u4ee4\uff0c\u8fd8\u6709100\u591a\u6761\u6307\u4ee4\u53ef\u4f9b\u4ee5\u540e\u6269\u5c55\u3002\u8fd9142\u6761\u6307\u4ee4\u5305\u62ec\u4ee5\u4e0b\u56db\u5927\u7c7b\uff1a \u57fa\u672c\u64cd\u4f5c\u7801\uff1a\u7b97\u672f\u8fd0\u7b97\u6307\u4ee4\uff0c\u6bd4\u8f83\u64cd\u4f5c\u6307\u4ee4\uff0c\u6309\u4f4d\u8fd0\u7b97\u6307\u4ee4\uff0c\u6808\uff0c\u8df3\u8f6c\u6307\u4ee4\uff1b \u5bc6\u7801\u5b66\u8ba1\u7b97\u64cd\u4f5c\u7801\uff1a\u5bc6\u7801\u5b66\u8ba1\u7b97\u6307\u4ee4\uff1b\u4f8b\u5982\uff1akeccak256\uff08\u597d\u50cf\u53ea\u6709\u8fd9\u4e00\u4e2a\uff09 \u5b58\u50a8\u76f8\u5173\u64cd\u4f5c\u7801\uff1amemory\uff0cstorage\u64cd\u4f5c\u6307\u4ee4\uff1b\u4f8b\u5982\uff1amstore\uff0csstore, sload, mload\u7b49\u7b49\u3002 \u4e0e\u533a\u5757\u94fe\u7684\u76f4\u63a5\u63a5\u53e3\u64cd\u4f5c\u7801\uff1acall\u3001blockhash\uff0clog\uff0ccaller\uff0ctimestamp\u7b49\u3002","title":"1.1. \u6307\u4ee4\u96c6\u7c7b\u578b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/EVM%E8%99%9A%E6%8B%9F%E6%9C%BA/#12","text":"\u5408\u7ea6\u4f1a\u8bd5\u56fe\u4e3a\u6bcf\u4e00\u6b21\u6d88\u606f\u8c03\u7528\u83b7\u53d6\u4e00\u5757\u88ab\u91cd\u65b0\u64e6\u62ed\u5e72\u51c0\u7684\u5185\u5b58\u5b9e\u4f8b\u3002 \u5185\u5b58\u662f\u7ebf\u6027\u7684\uff0c\u53ef\u6309\u5b57\u8282\u7ea7\u5bfb\u5740\uff0c\u4f46\u8bfb\u7684\u957f\u5ea6\u88ab\u9650\u5236\u4e3a256\u4f4d\uff0c\u800c\u5199\u7684\u957f\u5ea6\u53ef\u4ee5\u662f8\u4f4d\u6216256\u4f4d\u3002\u5f53\u8bbf\u95ee\uff08\u65e0\u8bba\u662f\u8bfb\u8fd8\u662f\u5199\uff09\u4e4b\u524d\u4ece\u672a\u8bbf\u95ee\u8fc7\u7684\u5185\u5b58\u5b57\uff08word\uff09\u65f6\uff08\u65e0\u8bba\u662f\u504f\u79fb\u5230\u8be5\u5b57\u5185\u7684\u4efb\u4f55\u4f4d\u7f6e\uff09\uff0c\u5185\u5b58\u5c06\u6309\u5b57\u8fdb\u884c\u6269\u5c55\uff08\u6bcf\u4e2a\u5b57\u662f256\u4f4d\uff09\u3002\u6269\u5bb9\u4e5f\u5c06\u6d88\u8017\u4e00\u5b9a\u7684gas\u3002 \u968f\u7740\u5185\u5b58\u4f7f\u7528\u91cf\u7684\u589e\u957f\uff0c\u5176\u8d39\u7528\u4e5f\u4f1a\u589e\u9ad8\uff08\u4ee5\u5e73\u65b9\u7ea7\u522b\uff09\u3002\u5728\u521d\u59cb\u5316\u5185\u5b58\u65f6\u662f\u4e0d\u4f1a\u8fdb\u884c\u9884\u5148\u5206\u914d\u4efb\u4f55\u5185\u5b58\u7a7a\u95f4\u7684\uff0c\u800c\u662f\u865a\u62df\u673a\u4f1a\u5728\u6267\u884c\u6bcf\u4e2a\u4e00\u4e2a\u6307\u4ee4\u4e4b\u524d\u5148\u8ba1\u7b97\u4e00\u4e0b\u6267\u884c\u8fd9\u4e2a\u6307\u4ee4\u73b0\u5728\u7684\u5185\u5b58\u662f\u5426\u591f\u7528\uff0c\u5982\u679c\u4e0d\u591f\u7528\u7684\u8bdd\uff0c\u5c31\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u6269\u5bb9\u3002 // Resize resizes the memory to size func (m *Memory) Resize(size uint64) { if uint64(m.Len()) < size { m.store = append(m.store, make([]byte, size-uint64(m.Len()))...) } }","title":"1.2. \u5185\u5b58"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/EVM%E8%99%9A%E6%8B%9F%E6%9C%BA/#13","text":"Solidity\u6e90\u7801\u7f16\u8bd1\u6210\u7684\u5b57\u8282\u7801\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u90e8\u5206\u3002\u7b2c\u4e00\u90e8\u5206\u7684 .code \u5305\u542b\u4e86\u4e00\u4e9b\u667a\u80fd\u5408\u7ea6\u521d\u59cb\u5316\u7684\u4ee3\u7801\uff0c\u6bd4\u5982\u6784\u9020\u51fd\u6570\uff0cstate variable\uff08\u5168\u5c40\u53d8\u91cf\uff09\u7684\u8d4b\u503c\u7b49\u64cd\u4f5c\u3002\u5728\u90e8\u7f72\u5408\u7ea6\u65f6\uff0c\u4f1a\u8c03\u7528\u8fd9\u90e8\u5206\u4ee3\u7801\u8fdb\u884c\u521d\u59cb\u5316\u5408\u7ea6\uff0c\u5e76\u628a\u8fd4\u56de\u7684 runtime bytecode \u6c38\u4e45\u5b58\u50a8\u5230storage\u4e2d\u3002\u533a\u5757\u94fe\u6d4f\u89c8\u5668\uff0c\u5982Etherscan\uff0c\u9ed8\u8ba4\u662f\u65e0\u6cd5\u770b\u5230\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u7684\u3002","title":"1.3. \u90e8\u7f72\u5408\u7ea6"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/EVM%E8%99%9A%E6%8B%9F%E6%9C%BA/#14","text":"\u51fd\u6570\u7b7e\u540d\u662f\u4e00\u4e2a4bytes\u7684hash\u503c\uff0c\u7528\u6765\u552f\u4e00\u6807\u8bc6\u667a\u80fd\u5408\u7ea6\u4e2d\u7684\u51fd\u6570\u3002\u5b83\u662f\u901a\u8fc7sha3(\"functionName(type1, type2)\")\uff0c\u53d6\u524d4bytes\u5f97\u5230\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u8be5\u51fd\u6570\u7b7e\u540d\u53ea\u4e0e\u51fd\u6570\u540d\uff0c\u5f62\u5f0f\u53c2\u6570\u7c7b\u578b\u6709\u5173\u3002 \u4ece.data\u5f00\u59cb\uff0c\u662f\u667a\u80fd\u5408\u7ea6\u7684runtime bytecode\uff0c\u4e5f\u5c31\u662f\u5728\u533a\u5757\u94fe\u4e0a\u4fdd\u5b58\u7684\u5408\u7ea6\u7684bytecode\u3002 \u8fd9\u90e8\u5206\u5b57\u8282\u7801\u7684\u5f00\u5934\u662f\u6574\u4e2a\u5408\u7ea6\u7684\u6240\u6709\u53ef\u8c03\u7528\u51fd\u6570\u7684\u51fd\u6570\u7b7e\u540d\uff0c\u5728\u8c03\u7528\u5408\u7ea6\u7684\u51fd\u6570\u65f6\uff0c\u9996\u5148\u901a\u8fc7calldata\u64cd\u4f5c\u7801\u8bfb\u53d6\u8c03\u7528\u51fd\u6570\u7684\u51fd\u6570\u7b7e\u540d\u7684\u524d\u56db\u4e2a\u5b57\u8282\uff0c\u7136\u540eEVM\u662f\u4ece\u5934\u5f00\u59cb\u7ebf\u6027\u7684\u5f80\u4e0b\u4f9d\u6b21\u52a0\u8f7d\u6bcf\u4e2a\u51fd\u6570\u7b7e\u540d\uff0c\u5e76\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u51fd\u6570\u7b7e\u540d\u4e00\u81f4\u7684\u8bdd\uff0c\u5219\u901a\u8fc7jumpi\u6307\u4ee4\u8df3\u8f6c\u5230\u76f8\u5e94\u7684\u51fd\u6570\u8fdb\u884c\u64cd\u4f5c\u3002\u5728EVM\u4e2d\uff0c\u56de\u9000\u51fd\u6570\u662f\u552f\u4e00\u4e00\u4e2a\u672a\u547d\u540d\u7684\u51fd\u6570\uff0c\u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u7684\u51fd\u6570\u7b7e\u540d\u4e5f\u6ca1\u6709\u5339\u914d\u7684\u51fd\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u8c03\u7528\u56de\u9000\u51fd\u6570\u4ece\u800c\u9000\u51fa\u6574\u4e2a\u8c03\u7528\u8fc7\u7a0b\u3002","title":"1.4. \u8c03\u7528\u5408\u7ea6"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/EVM%E8%99%9A%E6%8B%9F%E6%9C%BA/#15","text":"\u4e0b\u9762\u6211\u4eec\u6309\u7167\u4ee5\u4e0b\u6e90\u7801\u8fdb\u884c\u5206\u6790\u3002 pragma solidity ^0.5.11; contract SimpleStorage { uint storedData; function set(uint x) public { storedData = x; } function get() public view returns (uint) { return storedData; } } \u6e90\u7801\u7f16\u8bd1\u540e\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u5982\u4e0b\uff1a 608060405234801561001057600080fd5b5060c68061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806360fe47b11460375780636d4ce63c146062575b600080fd5b606060048036036020811015604b57600080fd5b8101908080359060200190929190505050607e565b005b60686088565b6040518082815260200191505060405180910390f35b8060008190555050565b6000805490509056fea265627a7a72315820f7616ca7610ee51eb34eb9619c012a95b32e296d4fcdefb15c4c6051175c683964736f6c634300050b0032 \u628a\u4ee5\u4e0a\u4ee3\u7801\u4f5c\u4e3a\u4ea4\u6613\u7684data\u90e8\u7f72\u5230\u94fe\u4e0a\uff0c\u4f46\u662f\u4f5c\u4e3a\u5408\u7ea6code\u5b58\u50a8\u5230\u94fe\u4e0a\u7684\u6570\u636e\uff0c\u662f\u4ee5\u4e0a\u6570\u636e\u7684\u5b50\u96c6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3aRuntime ByteCode\u5982\u4e0b\u6240\u793a\uff1a 6080604052348015600f57600080fd5b506004361060325760003560e01c806360fe47b11460375780636d4ce63c146062575b600080fd5b606060048036036020811015604b57600080fd5b8101908080359060200190929190505050607e565b005b60686088565b6040518082815260200191505060405180910390f35b8060008190555050565b6000805490509056fea265627a7a72315820f7616ca7610ee51eb34eb9619c012a95b32e296d4fcdefb15c4c6051175c683964736f6c634300050b0032 \u4e0b\u9762\u6211\u4eec\u6309\u7167\u6e90\u7801\u7684\u6c47\u7f16\u8868\u793a\u6765\u8fdb\u884c\u5177\u4f53\u5206\u6790\u3002 .code PUSH 80 contract SimpleStorage {\\n ... PUSH 40 contract SimpleStorage {\\n ... MSTORE contract SimpleStorage {\\n ... CALLVALUE contract SimpleStorage {\\n ... DUP1 olidity ^ ISZERO a PUSH [tag] 1 a JUMPI a PUSH 0 a DUP1 n REVERT .11;\\ncontrac tag 1 a JUMPDEST a POP contract SimpleStorage {\\n ... PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000 contract SimpleStorage {\\n ... DUP1 contract SimpleStorage {\\n ... PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000 contract SimpleStorage {\\n ... PUSH 0 contract SimpleStorage {\\n ... CODECOPY contract SimpleStorage {\\n ... PUSH 0 contract SimpleStorage {\\n ... RETURN contract SimpleStorage {\\n ... .data 0: .code PUSH 80 contract SimpleStorage {\\n ... PUSH 40 contract SimpleStorage {\\n ... MSTORE contract SimpleStorage {\\n ... CALLVALUE contract SimpleStorage {\\n ... DUP1 olidity ^ ISZERO a PUSH [tag] 1 a JUMPI a PUSH 0 a DUP1 n REVERT .11;\\ncontrac tag 1 a JUMPDEST a POP contract SimpleStorage {\\n ... PUSH 4 contract SimpleStorage {\\n ... CALLDATASIZE contract SimpleStorage {\\n ... LT contract SimpleStorage {\\n ... PUSH [tag] 2 contract SimpleStorage {\\n ... JUMPI contract SimpleStorage {\\n ... PUSH 0 contract SimpleStorage {\\n ... CALLDATALOAD contract SimpleStorage {\\n ... PUSH E0 contract SimpleStorage {\\n ... SHR contract SimpleStorage {\\n ... DUP1 contract SimpleStorage {\\n ... PUSH 60FE47B1 contract SimpleStorage {\\n ... EQ contract SimpleStorage {\\n ... PUSH [tag] 3 contract SimpleStorage {\\n ... JUMPI contract SimpleStorage {\\n ... DUP1 contract SimpleStorage {\\n ... PUSH 6D4CE63C contract SimpleStorage {\\n ... EQ contract SimpleStorage {\\n ... PUSH [tag] 4 contract SimpleStorage {\\n ... JUMPI contract SimpleStorage {\\n ... tag 2 contract SimpleStorage {\\n ... JUMPDEST contract SimpleStorage {\\n ... PUSH 0 contract SimpleStorage {\\n ... DUP1 contract SimpleStorage {\\n ... REVERT contract SimpleStorage {\\n ... tag 3 function set(uint x) public {\\... JUMPDEST function set(uint x) public {\\... PUSH [tag] 5 function set(uint x) public {\\... .... JUMPI ag PUSH 0 r DUP1 o REVERT 5.11;\\ncontra tag 6 ag JUMPDEST ag ..... PUSH [tag] 7 function set(uint x) public {\\... JUMP [in] function set(uint x) public {\\... tag 5 function set(uint x) public {\\... JUMPDEST function set(uint x) public {\\... STOP function set(uint x) public {\\... tag 4 function get() public view ret... JUMPDEST function get() public view ret... PUSH [tag] 8 function get() public view ret... PUSH [tag] 9 function get() public view ret... JUMP [in] function get() public view ret... tag 8 function get() public view ret... JUMPDEST function get() public view ret... ..... RETURN function get() public view ret... tag 7 function set(uint x) public {\\... JUMPDEST function set(uint x) public {\\... ..... JUMP [out] function set(uint x) public {\\... tag 9 function get() public view ret... JUMPDEST function get() public view ret... ...... JUMP [out] function get() public view ret... .data \u5728\u5f00\u59cb\u5904\u6807\u8bc6 .code \u7684\u90e8\u5206\u5c31\u662f\u6211\u4eec\u524d\u9762\u8bf4\u667a\u80fd\u5408\u7ea6\u90e8\u7f72\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u7684\u4ee3\u7801\u3002\u5728EVM\u4e2d0x40\u5730\u5740\u662f\u4e00\u4e2a\u88ab\u9884\u7559\u7684\u5730\u5740\uff0c\u79f0\u4e4b\u4e3a\u201c\u7a7a\u5185\u5b58\u5730\u5740\u201d\uff1a\u5373\u5185\u5b58\u4e2d\u6211\u4eec\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u4e1c\u897f\u7684\u5730\u65b9\uff0c\u4fdd\u8bc1\u6ca1\u6709\u4eba\u4f1a\u8986\u76d6\u5b83\uff08\u9664\u975e\u6211\u4eec\u72af\u4e86\u9519\u8bef\uff09\u3002\u800c0x00\u52300x40\u4e4b\u95f4\u7684\u5185\u5b58\u662f\u7528\u6765\u4fdd\u5b58\u8ba1\u7b97\u54c8\u5e0c\u503c\uff0c\u8fd9\u4e2a\u5bf9\u4e8e\u6620\u5c04\u548c\u5176\u4ed6\u7c7b\u578b\u7684\u52a8\u6001\u6570\u636e\u662f\u5fc5\u9700\u7684\u3002 \u8981\u8c03\u7528get()\u65b9\u6cd5\uff0c\u9700\u8981\u6839\u636esha3(\"get()\")\u5f97\u5230\u524d4\u4e2a\u5b57\u8282\uff0c\u5373\u51fd\u6570\u7b7e\u540d6d4ce63c\u3002 \u5728.code\u4e2d\u7684tag1\uff0cCALLDATASIZE\u4f1a\u83b7\u53d6\u4ea4\u6613\u4f20\u5165\u7684\u53c2\u6570\u957f\u5ea6\uff0cLT\u6307\u4ee4\u6765\u6bd4\u8f83\u662f\u5426\u5c0f\u4e8e4\u4e2a\u5b57\u8282\uff0c\u5982\u679c\u5c0f\u4e8e4\u4e2a\u5b57\u8282\uff0c\u5219\u4f1a\u8df3\u8f6c\u5230tag2\uff0c\u6574\u4e2a\u5408\u7ea6\u8fd0\u884c\u5b8c\u6bd5\u3002\u8fd9\u91cc\u7684\u6267\u884c\u5c31\u662f\u56de\u9000\u51fd\u6570\u3002 \u5982\u679c\u4e0d\u5c0f\u4e8e4\u4e2a\u5b57\u8282\uff0c\u5219\u4f1a\u7ee7\u7eed\u6267\u884cCALLDATALOAD\u6307\u4ee4\uff0cCALLDATALOAD\u4f1a\u628a\u53c2\u6570\u5185\u5bb9\u538b\u5165\u6808\u9876\u3002 \u7136\u540e\u5728\u903b\u8f91\u53f3\u79fb0xE0\uff08224\uff09\u4f4d\uff0c\u539f\u56e0\u662f\u4e3a\u4e86\u51d1\u8db3256\u4f4d\u3002 \u7136\u540e\u901a\u8fc7EQ\u6307\u4ee4\uff0c\u5bf9\u6bd4\u6808\u9876\u7684\u4e24\u4e2a\u6570\u636e\u662f\u5426\u4e00\u81f4\uff0c\u5982\u679c\u4e00\u76f4\u7684\u8bdd\uff0c\u8df3\u8f6c\u5230\u76f8\u5e94\u7684tag\u3002\u5982\u679c\u4e0d\u4e00\u81f4\u7684\u8bdd\uff0c\u7ee7\u7eed\u5411\u4e0b\u6267\u884c\u4e0b\u9762\u7684\u6307\u4ee4\u3002 \u627e\u5230\u4e866d4ce63c\u51fd\u6570\u7b7e\u540d\u7684tag4\uff0c\u6267\u884c\u5176\u4ee3\u7801\u3002 \u5728\u4e8c\u8fdb\u5236\u7684\u5f00\u5934\u90e8\u5206\u901a\u5e38\u662f\u7528\u6765\u5224\u65ad\u4e00\u4e2a\u51fd\u6570\u662f\u5426\u662fpayable\u7684\u3002\u6bd4\u5982CALLVALUE\u6307\u4ee4\u4f1a\u5f97\u5230transacation\u662f\u5426\u53d1\u4e86eth\uff0c\u5982\u679c\u53d1\u4e86eth\uff0cISZERO\u7684\u7ed3\u679c\u5c31\u4f1a\u662ffalse\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6267\u884c\u8df3\u8f6c\u3002\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5bf9\u4e00\u4e2a\u5408\u7ea6\u5730\u5740\u4e0d\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u8f6c\u8d26\u548c\u8c03\u7528\u5408\u7ea6\u4e24\u9879\u4e8b\u60c5\u3002","title":"1.5. \u6848\u4f8b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/EVM%E8%99%9A%E6%8B%9F%E6%9C%BA/#16-platoneevm","text":"PlatONE\u652f\u6301\u4ee5\u592a\u574aByzantine\u7684\u534f\u8bae\uff0c\u540e\u7eed\u66f4\u65b0\u7684evm\u534f\u8bae\u6682\u4e0d\u652f\u6301\uff08\u6bd4\u59822019\u5e74\u66f4\u65b0\u7684Constantinople\u3001Istanbul\u7b49\uff09\u3002 \u5728\u4ee5\u592a\u574aByzantium\u7248\u672c\u4e4b\u540e\uff0c\u76ee\u524d\u6709\u4e00\u4e0b\u51e0\u4e2a\u7248\u672c\uff0c\u5176\u4e2d\u65b0\u589e\u7684\u5b57\u8282\u7801PlatONE\u6682\u4e0d\u652f\u6301 Constantinople\uff082019.1.16\u66f4\u65b0\uff09 Opcodes create2 , extcodehash , shl , shr and sar are available in assembly. Petersburg(2019.2.28\u66f4\u65b0) The compiler behaves the same way as with constantinople. Istanbul (2019.12.7\u66f4\u65b0) Opcodes chainid and selfbalance are available in assembly. \u76ee\u524dPlatONE\u5bf9solidity\u7248\u672c\u6ca1\u6709\u8981\u6c42\uff0c0.4.x\uff5e0.6.x\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u662f\u7f16\u8bd1solidity\u5408\u7ea6\u65f6\u5019\u9700\u8981\u660e\u786e\u6307\u5b9aEVM\u7248\u672c\u4e3aByzantium\uff0c\u56e0\u4e3a\u76ee\u524d \u5982\u679c\u5408\u7ea6\u4e2d\u6d89\u53ca\u5230Byzantium\u7248\u672cEVM\u4e0d\u652f\u6301\u7684\u529f\u80fd\uff0c\u5e95\u5c42\u94fe\u4e5f\u4e0d\u4f1a\u652f\u6301\uff0c\u53d8\u73b0\u4e3a\u5408\u7ea6\u6267\u884c\u65f6gas\u8017\u5c3d\u3002","title":"1.6. PlatONE\u5bf9EVM\u652f\u6301\u60c5\u51b5\u8bf4\u660e"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/EVM%E8%99%9A%E6%8B%9F%E6%9C%BA/#17","text":"https://solidity.readthedocs.io/en/v0.5.12/ http://remix.ethereum.org/#optimize=false&evmVersion=null&version=soljson-v0.5.11+commit.c082d0b4.js&appVersion=0.7.7 https://blog.csdn.net/Programmer_CJC/article/details/80218649 https://blog.csdn.net/notjusttech/article/details/80363911 https://arvanaghi.com/blog/reversing-ethereum-smart-contracts/ https://blog.trustlook.com/understand-evm-bytecode-part-1/ https://www.ratingtoken.net/news/41b22c70febd11e8a867795a7618abd3 http://qyuan.top/2019/09/12/evm/","title":"1.7. \u53c2\u8003\u8d44\u6599"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/","text":"Wasm\u865a\u62df\u673a 1. Wasm\u6807\u51c6\u4ecb\u7ecd WebAssembly\u5c31\u50cf\u540d\u5b57\u4e00\u6837\uff0c\u662f\u4e00\u4e2a\u6c47\u7f16\u8bed\u8a00\uff0c\u867d\u7136\u5f00\u59cb\u65f6\u7684\u6784\u60f3\u662f\u8fd0\u884c\u5728Web\u4e0a\u3001\u72ec\u7acb\u4e8e\u5b9e\u9645\u7269\u7406\u673a\u5668\u67b6\u6784\u7684\u62bd\u8c61\u6c47\u7f16\u8bed\u8a00\u3002\u5176\u62bd\u8c61\u6027\u5728\u4e8e\u53ea\u8981\u6d4f\u89c8\u5668\u5b9e\u73b0\u4e86Wasm\u6807\u51c6\u7684\u6c47\u7f16\u6307\u4ee4\u96c6\uff0cwasm\u6a21\u5757\u5c31\u53ef\u4ee5\u5728\u5176\u4e0a\u6267\u884c\uff0c\u800c\u4e0d\u7ba1\u7269\u7406\u673a\u5668\u7684\u67b6\u6784\u662f\u4ec0\u4e48\u3002\u4f46\u662f\u968f\u7740\u7814\u7a76\u7684\u6df1\u5165\u548c\u8c03\u7814\u7684\u53cd\u9988\uff0c\u53d1\u73b0Wasm\u4e0d\u4ec5\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u6709\u7740\u8feb\u5207\u7684\u9700\u6c42\uff0c\u975eweb\u9886\u57df\u4e5f\u4e00\u6837\u5f00\u59cb\u6d41\u884c\u8d77\u6765\u3002 WebAssembly \u5e76\u4e0d\u662f\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u800c\u662f\u4e00\u4efd\u5b57\u8282\u7801\u6807\u51c6\uff0c\u9700\u8981\u7528\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u7f16\u8bd1\u51fa\u5b57\u8282\u7801\u653e\u5230 WebAssembly \u865a\u62df\u673a\u4e2d\u624d\u80fd\u8fd0\u884c\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u5668\u628a\u9ad8\u7ea7\u8bed\u8a00\uff0c\u4f8b\u5982\uff1aC/C++\uff0cRust\u7b49\u7f16\u8bd1\u6210Wasm\u5b57\u8282\u7801\uff08\u4e5f\u5c31\u662f\u7b26\u5408wasm\u6c47\u7f16\u6307\u4ee4\u96c6\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff09\uff0cwasm\u8fd0\u884c\u901f\u5ea6\u5f88\u5feb\uff0c\u4e14\u4f53\u79ef\u5f88\u5c0f\u3002 2017\u5e74Wasm\u53d1\u5e03\u4e86MVP\uff08Minimum Viable Product\uff0c\u6700\u5c0f\u53ef\u884c\u6027\u7248\u672c\uff09\u7248\u672c\uff0c\u73b0\u5728\u57fa\u672c\u4e0a\u6240\u6709\u7684\u4e3b\u6d41\u6d4f\u89c8\u5668\u5df2\u7ecf\u5168\u90e8\u652f\u6301\u3002 1.1. WebAssembly\u539f\u7406 \u7531\u4e8e\u4e0d\u540c\u7684\u8ba1\u7b97\u673a CPU \u67b6\u6784\u4e0d\u540c\uff0c\u673a\u5668\u7801\u6807\u51c6\u4e5f\u6709\u6240\u5dee\u522b\uff0c\u5e38\u89c1\u7684 CPU \u67b6\u6784\u5305\u62ec x86\u3001AMD64\u3001ARM\uff0c \u56e0\u6b64\u5728\u7531\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u7f16\u8bd1\u6210\u53ef\u81ea\u884c\u4ee3\u7801\u65f6\u9700\u8981\u6307\u5b9a\u76ee\u6807\u67b6\u6784\u3002 WebAssembly \u5b57\u8282\u7801\u662f\u4e00\u79cd\u62b9\u5e73\u4e86\u4e0d\u540c CPU \u67b6\u6784\u7684\u673a\u5668\u7801\uff0cWebAssembly \u5b57\u8282\u7801\u4e0d\u80fd\u76f4\u63a5\u5728\u4efb\u4f55\u4e00\u79cd CPU \u67b6\u6784\u4e0a\u8fd0\u884c\uff0c \u4f46\u7531\u4e8e\u975e\u5e38\u63a5\u8fd1\u673a\u5668\u7801\uff0c\u53ef\u4ee5\u975e\u5e38\u5feb\u7684\u88ab\u7ffb\u8bd1\u4e3a\u5bf9\u5e94\u67b6\u6784\u7684\u673a\u5668\u7801\uff0c\u56e0\u6b64 WebAssembly \u8fd0\u884c\u901f\u5ea6\u548c\u673a\u5668\u7801\u63a5\u8fd1\uff0c\u8fd9\u542c\u4e0a\u53bb\u975e\u5e38\u50cf Java \u5b57\u8282\u7801\u3002 \u76f8\u5bf9\u4e8e JS\uff0cWebAssembly \u6709\u5982\u4e0b\u4f18\u70b9\uff1a \u4f53\u79ef\u5c0f\uff1a\u7531\u4e8e\u6d4f\u89c8\u5668\u8fd0\u884c\u65f6\u53ea\u52a0\u8f7d\u7f16\u8bd1\u6210\u7684\u5b57\u8282\u7801\uff0c\u4e00\u6837\u7684\u903b\u8f91\u6bd4\u7528\u5b57\u7b26\u4e32\u63cf\u8ff0\u7684 JS \u6587\u4ef6\u4f53\u79ef\u8981\u5c0f\u5f88\u591a\uff1b \u52a0\u8f7d\u5feb\uff1a\u7531\u4e8e\u6587\u4ef6\u4f53\u79ef\u5c0f\uff0c\u518d\u52a0\u4e0a\u65e0\u9700\u89e3\u91ca\u6267\u884c\uff0cWebAssembly \u80fd\u66f4\u5feb\u7684\u52a0\u8f7d\u5e76\u5b9e\u4f8b\u5316\uff0c\u51cf\u5c11\u8fd0\u884c\u524d\u7684\u7b49\u5f85\u65f6\u95f4\uff1b \u6bcf\u4e2a\u9ad8\u7ea7\u8bed\u8a00\u90fd\u53bb\u5b9e\u73b0\u6e90\u7801\u5230\u4e0d\u540c\u5e73\u53f0\u7684\u673a\u5668\u7801\u7684\u8f6c\u6362\u5de5\u4f5c\u662f\u91cd\u590d\u7684\uff0c\u9ad8\u7ea7\u8bed\u8a00\u53ea\u9700\u8981\u751f\u6210\u5e95\u5c42\u865a\u62df\u673a(LLVM)\u8ba4\u8bc6\u7684\u4e2d\u95f4\u8bed\u8a00(LLVM IR)\uff0c LLVM \u80fd\u5b9e\u73b0\uff1a LLVM IR \u5230\u4e0d\u540c CPU \u67b6\u6784\u673a\u5668\u7801\u7684\u751f\u6210\uff1b \u673a\u5668\u7801\u7f16\u8bd1\u65f6\u6027\u80fd\u548c\u5927\u5c0f\u4f18\u5316\u3002 \u9664\u6b64\u4e4b\u5916 LLVM \u8fd8\u5b9e\u73b0\u4e86 LLVM IR \u5230 WebAssembly \u5b57\u8282\u7801\u7684\u7f16\u8bd1\u529f\u80fd\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u8981\u9ad8\u7ea7\u8bed\u8a00\u80fd\u8f6c\u6362\u6210 LLVM IR\uff0c\u5c31\u80fd\u88ab\u7f16\u8bd1\u6210 WebAssembly \u5b57\u8282\u7801\u3002 \u901a\u5e38\u8d1f\u8d23\u628a\u9ad8\u7ea7\u8bed\u8a00\u7ffb\u8bd1\u5230 LLVM IR \u7684\u90e8\u5206\u53eb\u505a\u7f16\u8bd1\u5668\u524d\u7aef\uff0c\u628a LLVM IR \u7f16\u8bd1\u6210\u5404\u67b6\u6784 CPU \u5bf9\u5e94\u673a\u5668\u7801\u7684\u90e8\u5206\u53eb\u505a\u7f16\u8bd1\u5668\u540e\u7aef\uff1b \u73b0\u5728\u8d8a\u6765\u8d8a\u591a\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u9009\u62e9 LLVM \u4f5c\u4e3a\u540e\u7aef\uff0c\u9ad8\u7ea7\u8bed\u8a00\u53ea\u9700\u4e13\u6ce8\u4e8e\u5982\u4f55\u63d0\u4f9b\u5f00\u53d1\u6548\u7387\u66f4\u9ad8\u7684\u8bed\u6cd5\u540c\u65f6\u4fdd\u6301\u7ffb\u8bd1\u5230 LLVM IR \u7684\u7a0b\u5e8f\u6267\u884c\u6027\u80fd\u3002 1.2. \u5e73\u53f0\u63a5\u53e3\u8bbf\u95ee \u4f9d\u8d56\u4e8e\u6267\u884c JavaScript \u7684\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u53ef\u4ee5\u901a\u8fc7 JavaScript \u7a0b\u5e8f\u6765\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e9b\u5e73\u53f0\u6240\u66b4\u9732\u51fa\u7684\u6307\u5b9a\u63a5\u53e3\u3002\u6bd4\u5982\uff0c\u5f53\u4f60\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c JavaScript\uff0c\u7f51\u7edc\u5e94\u7528\u53ef\u4ee5\u8c03\u7528\u4e00\u7cfb\u5217\u7684\u7f51\u9875\u63a5\u53e3\u6765\u63a7\u5236\u6d4f\u89c8\u5668\uff0f\u8bbe\u5907\u7684\u529f\u80fd\u4e14\u8bbf\u95ee DOM\uff0cCSSOM\uff0cWebGL\uff0cIndexedDB\uff0cWeb Audio API \u7b49\u7b49\u3002 \u7136\u800c\uff0cWebAssembly \u6a21\u5757\u4e0d\u80fd\u591f\u8bbf\u95ee\u4efb\u4f55\u5e73\u53f0\u7684\u63a5\u53e3\u3002\u6240\u6709\u7684\u8fd9\u4e00\u5207\u90fd\u5f97\u7531 JavaScript \u6765\u8fdb\u884c\u534f\u8c03\u3002\u5982\u679c\u4f60\u60f3\u5728 WebAssembly \u6a21\u5757\u5185\u8bbf\u95ee\u4e00\u4e9b\u6307\u5b9a\u5e73\u53f0\u7684\u63a5\u53e3\uff0c\u4f60\u5fc5\u987b\u5f97\u901a\u8fc7 JavaScript \u6765\u8fdb\u884c\u8c03\u7528\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u60f3\u8981\u4f7f\u7528 console.log\uff0c\u4f60\u5c31\u5f97\u901a\u8fc7JavaScript \u800c\u4e0d\u662f C++ \u4ee3\u7801\u6765\u8fdb\u884c\u8c03\u7528\u3002\u800c\u8fd9\u4e9b JavaScript \u8c03\u7528\u4f1a\u4ea7\u751f\u4e00\u5b9a\u7684\u6027\u80fd\u635f\u5931\u3002 \u60c5\u51b5\u4e0d\u4f1a\u4e00\u6210\u4e0d\u53d8\u7684\u3002\u89c4\u8303\u5c06\u4f1a\u4e3a\u5728\u672a\u6765\u4e3a wasm \u63d0\u4f9b\u8bbf\u95ee\u6307\u5b9a\u5e73\u53f0\u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u4e0d\u7528\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5185\u7f6e JavaScript\u3002 \u73b0\u5728WASI\u6b63\u5728\u505a\u8fd9\u65b9\u9762\u7684\u52aa\u529b\uff0c\u8ba9WASM\u6709\u76f4\u63a5\u8bbf\u95ee\u7269\u7406\u5e73\u53f0\u7684\u80fd\u529b\u3002 1.3. \u7c7b\u578b \u76ee\u524d\u7684 WebAssembly \u7c7b\u578b\u7cfb\u7edf\u8fd8\u5f88\u5c0f\uff0c\u53ea\u6709\u56db\u79cd\u6570\u5b57\u7c7b\u578b\uff08int32,int64,float32,float64\uff09\u3002\u76ee\u524d\uff0c\u5982\u679c\u8981\u4f7f\u7528\u590d\u6742\u7c7b\u578b\uff08\u4f8b\u5982\u5b57\u7b26\u4e32\u3001\u5bf9\u8c61\u3001\u6570\u7ec4\u3001\u7ed3\u6784\u4f53\uff09\uff0c\u9700\u8981\u5c06\u5b83\u4eec\u5e8f\u5217\u5316\u4e3a\u7ebf\u6027\u5185\u5b58\uff0c\u5e76\u63d0\u4f9b\u5b83\u4eec\u6240\u5728\u4f4d\u7f6e\u7684\u5f15\u7528\uff0c\u8fd9\u6837\u5c31\u4f1a\u591a\u51fa\u6765\u5f88\u591a\u6027\u80fd\u5f00\u9500\u3002\u73b0\u5728\u6709\u4e00\u4e2a\u63d0\u6848\u5bf9\u7c7b\u578b\u7cfb\u7edf\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684 anyref \u7c7b\u578b\uff0c\u6a21\u5757\u53ef\u4ee5\u6301\u6709\u5bf9\u4e3b\u673a\u73af\u5883\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5c06 JS \u5bf9\u8c61\u4f20\u7ed9 wasm \u6a21\u5757\u3002 \u901a\u8fc7 anyref \u5f15\u7528\u7684\u5bf9\u8c61\u5bf9\u4e8e wasm \u6a21\u5757\u6765\u8bf4\u610f\u4e49\u4e0d\u662f\u5f88\u5927\uff0c\u5173\u952e\u5728\u4e8e\u6a21\u5757\u53ef\u4ee5\u6301\u6709\u5728 JS \u5806\u4e0a\u5206\u914d\u7684\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8fd9\u610f\u5473\u7740\u5728 wasm \u6267\u884c\u671f\u95f4\u9700\u8981\u5bf9\u8fd9\u4e9b\u5f15\u7528\u8fdb\u884c\u8ddf\u8e2a\u3002\u8be5\u63d0\u6848\u88ab\u89c6\u4e3a\u5783\u573e\u56de\u6536\u63d0\u6848\u7684\u57ab\u811a\u77f3\u3002 1.4. \u5185\u5b58\u56de\u6536 \u76ee\u524d\u4e3a\u6b62\uff0cWebAssembly \u4e0d\u652f\u6301\u5783\u573e\u56de\u6536\u3002\u5185\u5b58\u64cd\u4f5c\u90fd\u662f\u624b\u52a8\u63a7\u5236\u7684\uff08\u50cf C\u3001C++\u4e00\u6837\uff09\u3002\u5728wasm\u865a\u62df\u673a\u4e2d\u5360\u7528\u5185\u5b58\u7684\u6709\u5982\u4e0b\u5185\u5bb9\uff1a \u590d\u6742\u7c7b\u578b\uff08\u4f8b\u5982\u5b57\u7b26\u4e32\u3001\u5bf9\u8c61\u3001\u6570\u7ec4\u3001\u7ed3\u6784\u4f53\uff09 \u624b\u52a8malloc\u7684\u5185\u5b58\u3002\u9700\u8981\u865a\u62df\u673a\u63d0\u4f9bimport\u7c7b\u578b\u7684malloc\u65b9\u6cd5\u3002 \u624b\u5de5\u56de\u6536\u5185\u5b58\u662f\u975e\u5e38\u9ebb\u70e6\u7684\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5728\u533a\u5757\u94fe\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u56de\u6536\u5185\u5b58\uff0c\u56e0\u4e3a\u4e00\u822c\u667a\u80fd\u5408\u7ea6\u90fd\u4e0d\u4f1a\u4e00\u76f4\u8fd0\u884c\uff08gas\u7b49\u673a\u5236\u8fdb\u884c\u9650\u5236\uff09\uff0c\u8fd0\u884c\u5b8c\u6bd5\u540e\uff0c\u865a\u62df\u673a\u5b9e\u4f8b\u5c31\u4f1a\u9500\u6bc1\uff0c\u8fde\u5e26\u7740\u5206\u914d\u7684\u5185\u5b58\u4e5f\u4e00\u6837\u4f1a\u88ab\u5bbf\u4e3b\u7a0b\u5e8f\u56de\u6536\u3002 \u76ee\u524d\uff0c\u9700\u8981\u5783\u573e\u56de\u6536\u5668\u7684\u7f16\u7a0b\u8bed\u8a00\u6ca1\u6709\u5176\u4ed6\u9009\u62e9\uff0c\u53ea\u80fd\u5c06 GC \u7f16\u8bd1\u4e3a wasm\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u4e00\u90e8\u5206\uff0c\u4f8b\u5982 AssemblyScript \u5c31\u5728\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u201cmakeshift GC\u201d\u3002\u4f46\u8fd9\u6837\u4f1a\u589e\u52a0\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u540c\u65f6 GC \u7b97\u6cd5\u7684\u6548\u7387\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u5f53\u7136\u8fd9\u4e2a\u770b\u7f16\u8bd1\u5668\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u7f16\u8bd1\u5668\u4e5f\u53ef\u4ee5\u76f4\u63a5\u653e\u5f03\u5783\u573e\u56de\u6536\u3002 1.5. \u591a\u7ebf\u7a0b \u76ee\u524d WebAssembly \u4e0d\u652f\u6301\u591a\u7ebf\u7a0b\u3002\u4f46\u662f\uff0c\u8fd9\u6709\u53ef\u80fd\u662f\u63a5\u4e0b\u6765 WebAssembly \u8981\u5b9e\u73b0\u7684\u3002Wasm \u5c06\u4f1a\u63a5\u8fd1\u5b9e\u73b0\u539f\u751f\u7684\u7ebf\u7a0b\uff08\u6bd4\u5982\uff0cC++ \u98ce\u683c\u7684\u7ebf\u7a0b\uff09\u3002\u62e5\u6709\u771f\u6b63\u7684\u7ebf\u7a0b\u5c06\u4f1a\u5728\u6d4f\u89c8\u5668\u4e2d\u521b\u9020\u51fa\u5f88\u591a\u65b0\u7684\u673a\u9047\u3002\u5e76\u4e14\u5f53\u7136\uff0c\u4f1a\u589e\u52a0\u6ee5\u7528\u7684\u53ef\u80fd\u6027\u3002 1.6. \u5982\u4f55\u4fdd\u8bc1\u5b89\u5168 \u5728WASM\u6807\u51c6\u4e2d\uff0c\u5185\u5b58\u5c31\u662f\u9884\u5148\u5206\u914d\u7684\u4e00\u4e2a\u6570\u7ec4\uff0c\u800c\u5185\u5b58\u5730\u5740\u5c31\u662f\u6570\u7ec4\u7d22\u5f15\uff0c\u5c31\u7b97wasm\u4ee3\u7801\u64cd\u7eb5\u5185\u5b58\u5730\u5740\u8fdb\u884c\u8d8a\u754c\u8bbf\u95ee\uff08C/C++\u5f88\u591a\u6f0f\u6d1e\u5c31\u662f\u8fd9\u6837\u64cd\u4f5c\u7684\uff09\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u5230\u522b\u7684\u7a0b\u5e8f\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u5185\u5b58\u5b89\u5168\uff0c\u4e14wasm\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u7269\u7406\u5e73\u53f0\u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u5c31\u73b0\u5b9e\u4e86\u6240\u8c13\u7684\u6c99\u7bb1\u3002 1.7. \u5e94\u7528\u573a\u666f \u56e0\u4e3aWasm\u662f\u5df2\u7ecf\u7ecf\u8fc7\u7f16\u8bd1\u4f18\u5316\u8fc7\u540e\u7684\u3001\u9759\u6001\u7684\u8bed\u8a00\uff0c\u6240\u4ee5\u5176\u8fd0\u884c\u901f\u5ea6\u4f1a\u6bd4JavaScript\u5feb\u5f88\u591a\uff0c\u4e14Wasm\u6807\u51c6\u7684\u8de8\u5e73\u53f0\u7684\uff0c\u4ee5\u4e0b\u573a\u666f\u975e\u5e38\u9002\u5408\u4f7f\u7528wasm\u6280\u672f\u3002 \u5728\u7ebf\u89c6\u9891/\u76f4\u64ad\u7f16\u89e3\u7801 \u5728\u7ebf\u56fe\u50cf\u548c\u89c6\u9891\u5904\u7406\u5e94\u7528 \u9ad8\u6027\u80fdWeb\u6e38\u620f\u3002 \u533a\u5757\u94fe 2. Wasm\u865a\u62df\u673a\u539f\u7406 2.1. \u57fa\u4e8e\u6808\u7684\u865a\u62df\u673a WebAssembly\u4e0d\u4ec5\u662f\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e5f\u662f\u4e00\u5957\u865a\u62df\u673a\u4f53\u7cfb\u7ed3\u6784\u89c4\u8303\u3002 2.1.1. \u6808 \u6808\u662f\u4e00\u79cd\u5148\u8fdb\u540e\u51fa\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6808\u7406\u89e3\u4e3a\u4e00\u79cd\u7279\u6b8a\u5316\u7684\u6570\u7ec4\uff0c\u5b83\u88ab\u9650\u5236\u4e3a\u53ea\u80fd\u4ece\u4e00\u7aef\u6267\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u4e60\u60ef\u4e0a\u8fd9\u4e00\u7aef\u88ab\u79f0\u4e3a\u6808\u9876\uff0c\u800c\u5bf9\u5e94\u7684\u53e6\u4e00\u7aef\u88ab\u79f0\u4e3a\u6808\u5e95\u3002\u6808\u6709\u4e24\u79cd\u57fa\u672c\u64cd\u4f5c\u3002 \u538b\u5165\uff1a\u6216\u8005\u5165\u6808\uff0c\u5728\u6808\u9876\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\uff0c\u6808\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u52a01\u3002 \u5f39\u51fa\uff1a\u6216\u8005\u8bf4\u51fa\u6808\uff0c\u5c06\u6808\u9876\u7684\u5143\u7d20\u5220\u9664\uff0c\u6808\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u51cf1\u3002 2.1.2. WebAssembly \u6808\u5f0f\u865a\u62df\u673a \u5927\u591a\u6570\u786c\u4ef6\u7684CPU\u4f53\u7cfb\u4e2d\u90fd\u6709\u4e00\u5b9a\u6570\u91cf\u7684\u901a\u7528\u548c\u4e13\u7528\u5bc4\u5b58\u5668\uff08\u5982IA32\u4e2d\u7684EAX\u3001EBX\u3001ESP\u7b49\uff09\uff0cCPU\u6307\u4ee4\u4f7f\u7528\u8fd9\u4e9b\u5bc4\u5b58\u5668\u5b58\u653e\u64cd\u4f5c\u6570\uff0c\u6267\u884c\u6570\u503c\u8fd0\u7b97\u3001\u903b\u8f91\u8fd0\u7b97\u3001\u5185\u5b58\u8bfb\u5199\u7b49\u64cd\u4f5c\u3002\u800c\u5728WebAssembly\u4f53\u7cfb\u4e2d\uff0c\u6ca1\u6709\u5bc4\u5b58\u5668\uff0c\u64cd\u4f5c\u6570\u5b58\u653e\u5728\u8fd0\u884c\u65f6\u7684\u6808\u4e0a\uff0c\u56e0\u6b64WebAssembly\u865a\u62df\u673a\u662f\u4e00\u79cd\u6808\u5f0f\u865a\u62df\u673a\u3002 \u9664\u4e86nop\u4e4b\u7c7b\u7684\u7279\u6b8a\u6307\u4ee4\u5916\uff0c\u7edd\u5927\u591a\u6570\u7684WebAssembly\u6307\u4ee4\u90fd\u662f\u5728\u6808\u4e0a\u6267\u884c\u67d0\u79cd\u64cd\u4f5c\u3002\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u5177\u4f53\u793a\u4f8b\uff1a i32.const n\uff1a\u5728\u6808\u4e0a\u538b\u5165\u503c\u4e3an\u768432\u4f4d\u6574\u578b\u6570\u3002 i32.add\uff1a\u4ece\u6808\u9876\u5f39\u51fa2\u4e2a32\u4f4d\u6574\u578b\u6570\uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u5e76\u5c06\u7ed3\u679c\u5165\u6808\u3002 i32.eq\uff1a\u4ece\u6218\u9876\u5f39\u51fa2\u4e2a32\u4f4d\u6574\u578b\u6570\uff0c\u6bd4\u8f83\u5b83\u4eec\u662f\u5426\u76f8\u7b49\uff0c\u76f8\u7b49\u7684\u8bdd\uff0c\u5728\u6808\u4e2d\u538b\u51651\uff0c\u5426\u5219\u538b\u51650\u3002 2.2. \u4e8c\u8fdb\u5236\u7f16\u7801 LEB128\uff08Little Endian Base128\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u6574\u6570\u7684\u3001\u57fa\u4e8e\u5c0f\u7aef\u6a21\u5f0f\u7684\u53ef\u53d8\u957f\u7f16\u7801\u3002\u6240\u8c13\u201c\u53ef\u53d8\u957f\u7f16\u7801\u201d\u662f\u6307\u5f85\u7f16\u7801\u7684\u6e90\u6570\u636e\u5728\u7ecf\u8fc7\u7f16\u7801\u7b97\u6cd5\u540e\u5f97\u5230\u7684\u7f16\u7801\u7ed3\u679c\u957f\u5ea6\u662f\u4e0d\u56fa\u5b9a\u7684\u3002\u901a\u8fc7\u4f7f\u7528\u53ef\u53d8\u957f\u7f16\u7801\uff0c\u53ef\u4ee5\u5bf9\u6e90\u6570\u636e\u8fdb\u884c\u65e0\u635f\u6570\u636e\u538b\u7f29\uff0c\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4fdd\u8bc1Wasm\u6a21\u5757\u7684\u4f53\u79ef\u5927\u5c0f\u5904\u4e8e\u6700\u4f18\u72b6\u6001\u3002 LEB128\u7f16\u7801\u7684\u6838\u5fc3\u601d\u60f3\u4e3b\u8981\u6709\u4e24\u70b9\uff1a \u91c7\u7528\u5c0f\u7aef\u5e8f\u8868\u793a\u6570\u636e\u7f16\u7801\u3002 \u91c7\u7528128\u8fdb\u5236\u7f16\u7801\u6570\u636e\u3002 \u5728\u4e3b\u6d41\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u4e00\u4e2a\u6574\u578b\u6570\u4e00\u822c\u91c7\u7528\u672c\u5730\u673a\u5668\u5e8f\u8868\u793a\uff0c\u540c\u65f6\u6bcf\u4e2a\u5b57\u82828\u4f4d\uff08bit\uff09\u7528\u4e8e\u8868\u8fbe256\u8fdb\u5236\u7684\u4e00\u4e2a\u6570\u4f4d\u3002\u5982\u679c\u6bcf\u4e2a\u5b57\u8282\u53ea\u7528\u4e8e\u8868\u8fbeLEB128\u7684128\u8fdb\u5236\u7684\u4e00\u4e2a\u6570\u4f4d\uff0c\u90a3\u4e48\u5c06\u53ea\u9700\u8981\u4f7f\u75287\u4f4d\u3002LEB128\u5c06\u6bcf\u4e2a\u5b57\u8282\u5269\u4f59\u76841\u4f4d\u7528\u4e8e\u8868\u8fbe\u662f\u5426\u7ec8\u6b62\u7684\u6807\u5fd7\u4f4d\uff0c\u5982\u679c\u6807\u5fd7\u4f4d\u4e3a1\u8868\u793a\u7f16\u7801\u6570\u636e\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u5982\u679c\u6807\u5fd7\u4f4d\u4e3a0\u5219\u8868\u793a\u7f16\u7801\u5df2\u7ecf\u7ed3\u675f\u3002 \u5bf9\u4e8e\u4e00\u4e2a32\u4f4d\u7684\u6574\u6570\uff0cLEB128\u7f16\u7801\u540e\u7684\u6570\u636e\u957f\u5ea6\u6700\u5c0f\u4e3a1\u4e2a\u5b57\u8282\uff0c\u6700\u591a\u4e3a5\u4e2a\u5b57\u8282\u3002\u5bf9\u4e8e\u5c0f\u4e8e128\u5927\u5c0f\u7684\u6570\u5b57\uff0cLEB128\u7f16\u7801\u53ea\u9700\u8981\u4e00\u4e2a\u5b57\u8282\u5c31\u53ef\u4ee5\u8868\u793a\uff0c\u800c\u5bf9\u4e8e\u5927\u4e8e2^28\u7684int32\u7c7b\u578b\u7684\u6574\u6570\uff0c\u5219\u9700\u89815\u5b57\u8282\u624d\u80fd\u8868\u793a\u3002 2.3. \u5934\u90e8\u548c\u6bb5\u6570\u636e WebAssembly\u4e0d\u4ec5\u4ec5\u63d0\u4f9b\u4e86\u8fd0\u884c\u65f6\u6307\u4ee4\u89c4\u8303\uff0c\u8fd8\u63d0\u4f9b\u4e86\u6a21\u5757\u7684\u4e8c\u8fdb\u5236\u5c01\u88c5\u89c4\u8303\u3002 \u5934\u90e8\u548c\u6bb5\u6570\u636e\u662f\u4e00\u4e2aWebAssembly\u6a21\u5757\u4e8c\u8fdb\u5236\u6587\u4ef6\u6700\u5916\u5c42\u7684\u7ed3\u6784\u3002\u5934\u90e8\u6807\u8bc6WebAssembly\u6a21\u5757\u548c\u7248\u672c\u4fe1\u606f\uff0c\u6bb5\u6570\u636e\u5219\u662f\u4fdd\u5b58\u5404\u79cd\u6a21\u5757\u6570\u636e\u3002 2.3.1. \u5934\u90e8 WebAssembly\u4ee5\u6a21\u5757\u4e3a\u57fa\u672c\u5355\u5143\uff0c\u800c\u6700\u7b80\u5355\u7684\u6a21\u5757\u53ef\u4ee5\u6ca1\u6709\u4efb\u4f55\u4ee3\u7801\uff1a (module) \u7528wat2wasm\u5de5\u5177\u5c06\u4e0a\u8ff0WebAssembly\u6c47\u7f16\u4ee3\u7801\u7f16\u8bd1\u4e3a\u4e8c\u8fdb\u5236\u6a21\u5757\uff1a $ wat2wasm -v program.wat 0000000: 0061 736d ; WASM_BINARY_MAGIC 0000004: 0100 0000 ; WASM_BINARY_VERSION \u5f00\u5934\u76844\u5b57\u8282\u5206\u522b\u4e3a0x00\u30010x61\u30010x73\u30010x6d\u5bf9\u5e94\u7684ASCII\u7801\u4e3a \\0asm \u5b57\u7b26\u4e32\u9b54\u6570\u3002\u540e\u9762\u76844\u5b57\u8282\u5219\u662f\u5f53\u524dWebAssembly\u6587\u4ef6\u7684\u7248\u672c\uff0c\u76ee\u524d\u53ea\u6709\u7248\u672c1\u3002 2.3.2. \u6bb5\u7c7b\u578b\u5217\u8868 \u6a21\u5757\u4e3b\u4f53\u7531\u591a\u4e2a\u6bb5\u7ec4\u6210\uff0c\u6bb5\u6570\u636e\u5305\u542b\u4e86\u6a21\u5757\u6bb5\u5168\u90e8\u4fe1\u606f\u3002WebAssembly\u89c4\u8303\u4e3a\u6bcf\u4e2a\u4e0d\u540c\u6bb5\u5206\u914d\u4e86\u4e00\u4e2a\u552f\u4e00\u6bb5ID\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a ID \u6bb5\u540d\u79f0 0 \u81ea\u5b9a\u4e49\u6bb5\uff08Custom\uff09 1 \u7c7b\u578b\u6bb5\uff08Type\uff09 2 \u5012\u5165\u6bb5\uff08Import\uff09 3 \u51fd\u6570\u6bb5\uff08Function\uff09 4 \u8868\u683c\u6bb5\uff08Table\uff09 5 \u5185\u5b58\u6bb5\uff08Memory\uff09 6 \u5168\u5c40\u6bb5\uff08Global\uff09 7 \u5bfc\u51fa\u6bb5\uff08Export\uff09 8 \u5f00\u59cb\u6bb5\uff08Start\uff09 9 \u5143\u7d20\u6bb5\uff08Elem\uff09 10 \u4ee3\u7801\u6bb5\uff08Code\uff09 11 \u6570\u636e\u6bb5\uff08Data\uff09 \u4e3a\u4e86\u7814\u7a76\u6bb5\u6570\u636e\u6bb5\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u6211\u4eec\u5728\u6a21\u5757\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff1a (module (func (result i32) i32.const 55 ) ) \u6a21\u5757\u4e2d\u7684\u51fd\u6570\u6ca1\u6709\u8f93\u5165\u53c2\u6570\uff0c\u53ea\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u5e38\u91cf\u3002\u6211\u4eec\u7528wat2wasm\u547d\u4ee4\u67e5\u770b\u4e00\u4e0b\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff1a $ wat2wasm -v demo.wat 0000000: 0061 736d ; WASM_BINARY_MAGIC 0000004: 0100 0000 ; WASM_BINARY_VERSION ; section \"Type\" (1) 0000008: 01 ; section code 0000009: 00 ; section size (guess) 000000a: 01 ; num types ; type 0 000000b: 60 ; func 000000c: 00 ; num params 000000d: 01 ; num results 000000e: 7f ; i32 0000009: 05 ; FIXUP section size ; section \"Function\" (3) 000000f: 03 ; section code 0000010: 00 ; section size (guess) 0000011: 01 ; num functions 0000012: 00 ; function 0 signature index 0000010: 02 ; FIXUP section size ; section \"Code\" (10) 0000013: 0a ; section code 0000014: 00 ; section size (guess) 0000015: 01 ; num functions ; function body 0 0000016: 00 ; func body size (guess) 0000017: 00 ; local decl count 0000018: 41 ; i32.const 0000019: 37 ; i32 literal 000001a: 0b ; end 0000016: 04 ; FIXUP func body size 0000014: 06 ; FIXUP section size \u5ffd\u7565\u6a21\u5757\u5934\u90e8\u4fe1\u606f\uff0c\u6839\u636e\u6ce8\u91ca\u53ef\u4ee5\u53d1\u73b0\u4e8c\u8fdb\u5236\u6a21\u5757\u542b\u67093\u4e2a\u6bb5\uff0c\u5206\u522b\u4e3aType\u3001Function\u3001Code\uff0c\u5176\u4e2dType\u6bb5\u4ece0000008\u5730\u5740\u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u5b57\u828201\u4e3a\u6bb5ID\uff1bFunction\u6bb5\u4ece000000f\u5730\u5740\u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u5b57\u828203\u4e3a\u6bb5ID\uff1bCode\u4ece0000013\u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u5b57\u82820a\u4e3a\u6bb5ID\u3002\u6bcf\u4e2a\u6bb5ID\u7684\u540e\u9762\u8ddf\u7740\u7684\u662f\u540e\u7eed\u6bb5\u6570\u636e\u7684\u957f\u5ea6\u3002 \u6bb5\u7ed3\u6784\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u7ec4\u6210\u65b9\u5f0f\u5982\u4e0b\u8868\u6240\u793a\uff1a \u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f ID varuint7 \u7528\u4e8e\u6807\u8bc6\u6bb5\u7c7b\u578b payload_len varuint32 \u6bb5\u5185\u5bb9\u957f\u5ea6 name_len varuint32 ? \u6bb5\u540d\u957f\u5ea6\uff08\u7528\u4e8e\u81ea\u5b9a\u4e49\u6bb5\uff0c\u5373ID\u4e3a0\uff09 name bytes \uff1f \u6bb5\u540d\u5185\u5bb9\uff08\u7528\u4e8e\u81ea\u5b9a\u4e49\u6bb5\uff0c\u5373ID\u4e3a0\uff09 payload_data bytes \u6bb5\u5177\u4f53\u5185\u5bb9 \u6bcf\u4e2a\u6bb5\u7ed3\u6784\u4e8c\u8fdb\u5236\u7ec4\u6210\u65b9\u5f0f\u90fd\u5982\u4e0a\u8868\u6240\u793a\uff0c\u4f46\u6bcf\u4e2a\u6bb5\u5185\u90e8\u5177\u4f53\u5185\u5bb9\u7684\u683c\u5f0f\u5219\u5404\u4e0d\u76f8\u540c\u3002\u4e0b\u9762\u4ee5Type\u6bb5\u4e3a\u4f8b\u8fdb\u884c\u89e3\u6790\u6bb5\u7684\u5177\u4f53\u683c\u5f0f\u3002 2.3.3. Type\u6bb5\uff08Type Section\uff09 Type\u6bb5\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u7528\u6765\u4fdd\u5b58\u6240\u6709\u5bfc\u5165\u8be5\u6a21\u5757\u6216\u76f4\u63a5\u5b9a\u4e49\u5728\u6a21\u5757\u5185\u7684\u51fd\u6570\u7684\u51fd\u6570\u7b7e\u540d\u7c7b\u578b\uff08\u7531\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u5171\u540c\u51b3\u5b9a\uff09\u3002 Type\u6bb5\u7c7b\u578b\u7684\u5b57\u6bb5\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f count varuint32 \u51fd\u6570\u7b7e\u540d\u5b9e\u4f53\u7684\u4e2a\u6570 entries func_type* \u51fd\u6570\u7b7e\u540d\u5b9e\u4f53\uff08\u591a\u4e2a\uff09 func_type\u5b9e\u4f53\u7c7b\u578b\u7684\u5b57\u6bb5\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f form varint7 \u7c7b\u578b\u6784\u9020\u7b26\u201cfunc\u201d\u5bf9\u5e94\u7684OpCode\u503c\uff1a0x60 param_count varuint32 \u51fd\u6570\u5b9a\u4e49\u7684\u5f62\u5f0f\u53c2\u6570\u4e2a\u6570 param_types value_type* \u51fd\u6570\u5f62\u5f0f\u53c2\u6570\u7c7b\u578b\uff08\u7531\u7c7b\u578b\u6784\u9020\u7b26\u8868\u793a\uff09 i32: 0x7F i64: 0x7E f32: 0x7D f64: 0x7C return_count varuint7 \u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e2a\u6570 return_type Value_type? \u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff08\u7531\u7c7b\u578b\u6784\u9020\u7b26\u8868\u793a\uff09 2.4. \u865a\u62df\u6307\u4ee4\u96c6 MVP\u7248\u672c\u7684WebAssembly\u865a\u62df\u6307\u4ee4\u4e00\u5171191\u6761\u3002\u5927\u4f53\u4e0a\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b10\u5927\u7c7b\u3002EVM\u76f4\u63a5\u5728\u6307\u4ee4\u96c6\u91cc\u9762\u6dfb\u52a0\u4e86\u4e00\u4e9b\u4e0e\u5e95\u5c42\u94fe\u4ea4\u4e92\u7684\u6307\u4ee4\uff0c\u4f8b\u5982\uff1abalance\uff0ccall\uff0ccoinbase\uff0ctimestamp\u7b49\uff0c\u800cWebAssembly\u5219\u662f\u53ef\u4ee5\u901a\u8fc7import\u7279\u6027\uff0c\u66f4\u52a0\u7075\u6d3b\u7684\u6dfb\u52a0\u4e00\u4e9b\u65b9\u6cd5\u4e0e\u5e95\u5c42\u94fe\u8fdb\u884c\u4ea4\u4e92\uff0c\u5728PlatONE\u4e2d\u6dfb\u52a0\u4e86caller\uff0corigin\uff0cbalance\uff0cgetstate\uff0csetstate\u7b49import\u65b9\u6cd5\u4e0e\u5e95\u5c42\u94fe\u8fdb\u884c\u4ea4\u4e92\u3002 2.4.1. \u6570\u636e\u7c7b\u578b i32\uff1a32\u4f4d\u6574\u578b\u6570 i64\uff1a64\u4f4d\u6574\u578b\u6570 f32: 32\u4f4d\u6d6e\u70b9\u578b\u6570\uff0cIEEE 754\u6807\u51c6 f64: 64\u4f4d\u6d6e\u70b9\u578b\u6570\uff0cIEEE 754\u6807\u51c6 2.4.2. \u5e38\u6570\u6307\u4ee4 i32\u3002const x\uff1a\u5728\u6808\u4e0a\u538b\u5165\u503c\u4e3ax\u7684i32\u503c\u3002 \u7b49\u7b49\u3002\u3002 2.4.3. \u7b97\u672f\u8fd0\u7b97\u6307\u4ee4 \u7b97\u672f\u8fd0\u7b97\u6307\u4ee4\u7684\u8fd4\u56de\u503c\uff08\u5373\u8fd0\u7b97\u540e\u538b\u5165\u6808\u4e0a\u7684\u503c\uff09\u7684\u7c7b\u578b\u90fd\u4e0e\u5176\u6307\u4ee4\u524d\u7f00\u7c7b\u578b\u4e00\u81f4\uff0c\u5373\u4ee5\u201ci32.\u201d\u4e3a\u524d\u7f00\u7684\u6307\u4ee4\u8fd4\u56de\u503c\u7c7b\u578b\u5747\u4e3ai32\uff0c\u5176\u4ed6\u7c7b\u578b\u7c7b\u4f3c\u3002 I32.add: i32\u6c42\u548c\u3002\u4ece\u6808\u9876\u4f9d\u6b21\u5f39\u51fa1\u4e2ai32\u7684\u503ca\uff0c1\u4e2ai32\u7684\u503cb\uff0c\u8ba1\u7b97a+b\u7684\u503c\u538b\u5165\u6808\u9876\u3002 \u6c42\u548c\u3001\u6c42\u5dee\u3001\u6c42\u79ef\u3001\u6c42\u5546\u3001\u6c42\u4f59\u3001\u6c42\u53cd\u3001\u6c42\u7edd\u5bf9\u503c\u3001\u53d6\u6700\u5c0f\u503c\u3001\u53d6\u6574\u3001\u6c42\u5e73\u65b9\u6839\u3001\u5411\u4e0a\u53d6\u6574\u7b49\u7b49\u3002 2.4.4. \u4f4d\u8fd0\u7b97\u6307\u4ee4 \u4f4d\u8fd0\u7b97\u6307\u4ee4\u7684\u8fd4\u56de\u503c\uff08\u5373\u8fd0\u7b97\u540e\u538b\u5165\u6808\u4e0a\u7684\u503c\uff09\u7684\u7c7b\u578b\u90fd\u4e0e\u5176\u6307\u4ee4\u524d\u7f00\u7c7b\u578b\u4e00\u81f4\u3002 i32.clz\uff1a\u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai32\u7684\u503cv\uff0c\u8ba1\u7b97\u4ecev\u7684\u4e8c\u8fdb\u5236\u503c\u7684\u6700\u9ad8\u4f4d\u8d77\uff0c\u8fde\u7eed\u4e3a0\u7684\u4f4d\u6570\u4e2a\u6570k\uff0c\u5c06k\u538b\u5165\u6808\u3002 \u6309\u4f4d\u4e0e\u3001\u6309\u4f4d\u6216\u3001\u6309\u4f4d\u5f02\u6216\u3001\u5de6\u79fb\u3001\u6570\u5b66\u53f3\u79fb\u3001\u5faa\u73af\u5de6\u79fb\u3001\u903b\u8f91\u53f3\u79fb\u3001\u5faa\u73af\u53f3\u79fb\u7b49\u7b49\u3002 2.4.5. \u53d8\u91cf\u8bbf\u95ee\u6307\u4ee4 get_local x\uff1a\u5c06x\u6307\u5b9a\u7684\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u538b\u5165\u6808\uff1bx\u662f\u5c40\u90e8\u53d8\u91cf\u7684\u7d22\u5f15\u6216\u522b\u540d\u3002 set_local, tee_local,get_global, set_global 2.4.6. \u5185\u5b58\u8bbf\u95ee\u6307\u4ee4 i32.load offset=o align=a\uff1a\u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai32\u7684\u503caddr\uff0c\u4ece\u5185\u5b58\u7684addr+o\u504f\u79fb\u5904\u8bfb\u53d61\u4e2ai32\u7684\u503c\u538b\u5165\u6808\u3002a\u4e3a\u5730\u5740\u5bf9\u9f50\u503c\uff0c\u53d6\u503c\u4f4d1\uff0c2\uff0c4\uff0c8\u3002\u201coffset=...\u201d\u53ef\u4ee5\u7701\u7565\uff0c\u9ed8\u8ba4\u503c\u4e3a0\uff1b\u201calign=\u2026\u201d\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u503c\u4e3a0\u3002 i64.load, f32.load, f64.load, i32.load8_s, i64.load16_u\u7b49\u7b49\u3002 i64.store16 offset=o align=a: \u4ece\u6808\u9876\u4f9d\u6b21\u5f39\u51fa1\u4e2ai64\u7684\u503cvalue\u30011\u4e2ai32\u7684\u503caddr\uff0c\u5728\u5185\u5b58\u7684addr+o\u504f\u79fb\u5904\u5199\u5165value\u4f4e16\u4f4d\uff08\u5199\u51652\u5b57\u8282\uff09\u3002a\u4e3a\u5730\u5740\u5bf9\u9f50\u503c\uff0c\u53d6\u503c\u4f4d1\uff0c2\uff0c4\uff0c8\u3002\u201coffset=...\u201d\u53ef\u4ee5\u7701\u7565\uff0c\u9ed8\u8ba4\u503c\u4e3a0\uff1b\u201calign=\u2026\u201d\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u503c\u4e3a2\u3002 i32.store, i64.store, f32.store, f64.store, i64.store32\u7b49\u7b49\u3002 memory.size\uff1a \u5f53\u524d\u5185\u5b58\u5bb9\u91cf\uff08i32\u578b\uff09\u538b\u5165\u6808\uff0c\u4ee5\u9875\u4f4d\u5355\u4f4d\uff081\u9875=64K=65536\u5b57\u8282\uff09\u3002 memory.grow\uff1a \u4ee4\u5185\u5b58\u7684\u5f53\u524d\u5bb9\u91cf\u4e3ac\uff0c\u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai32\u7684\u503cv\uff0c\u5c06\u5185\u5b58\u7684\u5bb9\u91cf\u6269\u5927\u4e3ac+v\uff0c\u4ee5\u9875\u4e3a\u5355\u4f4d\u3002\u5982\u679c\u6269\u5bb9\u6210\u529f\uff0c\u5c06\u503c\u4e3ac\u7684i32\u538b\u5165\u6808\uff0c\u5426\u5219\u5c06\u503c\u4e3a-1\u7684i32\u538b\u5165\u6808\u3002\u5185\u5b58\u65b0\u6269\u5927\u7684\u90e8\u5206\u5168\u90e8\u521d\u59cb\u5316\u4e3a0\u7684\u503c\u3002 2.4.7. \u6bd4\u8f83\u6307\u4ee4 \u6bd4\u8f83\u6307\u4ee4\u7684\u8fd4\u56de\u503c\uff08\u5373\u8fd0\u7b97\u540e\u538b\u5165\u6808\u4e0a\u7684\u503c\uff09\u5747\u4e3ai32\u3002 i32.eqz: \u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai32\u7684\u503cv\uff0c\u82e5v\u4e3a0\uff0c\u5219\u5728\u6808\u4e2d\u538b\u51651\uff0c\u5426\u5219\u538b\u51650\u3002 i32.eq, i32.ne, i32.lt_s, i32.gt_s, i32.gt_u, i32.le_s, i64.lt_s, f32.lt, f32.ge\uff08\u662f\u5426\u7b49\u4e8e\u3001\u662f\u5426\u5c0f\u4e8e\u3001\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u3001\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\uff09\u7b49\u7b49\u3002 2.4.8. \u7c7b\u578b\u8f6c\u6362\u6307\u4ee4 i32.wrap/i64: \u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai64\u7684\u503cv\uff0c\u9ad832\u4f4d\u820d\u5f03\uff0c\u5c06\u5176\u4f4e32\u4f4d\u7684i32\u503c\u538b\u5165\u6808\u3002 i32\u8f6ci64\u3001f32\u8f6ci32\u7b49\u7b49\u7c7b\u578b\u8f6c\u6362\u3002 2.4.9. \u63a7\u5236\u6d41\u6307\u4ee4 call f\uff1a f\u4e3a\u51fd\u6570\u522b\u540d\u6216\u51fd\u6570\u7d22\u5f15\u3002\u6839\u636ef\u6307\u5b9a\u7684\u51fd\u6570\u7684\u7b7e\u540d\u521d\u59cb\u5316\u53c2\u6570\u5e76\u8c03\u7528\u5b83\u3002 return\uff1a \u8df3\u51fa\u51fd\u6570\u3002 br l\uff1a l\u4e3alabel\u522b\u540d\u6216label\u76f8\u5bf9\u5c42\u6570\uff08\u5373\u76f8\u5bf9\u4e8e\u5f53\u524d\u4ee3\u7801\u5757\u7684\u5d4c\u5957\u6df1\u5ea6\uff09\u3002\u8df3\u8f6c\u5230l\u6307\u5b9a\u7684label\u7d22\u5f15\u7684\u4ee3\u7801\u5757\u7684\u540e\u7eed\u70b9\u3002 br_if, br_table, call_indirect, loop/end, block/end, if/else/end\u7b49\u7b49\u3002 2.4.10. \u5176\u4ed6\u6307\u4ee4 unreachable: \u89e6\u53d1\u5f02\u5e38\uff0c\u629b\u51faWebAssembly.RuntimeError\u3002 nop\uff1a \u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002 drop\uff1a \u4ece\u6808\u9876\u5f39\u51fa1\u4e2a\u503c\uff0c\u65e0\u89c6\u7c7b\u578b\u3002 select\uff1a\u4f9d\u6b21\u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai32\u7684\u503cc\u30011\u4e2a\u503cb\u30011\u4e2a\u503ca\uff0c\u82e5c\u4e0d\u4e3a0\uff0c\u5219\u5c06a\u538b\u5165\u6808\uff0c\u5426\u5219\u5c06b\u538b\u5165\u6808\u3002a\u548cb\u5fc5\u987b\u4e3a\u540c\u4e00\u79cd\u7c7b\u578b\u3002 2.5. \u5408\u7ea6\u8c03\u7528 \u5408\u7ea6\u8c03\u7528\u65f6\u9996\u5148\u4eceExport\u6bb5\u4e2d\u6839\u636efield_str\u548ckind\u4e24\u4e2a\u5b57\u6bb5\u83b7\u53d6\u5230\u51fd\u6570\u7684index\uff0c\u7136\u540e\u4eceCode\u6bb5\u6839\u636e\u4e0a\u9762\u5f97\u5230\u7684index\u83b7\u53d6\u51fd\u6570\u4f53\u4ee3\u7801\u5e76\u8fd0\u884c\u3002 2.5.1. Export\u6bb5 \u53ef\u88ab\u5916\u90e8\u7528\u6237\u8c03\u7528\u7684\u5408\u7ea6\u65b9\u6cd5\u88ab\u79f0\u4e3aexport\u65b9\u6cd5\u3002\u4e00\u4e2a\u5408\u7ea6\u6240\u6709\u53ef\u5bfc\u51fa\u4f1a\u7edf\u4e00\u653e\u7f6e\u5728Export\u6bb5\u4e2d\u3002Export\u6bb5\u7684\u4e8c\u8fdb\u5236\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\u8868\u6240\u793a\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f count varuint32 \u53ef\u5bfc\u51fa\u51fd\u6570\u7684\u6570\u91cf entries export_entry* \u53ef\u5bfc\u51fa\u51fd\u6570\u5b9e\u4f53\uff08\u591a\u4e2a\uff09 export_entry\u7684\u4e8c\u8fdb\u5236\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f field_len varuint32 \u5b57\u6bb5\u540d\u79f0\u7684\u957f\u5ea6\uff08\u5355\u4f4d\uff1abyte\uff09 field_str bytes \u5b57\u6bb5\u540d\u79f0\uff1aUTF-8\u7f16\u7801\u8868\u793a kind external_kind \u5bfc\u51fa\u7c7b\u578b index varuint32 \u53ef\u5bfc\u51fa\u5b9e\u4f53\u7684\u7d22\u5f15 external_kind\u7684\u4e8c\u8fdb\u5236\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u6570\u503c \u63cf\u8ff0\u4fe1\u606f 0 \uff08Function\uff09\u51fd\u6570 1 \uff08Table\uff09\u8868 2 \uff08Memory\uff09\u5185\u5b58 3 \uff08Global\uff09\u5168\u5c40\u53d8\u91cf \u4e8c\u8fdb\u5236\u4ee3\u7801\u5982\u4e0b\uff1a ; section \"Export\" (7) 0000015: 07 ; section code 0000016: 00 ; section size (guess) 0000017: 01 ; num exports 0000018: 08 ; string length 0000019: 5f5a 3361 6464 6969 _Z3addii ; export name 0000021: 00 ; export kind 0000022: 00 ; export func index 0000016: 0c ; FIXUP section size 2.5.2. Code\u6bb5 Code\u6bb5\u7684\u4e8c\u8fdb\u5236\u5982\u4e0b\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f count varuint32 \u51fd\u6570\u4f53\u6570\u91cf bodies function_body* \u51fd\u6570\u5b9e\u4f53\uff08\u591a\u4e2a\uff09 function_body\u7684\u4e8c\u8fdb\u5236\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f body_size varuint32 \u51fd\u6570\u4f53\u5927\u5c0f local_count varuint32 \u5c40\u90e8\u53d8\u91cf\u6570\u91cf locals local_entry* \u5c40\u90e8\u53d8\u91cf\uff08\u591a\u4e2a\uff09 code bytes* \u51fd\u6570\u5b9e\u4f53\u4ee3\u7801 end byte 0x0b\u3002\u8868\u793a\u51fd\u6570\u7ed3\u675f local_entry\u7684\u4e8c\u8fdb\u5236\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f count varuint32 \u4ee5\u4e0b\u7c7b\u578b\u53d8\u91cf\u7684\u6570\u91cf type value_type \u53d8\u91cf\u7c7b\u578b\uff1b\u53ea\u6709i32,i64,f32,f64\u56db\u79cd\u3002 \u4e8c\u8fdb\u5236\u5982\u4e0b\uff1a ; section \"Code\" (10) 0000023: 0a ; section code 0000024: 00 ; section size (guess) 0000025: 01 ; num functions ; function body 0 0000026: 00 ; func body size (guess) 0000027: 00 ; local decl count 0000028: 20 ; local.get 0000029: 01 ; local index 000002a: 20 ; local.get 000002b: 00 ; local index 000002c: 6a ; i32.add 000002d: 0b ; end 0000026: 07 ; FIXUP func body size 0000024: 09 ; FIXUP section size 2.6. \u53c2\u8003\u8d44\u6599 https://webassembly.github.io/spec/core/appendix/index-instructions.html http://webassemblycode.com/dissecting-minimum-useful-webassembly-module/ https://wasdk.github.io/WasmFiddle/","title":"Wasm\u865a\u62df\u673a"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#wasm","text":"","title":"Wasm\u865a\u62df\u673a"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#1-wasm","text":"WebAssembly\u5c31\u50cf\u540d\u5b57\u4e00\u6837\uff0c\u662f\u4e00\u4e2a\u6c47\u7f16\u8bed\u8a00\uff0c\u867d\u7136\u5f00\u59cb\u65f6\u7684\u6784\u60f3\u662f\u8fd0\u884c\u5728Web\u4e0a\u3001\u72ec\u7acb\u4e8e\u5b9e\u9645\u7269\u7406\u673a\u5668\u67b6\u6784\u7684\u62bd\u8c61\u6c47\u7f16\u8bed\u8a00\u3002\u5176\u62bd\u8c61\u6027\u5728\u4e8e\u53ea\u8981\u6d4f\u89c8\u5668\u5b9e\u73b0\u4e86Wasm\u6807\u51c6\u7684\u6c47\u7f16\u6307\u4ee4\u96c6\uff0cwasm\u6a21\u5757\u5c31\u53ef\u4ee5\u5728\u5176\u4e0a\u6267\u884c\uff0c\u800c\u4e0d\u7ba1\u7269\u7406\u673a\u5668\u7684\u67b6\u6784\u662f\u4ec0\u4e48\u3002\u4f46\u662f\u968f\u7740\u7814\u7a76\u7684\u6df1\u5165\u548c\u8c03\u7814\u7684\u53cd\u9988\uff0c\u53d1\u73b0Wasm\u4e0d\u4ec5\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u6709\u7740\u8feb\u5207\u7684\u9700\u6c42\uff0c\u975eweb\u9886\u57df\u4e5f\u4e00\u6837\u5f00\u59cb\u6d41\u884c\u8d77\u6765\u3002 WebAssembly \u5e76\u4e0d\u662f\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u800c\u662f\u4e00\u4efd\u5b57\u8282\u7801\u6807\u51c6\uff0c\u9700\u8981\u7528\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u7f16\u8bd1\u51fa\u5b57\u8282\u7801\u653e\u5230 WebAssembly \u865a\u62df\u673a\u4e2d\u624d\u80fd\u8fd0\u884c\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u5668\u628a\u9ad8\u7ea7\u8bed\u8a00\uff0c\u4f8b\u5982\uff1aC/C++\uff0cRust\u7b49\u7f16\u8bd1\u6210Wasm\u5b57\u8282\u7801\uff08\u4e5f\u5c31\u662f\u7b26\u5408wasm\u6c47\u7f16\u6307\u4ee4\u96c6\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff09\uff0cwasm\u8fd0\u884c\u901f\u5ea6\u5f88\u5feb\uff0c\u4e14\u4f53\u79ef\u5f88\u5c0f\u3002 2017\u5e74Wasm\u53d1\u5e03\u4e86MVP\uff08Minimum Viable Product\uff0c\u6700\u5c0f\u53ef\u884c\u6027\u7248\u672c\uff09\u7248\u672c\uff0c\u73b0\u5728\u57fa\u672c\u4e0a\u6240\u6709\u7684\u4e3b\u6d41\u6d4f\u89c8\u5668\u5df2\u7ecf\u5168\u90e8\u652f\u6301\u3002","title":"1. Wasm\u6807\u51c6\u4ecb\u7ecd"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#11-webassembly","text":"\u7531\u4e8e\u4e0d\u540c\u7684\u8ba1\u7b97\u673a CPU \u67b6\u6784\u4e0d\u540c\uff0c\u673a\u5668\u7801\u6807\u51c6\u4e5f\u6709\u6240\u5dee\u522b\uff0c\u5e38\u89c1\u7684 CPU \u67b6\u6784\u5305\u62ec x86\u3001AMD64\u3001ARM\uff0c \u56e0\u6b64\u5728\u7531\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u7f16\u8bd1\u6210\u53ef\u81ea\u884c\u4ee3\u7801\u65f6\u9700\u8981\u6307\u5b9a\u76ee\u6807\u67b6\u6784\u3002 WebAssembly \u5b57\u8282\u7801\u662f\u4e00\u79cd\u62b9\u5e73\u4e86\u4e0d\u540c CPU \u67b6\u6784\u7684\u673a\u5668\u7801\uff0cWebAssembly \u5b57\u8282\u7801\u4e0d\u80fd\u76f4\u63a5\u5728\u4efb\u4f55\u4e00\u79cd CPU \u67b6\u6784\u4e0a\u8fd0\u884c\uff0c \u4f46\u7531\u4e8e\u975e\u5e38\u63a5\u8fd1\u673a\u5668\u7801\uff0c\u53ef\u4ee5\u975e\u5e38\u5feb\u7684\u88ab\u7ffb\u8bd1\u4e3a\u5bf9\u5e94\u67b6\u6784\u7684\u673a\u5668\u7801\uff0c\u56e0\u6b64 WebAssembly \u8fd0\u884c\u901f\u5ea6\u548c\u673a\u5668\u7801\u63a5\u8fd1\uff0c\u8fd9\u542c\u4e0a\u53bb\u975e\u5e38\u50cf Java \u5b57\u8282\u7801\u3002 \u76f8\u5bf9\u4e8e JS\uff0cWebAssembly \u6709\u5982\u4e0b\u4f18\u70b9\uff1a \u4f53\u79ef\u5c0f\uff1a\u7531\u4e8e\u6d4f\u89c8\u5668\u8fd0\u884c\u65f6\u53ea\u52a0\u8f7d\u7f16\u8bd1\u6210\u7684\u5b57\u8282\u7801\uff0c\u4e00\u6837\u7684\u903b\u8f91\u6bd4\u7528\u5b57\u7b26\u4e32\u63cf\u8ff0\u7684 JS \u6587\u4ef6\u4f53\u79ef\u8981\u5c0f\u5f88\u591a\uff1b \u52a0\u8f7d\u5feb\uff1a\u7531\u4e8e\u6587\u4ef6\u4f53\u79ef\u5c0f\uff0c\u518d\u52a0\u4e0a\u65e0\u9700\u89e3\u91ca\u6267\u884c\uff0cWebAssembly \u80fd\u66f4\u5feb\u7684\u52a0\u8f7d\u5e76\u5b9e\u4f8b\u5316\uff0c\u51cf\u5c11\u8fd0\u884c\u524d\u7684\u7b49\u5f85\u65f6\u95f4\uff1b \u6bcf\u4e2a\u9ad8\u7ea7\u8bed\u8a00\u90fd\u53bb\u5b9e\u73b0\u6e90\u7801\u5230\u4e0d\u540c\u5e73\u53f0\u7684\u673a\u5668\u7801\u7684\u8f6c\u6362\u5de5\u4f5c\u662f\u91cd\u590d\u7684\uff0c\u9ad8\u7ea7\u8bed\u8a00\u53ea\u9700\u8981\u751f\u6210\u5e95\u5c42\u865a\u62df\u673a(LLVM)\u8ba4\u8bc6\u7684\u4e2d\u95f4\u8bed\u8a00(LLVM IR)\uff0c LLVM \u80fd\u5b9e\u73b0\uff1a LLVM IR \u5230\u4e0d\u540c CPU \u67b6\u6784\u673a\u5668\u7801\u7684\u751f\u6210\uff1b \u673a\u5668\u7801\u7f16\u8bd1\u65f6\u6027\u80fd\u548c\u5927\u5c0f\u4f18\u5316\u3002 \u9664\u6b64\u4e4b\u5916 LLVM \u8fd8\u5b9e\u73b0\u4e86 LLVM IR \u5230 WebAssembly \u5b57\u8282\u7801\u7684\u7f16\u8bd1\u529f\u80fd\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u8981\u9ad8\u7ea7\u8bed\u8a00\u80fd\u8f6c\u6362\u6210 LLVM IR\uff0c\u5c31\u80fd\u88ab\u7f16\u8bd1\u6210 WebAssembly \u5b57\u8282\u7801\u3002 \u901a\u5e38\u8d1f\u8d23\u628a\u9ad8\u7ea7\u8bed\u8a00\u7ffb\u8bd1\u5230 LLVM IR \u7684\u90e8\u5206\u53eb\u505a\u7f16\u8bd1\u5668\u524d\u7aef\uff0c\u628a LLVM IR \u7f16\u8bd1\u6210\u5404\u67b6\u6784 CPU \u5bf9\u5e94\u673a\u5668\u7801\u7684\u90e8\u5206\u53eb\u505a\u7f16\u8bd1\u5668\u540e\u7aef\uff1b \u73b0\u5728\u8d8a\u6765\u8d8a\u591a\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u9009\u62e9 LLVM \u4f5c\u4e3a\u540e\u7aef\uff0c\u9ad8\u7ea7\u8bed\u8a00\u53ea\u9700\u4e13\u6ce8\u4e8e\u5982\u4f55\u63d0\u4f9b\u5f00\u53d1\u6548\u7387\u66f4\u9ad8\u7684\u8bed\u6cd5\u540c\u65f6\u4fdd\u6301\u7ffb\u8bd1\u5230 LLVM IR \u7684\u7a0b\u5e8f\u6267\u884c\u6027\u80fd\u3002","title":"1.1. WebAssembly\u539f\u7406"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#12","text":"\u4f9d\u8d56\u4e8e\u6267\u884c JavaScript \u7684\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u53ef\u4ee5\u901a\u8fc7 JavaScript \u7a0b\u5e8f\u6765\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e9b\u5e73\u53f0\u6240\u66b4\u9732\u51fa\u7684\u6307\u5b9a\u63a5\u53e3\u3002\u6bd4\u5982\uff0c\u5f53\u4f60\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c JavaScript\uff0c\u7f51\u7edc\u5e94\u7528\u53ef\u4ee5\u8c03\u7528\u4e00\u7cfb\u5217\u7684\u7f51\u9875\u63a5\u53e3\u6765\u63a7\u5236\u6d4f\u89c8\u5668\uff0f\u8bbe\u5907\u7684\u529f\u80fd\u4e14\u8bbf\u95ee DOM\uff0cCSSOM\uff0cWebGL\uff0cIndexedDB\uff0cWeb Audio API \u7b49\u7b49\u3002 \u7136\u800c\uff0cWebAssembly \u6a21\u5757\u4e0d\u80fd\u591f\u8bbf\u95ee\u4efb\u4f55\u5e73\u53f0\u7684\u63a5\u53e3\u3002\u6240\u6709\u7684\u8fd9\u4e00\u5207\u90fd\u5f97\u7531 JavaScript \u6765\u8fdb\u884c\u534f\u8c03\u3002\u5982\u679c\u4f60\u60f3\u5728 WebAssembly \u6a21\u5757\u5185\u8bbf\u95ee\u4e00\u4e9b\u6307\u5b9a\u5e73\u53f0\u7684\u63a5\u53e3\uff0c\u4f60\u5fc5\u987b\u5f97\u901a\u8fc7 JavaScript \u6765\u8fdb\u884c\u8c03\u7528\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u60f3\u8981\u4f7f\u7528 console.log\uff0c\u4f60\u5c31\u5f97\u901a\u8fc7JavaScript \u800c\u4e0d\u662f C++ \u4ee3\u7801\u6765\u8fdb\u884c\u8c03\u7528\u3002\u800c\u8fd9\u4e9b JavaScript \u8c03\u7528\u4f1a\u4ea7\u751f\u4e00\u5b9a\u7684\u6027\u80fd\u635f\u5931\u3002 \u60c5\u51b5\u4e0d\u4f1a\u4e00\u6210\u4e0d\u53d8\u7684\u3002\u89c4\u8303\u5c06\u4f1a\u4e3a\u5728\u672a\u6765\u4e3a wasm \u63d0\u4f9b\u8bbf\u95ee\u6307\u5b9a\u5e73\u53f0\u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u4e0d\u7528\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5185\u7f6e JavaScript\u3002 \u73b0\u5728WASI\u6b63\u5728\u505a\u8fd9\u65b9\u9762\u7684\u52aa\u529b\uff0c\u8ba9WASM\u6709\u76f4\u63a5\u8bbf\u95ee\u7269\u7406\u5e73\u53f0\u7684\u80fd\u529b\u3002","title":"1.2. \u5e73\u53f0\u63a5\u53e3\u8bbf\u95ee"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#13","text":"\u76ee\u524d\u7684 WebAssembly \u7c7b\u578b\u7cfb\u7edf\u8fd8\u5f88\u5c0f\uff0c\u53ea\u6709\u56db\u79cd\u6570\u5b57\u7c7b\u578b\uff08int32,int64,float32,float64\uff09\u3002\u76ee\u524d\uff0c\u5982\u679c\u8981\u4f7f\u7528\u590d\u6742\u7c7b\u578b\uff08\u4f8b\u5982\u5b57\u7b26\u4e32\u3001\u5bf9\u8c61\u3001\u6570\u7ec4\u3001\u7ed3\u6784\u4f53\uff09\uff0c\u9700\u8981\u5c06\u5b83\u4eec\u5e8f\u5217\u5316\u4e3a\u7ebf\u6027\u5185\u5b58\uff0c\u5e76\u63d0\u4f9b\u5b83\u4eec\u6240\u5728\u4f4d\u7f6e\u7684\u5f15\u7528\uff0c\u8fd9\u6837\u5c31\u4f1a\u591a\u51fa\u6765\u5f88\u591a\u6027\u80fd\u5f00\u9500\u3002\u73b0\u5728\u6709\u4e00\u4e2a\u63d0\u6848\u5bf9\u7c7b\u578b\u7cfb\u7edf\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684 anyref \u7c7b\u578b\uff0c\u6a21\u5757\u53ef\u4ee5\u6301\u6709\u5bf9\u4e3b\u673a\u73af\u5883\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5c06 JS \u5bf9\u8c61\u4f20\u7ed9 wasm \u6a21\u5757\u3002 \u901a\u8fc7 anyref \u5f15\u7528\u7684\u5bf9\u8c61\u5bf9\u4e8e wasm \u6a21\u5757\u6765\u8bf4\u610f\u4e49\u4e0d\u662f\u5f88\u5927\uff0c\u5173\u952e\u5728\u4e8e\u6a21\u5757\u53ef\u4ee5\u6301\u6709\u5728 JS \u5806\u4e0a\u5206\u914d\u7684\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8fd9\u610f\u5473\u7740\u5728 wasm \u6267\u884c\u671f\u95f4\u9700\u8981\u5bf9\u8fd9\u4e9b\u5f15\u7528\u8fdb\u884c\u8ddf\u8e2a\u3002\u8be5\u63d0\u6848\u88ab\u89c6\u4e3a\u5783\u573e\u56de\u6536\u63d0\u6848\u7684\u57ab\u811a\u77f3\u3002","title":"1.3. \u7c7b\u578b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#14","text":"\u76ee\u524d\u4e3a\u6b62\uff0cWebAssembly \u4e0d\u652f\u6301\u5783\u573e\u56de\u6536\u3002\u5185\u5b58\u64cd\u4f5c\u90fd\u662f\u624b\u52a8\u63a7\u5236\u7684\uff08\u50cf C\u3001C++\u4e00\u6837\uff09\u3002\u5728wasm\u865a\u62df\u673a\u4e2d\u5360\u7528\u5185\u5b58\u7684\u6709\u5982\u4e0b\u5185\u5bb9\uff1a \u590d\u6742\u7c7b\u578b\uff08\u4f8b\u5982\u5b57\u7b26\u4e32\u3001\u5bf9\u8c61\u3001\u6570\u7ec4\u3001\u7ed3\u6784\u4f53\uff09 \u624b\u52a8malloc\u7684\u5185\u5b58\u3002\u9700\u8981\u865a\u62df\u673a\u63d0\u4f9bimport\u7c7b\u578b\u7684malloc\u65b9\u6cd5\u3002 \u624b\u5de5\u56de\u6536\u5185\u5b58\u662f\u975e\u5e38\u9ebb\u70e6\u7684\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5728\u533a\u5757\u94fe\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u56de\u6536\u5185\u5b58\uff0c\u56e0\u4e3a\u4e00\u822c\u667a\u80fd\u5408\u7ea6\u90fd\u4e0d\u4f1a\u4e00\u76f4\u8fd0\u884c\uff08gas\u7b49\u673a\u5236\u8fdb\u884c\u9650\u5236\uff09\uff0c\u8fd0\u884c\u5b8c\u6bd5\u540e\uff0c\u865a\u62df\u673a\u5b9e\u4f8b\u5c31\u4f1a\u9500\u6bc1\uff0c\u8fde\u5e26\u7740\u5206\u914d\u7684\u5185\u5b58\u4e5f\u4e00\u6837\u4f1a\u88ab\u5bbf\u4e3b\u7a0b\u5e8f\u56de\u6536\u3002 \u76ee\u524d\uff0c\u9700\u8981\u5783\u573e\u56de\u6536\u5668\u7684\u7f16\u7a0b\u8bed\u8a00\u6ca1\u6709\u5176\u4ed6\u9009\u62e9\uff0c\u53ea\u80fd\u5c06 GC \u7f16\u8bd1\u4e3a wasm\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u4e00\u90e8\u5206\uff0c\u4f8b\u5982 AssemblyScript \u5c31\u5728\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u201cmakeshift GC\u201d\u3002\u4f46\u8fd9\u6837\u4f1a\u589e\u52a0\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u540c\u65f6 GC \u7b97\u6cd5\u7684\u6548\u7387\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u5f53\u7136\u8fd9\u4e2a\u770b\u7f16\u8bd1\u5668\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u7f16\u8bd1\u5668\u4e5f\u53ef\u4ee5\u76f4\u63a5\u653e\u5f03\u5783\u573e\u56de\u6536\u3002","title":"1.4. \u5185\u5b58\u56de\u6536"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#15","text":"\u76ee\u524d WebAssembly \u4e0d\u652f\u6301\u591a\u7ebf\u7a0b\u3002\u4f46\u662f\uff0c\u8fd9\u6709\u53ef\u80fd\u662f\u63a5\u4e0b\u6765 WebAssembly \u8981\u5b9e\u73b0\u7684\u3002Wasm \u5c06\u4f1a\u63a5\u8fd1\u5b9e\u73b0\u539f\u751f\u7684\u7ebf\u7a0b\uff08\u6bd4\u5982\uff0cC++ \u98ce\u683c\u7684\u7ebf\u7a0b\uff09\u3002\u62e5\u6709\u771f\u6b63\u7684\u7ebf\u7a0b\u5c06\u4f1a\u5728\u6d4f\u89c8\u5668\u4e2d\u521b\u9020\u51fa\u5f88\u591a\u65b0\u7684\u673a\u9047\u3002\u5e76\u4e14\u5f53\u7136\uff0c\u4f1a\u589e\u52a0\u6ee5\u7528\u7684\u53ef\u80fd\u6027\u3002","title":"1.5. \u591a\u7ebf\u7a0b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#16","text":"\u5728WASM\u6807\u51c6\u4e2d\uff0c\u5185\u5b58\u5c31\u662f\u9884\u5148\u5206\u914d\u7684\u4e00\u4e2a\u6570\u7ec4\uff0c\u800c\u5185\u5b58\u5730\u5740\u5c31\u662f\u6570\u7ec4\u7d22\u5f15\uff0c\u5c31\u7b97wasm\u4ee3\u7801\u64cd\u7eb5\u5185\u5b58\u5730\u5740\u8fdb\u884c\u8d8a\u754c\u8bbf\u95ee\uff08C/C++\u5f88\u591a\u6f0f\u6d1e\u5c31\u662f\u8fd9\u6837\u64cd\u4f5c\u7684\uff09\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u5230\u522b\u7684\u7a0b\u5e8f\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u5185\u5b58\u5b89\u5168\uff0c\u4e14wasm\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u7269\u7406\u5e73\u53f0\u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u5c31\u73b0\u5b9e\u4e86\u6240\u8c13\u7684\u6c99\u7bb1\u3002","title":"1.6. \u5982\u4f55\u4fdd\u8bc1\u5b89\u5168"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#17","text":"\u56e0\u4e3aWasm\u662f\u5df2\u7ecf\u7ecf\u8fc7\u7f16\u8bd1\u4f18\u5316\u8fc7\u540e\u7684\u3001\u9759\u6001\u7684\u8bed\u8a00\uff0c\u6240\u4ee5\u5176\u8fd0\u884c\u901f\u5ea6\u4f1a\u6bd4JavaScript\u5feb\u5f88\u591a\uff0c\u4e14Wasm\u6807\u51c6\u7684\u8de8\u5e73\u53f0\u7684\uff0c\u4ee5\u4e0b\u573a\u666f\u975e\u5e38\u9002\u5408\u4f7f\u7528wasm\u6280\u672f\u3002 \u5728\u7ebf\u89c6\u9891/\u76f4\u64ad\u7f16\u89e3\u7801 \u5728\u7ebf\u56fe\u50cf\u548c\u89c6\u9891\u5904\u7406\u5e94\u7528 \u9ad8\u6027\u80fdWeb\u6e38\u620f\u3002 \u533a\u5757\u94fe","title":"1.7. \u5e94\u7528\u573a\u666f"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#2-wasm","text":"","title":"2. Wasm\u865a\u62df\u673a\u539f\u7406"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#21","text":"WebAssembly\u4e0d\u4ec5\u662f\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e5f\u662f\u4e00\u5957\u865a\u62df\u673a\u4f53\u7cfb\u7ed3\u6784\u89c4\u8303\u3002","title":"2.1. \u57fa\u4e8e\u6808\u7684\u865a\u62df\u673a"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#211","text":"\u6808\u662f\u4e00\u79cd\u5148\u8fdb\u540e\u51fa\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6808\u7406\u89e3\u4e3a\u4e00\u79cd\u7279\u6b8a\u5316\u7684\u6570\u7ec4\uff0c\u5b83\u88ab\u9650\u5236\u4e3a\u53ea\u80fd\u4ece\u4e00\u7aef\u6267\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u4e60\u60ef\u4e0a\u8fd9\u4e00\u7aef\u88ab\u79f0\u4e3a\u6808\u9876\uff0c\u800c\u5bf9\u5e94\u7684\u53e6\u4e00\u7aef\u88ab\u79f0\u4e3a\u6808\u5e95\u3002\u6808\u6709\u4e24\u79cd\u57fa\u672c\u64cd\u4f5c\u3002 \u538b\u5165\uff1a\u6216\u8005\u5165\u6808\uff0c\u5728\u6808\u9876\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\uff0c\u6808\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u52a01\u3002 \u5f39\u51fa\uff1a\u6216\u8005\u8bf4\u51fa\u6808\uff0c\u5c06\u6808\u9876\u7684\u5143\u7d20\u5220\u9664\uff0c\u6808\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u51cf1\u3002","title":"2.1.1. \u6808"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#212-webassembly","text":"\u5927\u591a\u6570\u786c\u4ef6\u7684CPU\u4f53\u7cfb\u4e2d\u90fd\u6709\u4e00\u5b9a\u6570\u91cf\u7684\u901a\u7528\u548c\u4e13\u7528\u5bc4\u5b58\u5668\uff08\u5982IA32\u4e2d\u7684EAX\u3001EBX\u3001ESP\u7b49\uff09\uff0cCPU\u6307\u4ee4\u4f7f\u7528\u8fd9\u4e9b\u5bc4\u5b58\u5668\u5b58\u653e\u64cd\u4f5c\u6570\uff0c\u6267\u884c\u6570\u503c\u8fd0\u7b97\u3001\u903b\u8f91\u8fd0\u7b97\u3001\u5185\u5b58\u8bfb\u5199\u7b49\u64cd\u4f5c\u3002\u800c\u5728WebAssembly\u4f53\u7cfb\u4e2d\uff0c\u6ca1\u6709\u5bc4\u5b58\u5668\uff0c\u64cd\u4f5c\u6570\u5b58\u653e\u5728\u8fd0\u884c\u65f6\u7684\u6808\u4e0a\uff0c\u56e0\u6b64WebAssembly\u865a\u62df\u673a\u662f\u4e00\u79cd\u6808\u5f0f\u865a\u62df\u673a\u3002 \u9664\u4e86nop\u4e4b\u7c7b\u7684\u7279\u6b8a\u6307\u4ee4\u5916\uff0c\u7edd\u5927\u591a\u6570\u7684WebAssembly\u6307\u4ee4\u90fd\u662f\u5728\u6808\u4e0a\u6267\u884c\u67d0\u79cd\u64cd\u4f5c\u3002\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u5177\u4f53\u793a\u4f8b\uff1a i32.const n\uff1a\u5728\u6808\u4e0a\u538b\u5165\u503c\u4e3an\u768432\u4f4d\u6574\u578b\u6570\u3002 i32.add\uff1a\u4ece\u6808\u9876\u5f39\u51fa2\u4e2a32\u4f4d\u6574\u578b\u6570\uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u5e76\u5c06\u7ed3\u679c\u5165\u6808\u3002 i32.eq\uff1a\u4ece\u6218\u9876\u5f39\u51fa2\u4e2a32\u4f4d\u6574\u578b\u6570\uff0c\u6bd4\u8f83\u5b83\u4eec\u662f\u5426\u76f8\u7b49\uff0c\u76f8\u7b49\u7684\u8bdd\uff0c\u5728\u6808\u4e2d\u538b\u51651\uff0c\u5426\u5219\u538b\u51650\u3002","title":"2.1.2. WebAssembly \u6808\u5f0f\u865a\u62df\u673a"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#22","text":"LEB128\uff08Little Endian Base128\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u6574\u6570\u7684\u3001\u57fa\u4e8e\u5c0f\u7aef\u6a21\u5f0f\u7684\u53ef\u53d8\u957f\u7f16\u7801\u3002\u6240\u8c13\u201c\u53ef\u53d8\u957f\u7f16\u7801\u201d\u662f\u6307\u5f85\u7f16\u7801\u7684\u6e90\u6570\u636e\u5728\u7ecf\u8fc7\u7f16\u7801\u7b97\u6cd5\u540e\u5f97\u5230\u7684\u7f16\u7801\u7ed3\u679c\u957f\u5ea6\u662f\u4e0d\u56fa\u5b9a\u7684\u3002\u901a\u8fc7\u4f7f\u7528\u53ef\u53d8\u957f\u7f16\u7801\uff0c\u53ef\u4ee5\u5bf9\u6e90\u6570\u636e\u8fdb\u884c\u65e0\u635f\u6570\u636e\u538b\u7f29\uff0c\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4fdd\u8bc1Wasm\u6a21\u5757\u7684\u4f53\u79ef\u5927\u5c0f\u5904\u4e8e\u6700\u4f18\u72b6\u6001\u3002 LEB128\u7f16\u7801\u7684\u6838\u5fc3\u601d\u60f3\u4e3b\u8981\u6709\u4e24\u70b9\uff1a \u91c7\u7528\u5c0f\u7aef\u5e8f\u8868\u793a\u6570\u636e\u7f16\u7801\u3002 \u91c7\u7528128\u8fdb\u5236\u7f16\u7801\u6570\u636e\u3002 \u5728\u4e3b\u6d41\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u4e00\u4e2a\u6574\u578b\u6570\u4e00\u822c\u91c7\u7528\u672c\u5730\u673a\u5668\u5e8f\u8868\u793a\uff0c\u540c\u65f6\u6bcf\u4e2a\u5b57\u82828\u4f4d\uff08bit\uff09\u7528\u4e8e\u8868\u8fbe256\u8fdb\u5236\u7684\u4e00\u4e2a\u6570\u4f4d\u3002\u5982\u679c\u6bcf\u4e2a\u5b57\u8282\u53ea\u7528\u4e8e\u8868\u8fbeLEB128\u7684128\u8fdb\u5236\u7684\u4e00\u4e2a\u6570\u4f4d\uff0c\u90a3\u4e48\u5c06\u53ea\u9700\u8981\u4f7f\u75287\u4f4d\u3002LEB128\u5c06\u6bcf\u4e2a\u5b57\u8282\u5269\u4f59\u76841\u4f4d\u7528\u4e8e\u8868\u8fbe\u662f\u5426\u7ec8\u6b62\u7684\u6807\u5fd7\u4f4d\uff0c\u5982\u679c\u6807\u5fd7\u4f4d\u4e3a1\u8868\u793a\u7f16\u7801\u6570\u636e\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u5982\u679c\u6807\u5fd7\u4f4d\u4e3a0\u5219\u8868\u793a\u7f16\u7801\u5df2\u7ecf\u7ed3\u675f\u3002 \u5bf9\u4e8e\u4e00\u4e2a32\u4f4d\u7684\u6574\u6570\uff0cLEB128\u7f16\u7801\u540e\u7684\u6570\u636e\u957f\u5ea6\u6700\u5c0f\u4e3a1\u4e2a\u5b57\u8282\uff0c\u6700\u591a\u4e3a5\u4e2a\u5b57\u8282\u3002\u5bf9\u4e8e\u5c0f\u4e8e128\u5927\u5c0f\u7684\u6570\u5b57\uff0cLEB128\u7f16\u7801\u53ea\u9700\u8981\u4e00\u4e2a\u5b57\u8282\u5c31\u53ef\u4ee5\u8868\u793a\uff0c\u800c\u5bf9\u4e8e\u5927\u4e8e2^28\u7684int32\u7c7b\u578b\u7684\u6574\u6570\uff0c\u5219\u9700\u89815\u5b57\u8282\u624d\u80fd\u8868\u793a\u3002","title":"2.2. \u4e8c\u8fdb\u5236\u7f16\u7801"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#23","text":"WebAssembly\u4e0d\u4ec5\u4ec5\u63d0\u4f9b\u4e86\u8fd0\u884c\u65f6\u6307\u4ee4\u89c4\u8303\uff0c\u8fd8\u63d0\u4f9b\u4e86\u6a21\u5757\u7684\u4e8c\u8fdb\u5236\u5c01\u88c5\u89c4\u8303\u3002 \u5934\u90e8\u548c\u6bb5\u6570\u636e\u662f\u4e00\u4e2aWebAssembly\u6a21\u5757\u4e8c\u8fdb\u5236\u6587\u4ef6\u6700\u5916\u5c42\u7684\u7ed3\u6784\u3002\u5934\u90e8\u6807\u8bc6WebAssembly\u6a21\u5757\u548c\u7248\u672c\u4fe1\u606f\uff0c\u6bb5\u6570\u636e\u5219\u662f\u4fdd\u5b58\u5404\u79cd\u6a21\u5757\u6570\u636e\u3002","title":"2.3. \u5934\u90e8\u548c\u6bb5\u6570\u636e"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#231","text":"WebAssembly\u4ee5\u6a21\u5757\u4e3a\u57fa\u672c\u5355\u5143\uff0c\u800c\u6700\u7b80\u5355\u7684\u6a21\u5757\u53ef\u4ee5\u6ca1\u6709\u4efb\u4f55\u4ee3\u7801\uff1a (module) \u7528wat2wasm\u5de5\u5177\u5c06\u4e0a\u8ff0WebAssembly\u6c47\u7f16\u4ee3\u7801\u7f16\u8bd1\u4e3a\u4e8c\u8fdb\u5236\u6a21\u5757\uff1a $ wat2wasm -v program.wat 0000000: 0061 736d ; WASM_BINARY_MAGIC 0000004: 0100 0000 ; WASM_BINARY_VERSION \u5f00\u5934\u76844\u5b57\u8282\u5206\u522b\u4e3a0x00\u30010x61\u30010x73\u30010x6d\u5bf9\u5e94\u7684ASCII\u7801\u4e3a \\0asm \u5b57\u7b26\u4e32\u9b54\u6570\u3002\u540e\u9762\u76844\u5b57\u8282\u5219\u662f\u5f53\u524dWebAssembly\u6587\u4ef6\u7684\u7248\u672c\uff0c\u76ee\u524d\u53ea\u6709\u7248\u672c1\u3002","title":"2.3.1. \u5934\u90e8"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#232","text":"\u6a21\u5757\u4e3b\u4f53\u7531\u591a\u4e2a\u6bb5\u7ec4\u6210\uff0c\u6bb5\u6570\u636e\u5305\u542b\u4e86\u6a21\u5757\u6bb5\u5168\u90e8\u4fe1\u606f\u3002WebAssembly\u89c4\u8303\u4e3a\u6bcf\u4e2a\u4e0d\u540c\u6bb5\u5206\u914d\u4e86\u4e00\u4e2a\u552f\u4e00\u6bb5ID\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a ID \u6bb5\u540d\u79f0 0 \u81ea\u5b9a\u4e49\u6bb5\uff08Custom\uff09 1 \u7c7b\u578b\u6bb5\uff08Type\uff09 2 \u5012\u5165\u6bb5\uff08Import\uff09 3 \u51fd\u6570\u6bb5\uff08Function\uff09 4 \u8868\u683c\u6bb5\uff08Table\uff09 5 \u5185\u5b58\u6bb5\uff08Memory\uff09 6 \u5168\u5c40\u6bb5\uff08Global\uff09 7 \u5bfc\u51fa\u6bb5\uff08Export\uff09 8 \u5f00\u59cb\u6bb5\uff08Start\uff09 9 \u5143\u7d20\u6bb5\uff08Elem\uff09 10 \u4ee3\u7801\u6bb5\uff08Code\uff09 11 \u6570\u636e\u6bb5\uff08Data\uff09 \u4e3a\u4e86\u7814\u7a76\u6bb5\u6570\u636e\u6bb5\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u6211\u4eec\u5728\u6a21\u5757\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff1a (module (func (result i32) i32.const 55 ) ) \u6a21\u5757\u4e2d\u7684\u51fd\u6570\u6ca1\u6709\u8f93\u5165\u53c2\u6570\uff0c\u53ea\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u5e38\u91cf\u3002\u6211\u4eec\u7528wat2wasm\u547d\u4ee4\u67e5\u770b\u4e00\u4e0b\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff1a $ wat2wasm -v demo.wat 0000000: 0061 736d ; WASM_BINARY_MAGIC 0000004: 0100 0000 ; WASM_BINARY_VERSION ; section \"Type\" (1) 0000008: 01 ; section code 0000009: 00 ; section size (guess) 000000a: 01 ; num types ; type 0 000000b: 60 ; func 000000c: 00 ; num params 000000d: 01 ; num results 000000e: 7f ; i32 0000009: 05 ; FIXUP section size ; section \"Function\" (3) 000000f: 03 ; section code 0000010: 00 ; section size (guess) 0000011: 01 ; num functions 0000012: 00 ; function 0 signature index 0000010: 02 ; FIXUP section size ; section \"Code\" (10) 0000013: 0a ; section code 0000014: 00 ; section size (guess) 0000015: 01 ; num functions ; function body 0 0000016: 00 ; func body size (guess) 0000017: 00 ; local decl count 0000018: 41 ; i32.const 0000019: 37 ; i32 literal 000001a: 0b ; end 0000016: 04 ; FIXUP func body size 0000014: 06 ; FIXUP section size \u5ffd\u7565\u6a21\u5757\u5934\u90e8\u4fe1\u606f\uff0c\u6839\u636e\u6ce8\u91ca\u53ef\u4ee5\u53d1\u73b0\u4e8c\u8fdb\u5236\u6a21\u5757\u542b\u67093\u4e2a\u6bb5\uff0c\u5206\u522b\u4e3aType\u3001Function\u3001Code\uff0c\u5176\u4e2dType\u6bb5\u4ece0000008\u5730\u5740\u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u5b57\u828201\u4e3a\u6bb5ID\uff1bFunction\u6bb5\u4ece000000f\u5730\u5740\u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u5b57\u828203\u4e3a\u6bb5ID\uff1bCode\u4ece0000013\u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u5b57\u82820a\u4e3a\u6bb5ID\u3002\u6bcf\u4e2a\u6bb5ID\u7684\u540e\u9762\u8ddf\u7740\u7684\u662f\u540e\u7eed\u6bb5\u6570\u636e\u7684\u957f\u5ea6\u3002 \u6bb5\u7ed3\u6784\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u7ec4\u6210\u65b9\u5f0f\u5982\u4e0b\u8868\u6240\u793a\uff1a \u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f ID varuint7 \u7528\u4e8e\u6807\u8bc6\u6bb5\u7c7b\u578b payload_len varuint32 \u6bb5\u5185\u5bb9\u957f\u5ea6 name_len varuint32 ? \u6bb5\u540d\u957f\u5ea6\uff08\u7528\u4e8e\u81ea\u5b9a\u4e49\u6bb5\uff0c\u5373ID\u4e3a0\uff09 name bytes \uff1f \u6bb5\u540d\u5185\u5bb9\uff08\u7528\u4e8e\u81ea\u5b9a\u4e49\u6bb5\uff0c\u5373ID\u4e3a0\uff09 payload_data bytes \u6bb5\u5177\u4f53\u5185\u5bb9 \u6bcf\u4e2a\u6bb5\u7ed3\u6784\u4e8c\u8fdb\u5236\u7ec4\u6210\u65b9\u5f0f\u90fd\u5982\u4e0a\u8868\u6240\u793a\uff0c\u4f46\u6bcf\u4e2a\u6bb5\u5185\u90e8\u5177\u4f53\u5185\u5bb9\u7684\u683c\u5f0f\u5219\u5404\u4e0d\u76f8\u540c\u3002\u4e0b\u9762\u4ee5Type\u6bb5\u4e3a\u4f8b\u8fdb\u884c\u89e3\u6790\u6bb5\u7684\u5177\u4f53\u683c\u5f0f\u3002","title":"2.3.2. \u6bb5\u7c7b\u578b\u5217\u8868"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#233-typetype-section","text":"Type\u6bb5\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u7528\u6765\u4fdd\u5b58\u6240\u6709\u5bfc\u5165\u8be5\u6a21\u5757\u6216\u76f4\u63a5\u5b9a\u4e49\u5728\u6a21\u5757\u5185\u7684\u51fd\u6570\u7684\u51fd\u6570\u7b7e\u540d\u7c7b\u578b\uff08\u7531\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u5171\u540c\u51b3\u5b9a\uff09\u3002 Type\u6bb5\u7c7b\u578b\u7684\u5b57\u6bb5\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f count varuint32 \u51fd\u6570\u7b7e\u540d\u5b9e\u4f53\u7684\u4e2a\u6570 entries func_type* \u51fd\u6570\u7b7e\u540d\u5b9e\u4f53\uff08\u591a\u4e2a\uff09 func_type\u5b9e\u4f53\u7c7b\u578b\u7684\u5b57\u6bb5\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f form varint7 \u7c7b\u578b\u6784\u9020\u7b26\u201cfunc\u201d\u5bf9\u5e94\u7684OpCode\u503c\uff1a0x60 param_count varuint32 \u51fd\u6570\u5b9a\u4e49\u7684\u5f62\u5f0f\u53c2\u6570\u4e2a\u6570 param_types value_type* \u51fd\u6570\u5f62\u5f0f\u53c2\u6570\u7c7b\u578b\uff08\u7531\u7c7b\u578b\u6784\u9020\u7b26\u8868\u793a\uff09 i32: 0x7F i64: 0x7E f32: 0x7D f64: 0x7C return_count varuint7 \u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e2a\u6570 return_type Value_type? \u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff08\u7531\u7c7b\u578b\u6784\u9020\u7b26\u8868\u793a\uff09","title":"2.3.3. Type\u6bb5\uff08Type Section\uff09"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#24","text":"MVP\u7248\u672c\u7684WebAssembly\u865a\u62df\u6307\u4ee4\u4e00\u5171191\u6761\u3002\u5927\u4f53\u4e0a\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b10\u5927\u7c7b\u3002EVM\u76f4\u63a5\u5728\u6307\u4ee4\u96c6\u91cc\u9762\u6dfb\u52a0\u4e86\u4e00\u4e9b\u4e0e\u5e95\u5c42\u94fe\u4ea4\u4e92\u7684\u6307\u4ee4\uff0c\u4f8b\u5982\uff1abalance\uff0ccall\uff0ccoinbase\uff0ctimestamp\u7b49\uff0c\u800cWebAssembly\u5219\u662f\u53ef\u4ee5\u901a\u8fc7import\u7279\u6027\uff0c\u66f4\u52a0\u7075\u6d3b\u7684\u6dfb\u52a0\u4e00\u4e9b\u65b9\u6cd5\u4e0e\u5e95\u5c42\u94fe\u8fdb\u884c\u4ea4\u4e92\uff0c\u5728PlatONE\u4e2d\u6dfb\u52a0\u4e86caller\uff0corigin\uff0cbalance\uff0cgetstate\uff0csetstate\u7b49import\u65b9\u6cd5\u4e0e\u5e95\u5c42\u94fe\u8fdb\u884c\u4ea4\u4e92\u3002","title":"2.4. \u865a\u62df\u6307\u4ee4\u96c6"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#241","text":"i32\uff1a32\u4f4d\u6574\u578b\u6570 i64\uff1a64\u4f4d\u6574\u578b\u6570 f32: 32\u4f4d\u6d6e\u70b9\u578b\u6570\uff0cIEEE 754\u6807\u51c6 f64: 64\u4f4d\u6d6e\u70b9\u578b\u6570\uff0cIEEE 754\u6807\u51c6","title":"2.4.1. \u6570\u636e\u7c7b\u578b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#242","text":"i32\u3002const x\uff1a\u5728\u6808\u4e0a\u538b\u5165\u503c\u4e3ax\u7684i32\u503c\u3002 \u7b49\u7b49\u3002\u3002","title":"2.4.2. \u5e38\u6570\u6307\u4ee4"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#243","text":"\u7b97\u672f\u8fd0\u7b97\u6307\u4ee4\u7684\u8fd4\u56de\u503c\uff08\u5373\u8fd0\u7b97\u540e\u538b\u5165\u6808\u4e0a\u7684\u503c\uff09\u7684\u7c7b\u578b\u90fd\u4e0e\u5176\u6307\u4ee4\u524d\u7f00\u7c7b\u578b\u4e00\u81f4\uff0c\u5373\u4ee5\u201ci32.\u201d\u4e3a\u524d\u7f00\u7684\u6307\u4ee4\u8fd4\u56de\u503c\u7c7b\u578b\u5747\u4e3ai32\uff0c\u5176\u4ed6\u7c7b\u578b\u7c7b\u4f3c\u3002 I32.add: i32\u6c42\u548c\u3002\u4ece\u6808\u9876\u4f9d\u6b21\u5f39\u51fa1\u4e2ai32\u7684\u503ca\uff0c1\u4e2ai32\u7684\u503cb\uff0c\u8ba1\u7b97a+b\u7684\u503c\u538b\u5165\u6808\u9876\u3002 \u6c42\u548c\u3001\u6c42\u5dee\u3001\u6c42\u79ef\u3001\u6c42\u5546\u3001\u6c42\u4f59\u3001\u6c42\u53cd\u3001\u6c42\u7edd\u5bf9\u503c\u3001\u53d6\u6700\u5c0f\u503c\u3001\u53d6\u6574\u3001\u6c42\u5e73\u65b9\u6839\u3001\u5411\u4e0a\u53d6\u6574\u7b49\u7b49\u3002","title":"2.4.3. \u7b97\u672f\u8fd0\u7b97\u6307\u4ee4"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#244","text":"\u4f4d\u8fd0\u7b97\u6307\u4ee4\u7684\u8fd4\u56de\u503c\uff08\u5373\u8fd0\u7b97\u540e\u538b\u5165\u6808\u4e0a\u7684\u503c\uff09\u7684\u7c7b\u578b\u90fd\u4e0e\u5176\u6307\u4ee4\u524d\u7f00\u7c7b\u578b\u4e00\u81f4\u3002 i32.clz\uff1a\u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai32\u7684\u503cv\uff0c\u8ba1\u7b97\u4ecev\u7684\u4e8c\u8fdb\u5236\u503c\u7684\u6700\u9ad8\u4f4d\u8d77\uff0c\u8fde\u7eed\u4e3a0\u7684\u4f4d\u6570\u4e2a\u6570k\uff0c\u5c06k\u538b\u5165\u6808\u3002 \u6309\u4f4d\u4e0e\u3001\u6309\u4f4d\u6216\u3001\u6309\u4f4d\u5f02\u6216\u3001\u5de6\u79fb\u3001\u6570\u5b66\u53f3\u79fb\u3001\u5faa\u73af\u5de6\u79fb\u3001\u903b\u8f91\u53f3\u79fb\u3001\u5faa\u73af\u53f3\u79fb\u7b49\u7b49\u3002","title":"2.4.4. \u4f4d\u8fd0\u7b97\u6307\u4ee4"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#245","text":"get_local x\uff1a\u5c06x\u6307\u5b9a\u7684\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u538b\u5165\u6808\uff1bx\u662f\u5c40\u90e8\u53d8\u91cf\u7684\u7d22\u5f15\u6216\u522b\u540d\u3002 set_local, tee_local,get_global, set_global","title":"2.4.5. \u53d8\u91cf\u8bbf\u95ee\u6307\u4ee4"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#246","text":"i32.load offset=o align=a\uff1a\u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai32\u7684\u503caddr\uff0c\u4ece\u5185\u5b58\u7684addr+o\u504f\u79fb\u5904\u8bfb\u53d61\u4e2ai32\u7684\u503c\u538b\u5165\u6808\u3002a\u4e3a\u5730\u5740\u5bf9\u9f50\u503c\uff0c\u53d6\u503c\u4f4d1\uff0c2\uff0c4\uff0c8\u3002\u201coffset=...\u201d\u53ef\u4ee5\u7701\u7565\uff0c\u9ed8\u8ba4\u503c\u4e3a0\uff1b\u201calign=\u2026\u201d\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u503c\u4e3a0\u3002 i64.load, f32.load, f64.load, i32.load8_s, i64.load16_u\u7b49\u7b49\u3002 i64.store16 offset=o align=a: \u4ece\u6808\u9876\u4f9d\u6b21\u5f39\u51fa1\u4e2ai64\u7684\u503cvalue\u30011\u4e2ai32\u7684\u503caddr\uff0c\u5728\u5185\u5b58\u7684addr+o\u504f\u79fb\u5904\u5199\u5165value\u4f4e16\u4f4d\uff08\u5199\u51652\u5b57\u8282\uff09\u3002a\u4e3a\u5730\u5740\u5bf9\u9f50\u503c\uff0c\u53d6\u503c\u4f4d1\uff0c2\uff0c4\uff0c8\u3002\u201coffset=...\u201d\u53ef\u4ee5\u7701\u7565\uff0c\u9ed8\u8ba4\u503c\u4e3a0\uff1b\u201calign=\u2026\u201d\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u503c\u4e3a2\u3002 i32.store, i64.store, f32.store, f64.store, i64.store32\u7b49\u7b49\u3002 memory.size\uff1a \u5f53\u524d\u5185\u5b58\u5bb9\u91cf\uff08i32\u578b\uff09\u538b\u5165\u6808\uff0c\u4ee5\u9875\u4f4d\u5355\u4f4d\uff081\u9875=64K=65536\u5b57\u8282\uff09\u3002 memory.grow\uff1a \u4ee4\u5185\u5b58\u7684\u5f53\u524d\u5bb9\u91cf\u4e3ac\uff0c\u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai32\u7684\u503cv\uff0c\u5c06\u5185\u5b58\u7684\u5bb9\u91cf\u6269\u5927\u4e3ac+v\uff0c\u4ee5\u9875\u4e3a\u5355\u4f4d\u3002\u5982\u679c\u6269\u5bb9\u6210\u529f\uff0c\u5c06\u503c\u4e3ac\u7684i32\u538b\u5165\u6808\uff0c\u5426\u5219\u5c06\u503c\u4e3a-1\u7684i32\u538b\u5165\u6808\u3002\u5185\u5b58\u65b0\u6269\u5927\u7684\u90e8\u5206\u5168\u90e8\u521d\u59cb\u5316\u4e3a0\u7684\u503c\u3002","title":"2.4.6. \u5185\u5b58\u8bbf\u95ee\u6307\u4ee4"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#247","text":"\u6bd4\u8f83\u6307\u4ee4\u7684\u8fd4\u56de\u503c\uff08\u5373\u8fd0\u7b97\u540e\u538b\u5165\u6808\u4e0a\u7684\u503c\uff09\u5747\u4e3ai32\u3002 i32.eqz: \u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai32\u7684\u503cv\uff0c\u82e5v\u4e3a0\uff0c\u5219\u5728\u6808\u4e2d\u538b\u51651\uff0c\u5426\u5219\u538b\u51650\u3002 i32.eq, i32.ne, i32.lt_s, i32.gt_s, i32.gt_u, i32.le_s, i64.lt_s, f32.lt, f32.ge\uff08\u662f\u5426\u7b49\u4e8e\u3001\u662f\u5426\u5c0f\u4e8e\u3001\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u3001\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\uff09\u7b49\u7b49\u3002","title":"2.4.7. \u6bd4\u8f83\u6307\u4ee4"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#248","text":"i32.wrap/i64: \u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai64\u7684\u503cv\uff0c\u9ad832\u4f4d\u820d\u5f03\uff0c\u5c06\u5176\u4f4e32\u4f4d\u7684i32\u503c\u538b\u5165\u6808\u3002 i32\u8f6ci64\u3001f32\u8f6ci32\u7b49\u7b49\u7c7b\u578b\u8f6c\u6362\u3002","title":"2.4.8. \u7c7b\u578b\u8f6c\u6362\u6307\u4ee4"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#249","text":"call f\uff1a f\u4e3a\u51fd\u6570\u522b\u540d\u6216\u51fd\u6570\u7d22\u5f15\u3002\u6839\u636ef\u6307\u5b9a\u7684\u51fd\u6570\u7684\u7b7e\u540d\u521d\u59cb\u5316\u53c2\u6570\u5e76\u8c03\u7528\u5b83\u3002 return\uff1a \u8df3\u51fa\u51fd\u6570\u3002 br l\uff1a l\u4e3alabel\u522b\u540d\u6216label\u76f8\u5bf9\u5c42\u6570\uff08\u5373\u76f8\u5bf9\u4e8e\u5f53\u524d\u4ee3\u7801\u5757\u7684\u5d4c\u5957\u6df1\u5ea6\uff09\u3002\u8df3\u8f6c\u5230l\u6307\u5b9a\u7684label\u7d22\u5f15\u7684\u4ee3\u7801\u5757\u7684\u540e\u7eed\u70b9\u3002 br_if, br_table, call_indirect, loop/end, block/end, if/else/end\u7b49\u7b49\u3002","title":"2.4.9. \u63a7\u5236\u6d41\u6307\u4ee4"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#2410","text":"unreachable: \u89e6\u53d1\u5f02\u5e38\uff0c\u629b\u51faWebAssembly.RuntimeError\u3002 nop\uff1a \u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002 drop\uff1a \u4ece\u6808\u9876\u5f39\u51fa1\u4e2a\u503c\uff0c\u65e0\u89c6\u7c7b\u578b\u3002 select\uff1a\u4f9d\u6b21\u4ece\u6808\u9876\u5f39\u51fa1\u4e2ai32\u7684\u503cc\u30011\u4e2a\u503cb\u30011\u4e2a\u503ca\uff0c\u82e5c\u4e0d\u4e3a0\uff0c\u5219\u5c06a\u538b\u5165\u6808\uff0c\u5426\u5219\u5c06b\u538b\u5165\u6808\u3002a\u548cb\u5fc5\u987b\u4e3a\u540c\u4e00\u79cd\u7c7b\u578b\u3002","title":"2.4.10. \u5176\u4ed6\u6307\u4ee4"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#25","text":"\u5408\u7ea6\u8c03\u7528\u65f6\u9996\u5148\u4eceExport\u6bb5\u4e2d\u6839\u636efield_str\u548ckind\u4e24\u4e2a\u5b57\u6bb5\u83b7\u53d6\u5230\u51fd\u6570\u7684index\uff0c\u7136\u540e\u4eceCode\u6bb5\u6839\u636e\u4e0a\u9762\u5f97\u5230\u7684index\u83b7\u53d6\u51fd\u6570\u4f53\u4ee3\u7801\u5e76\u8fd0\u884c\u3002","title":"2.5. \u5408\u7ea6\u8c03\u7528"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#251-export","text":"\u53ef\u88ab\u5916\u90e8\u7528\u6237\u8c03\u7528\u7684\u5408\u7ea6\u65b9\u6cd5\u88ab\u79f0\u4e3aexport\u65b9\u6cd5\u3002\u4e00\u4e2a\u5408\u7ea6\u6240\u6709\u53ef\u5bfc\u51fa\u4f1a\u7edf\u4e00\u653e\u7f6e\u5728Export\u6bb5\u4e2d\u3002Export\u6bb5\u7684\u4e8c\u8fdb\u5236\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\u8868\u6240\u793a\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f count varuint32 \u53ef\u5bfc\u51fa\u51fd\u6570\u7684\u6570\u91cf entries export_entry* \u53ef\u5bfc\u51fa\u51fd\u6570\u5b9e\u4f53\uff08\u591a\u4e2a\uff09 export_entry\u7684\u4e8c\u8fdb\u5236\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f field_len varuint32 \u5b57\u6bb5\u540d\u79f0\u7684\u957f\u5ea6\uff08\u5355\u4f4d\uff1abyte\uff09 field_str bytes \u5b57\u6bb5\u540d\u79f0\uff1aUTF-8\u7f16\u7801\u8868\u793a kind external_kind \u5bfc\u51fa\u7c7b\u578b index varuint32 \u53ef\u5bfc\u51fa\u5b9e\u4f53\u7684\u7d22\u5f15 external_kind\u7684\u4e8c\u8fdb\u5236\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u6570\u503c \u63cf\u8ff0\u4fe1\u606f 0 \uff08Function\uff09\u51fd\u6570 1 \uff08Table\uff09\u8868 2 \uff08Memory\uff09\u5185\u5b58 3 \uff08Global\uff09\u5168\u5c40\u53d8\u91cf \u4e8c\u8fdb\u5236\u4ee3\u7801\u5982\u4e0b\uff1a ; section \"Export\" (7) 0000015: 07 ; section code 0000016: 00 ; section size (guess) 0000017: 01 ; num exports 0000018: 08 ; string length 0000019: 5f5a 3361 6464 6969 _Z3addii ; export name 0000021: 00 ; export kind 0000022: 00 ; export func index 0000016: 0c ; FIXUP section size","title":"2.5.1. Export\u6bb5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#252-code","text":"Code\u6bb5\u7684\u4e8c\u8fdb\u5236\u5982\u4e0b\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f count varuint32 \u51fd\u6570\u4f53\u6570\u91cf bodies function_body* \u51fd\u6570\u5b9e\u4f53\uff08\u591a\u4e2a\uff09 function_body\u7684\u4e8c\u8fdb\u5236\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f body_size varuint32 \u51fd\u6570\u4f53\u5927\u5c0f local_count varuint32 \u5c40\u90e8\u53d8\u91cf\u6570\u91cf locals local_entry* \u5c40\u90e8\u53d8\u91cf\uff08\u591a\u4e2a\uff09 code bytes* \u51fd\u6570\u5b9e\u4f53\u4ee3\u7801 end byte 0x0b\u3002\u8868\u793a\u51fd\u6570\u7ed3\u675f local_entry\u7684\u4e8c\u8fdb\u5236\u7ec4\u6210\u7ed3\u6784\u5982\u4e0b\uff1a \u5b57\u6bb5\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f count varuint32 \u4ee5\u4e0b\u7c7b\u578b\u53d8\u91cf\u7684\u6570\u91cf type value_type \u53d8\u91cf\u7c7b\u578b\uff1b\u53ea\u6709i32,i64,f32,f64\u56db\u79cd\u3002 \u4e8c\u8fdb\u5236\u5982\u4e0b\uff1a ; section \"Code\" (10) 0000023: 0a ; section code 0000024: 00 ; section size (guess) 0000025: 01 ; num functions ; function body 0 0000026: 00 ; func body size (guess) 0000027: 00 ; local decl count 0000028: 20 ; local.get 0000029: 01 ; local index 000002a: 20 ; local.get 000002b: 00 ; local index 000002c: 6a ; i32.add 000002d: 0b ; end 0000026: 07 ; FIXUP func body size 0000024: 09 ; FIXUP section size","title":"2.5.2. Code\u6bb5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/WASM%E8%99%9A%E6%8B%9F%E6%9C%BA/#26","text":"https://webassembly.github.io/spec/core/appendix/index-instructions.html http://webassemblycode.com/dissecting-minimum-useful-webassembly-module/ https://wasdk.github.io/WasmFiddle/","title":"2.6. \u53c2\u8003\u8d44\u6599"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E5%90%88%E7%BA%A6%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/","text":"\u5408\u7ea6\u6570\u636e\u8fc1\u79fb \u5728\u6570\u636e\u5408\u7ea6\u5347\u7ea7\u7684\u573a\u666f\uff0c\u67d0\u4e9b\u60c5\u51b5\u9700\u8981\u5904\u7406\u5386\u53f2\u6570\u636e\u5728\u65b0\u65e7\u5408\u7ea6\u4e4b\u95f4\u7684\u8fc1\u79fb\u3002 PlatONE\u652f\u6301\u65b0\u65e7\u5408\u7ea6\u4e4b\u95f4\u7684\u6570\u636e\u8fc1\u79fb\uff0c\u4ee5\u4fdd\u8bc1\u5408\u7ea6\u5347\u7ea7\u65f6\u539f\u6709\u4e1a\u52a1\u6570\u636e\u4e0d\u4e22\u5931\u3002 $ctool migInvoke --addr ${destination_contract_addr} --func 'migrateFrom' --param ${source_contract_addr} --config ${ctool.json} \u53c2\u6570\u8bf4\u660e\uff1a ${destination_contract_addr} \u4e3a\u8981\u8fc1\u5165\u5408\u7ea6\u7684\u5730\u5740 ${source_contract_addr} \u4e3a\u8981\u8fc1\u79fb\u7684\u6570\u636e\u6e90\u5408\u7ea6 \u793a\u4f8b \u6211\u4eec\u4ee5\u8fc1\u79fb\u4e00\u4e2a\u5e26\u6570\u636e\u7684CNS\u5408\u7ea6\u4e3a\u4f8b\uff0c\u6765\u63cf\u8ff0\u64cd\u4f5c\u8fc7\u7a0b\uff1a \u90e8\u7f72CNS\u5408\u7ea6 A\uff1a $ctool deploy --code ../conf/contracts/cnsManager.wasm --abi ../conf/contracts/cnsManager.cpp.abi.json --config ../conf/ctool.json \u90e8\u7f72 userRegister \u5408\u7ea6\uff0c\u7528\u4ee5\u5728CNS\u5408\u7ea6 A\u4e2d\u5199\u5165\u6570\u636e\u3002\uff08\u5728\u7528\u6237\u573a\u666f\u4e2d\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u53ef\u9009\uff0c\u53ea\u8981\u4fdd\u8bc1\u5f85\u8fc1\u79fb\u7684\u5408\u7ea6\u5b58\u5728\u6570\u636e\u5373\u53ef\uff09 $ctool deploy --code ../conf/contracts/userRegister.wasm --abi ../conf/contracts/userRegister.cpp.abi.json --config ../conf/ctool.json \u90e8\u7f72CNS\u5408\u7ea6 B\uff1a $ctool deploy --code ../conf/contracts/cnsManager.wasm --abi ../conf/contracts/cnsManager.cpp.abi.json --config ../conf/ctool.json \u6267\u884c\u8fc1\u79fb\uff08\u62f7\u8d1d\uff0c\u5bf9\u539f\u5408\u7ea6\u6570\u636e\u65e0\u5f71\u54cd\uff09\uff1a $ctool migInvoke --addr 0x30c9f12cae592610df1a387cfec39db0e64989e4 --func 'migrateFrom(\"0xe1dcc86f53fcbad47e25e391111b03afc14f1db3\")' -config ../conf/ctool.json \u67e5\u770bCNS\u5408\u7ea6 B\u4e0a\u7684\u6570\u636e\uff0c\u786e\u8ba4\u6570\u636e\u5df2\u5f97\u5230\u8fc1\u79fb\uff1a $ctool invoke --addr 0x30c9f12cae592610df1a387cfec39db0e64989e4 --abi ../conf/contracts/cnsManager.cpp.abi.json --config ../conf/ctool.json --func getRegisteredContracts --param 0 --param 10","title":"\u5408\u7ea6\u6570\u636e\u8fc1\u79fb"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E5%90%88%E7%BA%A6%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/#_1","text":"\u5728\u6570\u636e\u5408\u7ea6\u5347\u7ea7\u7684\u573a\u666f\uff0c\u67d0\u4e9b\u60c5\u51b5\u9700\u8981\u5904\u7406\u5386\u53f2\u6570\u636e\u5728\u65b0\u65e7\u5408\u7ea6\u4e4b\u95f4\u7684\u8fc1\u79fb\u3002 PlatONE\u652f\u6301\u65b0\u65e7\u5408\u7ea6\u4e4b\u95f4\u7684\u6570\u636e\u8fc1\u79fb\uff0c\u4ee5\u4fdd\u8bc1\u5408\u7ea6\u5347\u7ea7\u65f6\u539f\u6709\u4e1a\u52a1\u6570\u636e\u4e0d\u4e22\u5931\u3002 $ctool migInvoke --addr ${destination_contract_addr} --func 'migrateFrom' --param ${source_contract_addr} --config ${ctool.json} \u53c2\u6570\u8bf4\u660e\uff1a ${destination_contract_addr} \u4e3a\u8981\u8fc1\u5165\u5408\u7ea6\u7684\u5730\u5740 ${source_contract_addr} \u4e3a\u8981\u8fc1\u79fb\u7684\u6570\u636e\u6e90\u5408\u7ea6","title":"\u5408\u7ea6\u6570\u636e\u8fc1\u79fb"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E5%90%88%E7%BA%A6%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/#_2","text":"\u6211\u4eec\u4ee5\u8fc1\u79fb\u4e00\u4e2a\u5e26\u6570\u636e\u7684CNS\u5408\u7ea6\u4e3a\u4f8b\uff0c\u6765\u63cf\u8ff0\u64cd\u4f5c\u8fc7\u7a0b\uff1a \u90e8\u7f72CNS\u5408\u7ea6 A\uff1a $ctool deploy --code ../conf/contracts/cnsManager.wasm --abi ../conf/contracts/cnsManager.cpp.abi.json --config ../conf/ctool.json \u90e8\u7f72 userRegister \u5408\u7ea6\uff0c\u7528\u4ee5\u5728CNS\u5408\u7ea6 A\u4e2d\u5199\u5165\u6570\u636e\u3002\uff08\u5728\u7528\u6237\u573a\u666f\u4e2d\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u53ef\u9009\uff0c\u53ea\u8981\u4fdd\u8bc1\u5f85\u8fc1\u79fb\u7684\u5408\u7ea6\u5b58\u5728\u6570\u636e\u5373\u53ef\uff09 $ctool deploy --code ../conf/contracts/userRegister.wasm --abi ../conf/contracts/userRegister.cpp.abi.json --config ../conf/ctool.json \u90e8\u7f72CNS\u5408\u7ea6 B\uff1a $ctool deploy --code ../conf/contracts/cnsManager.wasm --abi ../conf/contracts/cnsManager.cpp.abi.json --config ../conf/ctool.json \u6267\u884c\u8fc1\u79fb\uff08\u62f7\u8d1d\uff0c\u5bf9\u539f\u5408\u7ea6\u6570\u636e\u65e0\u5f71\u54cd\uff09\uff1a $ctool migInvoke --addr 0x30c9f12cae592610df1a387cfec39db0e64989e4 --func 'migrateFrom(\"0xe1dcc86f53fcbad47e25e391111b03afc14f1db3\")' -config ../conf/ctool.json \u67e5\u770bCNS\u5408\u7ea6 B\u4e0a\u7684\u6570\u636e\uff0c\u786e\u8ba4\u6570\u636e\u5df2\u5f97\u5230\u8fc1\u79fb\uff1a $ctool invoke --addr 0x30c9f12cae592610df1a387cfec39db0e64989e4 --abi ../conf/contracts/cnsManager.cpp.abi.json --config ../conf/ctool.json --func getRegisteredContracts --param 0 --param 10","title":"\u793a\u4f8b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%A6%82%E8%A6%81/","text":"\u667a\u80fd\u5408\u7ea6\u6982\u8981 PlatONE\u4e2d\u7684\u667a\u80fd\u5408\u7ea6\u662f\u4e00\u6bb5\u53ef\u4ee5\u5728\u94fe\u4e0a\u8fd0\u884c\u7684\u903b\u8f91\u4ee3\u7801\uff0c\u5408\u7ea6\u4ee5\u8d26\u6237\u5f62\u5f0f\u5b58\u5728\uff0c\u79f0\u4e4b\u4e3a\u5408\u7ea6\u8d26\u6237\u3002\u5408\u7ea6\u8d26\u6237\u72b6\u6001\u7684 code \u5b57\u6bb5\u4e2d\u4fdd\u5b58\u4e86\u5408\u7ea6\u7684\u903b\u8f91\u4ee3\u7801\uff08\u5373\u5b57\u8282\u7801\uff09\uff0c\u5408\u7ea6\u7684\u8c03\u7528\u53ef\u4ee5\u770b\u505a\u662f\u5408\u7ea6\u8d26\u53f7\u4e2d\u7684\u903b\u8f91\u4ee3\u7801\u5728\u865a\u62df\u673a\u4e2d\u6267\u884c\u3002 PlatONE\u540c\u65f6\u652f\u6301EVM\u548cWASM\u4e24\u79cd\u7c7b\u578b\u667a\u80fd\u5408\u7ea6\u865a\u62df\u673a\uff0c\u5176\u4e2dEVM\u865a\u62df\u673a\u517c\u5bb9\u4ee5\u592a\u574a\u7684solidity\u667a\u80fd\u5408\u7ea6\uff0cWASM\u865a\u62df\u673a\u53ef\u4ee5\u652f\u6301C/C++/Rust\u7b49\u591a\u79cd\u5408\u7ea6\u8bed\u8a00\u3002","title":"\u667a\u80fd\u5408\u7ea6\u6982\u8981"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%A6%82%E8%A6%81/#_1","text":"PlatONE\u4e2d\u7684\u667a\u80fd\u5408\u7ea6\u662f\u4e00\u6bb5\u53ef\u4ee5\u5728\u94fe\u4e0a\u8fd0\u884c\u7684\u903b\u8f91\u4ee3\u7801\uff0c\u5408\u7ea6\u4ee5\u8d26\u6237\u5f62\u5f0f\u5b58\u5728\uff0c\u79f0\u4e4b\u4e3a\u5408\u7ea6\u8d26\u6237\u3002\u5408\u7ea6\u8d26\u6237\u72b6\u6001\u7684 code \u5b57\u6bb5\u4e2d\u4fdd\u5b58\u4e86\u5408\u7ea6\u7684\u903b\u8f91\u4ee3\u7801\uff08\u5373\u5b57\u8282\u7801\uff09\uff0c\u5408\u7ea6\u7684\u8c03\u7528\u53ef\u4ee5\u770b\u505a\u662f\u5408\u7ea6\u8d26\u53f7\u4e2d\u7684\u903b\u8f91\u4ee3\u7801\u5728\u865a\u62df\u673a\u4e2d\u6267\u884c\u3002 PlatONE\u540c\u65f6\u652f\u6301EVM\u548cWASM\u4e24\u79cd\u7c7b\u578b\u667a\u80fd\u5408\u7ea6\u865a\u62df\u673a\uff0c\u5176\u4e2dEVM\u865a\u62df\u673a\u517c\u5bb9\u4ee5\u592a\u574a\u7684solidity\u667a\u80fd\u5408\u7ea6\uff0cWASM\u865a\u62df\u673a\u53ef\u4ee5\u652f\u6301C/C++/Rust\u7b49\u591a\u79cd\u5408\u7ea6\u8bed\u8a00\u3002","title":"\u667a\u80fd\u5408\u7ea6\u6982\u8981"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E8%87%AA%E5%AE%9A%E4%B9%89Gas%E6%89%A3%E8%B4%B9%E5%8A%9F%E8%83%BD/","text":"[TODO]","title":"\u81ea\u5b9a\u4e49Gas\u6263\u8d39\u529f\u80fd"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E9%9A%90%E7%A7%81%E5%AF%86%E7%A0%81%E8%B4%A7%E5%B8%81/","text":"[TODO]","title":"\u9690\u79c1\u5bc6\u7801\u8d27\u5e01"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/","text":"PlatONE\u6743\u9650\u6a21\u578b \u6839\u636e\u7cfb\u7edf\u4e2d\u7684\u4e0d\u540c\u5b9e\u4f53\u5bf9\u8c61\uff0cPlatONE\u5c06\u6743\u9650\u7ba1\u7406\u8fdb\u884c\u4e86\u6a21\u5757\u5316\u7684\u62c6\u5206\u3002\u9488\u5bf9\u7cfb\u7edf\u4e2d\u7528\u6237\u8d26\u6237\u3001\u8282\u70b9\u548c\u667a\u80fd\u5408\u7ea6\u8fd9\u4e09\u7c7b\u5b9e\u4f53\uff0c\u5206\u522b\u8bbe\u8ba1\u4e86\u7528\u6237\u89d2\u8272\u7ba1\u7406\u6a21\u5757\u3001\u8282\u70b9\u7ba1\u7406\u6a21\u5757\u548c\u5408\u7ea6\u9632\u706b\u5899\u6a21\u5757\u6765\u8fdb\u884c\u6743\u9650\u7684\u63a7\u5236\u548c\u7ba1\u7406\u3002 \u89d2\u8272\u7ba1\u7406\u6a21\u5757\uff1a\u7528\u4e8e\u7ba1\u7406\u7528\u6237\u5728\u94fe\u4e0a\u7684\u6743\u9650 \u8282\u70b9\u7ba1\u7406\u6a21\u5757\uff1a\u7528\u4e8e\u7ba1\u7406\u533a\u5757\u94fe\u7f51\u7edc\u4e2d\u7684\u8282\u70b9 \u5408\u7ea6\u9632\u706b\u5899\u6a21\u5757\uff1a\u5b9e\u73b0\u63a5\u53e3\u7ea7\u522b\u7684\u5408\u7ea6\u8bbf\u95ee\u6743\u9650 1. \u89d2\u8272\u7ba1\u7406 PlatONE\u4e2d\u6bcf\u79cd\u89d2\u8272\u5bf9\u5e94\u4e0d\u540c\u7684\u6743\u9650\u7b49\u7ea7\uff0c\u5e76\u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u5bf9\u7528\u6237\u7684\u89d2\u8272\u8fdb\u884c\u7ba1\u7406\uff0c\u4ee5\u63a7\u5236\u7528\u6237\u7684\u6743\u9650\u3002 \u65b0\u7528\u6237\u5411\u7cfb\u7edf\u5408\u7ea6\u63d0\u4ea4\u6ce8\u518c\u4fe1\u606f\uff0c\u5f85\u94fe\u7ba1\u7406\u5458\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u4fbf\u6210\u4e3a\u5e73\u53f0\u7528\u6237\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u7528\u6237\u5730\u5740\u6216\u7528\u6237\u540d\u79f0\u6765\u67e5\u8be2\u6216\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u7981\u7528\u3001\u6fc0\u6d3b\u4ee5\u53ca\u5220\u9664\u7528\u6237\u3002 \u5e73\u53f0\u7528\u6237\u53ef\u4ee5\u7533\u8bf7\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u5f85\u94fe\u7ba1\u7406\u5458\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u88ab\u6388\u4e88\u5bf9\u5e94\u7684\u89d2\u8272\uff0c\u5e76\u62e5\u6709\u76f8\u5e94\u7684\u6743\u9650\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u89d2\u8272\u7ba1\u7406\u5408\u7ea6\u6765\u67e5\u8be2\u89d2\u8272\uff0c\u901a\u8fc7\u7528\u6237\u5730\u5740\u548c\u7528\u6237\u540d\u79f0\u4e24\u79cd\u67e5\u8be2\u6761\u4ef6\u67e5\u8be2\u7528\u6237\u89d2\u8272\u4fe1\u606f\uff0c\u662f\u5426\u6709\u67d0\u4e2a\u89d2\u8272\uff0c\u7cfb\u7edf\u4e2d\u67d0\u4e2a\u89d2\u8272\u7684\u5730\u5740\u3002 PlatONE\u4e2d\u7684\u6743\u9650\u90fd\u662f\u5bf9\u7cfb\u7edf\u4e2d\u7684\u7528\u6237\u5206\u914d\u7684\uff0c\u7528\u6237\u7684\u89d2\u8272\u5373\u8868\u793a\u7528\u6237\u7684\u6743\u9650\uff0c\u76ee\u524d\u7528\u6237\u53ef\u4ee5\u5206\u914d\u5982\u4e0b\u89d2\u8272\uff08\u6743\u9650\uff09\u3002 \u6bcf\u4e2a\u89d2\u8272\u7684\u6743\u9650\u8303\u56f4\u5982\u4e0b\u8868\u6240\u793a 2. \u8282\u70b9\u7ba1\u7406 \u4e3a\u4e86\u4fdd\u8bc1\u533a\u5757\u94fe\u7684\u5b89\u5168\u6027\uff0cPlatONE\u901a\u8fc7\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u5bf9\u8282\u70b9\u8fdb\u884c\u7ba1\u7406\uff0c\u5305\u62ec\u8282\u70b9\u662f\u5426\u80fd\u591f\u63a5\u5165\u7f51\u7edc\uff0c\u8282\u70b9\u662f\u5426\u80fd\u591f\u53c2\u4e0e\u5171\u8bc6\u4ee5\u53ca\u8282\u70b9\u4fe1\u606f\u7684\u7ef4\u62a4\u7b49\u529f\u80fd\u3002\u6839\u636e\u4e4b\u524d\u7528\u6237\u89d2\u8272\u7684\u8bbe\u5b9a\uff0c\u53ea\u6709chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e09\u7c7b\u7528\u6237\u624d\u53ef\u4ee5\u8bbe\u7f6e\u7cfb\u7edf\u5408\u7ea6\u4e2d\u7684\u8282\u70b9\u6570\u636e\uff0c\u5f53\u9700\u8981\u6dfb\u52a0\u8282\u70b9\u3001\u66f4\u65b0\u8282\u70b9\u72b6\u6001\u3001\u5220\u9664\u8282\u70b9\u65f6\u90fd\u9700\u8981\u8fd9\u4e09\u7c7b\u8d26\u6237\u6765\u8c03\u7528\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fnodeAdmin\u4ec5\u53ef\u4ee5\u7ba1\u7406\u81ea\u5df1\u52a0\u5165\u7684\u8282\u70b9\uff0cchainCreator\u548cchainAdmin\u53ef\u4ee5\u7ba1\u7406\u6240\u6709\u8282\u70b9\u3002 2.1 \u8282\u70b9\u7c7b\u578b \u89c2\u5bdf\u8005\u8282\u70b9 \u89c2\u5bdf\u8005\u8282\u70b9\u8d1f\u8d23\u540c\u6b65\u533a\u5757\u4f46\u5e76\u4e0d\u53c2\u4e0e\u6295\u7968\u51fa\u5757\u3002 \u7cfb\u7edf\u4e2d\uff0c\u5c06\u4f1a\u4e00\u76f4\u5b58\u5728\u51e0\u4e2a\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\u3002 \u7528\u4e8e\u5176\u4ed6\u8282\u70b9\u8fde\u63a5\uff0c\u4ece\u800c\u8fdb\u884c\u7a33\u5b9a\u7684\u540c\u6b65\u533a\u5757\u3002 \u65b0\u8282\u70b9\u542f\u52a8\u65f6\uff0c\u4f7f\u7528bootnodes\u53c2\u6570\u6307\u5b9a \u7a33\u70b9\u7684\u89c2\u5bdf\u8005\u8282\u70b9 \u8fdb\u884c\u8fde\u63a5\uff0c\u8fde\u63a5\u6210\u529f\u4e4b\u540e\uff0c\u5219\u53ef\u6b63\u5e38\u540c\u6b65\u533a\u5757\u3002 \u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\u8bbe\u7f6e\u5728genesis.json\u7684suggestObserverNodes\u4e2d\uff0c\u5728\u94fe\u542f\u52a8\u4e4b\u540e\uff0c\u9700\u8981\u5c06\u6240\u8bbe\u7f6e\u7684\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\u6dfb\u52a0\u5230\u8282\u70b9\u7ba1\u7406\u7cfb\u7edf\u5408\u7ea6\u4e2d\u3002 \u5171\u8bc6\u8282\u70b9 \u5171\u8bc6\u8282\u70b9\u53c2\u4e0e\u6295\u7968\u51fa\u5757\uff0c\u4ee5\u53ca\u540c\u6b65\u533a\u5757\u3002 \u5728PlatONE\u521a\u542f\u52a8\u4e4b\u9645\uff0c\u7cfb\u7edf\u5408\u7ea6\u8fd8\u5e76\u672a\u90e8\u7f72\uff0c\u6b64\u65f6\u7f51\u7edc\u4e2d\u7684\u5171\u8bc6\u8282\u70b9\u5c06\u4f1a\u7531genesis.json\u4e2dvalidatorNodes\u4e2d\u6307\u5b9a\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u6765\u627f\u62c5\u3002 \u7531\u6b64\u8282\u70b9\u8fdb\u884c\u5171\u8bc6\u51fa\u5757\u3002\u76f4\u5230PlatONE\u90e8\u7f72\u5b8c\u7cfb\u7edf\u5408\u7ea6\uff0c\u5e76\u4e14\u6210\u529f\u7684\u5728\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u4e2d\u6307\u5b9a\u4e86\u65b0\u7684\u5171\u8bc6\u8282\u70b9\u4e4b\u540e\uff0c\u7531\u5408\u7ea6\u4e2d\u6307\u5b9a\u7684\u591a\u4e2a\u5171\u8bc6\u8282\u70b9\u8fdb\u884c\u76f8\u4e92\u6295\u7968\u548c\u51fa\u5757\u3002 2.2 \u8282\u70b9\u72b6\u6001 \u8282\u70b9\u72b6\u6001\u53ef\u4ee5\u4f7f\u7528\u8282\u70b9\u7ba1\u7406\u7cfb\u7edf\u5408\u7ea6\u7684\u76f8\u5e94\u7684API\u8fdb\u884c\u8bbe\u7f6e\u548c\u66f4\u6539\u3002 \u5220\u9664\u72b6\u6001 \u5220\u9664\u72b6\u6001\u4e0b\u7684\u8282\u70b9\u65e0\u6cd5\u8fde\u63a5\u5176\u4ed6\u8282\u70b9\uff0c\u4e5f\u65e0\u6cd5\u88ab\u5176\u4ed6\u8282\u70b9\u8fdb\u884c\u8fde\u63a5\u3002 \u5220\u9664\u72b6\u6001\u4e0b\u7684\u8282\u70b9\u5c06\u4f1a\u6c38\u4e45\u7684\u505c\u7559\u5728\u5220\u9664\u72b6\u6001\uff0c\u4e0d\u5141\u8bb8\u6062\u590d\u3002 \u6b63\u5e38\u72b6\u6001 \u6b63\u5e38\u72b6\u6001\u4e0b\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u4e3b\u52a8\u8fde\u63a5\u5176\u4ed6\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u88ab\u5176\u4ed6\u6b63\u5e38\u72b6\u6001\u4e0b\u7684\u8282\u70b9\u8fdb\u884c\u8fde\u63a5\u3002 2.3 \u8282\u70b9\u542f\u52a8 \u8282\u70b9\u542f\u52a8\u65f6\uff0c\u9664\u4e86\u6307\u5b9aPlatONE\u5e38\u89c4\u53c2\u6570\u5916\uff0c\u8fd8\u9700\u8981\u6307\u5b9a --bootnodes \uff0cbootnodes\u6307\u5b9a\u8303\u56f4\u5efa\u8bae\u662f\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\u3002 \u53ef\u4ee5\u5728genesis.json\u4e2dsuggestObserverNodes\u4e2d\u67e5\u770b\u5230\u6240\u6709\u7684\u7a33\u5b9a\u89c2\u5bdf\u8005\u8282\u70b9\u3002 2.4 \u8282\u70b9\u8fde\u63a5 \u8282\u70b9A\u542f\u52a8\u540e\uff0c\u4f1a\u4e3b\u52a8\u8fde\u63a5 --bootnodes \u6307\u5b9a\u7684\u8282\u70b9B\uff0c\u800c\u5728\u8282\u70b9B\u4e2d\uff0c\u4f1a\u68c0\u67e5\u8282\u70b9A\u662f\u5426\u5728\u5b58\u5728\u4e8e\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u4e2d\uff0c\u5e76\u4e14\u8282\u70b9\u72b6\u6001\u4e3a\u6b63\u5e38\u72b6\u6001\u3002\u53ea\u6709\u68c0\u67e5\u901a\u8fc7\uff0c\u6b64\u65f6\u8282\u70b9B\u624d\u4f1a\u63a5\u53d7\u8282\u70b9A\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u5f53\u8282\u70b9\u6210\u529f\u8fde\u63a5\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u540c\u6b65\u533a\u5757\u7b49\u64cd\u4f5c\u3002 2.5 \u8282\u70b9\u66f4\u65b0 \u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u76f8\u5e94\u7684\u8282\u70b9\u66f4\u65b0\u64cd\u4f5c\u3002\u53ef\u4ee5\u6309\u9700\u66f4\u6539\u5408\u7ea6\u4e2d\u5df2\u6dfb\u52a0\u7684\u8282\u70b9\u7684\u72b6\u6001\uff0c\u7c7b\u578b\u7b49\u8282\u70b9\u4fe1\u606f\u3002 3. \u5408\u7ea6\u9632\u706b\u5899 \u5408\u7ea6\u9632\u706b\u5899\u4e3b\u8981\u5b9e\u73b0\u4e86\u5bf9\u9632\u706b\u5899\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\u7684\u7ba1\u7406\u529f\u80fd\uff0c\u4f7f\u5f97\u5408\u7ea6\u7684\u90e8\u7f72\u8005\u53ef\u4ee5\u8bbe\u7f6e\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\uff0c\u4ee5\u63a7\u5236\u5408\u7ea6\u65b9\u6cd5\u7684\u8c03\u7528\u6743\u9650\uff0c\u5141\u8bb8\u7279\u5b9a\u7684\u7528\u6237\u8c03\u7528\u5408\u7ea6\u7684\u6307\u5b9a\u65b9\u6cd5\uff0c\u5728\u63d0\u9ad8\u7528\u6237\u4f53\u9a8c\u7684\u540c\u65f6\u53c8\u6709\u6548\u5730\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\u80fd\u3002 PlatONE\u4e2d\u5408\u7ea6\u7684\u8c03\u7528\u6743\u9650\u7531\u5408\u7ea6\u9632\u706b\u5899\u63a7\u5236\uff0c\u53ea\u6709\u5408\u7ea6\u7684\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5408\u7ea6\u7684\u9632\u706b\u5899\u3002 \u5408\u7ea6\u9632\u706b\u5899\u5177\u5907\u5408\u7ea6\u63a5\u53e3\u7ea7\u522b\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u5217\u8868\u5b9e\u73b0\uff1a + ACCEPT: \u53ef\u4ee5\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u767d\u540d\u5355 + REJECT: \u62d2\u7edd\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u9ed1\u540d\u5355","title":"\u6743\u9650\u6a21\u578b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#platone","text":"\u6839\u636e\u7cfb\u7edf\u4e2d\u7684\u4e0d\u540c\u5b9e\u4f53\u5bf9\u8c61\uff0cPlatONE\u5c06\u6743\u9650\u7ba1\u7406\u8fdb\u884c\u4e86\u6a21\u5757\u5316\u7684\u62c6\u5206\u3002\u9488\u5bf9\u7cfb\u7edf\u4e2d\u7528\u6237\u8d26\u6237\u3001\u8282\u70b9\u548c\u667a\u80fd\u5408\u7ea6\u8fd9\u4e09\u7c7b\u5b9e\u4f53\uff0c\u5206\u522b\u8bbe\u8ba1\u4e86\u7528\u6237\u89d2\u8272\u7ba1\u7406\u6a21\u5757\u3001\u8282\u70b9\u7ba1\u7406\u6a21\u5757\u548c\u5408\u7ea6\u9632\u706b\u5899\u6a21\u5757\u6765\u8fdb\u884c\u6743\u9650\u7684\u63a7\u5236\u548c\u7ba1\u7406\u3002 \u89d2\u8272\u7ba1\u7406\u6a21\u5757\uff1a\u7528\u4e8e\u7ba1\u7406\u7528\u6237\u5728\u94fe\u4e0a\u7684\u6743\u9650 \u8282\u70b9\u7ba1\u7406\u6a21\u5757\uff1a\u7528\u4e8e\u7ba1\u7406\u533a\u5757\u94fe\u7f51\u7edc\u4e2d\u7684\u8282\u70b9 \u5408\u7ea6\u9632\u706b\u5899\u6a21\u5757\uff1a\u5b9e\u73b0\u63a5\u53e3\u7ea7\u522b\u7684\u5408\u7ea6\u8bbf\u95ee\u6743\u9650","title":"PlatONE\u6743\u9650\u6a21\u578b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#1","text":"PlatONE\u4e2d\u6bcf\u79cd\u89d2\u8272\u5bf9\u5e94\u4e0d\u540c\u7684\u6743\u9650\u7b49\u7ea7\uff0c\u5e76\u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u5bf9\u7528\u6237\u7684\u89d2\u8272\u8fdb\u884c\u7ba1\u7406\uff0c\u4ee5\u63a7\u5236\u7528\u6237\u7684\u6743\u9650\u3002 \u65b0\u7528\u6237\u5411\u7cfb\u7edf\u5408\u7ea6\u63d0\u4ea4\u6ce8\u518c\u4fe1\u606f\uff0c\u5f85\u94fe\u7ba1\u7406\u5458\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u4fbf\u6210\u4e3a\u5e73\u53f0\u7528\u6237\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u7528\u6237\u5730\u5740\u6216\u7528\u6237\u540d\u79f0\u6765\u67e5\u8be2\u6216\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u7981\u7528\u3001\u6fc0\u6d3b\u4ee5\u53ca\u5220\u9664\u7528\u6237\u3002 \u5e73\u53f0\u7528\u6237\u53ef\u4ee5\u7533\u8bf7\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u5f85\u94fe\u7ba1\u7406\u5458\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u88ab\u6388\u4e88\u5bf9\u5e94\u7684\u89d2\u8272\uff0c\u5e76\u62e5\u6709\u76f8\u5e94\u7684\u6743\u9650\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u89d2\u8272\u7ba1\u7406\u5408\u7ea6\u6765\u67e5\u8be2\u89d2\u8272\uff0c\u901a\u8fc7\u7528\u6237\u5730\u5740\u548c\u7528\u6237\u540d\u79f0\u4e24\u79cd\u67e5\u8be2\u6761\u4ef6\u67e5\u8be2\u7528\u6237\u89d2\u8272\u4fe1\u606f\uff0c\u662f\u5426\u6709\u67d0\u4e2a\u89d2\u8272\uff0c\u7cfb\u7edf\u4e2d\u67d0\u4e2a\u89d2\u8272\u7684\u5730\u5740\u3002 PlatONE\u4e2d\u7684\u6743\u9650\u90fd\u662f\u5bf9\u7cfb\u7edf\u4e2d\u7684\u7528\u6237\u5206\u914d\u7684\uff0c\u7528\u6237\u7684\u89d2\u8272\u5373\u8868\u793a\u7528\u6237\u7684\u6743\u9650\uff0c\u76ee\u524d\u7528\u6237\u53ef\u4ee5\u5206\u914d\u5982\u4e0b\u89d2\u8272\uff08\u6743\u9650\uff09\u3002 \u6bcf\u4e2a\u89d2\u8272\u7684\u6743\u9650\u8303\u56f4\u5982\u4e0b\u8868\u6240\u793a","title":"1. \u89d2\u8272\u7ba1\u7406"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#2","text":"\u4e3a\u4e86\u4fdd\u8bc1\u533a\u5757\u94fe\u7684\u5b89\u5168\u6027\uff0cPlatONE\u901a\u8fc7\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u5bf9\u8282\u70b9\u8fdb\u884c\u7ba1\u7406\uff0c\u5305\u62ec\u8282\u70b9\u662f\u5426\u80fd\u591f\u63a5\u5165\u7f51\u7edc\uff0c\u8282\u70b9\u662f\u5426\u80fd\u591f\u53c2\u4e0e\u5171\u8bc6\u4ee5\u53ca\u8282\u70b9\u4fe1\u606f\u7684\u7ef4\u62a4\u7b49\u529f\u80fd\u3002\u6839\u636e\u4e4b\u524d\u7528\u6237\u89d2\u8272\u7684\u8bbe\u5b9a\uff0c\u53ea\u6709chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e09\u7c7b\u7528\u6237\u624d\u53ef\u4ee5\u8bbe\u7f6e\u7cfb\u7edf\u5408\u7ea6\u4e2d\u7684\u8282\u70b9\u6570\u636e\uff0c\u5f53\u9700\u8981\u6dfb\u52a0\u8282\u70b9\u3001\u66f4\u65b0\u8282\u70b9\u72b6\u6001\u3001\u5220\u9664\u8282\u70b9\u65f6\u90fd\u9700\u8981\u8fd9\u4e09\u7c7b\u8d26\u6237\u6765\u8c03\u7528\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fnodeAdmin\u4ec5\u53ef\u4ee5\u7ba1\u7406\u81ea\u5df1\u52a0\u5165\u7684\u8282\u70b9\uff0cchainCreator\u548cchainAdmin\u53ef\u4ee5\u7ba1\u7406\u6240\u6709\u8282\u70b9\u3002","title":"2. \u8282\u70b9\u7ba1\u7406"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#21","text":"","title":"2.1 \u8282\u70b9\u7c7b\u578b"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_1","text":"\u89c2\u5bdf\u8005\u8282\u70b9\u8d1f\u8d23\u540c\u6b65\u533a\u5757\u4f46\u5e76\u4e0d\u53c2\u4e0e\u6295\u7968\u51fa\u5757\u3002 \u7cfb\u7edf\u4e2d\uff0c\u5c06\u4f1a\u4e00\u76f4\u5b58\u5728\u51e0\u4e2a\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\u3002 \u7528\u4e8e\u5176\u4ed6\u8282\u70b9\u8fde\u63a5\uff0c\u4ece\u800c\u8fdb\u884c\u7a33\u5b9a\u7684\u540c\u6b65\u533a\u5757\u3002 \u65b0\u8282\u70b9\u542f\u52a8\u65f6\uff0c\u4f7f\u7528bootnodes\u53c2\u6570\u6307\u5b9a \u7a33\u70b9\u7684\u89c2\u5bdf\u8005\u8282\u70b9 \u8fdb\u884c\u8fde\u63a5\uff0c\u8fde\u63a5\u6210\u529f\u4e4b\u540e\uff0c\u5219\u53ef\u6b63\u5e38\u540c\u6b65\u533a\u5757\u3002 \u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\u8bbe\u7f6e\u5728genesis.json\u7684suggestObserverNodes\u4e2d\uff0c\u5728\u94fe\u542f\u52a8\u4e4b\u540e\uff0c\u9700\u8981\u5c06\u6240\u8bbe\u7f6e\u7684\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\u6dfb\u52a0\u5230\u8282\u70b9\u7ba1\u7406\u7cfb\u7edf\u5408\u7ea6\u4e2d\u3002","title":"\u89c2\u5bdf\u8005\u8282\u70b9"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_2","text":"\u5171\u8bc6\u8282\u70b9\u53c2\u4e0e\u6295\u7968\u51fa\u5757\uff0c\u4ee5\u53ca\u540c\u6b65\u533a\u5757\u3002 \u5728PlatONE\u521a\u542f\u52a8\u4e4b\u9645\uff0c\u7cfb\u7edf\u5408\u7ea6\u8fd8\u5e76\u672a\u90e8\u7f72\uff0c\u6b64\u65f6\u7f51\u7edc\u4e2d\u7684\u5171\u8bc6\u8282\u70b9\u5c06\u4f1a\u7531genesis.json\u4e2dvalidatorNodes\u4e2d\u6307\u5b9a\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u6765\u627f\u62c5\u3002 \u7531\u6b64\u8282\u70b9\u8fdb\u884c\u5171\u8bc6\u51fa\u5757\u3002\u76f4\u5230PlatONE\u90e8\u7f72\u5b8c\u7cfb\u7edf\u5408\u7ea6\uff0c\u5e76\u4e14\u6210\u529f\u7684\u5728\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u4e2d\u6307\u5b9a\u4e86\u65b0\u7684\u5171\u8bc6\u8282\u70b9\u4e4b\u540e\uff0c\u7531\u5408\u7ea6\u4e2d\u6307\u5b9a\u7684\u591a\u4e2a\u5171\u8bc6\u8282\u70b9\u8fdb\u884c\u76f8\u4e92\u6295\u7968\u548c\u51fa\u5757\u3002","title":"\u5171\u8bc6\u8282\u70b9"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#22","text":"\u8282\u70b9\u72b6\u6001\u53ef\u4ee5\u4f7f\u7528\u8282\u70b9\u7ba1\u7406\u7cfb\u7edf\u5408\u7ea6\u7684\u76f8\u5e94\u7684API\u8fdb\u884c\u8bbe\u7f6e\u548c\u66f4\u6539\u3002","title":"2.2 \u8282\u70b9\u72b6\u6001"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_3","text":"\u5220\u9664\u72b6\u6001\u4e0b\u7684\u8282\u70b9\u65e0\u6cd5\u8fde\u63a5\u5176\u4ed6\u8282\u70b9\uff0c\u4e5f\u65e0\u6cd5\u88ab\u5176\u4ed6\u8282\u70b9\u8fdb\u884c\u8fde\u63a5\u3002 \u5220\u9664\u72b6\u6001\u4e0b\u7684\u8282\u70b9\u5c06\u4f1a\u6c38\u4e45\u7684\u505c\u7559\u5728\u5220\u9664\u72b6\u6001\uff0c\u4e0d\u5141\u8bb8\u6062\u590d\u3002","title":"\u5220\u9664\u72b6\u6001"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_4","text":"\u6b63\u5e38\u72b6\u6001\u4e0b\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u4e3b\u52a8\u8fde\u63a5\u5176\u4ed6\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u88ab\u5176\u4ed6\u6b63\u5e38\u72b6\u6001\u4e0b\u7684\u8282\u70b9\u8fdb\u884c\u8fde\u63a5\u3002","title":"\u6b63\u5e38\u72b6\u6001"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#23","text":"\u8282\u70b9\u542f\u52a8\u65f6\uff0c\u9664\u4e86\u6307\u5b9aPlatONE\u5e38\u89c4\u53c2\u6570\u5916\uff0c\u8fd8\u9700\u8981\u6307\u5b9a --bootnodes \uff0cbootnodes\u6307\u5b9a\u8303\u56f4\u5efa\u8bae\u662f\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\u3002 \u53ef\u4ee5\u5728genesis.json\u4e2dsuggestObserverNodes\u4e2d\u67e5\u770b\u5230\u6240\u6709\u7684\u7a33\u5b9a\u89c2\u5bdf\u8005\u8282\u70b9\u3002","title":"2.3 \u8282\u70b9\u542f\u52a8"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#24","text":"\u8282\u70b9A\u542f\u52a8\u540e\uff0c\u4f1a\u4e3b\u52a8\u8fde\u63a5 --bootnodes \u6307\u5b9a\u7684\u8282\u70b9B\uff0c\u800c\u5728\u8282\u70b9B\u4e2d\uff0c\u4f1a\u68c0\u67e5\u8282\u70b9A\u662f\u5426\u5728\u5b58\u5728\u4e8e\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u4e2d\uff0c\u5e76\u4e14\u8282\u70b9\u72b6\u6001\u4e3a\u6b63\u5e38\u72b6\u6001\u3002\u53ea\u6709\u68c0\u67e5\u901a\u8fc7\uff0c\u6b64\u65f6\u8282\u70b9B\u624d\u4f1a\u63a5\u53d7\u8282\u70b9A\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u5f53\u8282\u70b9\u6210\u529f\u8fde\u63a5\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u540c\u6b65\u533a\u5757\u7b49\u64cd\u4f5c\u3002","title":"2.4 \u8282\u70b9\u8fde\u63a5"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#25","text":"\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u76f8\u5e94\u7684\u8282\u70b9\u66f4\u65b0\u64cd\u4f5c\u3002\u53ef\u4ee5\u6309\u9700\u66f4\u6539\u5408\u7ea6\u4e2d\u5df2\u6dfb\u52a0\u7684\u8282\u70b9\u7684\u72b6\u6001\uff0c\u7c7b\u578b\u7b49\u8282\u70b9\u4fe1\u606f\u3002","title":"2.5 \u8282\u70b9\u66f4\u65b0"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%8D%E8%A6%81%E5%8A%9F%E8%83%BD/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B/%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#3","text":"\u5408\u7ea6\u9632\u706b\u5899\u4e3b\u8981\u5b9e\u73b0\u4e86\u5bf9\u9632\u706b\u5899\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\u7684\u7ba1\u7406\u529f\u80fd\uff0c\u4f7f\u5f97\u5408\u7ea6\u7684\u90e8\u7f72\u8005\u53ef\u4ee5\u8bbe\u7f6e\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\uff0c\u4ee5\u63a7\u5236\u5408\u7ea6\u65b9\u6cd5\u7684\u8c03\u7528\u6743\u9650\uff0c\u5141\u8bb8\u7279\u5b9a\u7684\u7528\u6237\u8c03\u7528\u5408\u7ea6\u7684\u6307\u5b9a\u65b9\u6cd5\uff0c\u5728\u63d0\u9ad8\u7528\u6237\u4f53\u9a8c\u7684\u540c\u65f6\u53c8\u6709\u6548\u5730\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\u80fd\u3002 PlatONE\u4e2d\u5408\u7ea6\u7684\u8c03\u7528\u6743\u9650\u7531\u5408\u7ea6\u9632\u706b\u5899\u63a7\u5236\uff0c\u53ea\u6709\u5408\u7ea6\u7684\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5408\u7ea6\u7684\u9632\u706b\u5899\u3002 \u5408\u7ea6\u9632\u706b\u5899\u5177\u5907\u5408\u7ea6\u63a5\u53e3\u7ea7\u522b\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u5217\u8868\u5b9e\u73b0\uff1a + ACCEPT: \u53ef\u4ee5\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u767d\u540d\u5355 + REJECT: \u62d2\u7edd\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u9ed1\u540d\u5355","title":"3. \u5408\u7ea6\u9632\u706b\u5899"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/","text":"SystemContract 1.cnsManager 1.1.\u6ce8\u518c\u5408\u7ea6 | cnsRegisterFromInit 1.2.\u6ce8\u518c\u5408\u7ea6 |cnsRegister 1.3.\u6ce8\u9500\u7279\u5b9a\u5408\u7ea6 | cnsUnregister 1.4. \u83b7\u53d6\u5408\u7ea6\u5730\u5740 |getContractAddress 1.5.\u83b7\u53d6\u5df2\u6ce8\u518c\u5408\u7ea6 |getRegisteredContracts 1.6.\u83b7\u53d6\u67d0\u4eba\u5df2\u6ce8\u518c\u5408\u7ea6 | getRegisteredContractsByAddress 1.7. \u662f\u5426\u5df2\u6ce8\u518c |ifRegisteredByName 1.8. \u662f\u5426\u5df2\u6ce8\u518c |ifRegisteredByAddress 1.9.\u67e5\u8be2\u5386\u53f2\u5408\u7ea6(\u5305\u542b\u5df2\u6ce8\u9500\u5408\u7ea6) | getHistoryContractsByName 1.10.\u83b7\u53d6\u5408\u7ea6\u4fe1\u606f | getContractInfoByAddress 2.userRegister 2.1.\u6dfb\u52a0\u7528\u6237\u7533\u8bf7\u4fe1\u606f | registerUser 2.2.\u5ba1\u6838 | approve 2.3.\u67e5\u8be2\u8d26\u6237\u4fe1\u606f | getAccountByAddress 2.4.\u67e5\u8be2\u8d26\u6237\u4fe1\u606f | getAccountByUsername 2.5.\u5206\u9875\u67e5\u8be2\u67d0\u72b6\u6001\u7684\u7528\u6237 | getAccountsByStatus 2.6.\u67e5\u8be2\u7528\u6237\u72b6\u6001 | getStatusByAddress 3.userManager 3.1.\u6dfb\u52a0\u7528\u6237 | addUser 3.2.\u8bbe\u7f6e\u7528\u6237\u53ef\u7528 | enable 3.3.\u7981\u7528\u7528\u6237 | disable 3.4.\u5220\u9664\u7528\u6237 | delUser 3.5.\u66f4\u65b0\u7528\u6237\u4fe1\u606f | update 3.6.\u83b7\u53d6\u7528\u6237\u4fe1\u606f | getAccountByName 3.7.\u662f\u5426\u6709\u6548 | isValidUser 3.8.\u83b7\u53d6\u7528\u6237\u4fe1\u606f | getAccountByAddress 4.roleRegister 4.1.\u6ce8\u518c\u89d2\u8272 | registerRole 4.2.\u5ba1\u6279\u89d2\u8272 | approveRole 4.3.\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByAddress 4.4.\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByName 4.5.\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f | getRegisterInfosByStatus 5.roleManager 5.1.\u6dfb\u52a0\u89d2\u8272 | addRole 5.2.\u5220\u9664\u89d2\u8272 | removeRole 5.3.\u67e5\u8be2\u89d2\u8272 | getRolesByAddress 5.4.\u67e5\u8be2\u89d2\u8272 | getRolesByName 5.5.\u67e5\u8be2\u8d26\u6237 | getAccountsByRole 5.6.\u662f\u5426\u6709\u89d2\u8272 | hasRole 6.nodeRegister 6.1.\u6ce8\u518c\u8282\u70b9\u4fe1\u606f | registerNode 6.2.\u5ba1\u6838\u8282\u70b9\u7533\u8bf7 | approve 6.3.\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByStatus 6.4.\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByPublicKey 6.5.\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByOwnerAddress 7.nodeManager 7.1.\u6dfb\u52a0\u8282\u70b9\u4fe1\u606f | add 7.2.\u67e5\u8be2\u6240\u6709\u8282\u70b9\u4fe1\u606f | getAllNodes 7.3.\u67e5\u8be2\u8282\u70b9\u4fe1\u606f | getNodes 7.4.\u7b26\u5408\u6761\u4ef6\u8282\u70b9\u4e2a\u6570 | nodesNum 7.5.\u66f4\u65b0\u4fe1\u606f | update 7.6.\u67d0\u516c\u94a5\u6709\u6548\u8282\u70b9\u4e2a\u6570 | validJoinNode 7.7.\u6b63\u5e38\u72b6\u6001\u8282\u70b9\u4e2a\u6570 | getNormalEnodeNodes 7.8.\u5220\u9664\u72b6\u6001\u8282\u70b9\u4e2a\u6570 | getDeletedEnodeNodes SystemContract 1.cnsManager \u5404\u4e2a\u7cfb\u7edf\u5408\u7ea6\u5728\u672c\u5408\u7ea6\u6ce8\u518c\uff0c\u7528\u4e00\u4e2amap\u4fdd\u5b58\u5404\u4e2a\u5408\u7ea6\u7684\u5730\u5740\u3001\u5408\u7ea6\u540d\u79f0\u3001\u7248\u672c\u4fe1\u606f\u3002 struct ContractInfo { std::string name; // \u6ce8\u518c\u5408\u7ea6\u540d std::string version; // 1.0.0.0 std::string address; // \u5408\u7ea6\u5730\u5740 0x... std::string origin; // \u521b\u5efa\u8005\u5730\u5740 0x... \u6682\u4fdd\u7559\uff0c\u5177\u4f53\u518d\u8ba8\u8bba int64_t create_time; // \u5408\u7ea6\u521b\u5efa\u65f6\u95f4 bool enabled; // CNS\u670d\u52a1\u662f\u5426\u6fc0\u6d3b BCWASM_SERIALIZE(ContractInfo, (name)(version)(address)(origin)(create_time)(enabled)); }; 1.1.\u6ce8\u518c\u5408\u7ea6 | cnsRegisterFromInit int cnsRegisterFromInit(const char name, const char version) \u5c06\u5df2\u7ecf\u90e8\u7f72\u7684\u5408\u7ea6\u6ce8\u518c\u5230\u672c\u5408\u7ea6\u7684\u4e2d\u5b58\u50a8\u3002\u4fdd\u5b58\u6240\u6709\u7684\u5386\u53f2\u7248\u672c\u3002 \u5fc5\u987b\u4eceinit()\u51fd\u6570\u4e2d\u8c03\u7528\u6ce8\u518c\uff0c\u5982\u679c\u4ece\u5408\u7ea6\u7684\u975einit\u65b9\u6cd5\u4e2d\u8c03\u7528\uff0c\u5219\u6ce8\u518c\u5931\u8d25\u3002 input\uff1a name\uff1a \u200b 1.\u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 \u200b 2.\u5408\u7ea6\u540d\u7684\u6240\u6709\u8005\u4e3a\u7b2c\u4e00\u6b21\u6ce8\u518c\u5408\u7ea6\u7684\u90e8\u7f72\u8005 version\uff1a \u200b 1.\u5408\u7ea6\u7248\u672c\uff1a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 \u200b 2.\u6ce8\u518c\u7248\u672c\u5fc5\u987b\u9010\u6b65\u9012\u589e\uff0c\u4e0d\u80fd\u56de\u9000\u6ce8\u518c\u3002\u4e14\u7248\u672c\u53f7\u9700\u8981\u6bd4\u5df2\u6ce8\u9500\u7528\u6237\u7248\u672c\u53f7\u9ad8\u3002 output: 0 \u6ce8\u518c\u6210\u529f 1 \u6ce8\u518c\u5931\u8d25 1.2.\u6ce8\u518c\u5408\u7ea6 |cnsRegister int cnsRegister(const char name, const char version, const char *address) \u53ea\u6709\u5408\u7ea6\u7684\u6240\u6709\u8005\u624d\u80fd\u8c03\u7528\u8be5\u63a5\u53e3 \u6ce8\u518c\u5408\u7ea6\u65f6\uff0c\u7531\u7528\u6237\u6216\u8005\u5408\u7ea6\u7684\u5bf9\u5916\u63a5\u53e3\u8c03\u7528\uff0c\u4e0d\u652f\u6301\u5408\u7ea6\u5728\u81ea\u5df1\u7684init()\u51fd\u6570\u4e2d\u8c03\u7528\u3002\u5373\u5982\u679c\u9700\u8981\u5728init()\u65b9\u6cd5\u4e2d\u8c03\u7528\u7edf\u4e00\u4f7f\u7528cnsRegisterFromInit()\u63a5\u53e3\u3002 input: name\uff1a \u200b 1.\u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 \u200b 2.\u5408\u7ea6\u540d\u7684\u6240\u6709\u8005\u4e3a\u7b2c\u4e00\u6b21\u6ce8\u518c\u5408\u7ea6\u7684\u90e8\u7f72\u8005 version\uff1a \u200b 1.\u5408\u7ea6\u7248\u672c\uff1a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 \u200b 2.\u6ce8\u518c\u7248\u672c\u5fc5\u987b\u9010\u6b65\u9012\u589e\uff0c\u4e0d\u80fd\u56de\u9000\u6ce8\u518c\u3002\u4e14\u7248\u672c\u53f7\u9700\u8981\u6bd4\u5df2\u6ce8\u9500\u7528\u6237\u7248 \u672c\u53f7\u9ad8\u3002 address\uff1a\u5408\u7ea6\u5730\u5740\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\"0x\"\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199\u3002 output: 0 \u6ce8\u518c\u6210\u529f 1 \u6ce8\u518c\u5931\u8d25 1.3.\u6ce8\u9500\u7279\u5b9a\u5408\u7ea6 | cnsUnregister int cnsUnregister(char name, char version) \u6ce8\u9500\u4e3a\u66f4\u6539\u5408\u7ea6\u72b6\u6001\u53c2\u6570\uff0c\u5e76\u975e\u771f\u6b63\u201c\u5220\u9664\u201d\u3002 \u53ea\u6709\u5408\u7ea6\u7684owner\u624d\u80fd\u8c03\u7528\u8be5\u63a5\u53e3 input\uff1a name\uff1a \u200b \u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 version\uff1a \u200b 1.\u5408\u7ea6\u7248\u672c\uff1a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 \u200b 2.\"latest\"\u4ee3\u8868\u6700\u65b0\u7248\u672c,\u5982\u679c\u6700\u9ad8\u7248\u672c\u5408\u7ea6\u6ce8\u9500\u5219\u9009\u62e9\u7b2c\u4e8c\u9ad8\u7248\u672c\u3002 output: 0 \u6ce8\u9500\u6210\u529f 1 \u6ce8\u9500\u5931\u8d25 1.4. \u83b7\u53d6\u5408\u7ea6\u5730\u5740 |getContractAddress const char getContractAddress(char name, char *version) const \u975e\u8bfb\u5199\u64cd\u4f5c\u7684\u83b7\u53d6\u4fe1\u606f\u4efb\u4f55\u4eba\u90fd\u53ef\u64cd\u4f5c\u65e0\u9700\u4efb\u4f55\u6743\u9650 input\uff1a name\uff1a \u200b \u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 version\uff1a \u200b 1.\u5408\u7ea6\u7248\u672c\uff1a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 \u200b 2.\"latest\"\u4ee3\u8868\u6700\u65b0\u7248\u672c,\u5982\u679c\u6700\u9ad8\u7248\u672c\u5408\u7ea6\u6ce8\u9500\u5219\u9009\u62e9\u7b2c\u4e8c\u9ad8\u7248\u672c\u3002 output: address\uff1a\u6807\u51c6\u4ee5\u592a\u574a\u5730\u5740\uff08\u542b\u201c0x\u201d\u524d\u7f00\uff09 1.5.\u83b7\u53d6\u5df2\u6ce8\u518c\u5408\u7ea6 |getRegisteredContracts char *getRegisteredContracts(int pageNum, int pageSize) const input\uff1a pageNum\uff1a \u200b \u9875\u9762\u7f16\u53f7\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u53c2\u6570\u22650\u3002 pageSize\uff1a \u200b \u6bcf\u9875\u663e\u793a\u6761\u76ee\u6570, \u53c2\u6570\u22651\u3002 output: \u5408\u7ea6\u4fe1\u606f\u7684json\u5b57\u7b26\u4e32 1.6.\u83b7\u53d6\u67d0\u4eba\u5df2\u6ce8\u518c\u5408\u7ea6 | getRegisteredContractsByAddress char getRegisteredContractsByAddress(char origin, int pageNum, int pageSize) const input\uff1a origin\uff1a \u200b \u5408\u7ea6\u5730\u5740\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\u201c0x\u201d\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199 pageNum\uff1a \u200b \u9875\u9762\u7f16\u53f7\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u53c2\u6570\u22650\u3002 pageSize\uff1a \u200b \u6bcf\u9875\u663e\u793a\u6761\u76ee\u6570 , \u53c2\u6570\u22651 \u3002 output: \u5408\u7ea6\u4fe1\u606f\u7684json\u5b57\u7b26\u4e32 1.7. \u662f\u5426\u5df2\u6ce8\u518c |ifRegisteredByName int ifRegisteredByName(char *name) const input: name :\u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 output: 0 \u672a\u6ce8\u518c 1 \u5df2\u6ce8\u518c 1.8. \u662f\u5426\u5df2\u6ce8\u518c |ifRegisteredByAddress int ifRegisteredByAddress(char *address) const input: address\uff1a\u5408\u7ea6\u5730\u5740\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\"0x\"\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199 output: 0 \u672a\u6ce8\u518c 1 \u5df2\u6ce8\u518c 1.9.\u67e5\u8be2\u5386\u53f2\u5408\u7ea6(\u5305\u542b\u5df2\u6ce8\u9500\u5408\u7ea6) | getHistoryContractsByName char getHistoryContractsByName(char name) const input: name\uff1a\u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 output: \u5408\u7ea6\u4fe1\u606f\u7684json\u5b57\u7b26\u4e32 1.10.\u83b7\u53d6\u5408\u7ea6\u4fe1\u606f | getContractInfoByAddress char getContractInfoByAddress(char address) const input: address\uff1a\u5408\u7ea6\u5730\u5740\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\"0x\"\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199 output: 0 \u672a\u6ce8\u518c 1 \u5df2\u6ce8\u518c 2.userRegister \u7533\u8bf7\u7528\u6237\u6307\u7684\u662f\uff0c\u7528\u6237\u5c06\u4e2a\u4eba\u7684\u8d26\u6237\u5730\u5740\u3001\u7528\u6237\u540d\u79f0\u3001\u7535\u8bdd\u3001\u90ae\u7bb1\u3001\u4e2a\u4eba\u8bf4\u660e\uff0c\u5411\u5408\u7ea6\u53d1\u8d77\u7533\u8bf7\uff0c\u5408\u7ea6\u4fdd\u5b58\u4fe1\u606f\u3002 struct RegisterInfo { std::string user_address; // \u7528\u6237\u8d26\u6237\u5730\u5740 std::string name; // \u7528\u6237\u540d\u79f0 std::string mobile; // \u624b\u673a\u53f7 std::string email; // \u90ae\u7bb1 std::string remark; // \u4e2a\u4eba\u8bf4\u660e unsigned int user_state; // \u5e73\u53f0\u7528\u6237\u72b6\u6001\uff1a1\u5ba1\u6838\u4e2d\uff0c2\u5df2\u6fc0\u6d3b\uff0c3\u5df2\u62d2\u7edd std::string auditor_address; // \u5ba1\u6838\u4eba\u7684\u5730\u5740 // std::string roles; // \u89d2\u8272\u8bf7\u6c42\u5217\u8868 std::vector<string> roles; // \u89d2\u8272\u8bf7\u6c42\u5217\u8868 }; 2.1.\u6dfb\u52a0\u7528\u6237\u7533\u8bf7\u4fe1\u606f | registerUser int registerUser(const char* registJson) \u9700\u672c\u4eba\u7533\u8bf7 \u9650\u5236\u7533\u8bf7\u6b21\u65701\u6b21\uff0c\u5ba1\u6838\u5931\u8d25\u6216\u8005\u5df2\u6fc0\u6d3b\u7528\u6237\u65e0\u6cd5\u518d\u6b21\u7533\u8bf7 input: registJson \uff1a \u7528\u6237\u7533\u8bf7\u4fe1\u606fJSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6>800\u5219\u6ce8\u518c\u5931\u8d25 output: 0 \u672a\u6ce8\u518c 1 \u5df2\u6ce8\u518c Json\u5b57\u7b26\u4e32\u53c2\u8003\u683c\u5f0f\u5982\u4e0b\uff1a '{\"address\":\"0x33d253386582f38c66cb5819bfbdaad0910339b3\",\"name\":\"xiaoluo\",\"mobile\":\"13111111111\",\"email\":\"luodahui@qq.com\",\"roles\":[\"a\",\"b\",\"c\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"}' 2.2.\u5ba1\u6838 | approve int approve(const char* userAddress, int auditStatus) \u5bf9\u7533\u8bf7\u7528\u6237\u8fdb\u884c\u5ba1\u6838\uff0c\u5ba1\u6838\u6210\u529f\u540e\u5728\u5f85\u5ba1\u6838\u4e2d\u5217\u8868\u4e2d\u5220\u9664\u3002\u5ba1\u6838\u4eba\u9700\u4e3a\u6709\u6548\u7528\u6237\u53ca\u7ba1\u7406\u5458\u3002 input: userAddress \u7528\u6237\u5730\u5740\u3002 auditStatus \u5ba1\u6838\u72b6\u6001\uff1a 2 \u6fc0\u6d3b\uff0c3 \u62d2\u7edd\u3002 output: int \u5ba1\u6838\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\u3002 2.3.\u67e5\u8be2\u8d26\u6237\u4fe1\u606f | getAccountByAddress const char getAccountByAddress(const char address) const input: address \u7528\u6237\u5730\u5740 output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"succeed\",\"data\":{ ....}}' \u5982\u679c\u7528\u6237\u7533\u8bf7\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff1a '{\"code\":1,\"msg\":\"The user does not exist in the userRegisterManager\", \"data\":\"\"}' 2.4.\u67e5\u8be2\u8d26\u6237\u4fe1\u606f | getAccountByUsername const char getAccountByUsername(const char UserName) const input: UserName \u7528\u6237\u540d output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"succeed\",\"data\":{ ....}}' \u5982\u679c\u7528\u6237\u7533\u8bf7\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff1a '{\"code\":1,\"msg\":\"The user does not exist in the userRegisterManager\", \"data\":\"\"}' 2.5.\u5206\u9875\u67e5\u8be2\u67d0\u72b6\u6001\u7684\u7528\u6237 | getAccountsByStatus const char* getAccountsByStatus(int pageNum, int pageSize, int accountStatus) const input: pageNum \u9875\u7801 \uff0c\u53c2\u6570\u22650\u3002 pageSize \u6bcf\u9875\u7684\u6570\u636e\u6761\u6570\uff0c\u53c2\u6570\u22651\u3002 accountStatus \u7528\u6237\u72b6\u6001\uff1a1\u5ba1\u6838\u4e2d\uff0c2\u5df2\u6fc0\u6d3b\uff0c3\u5df2\u62d2\u7edd output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"succeed\",\"data\":{ ....}}' \u9519\u8bef\u8f93\u51fa\uff1a unsigned int startIndex = pageNum * pageSize; unsigned int endIndex = startIndex + pageSize - 1; if (startIndex >= size) { code = \"1\"; message = \"Adjust pageNum and pageSize\"; } { // bcwasm::println(\"\u72b6\u6001\u7528\u6237\u4e0d\u5b58\u5728\uff1a[\", accountStatus, \"],\u8bf7\u68c0\u67e5\"); code = \"2\"; message = \"The user status for the query does not exist in the UserRegister\"; userInfos = \"\\\"\\\"\"; } { code = \"3\"; message = \"user information is empty in the UserRegister\"; userInfos = \"\\\"\\\"\"; } 2.6.\u67e5\u8be2\u7528\u6237\u72b6\u6001 | getStatusByAddress int getStatusByAddress(const char* address) const input: address\uff1a\u7528\u6237\u5730\u5740 output: int \u67e5\u8be2\u6210\u529f\u8fd4\u56de\u7528\u6237\u72b6\u60011,2,3\uff0c\u5931\u8d25\u8fd4\u56de-1\u3002 3.userManager \u7528\u6765\u7ba1\u7406\u5e73\u53f0\u7528\u6237\u7684\u90ae\u7bb1\uff0c\u624b\u673a\u53f7\u53ca\u7528\u6237\u72b6\u6001\u3002 struct UserInfo { string user_address; // \u7528\u6237\u5730\u5740 string name;//\u7528\u6237\u540d\u79f0 string email; //\u7528\u6237\u90ae\u7bb1 string mobile; //\u624b\u673a\u53f7 unsigned int status; // \u662f\u5426\u7981\u7528\u7528\u6237\uff1a[0:\u53ef\u7528; 1:\u7981\u7528; 2:\u5220\u9664] }; 3.1.\u6dfb\u52a0\u7528\u6237 | addUser int addUser(const char* userJson) \u8c03\u7528\u8005\u9700\u4e3a\u6709\u6548\u7528\u6237\u53ca\u7ba1\u7406\u5458\uff0c\u7528\u6237\u9700\u4e3a\u5df2\u6fc0\u6d3b\u7528\u6237\u3002 input: userJson \u7528\u6237\u4fe1\u606fJSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 output: int \u6dfb\u52a0\u7528\u6237\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1. Json\u5b57\u7b26\u4e32\u53c2\u8003\u683c\u5f0f\u5982\u4e0b\uff1a '{\"address\":\"0x33d253386582f38c66cb5819bfbdaad0910339b3\",\"name\":\"xiaoluo\",\"mobile\":\"13111111111\",\"email\":\"luodahui@qq.com\",\"roles\":[\"a\",\"b\",\"c\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"}' 3.2.\u8bbe\u7f6e\u7528\u6237\u53ef\u7528 | enable int enable(const char* userAddr) \u8c03\u7528\u8005\u9700\u4e3a\u53ef\u7528\u7528\u6237\u4e14role\u4e3a\u7ba1\u7406\u5458\u3002\u5176\u4e2d\u8d85\u7ba1\u72b6\u6001\u4e0d\u53ef\u88ab\u4fee\u6539\u6052\u4e3a\u53ef\u7528\u72b6\u6001\uff0c\u666e\u7ba1\u72b6\u6001\u53ef\u7531\u4efb\u4f55\u666e\u7ba1\uff08\u5305\u62ec\u81ea\u5df1\uff09\u548c\u8d85\u7ba1\u4fee\u6539\u3002 \u5df2\u5220\u9664\u7528\u6237\u72b6\u6001\u4e0d\u80fd\u88ab\u53d8\u66f4\uff0c\u4ec5\u6709\u53ef\u7528\u548c\u4e0d\u53ef\u7528\u72b6\u6001\u53ef\u4ee5\u88ab\u4fee\u6539\u3002 input: userAddr \u7528\u6237\u5730\u5740 output: int \u8bbe\u7f6e\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1. 3.3.\u7981\u7528\u7528\u6237 | disable int disable(const char* userAddr) input: userAddr \u7528\u6237\u5730\u5740 output: int \u8bbe\u7f6e\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1. 3.4.\u5220\u9664\u7528\u6237 | delUser int delUser(const char* userAddr) \u5df2\u5220\u9664\u7528\u6237\u4e0d\u80fd\u53d8\u66f4\u72b6\u6001 input: userAddr \u7528\u6237\u5730\u5740 output: int \u8bbe\u7f6e\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1. 3.5.\u66f4\u65b0\u7528\u6237\u4fe1\u606f | update int update(const char userAddr, const char updateJson) \u529f\u80fd\uff1a\u66f4\u65b0\u7528\u6237\u4fe1\u606f\uff0c\u53ea\u80fd\u66f4\u65b0\u7528\u6237\u7684email,mobile\u4fe1\u606f \u6bcf\u4e2a\u53ef\u7528\u7528\u6237\u90fd\u53ef\u4ee5\u4fee\u6539\u81ea\u5df1\u7684\u4fe1\u606f\u3002 \u4fee\u6539\u4ed6\u4eba\u4fe1\u606f\u65f6\uff0c\u8c03\u7528\u8005\u9700\u4e3a\u6709\u6548\u7528\u6237\u4e14\u4e3a\u7ba1\u7406\u5458\uff0c\u5176\u4e2d\u8d85\u7ba1\u6709\u4fee\u6539\u4e00\u5207\u7684\u6743\u9650\uff0c\u666e\u7ba1\u4ec5\u80fd\u4fee\u6539\u666e\u901a\u7528\u6237\u3002\u4e14\u7528\u6237\u9700\u4e3a\u6709\u6548\u7528\u6237\u3002 input: userAddr \u7528\u6237\u5730\u5740 updateJson \u66f4\u65b0\u4fe1\u606f\u7684json\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 output: int \u6dfb\u52a0\u7528\u6237\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1. 3.6.\u83b7\u53d6\u7528\u6237\u4fe1\u606f | getAccountByName const char getAccountByName(const char name) const input: name \u7528\u6237\u540d output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a json '{\"code\":0,\"msg\":\"succeed\",\"data\":{ ....}}' \u200b \u5982\u679c\u7528\u6237\u7533\u8bf7\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff1a json '{\"code\":1,\"msg\":\"The user does not exist in the userRegisterManager\", \"data\":\"\"}' 3.7.\u662f\u5426\u6709\u6548 | isValidUser int isValidUser(const char* userAddr) const input: userAddr \u7528\u6237\u5730\u5740 output: int \u8fd4\u56de0\u4e3a\u6709\u6548\u7528\u6237\uff0c-1\u4e3a\u975e\u6709\u6548\u7528\u6237 3.8.\u83b7\u53d6\u7528\u6237\u4fe1\u606f | getAccountByAddress const char getAccountByAddress(const char address) const input: address \u7528\u6237\u5730\u5740 output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"succeed\",\"data\":{ ....}}' \u200b \u5982\u679c\u7528\u6237\u7533\u8bf7\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff1a '{\"code\":1,\"msg\":\"The user does not exist in the userRegisterManager\", \"data\":\"\"}' 4.roleRegister \u7528\u4ee5\u7533\u8bf7\u89d2\u8272\u3001\u5ba1\u6279\u89d2\u8272\u3001\u4ee5\u53ca\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f\u3002 typedef struct RegisterUserInfo { std::string userAddress; //\u8d26\u6237\u5730\u5740 std::string userName; //\u7528\u6237\u540d int roleRequireStatus; //\u89d2\u8272\u7533\u8bf7\u72b6\u6001 1 \u7533\u8bf7\u4e2d 2 \u5df2\u6279\u51c6 3 \u5df2\u62d2\u7edd std::vector<std::string> requireRoles; std::string approver; //\u5ba1\u6838\u4eba\u7684\u5730\u5740 BCWASM_SERIALIZE(RegisterUserInfo, (userAddress)(userName)(roleRequireStatus)(requireRoles)(approver)); }RegisterUserInfo_st; \u5177\u4f53\u89d2\u8272\u53ca\u6743\u9650\u8bf7\u53c2\u7167PlatONE\u5408\u7ea6\u6307\u5bfc\u6587\u6863\u3002 4.1.\u6ce8\u518c\u89d2\u8272 | registerRole int registerRole(const char* roles) \u8bb0\u5f55\u7528\u6237\u7533\u8bf7\u4fe1\u606f,\u4e00\u4e2a\u8d26\u6237\u53ef\u4ee5\u540c\u65f6\u7533\u8bf7\u591a\u4e2a\u89d2\u8272\uff0c\u53ea\u80fd\u7533\u8bf7\u4e00\u6b21\u3002 input: inputs : const char* roles eg: [ \\\"chainAdmin\\\",\\\"nodeAdmin\\\"] output: return \u542b\u4e49\u5982\u4e0b\uff1a 0 \u6ce8\u518c\u6210\u529f 1 \u5730\u5740\u72b6\u6001\u4e0d\u6b63\u786e 4 \u8f93\u5165\u53c2\u6570\u4e0d\u6b63\u786e\uff0c\u4e0d\u662flist\u7c7b\u578b 6 \u6ca1\u6709\u6709\u6548\u7684\u7533\u8bf7\u4fe1\u606f 7 \u89d2\u8272\u540d\u79f0\u65e0\u6548 4.2.\u5ba1\u6279\u89d2\u8272 | approveRole int approveRole(const char* address, int status) \u53ea\u80fd\u5ba1\u6838\u6bd4\u81ea\u5df1\u6743\u9650\u66f4\u4f4e\u7684\u89d2\u8272\u7533\u8bf7\u3002 input: address \uff0c status output: return \u542b\u4e49\u5982\u4e0b\uff1a 0 \u6ce8\u518c\u6210\u529f 1 \u8d26\u53f7\u5730\u5740\u683c\u5f0f\u9519\u8bef 1\u5ba1\u6279\u4eba\u7528\u6237\u72b6\u6001\u4e0d\u6b63\u786e 2 \u89d2\u8272\u6743\u9650\u4e0d\u8db3 3 \u6ca1\u6709\u89d2\u8272\u7533\u8bf7\u4fe1\u606f 4 \u672a\u627e\u5230\u89d2\u8272\u7ba1\u7406\u5408\u7ea6 5 \u4e0d\u662f\u5408\u6cd5\u7684\u5ba1\u6279\u503c 6 \u5f53\u524d\u662f\u975e\u5ba1\u6279\u72b6\u6001 7 \u6dfb\u52a0\u89d2\u8272\u5931\u8d25 4.3.\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByAddress const char * getRegisterInfoByAddress(const char* address) const input: address output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32 \uff1a {\u72b6\u6001\u503c, msg, RegisterUserInfo} output\u8fd4\u56de\u683c\u5f0f\u5982\u4e0b\uff1a { code: 0, msg: \"ok\", data: { \"userAddress\": \"0x111222\", \"userName\": \"xiaoming\", \"roleRequireStatus\": 1, \"requireRoles\":[\"Admin\", \"ContractCaller\"], \"approveor\": \"01xxx\" } } \u9519\u8bef\u8f93\u51fa\u683c\u5f0f\uff1a { code:1, msg: \"not found\", data: { } } 4.4.\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByName const char * getRegisterInfoByName(const char* name) const input: name output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32 \uff1a {\u72b6\u6001\u503c, msg, RegisterUserInfo} 4.5.\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f | getRegisterInfosByStatus const char * getRegisterInfosByStatus(int status, int pageNum, int pageSize) const input: pageNum \u9875\u7801 \uff0c\u53c2\u6570\u22650\u3002 pageSize \u6bcf\u9875\u7684\u6570\u636e\u6761\u6570\uff0c\u53c2\u6570\u22651\u3002 accountStatus \u7528\u6237\u72b6\u6001\uff1a1\u5ba1\u6838\u4e2d\uff0c2\u5df2\u6fc0\u6d3b\uff0c3\u5df2\u62d2\u7edd output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32 5.roleManager \u7528\u6765\u7ba1\u7406\u5e73\u53f0\u7528\u6237\u7684\u89d2\u8272\u3002 namespace SystemContract { struct userRole{ bcwasm::Address address; string name; vector<string> roles; BCWASM_SERIALIZE(userRole,(address)(name)(roles)); }; 5.1.\u6dfb\u52a0\u89d2\u8272 | addRole int addRole(const char name, const char address, const char *roles) \u5bf9\u76f8\u540c\u5730\u5740\u6765\u8bf4\uff0c\u5982\u679c\u5df2\u5b58\u5728\u5e76\u7528\u6237\u540d\u4e00\u6837\uff0c\u5219\u66f4\u65b0\u89d2\u8272\uff1b\u7528\u6237\u540d\u4e0d\u4e00\u6837\u8fd4\u56de6 input: name \uff0c address , roles output: return \u542b\u4e49\u5982\u4e0b\uff1a 0 Add roles success 1 Address format is invalid. 2 Caller unavailable, status: 3 User unavailable, status: 4 Roles invalid: 5 No permission to remove/addrole for roles: 6 Name must be unique 7 Add Roles failed 5.2.\u5220\u9664\u89d2\u8272 | removeRole int removeRole(const char address,const char roles) \u8c03\u7528\u8005\u9700\u4e3a\u666e\u7ba1\u6216\u8005\u8d85\u7ba1\u3002\u5176\u4e2d\u8d85\u7ba1\u72b6\u6001\u4e0d\u53ef\u88ab\u4fee\u6539\u6052\u4e3a\u53ef\u7528\u72b6\u6001\uff0c\u666e\u7ba1\u72b6\u6001\u53ef\u7531\u4efb\u4f55\u666e\u7ba1\uff08\u5305\u62ec\u81ea\u5df1\uff09\u548c\u8d85\u7ba1\u4fee\u6539\u3002 input: address , roles output: return \u542b\u4e49\u5982\u4e0b\uff1a 0 Remove roles success. 1 Address format is invalid. 2 Caller unavailable, status: \"+ to_string(userStatus) + \" , Address: \" + string(address) 3 Cannot found address: \" + string(address) 4 Roles invalid: \" + string(roles) 5 No permission to remove for roles: \" + string(roles) 5.3.\u67e5\u8be2\u89d2\u8272 | getRolesByAddress const char getRolesByAddress(const char address)const input: address \u7528\u6237\u5730\u5740 output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"Success\",\"data\":{ ....}}' \u200b \u9519\u8bef\u8fd4\u56de\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a '{\"code\":1,\"msg\":\"Address format is invalid.\", \"data\":\"\"}' '{\"code\":1,\"msg\":\"Not Found\", \"data\":\"\"}' 5.4.\u67e5\u8be2\u89d2\u8272 | getRolesByName const char getRolesByName(const char name)const input: address \u7528\u6237\u5730\u5740 output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"Success\",\"data\":{ ....}}' \u200b \u9519\u8bef\u8fd4\u56de\u5982\u4e0b\uff1a '{\"code\":1,\"msg\":\"Not Found\", \"data\":\"\"}' 5.5.\u67e5\u8be2\u8d26\u6237 | getAccountsByRole const char getAccountsByRole(const char role)const input: address \u7528\u6237\u5730\u5740 output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"Success\",\"data\":{ ....}}' \u200b \u9519\u8bef\u8fd4\u56de\u5982\u4e0b\uff1a '{\"code\":1,\"msg\":\"Not Found\", \"data\":\"\"}' '{\"code\":1,\"msg\":\"role parameter invalid\", \"data\":\"\"}' 5.6.\u662f\u5426\u6709\u89d2\u8272 | hasRole int hasRole(const char addr, const char role) const input: address \u7528\u6237\u5730\u5740 role \u89d2\u8272json\u683c\u5f0f\u5b57\u7b26\u4e32 output: int \u8fd4\u56de0\u4e3a\u6ca1\u6709\uff0c1\u4e3a\u6709 6.nodeRegister struct RegisterInfo { std::string name; //\u8282\u70b9\u540d\u79f0 std::string owner; //\u7533\u8bf7\u8005\u7684\u5730\u5740 std::string desc; //\u8282\u70b9\u63cf\u8ff0,\u957f\u5ea6\u9650\u52361000 int type; //1:\u5171\u8bc6\u8282\u70b9\uff1b0:\u89c2\u5bdf\u8005\u8282\u70b9 std::string publicKey; //\u516c\u94a5 std::string externalIP; std::string internalIP; int rpcPort; int p2pPort; int status; //0:\u672a\u5904\u7406\uff1b1:\u7533\u8bf7\u901a\u8fc7\uff1b2:\u62d2\u7edd\u7533\u8bf7 bool root; //true \u6839\u8282\u70b9 false \u975e\u8ddf\u8282\u70b9 std::string approver; //\u5ba1\u6838\u4eba\u7684\u5730\u5740 int64_t registerTime; //\u7533\u8bf7\u65f6\u95f4 BCWASM_SERIALIZE(RegisterInfo, (name)(owner)(desc)(type)(publicKey)(externalIP)(internalIP)(rpcPort)(p2pPort)(status)(root)(approver)(registerTime)); }; 6.1.\u6ce8\u518c\u8282\u70b9\u4fe1\u606f | registerNode int registerNode(const char *nodeJson) \u53ea\u80fd\u7531chainCreater\u3001chainAdmin\u3001nodeAdmin\u8c03\u7528 name\uff1a\u53ea\u53ef\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u3001\u8fde\u5b57\u7b26\uff0c\u5ba1\u6838\u901a\u8fc7\u7684name\u4e0d\u53ef\u4ee5\u91cd\u590d desc\uff1a\u957f\u5ea6\u9650\u5236\u4e3a4-1000 type\uff1a\u5fc5\u987b\u662f0\u6216\u80051\uff0c0\u8868\u793a\u89c2\u5bdf\u8005\u8282\u70b9 publicKey\uff1a\u957f\u5ea6\u9650\u5236\u4e3a4-1000\uff0cpublicKey\u4e0d\u80fd\u91cd\u590d\u7533\u8bf7 IP\u548c\u7aef\u53e3\uff1a\u4efb\u610f\u7ec4\u5408\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u4e0d\u80fd\u91cd\u590d\u7533\u8bf7 inputs: RegisterInfo\u662fJson\u5b57\u7b26\u4e32\uff0c\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a '{ \"name\":\"node1\", \"desc\":\"i love this world\", \"type\":1, \"publicKey\":\"acb2281452fb9fc25d40113fb6afe82b498361de0eea6449c2502\", \"externalIP\":\"127.0.0.1\", \"internalIP\":\"127.0.0.1\", \"rpcPort\":4789, \"p2pPort\":14789 }' output: int \u200b 0 \u6210\u529f \u200b 1 \u53c2\u6570\u4e0d\u89c4\u8303 \u200b 2 \u65e0\u6743\u9650 6.2.\u5ba1\u6838\u8282\u70b9\u7533\u8bf7 | approve int approve(char *publicKey, int status) \u53ea\u80fd\u7531chainCreater\u3001chainAdmin\u8c03\u7528 \u5982\u679c\u72b6\u6001\u662f\u5df2\u5ba1\u6838\uff0c\u4e0d\u80fd\u91cd\u65b0\u5ba1\u6838 \u5ba1\u6838\u901a\u8fc7\u7684name\u3001IP+Port\u4e0d\u53ef\u4ee5\u518d\u6b21\u5ba1\u6838\u901a\u8fc7 \u5f53\u5ba1\u6838\u901a\u8fc7\uff08status = 1\uff09\u540e\uff0c\u7cfb\u7edf\u8c03\u7528NodeManager\u5408\u7ea6\u7684add()\u65b9\u6cd5\u628a\u8282\u70b9\u4fe1\u606f\u653e\u5165\u8282\u70b9\u7ba1\u7406\u5408\u7ea6 inputs: publicKey:\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u5982\u679c\u6ca1\u7533\u8bf7\u8fc7\u5219\u65e0\u6548 status\uff1a\u5fc5\u987b\u662f1\u6216\u80052\uff0c1\u8868\u793a\u901a\u8fc7\uff0c2\u8868\u793a\u62d2\u7edd output: int \u200b 0 \u6210\u529f \u200b 1 \u53c2\u6570\u4e0d\u89c4\u8303 \u200b 2 \u65e0\u6743\u9650 6.3.\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByStatus const char *getRegisterInfoByStatus(int status, int pageNum, int pageSize) const inputs: status:\u67e5\u8be2\u72b6\u6001\uff0c0\u7533\u8bf7\u672a\u5904\u7406\u30011\u7533\u8bf7\u901a\u8fc7\u30012\u7533\u8bf7\u62d2\u7edd pageNum\uff1a\u9875\u9762\u7f16\u53f7\uff08\u4ece0\u5f00\u59cb\uff09 pageSize\uff1a\u6bcf\u9875\u663e\u793a\u6761\u76ee\u6570 output: { \"code\":0, \"msg\":\"\", \"data\":{ \"name\":\"node1\", \"owner\":\"0x4FCd6fe35f0612C7866943cb66C1d93eb0746bcC\", \"desc\":\"i love this world\", \"type\":1, \"publicKey\":\"acb2281452fb9fc25d40113fb6afe82b498361de0eea6449c2502\", \"externalIP\":\"127.0.0.1\", \"internalIP\":\"127.0.0.1\", \"rpcPort\":4789, \"p2pPort\":14789, \"status\":0, \"approveor\":\"0x4FCd6fe35f0612C7866943cb66C1d93eb0746bcC\", \"registerTime\":23489723 } } \u9519\u8bef\u8f93\u51fa\u683c\u5f0f\uff1a { code:1, msg: \"Can't find info\", data: { } } { code:2, msg: \"Parameter error!\", data: { } } 6.4.\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByPublicKey const char getRegisterInfoByPublicKey(char publicKey) const inputs: publicKey\uff1a\u7533\u8bf7\u8fc7\u7684\u516c\u94a5 output: \u8fd4\u56deJson\u5b57\u7b26\u4e32 6.5.\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByOwnerAddress const char getRegisterInfoByOwnerAddress(char owner) const inputs: ownerAddress\uff1a\u7533\u8bf7\u8005\u5730\u5740 output: \u8fd4\u56deJson\u5b57\u7b26\u4e32 7.nodeManager //\u6b64\u7ed3\u6784\u4f53\u5df2\u6ce8\u91ca\u6389\uff0c\u4ee3\u7801\u90e8\u5206\u4e0d\u662f\u901a\u8fc7\u7ed3\u6784\u4f53\u65b9\u5f0f\u5b9a\u4e49\u4ee5\u4e0b\u53d8\u91cf { string name; // \u8282\u70b9\u540d\u5b57 address owner; // \u7533\u8bf7\u8005\u7684\u5730\u5740 string desc; // \u8282\u70b9\u63cf\u8ff0 int type; // 0:\u89c2\u5bdf\u8005\u8282\u70b9\uff1b1:\u5171\u8bc6\u8282\u70b9 string publicKey; // \u8282\u70b9\u516c\u94a5 string externalIP; // \u5916\u7f51 IP string internalIP; // \u5185\u7f51 IP int rpcPort; // rpc \u901a\u8baf\u7aef\u53e3 int p2pPort; // p2p \u901a\u8baf\u7aef\u53e3 int status; // 1:\u6b63\u5e38\uff1b2\uff1a\u5220\u9664 address approveor; // \u5ba1\u6838\u4eba\u7684\u5730\u5740 int delayNum; // \u5171\u8bc6\u8282\u70b9\u5ef6\u8fdf\u8bbe\u7f6e\u7684\u533a\u5757\u9ad8\u5ea6 (\u53ef\u9009, \u9ed8\u8ba4\u5b9e\u65f6\u8bbe\u7f6e) } 7.1.\u6dfb\u52a0\u8282\u70b9\u4fe1\u606f | add int add(const char *nodeJsonStr) \u5fc5\u8981\u7684key:{\"name\", \"owner\", \"desc\", \"type\", \"publicKey\", \"externalIP\", \"internalIP\", \"rpcPort\", \"p2pPort\", \"status\"} \u53ea\u6709chainCreator\uff0cchainAdmin\uff0cnodeAdmin\u53ef\u6dfb\u52a0\u8282\u70b9\u4fe1\u606f \u516c\u94a5\u5fc5\u987b\u552f\u4e00 \u8282\u70b9\u540d\u5b57\u4e0d\u80fd\u4e0e\u975e\u5220\u9664\u8282\u70b9\u91cd\u590d \u6dfb\u52a0\u8282\u70b9\u65f6\u7c7b\u578b\u5fc5\u987b\u662f\u89c2\u5bdf\u8005\u8282\u70b9\uff0c\u5373type=0 \u6dfb\u52a0\u8282\u70b9\u7684status\u53ea\u80fd\u662f1\u62162 inputs: nodeJsonStr \u8282\u70b9\u4fe1\u606fJSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32\uff0c\u5982\uff1a '{ \"name\": \"node1\", \"owner\": \"0x4FCd6fe35f0612C7866943cb66C1d93eb0746bcC\", \"approveor\": \"0xdF6518e51e0d90A3CBa26e4AdFE74454E2D90BdE\", \"desc\": \"i love this world\", \"type\": 1, \"publicKey\": \"0x81ec63a2335c1f79244cbe485eb6bffef48cfd7df58b1009411c6114670eefd27da865914c70f7e49ceeb1002f1c24f4930975a2eb05cb5ac1373bed83a9932a\", \"externalIP\": \"127.0.0.1\", \"internalIP\": \"127.0.0.1\", \"rpcPort\": 6789, \"p2pPort\": 16789, \"status\": 1 }' output: int \u200b 0 \u6210\u529f \u200b 1 \u53c2\u6570\u4e0d\u89c4\u8303 \u200b 2 \u65e0\u6743\u9650 7.2.\u67e5\u8be2\u6240\u6709\u8282\u70b9\u4fe1\u606f | getAllNodes const char *getAllNodes() const inputs: \u65e0 outputs\uff1a \u200b nodes \u6240\u6709\u8282\u70b9\u4fe1\u606fJSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 { \"code\": 0, \"msg\": \"success\", \"data\": [...] } 7.3.\u67e5\u8be2\u8282\u70b9\u4fe1\u606f | getNodes const char getNodes(const char nodeJsonStr) const inputs: \u200b \u6839\u636e\u7279\u5b9a\u6761\u4ef6\uff0c\u8fd4\u56de\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u4fe1\u606f\u3002\u6bd4\u5982\uff0c\u6211\u9700\u8981\u67e5\u8be2\u8282\u70b9\u7684\u540d\u5b57\u4e3a\"node1\"\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u90a3\u4e48\u4f20\u5165\u5b57\u7b26\u4e32 {\"name\":\"node1\"}\uff1b\u5982\u679c\u9700\u8981\u67e5\u8be2\u6240\u6709\u6b63\u5e38\u8282\u70b9\uff0c\u90a3\u4e48\u4f20\u5165\u5b57\u7b26\u4e32{\"status\":1}\uff1b\u5982\u679c\u6211\u9700\u8981\u8fd4\u56de\u6b63\u5e38\u8282\u70b9\u800c\u4e14\u662f\u5171\u8bc6\u8282\u70b9\uff0c\u90a3\u4e48\u4f20\u5165\u5b57\u7b26\u4e32{\"status\":1, \"type\":1}\u3002\u603b\u4e4b\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u8282\u70b9\u4fe1\u606f\u53ef\u591a\u4e2a\u7ec4\u5408\u8fdb\u884c\u67e5\u8be2\u3002 outputs\uff1a \u200b nodes \u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u4fe1\u606fJSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 { \"code\": 0, \"msg\": \"success\", \"data\": [...] } 7.4.\u7b26\u5408\u6761\u4ef6\u8282\u70b9\u4e2a\u6570 | nodesNum int nodesNum(const char *nodeJsonStr) const inputs: \u200b \u4e00\u4e9b\u6761\u4ef6\u7684JSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 outputs\uff1a \u200b nodes \u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u4e2a\u6570\u3002 7.5.\u66f4\u65b0\u4fe1\u606f | update int update(const char name, const char nodeJsonStr) CHAIN_CREATOR\uff0cCHAIN_ADMIN\uff0cNODE_ADMIN\u624d\u6709\u6743\u9650update \u975e\u6b63\u5e38\u72b6\u6001\u7684\u8282\u70b9, \u4e0d\u80fd\u8fdb\u884c\u66f4\u65b0\uff08status!=1\uff09 \u8282\u70b9status \u53ea\u80fd\u4ece1\u66f4\u65b0\u4e3a2 \u8282\u70b9type \u53ea\u80fd\u57280\u548c1\u4e4b\u95f4\u8fdb\u884c\u66f4\u65b0 \u66f4\u65b0\u8282\u70b9\u4fe1\u606f\u53ea\u80fd\u662f\uff1adesc, type, status, delayNum inputs: name \u8282\u70b9\u540d\u5b57 nodeJsonStr \u9700\u8981\u66f4\u65b0\u7684\u4fe1\u606f\uff0c\u4ee5json\u8868\u793a\u3002 output: int \u200b 0 \u5931\u8d25 \u200b 1 \u6210\u529f 7.6.\u67d0\u516c\u94a5\u6709\u6548\u8282\u70b9\u4e2a\u6570 | validJoinNode int validJoinNode(const char *publicKey) const inputs: publicKey output: int \u8f93\u51fa\u67d0\u516c\u94a5\u4e0b\u6240\u6709\u6709\u6548\u7684\uff08status=1\uff09\u8282\u70b9\u4e2a\u6570 7.7.\u6b63\u5e38\u72b6\u6001\u8282\u70b9\u4e2a\u6570 | getNormalEnodeNodes const char *getNormalEnodeNodes() const inputs: \u65e0 output: int \u8f93\u51fa\u6b63\u5e38\u72b6\u6001\u7684\u8282\u70b9\u4e2a\u6570 7.8.\u5220\u9664\u72b6\u6001\u8282\u70b9\u4e2a\u6570 | getDeletedEnodeNodes const char *getDeletedEnodeNodes() const inputs: \u65e0 output: int \u8f93\u51fa\u5220\u9664\u72b6\u6001\u7684\u8282\u70b9\u4e2a\u6570","title":"SystemContract"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#systemcontract","text":"","title":"SystemContract"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#1cnsmanager","text":"\u5404\u4e2a\u7cfb\u7edf\u5408\u7ea6\u5728\u672c\u5408\u7ea6\u6ce8\u518c\uff0c\u7528\u4e00\u4e2amap\u4fdd\u5b58\u5404\u4e2a\u5408\u7ea6\u7684\u5730\u5740\u3001\u5408\u7ea6\u540d\u79f0\u3001\u7248\u672c\u4fe1\u606f\u3002 struct ContractInfo { std::string name; // \u6ce8\u518c\u5408\u7ea6\u540d std::string version; // 1.0.0.0 std::string address; // \u5408\u7ea6\u5730\u5740 0x... std::string origin; // \u521b\u5efa\u8005\u5730\u5740 0x... \u6682\u4fdd\u7559\uff0c\u5177\u4f53\u518d\u8ba8\u8bba int64_t create_time; // \u5408\u7ea6\u521b\u5efa\u65f6\u95f4 bool enabled; // CNS\u670d\u52a1\u662f\u5426\u6fc0\u6d3b BCWASM_SERIALIZE(ContractInfo, (name)(version)(address)(origin)(create_time)(enabled)); };","title":"1.cnsManager"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#11-cnsregisterfrominit","text":"int cnsRegisterFromInit(const char name, const char version) \u5c06\u5df2\u7ecf\u90e8\u7f72\u7684\u5408\u7ea6\u6ce8\u518c\u5230\u672c\u5408\u7ea6\u7684\u4e2d\u5b58\u50a8\u3002\u4fdd\u5b58\u6240\u6709\u7684\u5386\u53f2\u7248\u672c\u3002 \u5fc5\u987b\u4eceinit()\u51fd\u6570\u4e2d\u8c03\u7528\u6ce8\u518c\uff0c\u5982\u679c\u4ece\u5408\u7ea6\u7684\u975einit\u65b9\u6cd5\u4e2d\u8c03\u7528\uff0c\u5219\u6ce8\u518c\u5931\u8d25\u3002 input\uff1a name\uff1a \u200b 1.\u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 \u200b 2.\u5408\u7ea6\u540d\u7684\u6240\u6709\u8005\u4e3a\u7b2c\u4e00\u6b21\u6ce8\u518c\u5408\u7ea6\u7684\u90e8\u7f72\u8005 version\uff1a \u200b 1.\u5408\u7ea6\u7248\u672c\uff1a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 \u200b 2.\u6ce8\u518c\u7248\u672c\u5fc5\u987b\u9010\u6b65\u9012\u589e\uff0c\u4e0d\u80fd\u56de\u9000\u6ce8\u518c\u3002\u4e14\u7248\u672c\u53f7\u9700\u8981\u6bd4\u5df2\u6ce8\u9500\u7528\u6237\u7248\u672c\u53f7\u9ad8\u3002 output: 0 \u6ce8\u518c\u6210\u529f 1 \u6ce8\u518c\u5931\u8d25","title":"1.1.\u6ce8\u518c\u5408\u7ea6 | cnsRegisterFromInit"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#12-cnsregister","text":"int cnsRegister(const char name, const char version, const char *address) \u53ea\u6709\u5408\u7ea6\u7684\u6240\u6709\u8005\u624d\u80fd\u8c03\u7528\u8be5\u63a5\u53e3 \u6ce8\u518c\u5408\u7ea6\u65f6\uff0c\u7531\u7528\u6237\u6216\u8005\u5408\u7ea6\u7684\u5bf9\u5916\u63a5\u53e3\u8c03\u7528\uff0c\u4e0d\u652f\u6301\u5408\u7ea6\u5728\u81ea\u5df1\u7684init()\u51fd\u6570\u4e2d\u8c03\u7528\u3002\u5373\u5982\u679c\u9700\u8981\u5728init()\u65b9\u6cd5\u4e2d\u8c03\u7528\u7edf\u4e00\u4f7f\u7528cnsRegisterFromInit()\u63a5\u53e3\u3002 input: name\uff1a \u200b 1.\u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 \u200b 2.\u5408\u7ea6\u540d\u7684\u6240\u6709\u8005\u4e3a\u7b2c\u4e00\u6b21\u6ce8\u518c\u5408\u7ea6\u7684\u90e8\u7f72\u8005 version\uff1a \u200b 1.\u5408\u7ea6\u7248\u672c\uff1a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 \u200b 2.\u6ce8\u518c\u7248\u672c\u5fc5\u987b\u9010\u6b65\u9012\u589e\uff0c\u4e0d\u80fd\u56de\u9000\u6ce8\u518c\u3002\u4e14\u7248\u672c\u53f7\u9700\u8981\u6bd4\u5df2\u6ce8\u9500\u7528\u6237\u7248 \u672c\u53f7\u9ad8\u3002 address\uff1a\u5408\u7ea6\u5730\u5740\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\"0x\"\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199\u3002 output: 0 \u6ce8\u518c\u6210\u529f 1 \u6ce8\u518c\u5931\u8d25","title":"1.2.\u6ce8\u518c\u5408\u7ea6 |cnsRegister"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#13-cnsunregister","text":"int cnsUnregister(char name, char version) \u6ce8\u9500\u4e3a\u66f4\u6539\u5408\u7ea6\u72b6\u6001\u53c2\u6570\uff0c\u5e76\u975e\u771f\u6b63\u201c\u5220\u9664\u201d\u3002 \u53ea\u6709\u5408\u7ea6\u7684owner\u624d\u80fd\u8c03\u7528\u8be5\u63a5\u53e3 input\uff1a name\uff1a \u200b \u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 version\uff1a \u200b 1.\u5408\u7ea6\u7248\u672c\uff1a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 \u200b 2.\"latest\"\u4ee3\u8868\u6700\u65b0\u7248\u672c,\u5982\u679c\u6700\u9ad8\u7248\u672c\u5408\u7ea6\u6ce8\u9500\u5219\u9009\u62e9\u7b2c\u4e8c\u9ad8\u7248\u672c\u3002 output: 0 \u6ce8\u9500\u6210\u529f 1 \u6ce8\u9500\u5931\u8d25","title":"1.3.\u6ce8\u9500\u7279\u5b9a\u5408\u7ea6 | cnsUnregister"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#14-getcontractaddress","text":"const char getContractAddress(char name, char *version) const \u975e\u8bfb\u5199\u64cd\u4f5c\u7684\u83b7\u53d6\u4fe1\u606f\u4efb\u4f55\u4eba\u90fd\u53ef\u64cd\u4f5c\u65e0\u9700\u4efb\u4f55\u6743\u9650 input\uff1a name\uff1a \u200b \u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 version\uff1a \u200b 1.\u5408\u7ea6\u7248\u672c\uff1a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 \u200b 2.\"latest\"\u4ee3\u8868\u6700\u65b0\u7248\u672c,\u5982\u679c\u6700\u9ad8\u7248\u672c\u5408\u7ea6\u6ce8\u9500\u5219\u9009\u62e9\u7b2c\u4e8c\u9ad8\u7248\u672c\u3002 output: address\uff1a\u6807\u51c6\u4ee5\u592a\u574a\u5730\u5740\uff08\u542b\u201c0x\u201d\u524d\u7f00\uff09","title":"1.4. \u83b7\u53d6\u5408\u7ea6\u5730\u5740 |getContractAddress"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#15-getregisteredcontracts","text":"char *getRegisteredContracts(int pageNum, int pageSize) const input\uff1a pageNum\uff1a \u200b \u9875\u9762\u7f16\u53f7\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u53c2\u6570\u22650\u3002 pageSize\uff1a \u200b \u6bcf\u9875\u663e\u793a\u6761\u76ee\u6570, \u53c2\u6570\u22651\u3002 output: \u5408\u7ea6\u4fe1\u606f\u7684json\u5b57\u7b26\u4e32","title":"1.5.\u83b7\u53d6\u5df2\u6ce8\u518c\u5408\u7ea6 |getRegisteredContracts"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#16-getregisteredcontractsbyaddress","text":"char getRegisteredContractsByAddress(char origin, int pageNum, int pageSize) const input\uff1a origin\uff1a \u200b \u5408\u7ea6\u5730\u5740\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\u201c0x\u201d\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199 pageNum\uff1a \u200b \u9875\u9762\u7f16\u53f7\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u53c2\u6570\u22650\u3002 pageSize\uff1a \u200b \u6bcf\u9875\u663e\u793a\u6761\u76ee\u6570 , \u53c2\u6570\u22651 \u3002 output: \u5408\u7ea6\u4fe1\u606f\u7684json\u5b57\u7b26\u4e32","title":"1.6.\u83b7\u53d6\u67d0\u4eba\u5df2\u6ce8\u518c\u5408\u7ea6 | getRegisteredContractsByAddress"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#17-ifregisteredbyname","text":"int ifRegisteredByName(char *name) const input: name :\u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 output: 0 \u672a\u6ce8\u518c 1 \u5df2\u6ce8\u518c","title":"1.7. \u662f\u5426\u5df2\u6ce8\u518c |ifRegisteredByName"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#18-ifregisteredbyaddress","text":"int ifRegisteredByAddress(char *address) const input: address\uff1a\u5408\u7ea6\u5730\u5740\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\"0x\"\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199 output: 0 \u672a\u6ce8\u518c 1 \u5df2\u6ce8\u518c","title":"1.8. \u662f\u5426\u5df2\u6ce8\u518c |ifRegisteredByAddress"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#19-gethistorycontractsbyname","text":"char getHistoryContractsByName(char name) const input: name\uff1a\u5408\u7ea6\u540d\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 output: \u5408\u7ea6\u4fe1\u606f\u7684json\u5b57\u7b26\u4e32","title":"1.9.\u67e5\u8be2\u5386\u53f2\u5408\u7ea6(\u5305\u542b\u5df2\u6ce8\u9500\u5408\u7ea6) | getHistoryContractsByName"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#110-getcontractinfobyaddress","text":"char getContractInfoByAddress(char address) const input: address\uff1a\u5408\u7ea6\u5730\u5740\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\"0x\"\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199 output: 0 \u672a\u6ce8\u518c 1 \u5df2\u6ce8\u518c","title":"1.10.\u83b7\u53d6\u5408\u7ea6\u4fe1\u606f | getContractInfoByAddress"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#2userregister","text":"\u7533\u8bf7\u7528\u6237\u6307\u7684\u662f\uff0c\u7528\u6237\u5c06\u4e2a\u4eba\u7684\u8d26\u6237\u5730\u5740\u3001\u7528\u6237\u540d\u79f0\u3001\u7535\u8bdd\u3001\u90ae\u7bb1\u3001\u4e2a\u4eba\u8bf4\u660e\uff0c\u5411\u5408\u7ea6\u53d1\u8d77\u7533\u8bf7\uff0c\u5408\u7ea6\u4fdd\u5b58\u4fe1\u606f\u3002 struct RegisterInfo { std::string user_address; // \u7528\u6237\u8d26\u6237\u5730\u5740 std::string name; // \u7528\u6237\u540d\u79f0 std::string mobile; // \u624b\u673a\u53f7 std::string email; // \u90ae\u7bb1 std::string remark; // \u4e2a\u4eba\u8bf4\u660e unsigned int user_state; // \u5e73\u53f0\u7528\u6237\u72b6\u6001\uff1a1\u5ba1\u6838\u4e2d\uff0c2\u5df2\u6fc0\u6d3b\uff0c3\u5df2\u62d2\u7edd std::string auditor_address; // \u5ba1\u6838\u4eba\u7684\u5730\u5740 // std::string roles; // \u89d2\u8272\u8bf7\u6c42\u5217\u8868 std::vector<string> roles; // \u89d2\u8272\u8bf7\u6c42\u5217\u8868 };","title":"2.userRegister"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#21-registeruser","text":"int registerUser(const char* registJson) \u9700\u672c\u4eba\u7533\u8bf7 \u9650\u5236\u7533\u8bf7\u6b21\u65701\u6b21\uff0c\u5ba1\u6838\u5931\u8d25\u6216\u8005\u5df2\u6fc0\u6d3b\u7528\u6237\u65e0\u6cd5\u518d\u6b21\u7533\u8bf7 input: registJson \uff1a \u7528\u6237\u7533\u8bf7\u4fe1\u606fJSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6>800\u5219\u6ce8\u518c\u5931\u8d25 output: 0 \u672a\u6ce8\u518c 1 \u5df2\u6ce8\u518c Json\u5b57\u7b26\u4e32\u53c2\u8003\u683c\u5f0f\u5982\u4e0b\uff1a '{\"address\":\"0x33d253386582f38c66cb5819bfbdaad0910339b3\",\"name\":\"xiaoluo\",\"mobile\":\"13111111111\",\"email\":\"luodahui@qq.com\",\"roles\":[\"a\",\"b\",\"c\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"}'","title":"2.1.\u6dfb\u52a0\u7528\u6237\u7533\u8bf7\u4fe1\u606f | registerUser"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#22-approve","text":"int approve(const char* userAddress, int auditStatus) \u5bf9\u7533\u8bf7\u7528\u6237\u8fdb\u884c\u5ba1\u6838\uff0c\u5ba1\u6838\u6210\u529f\u540e\u5728\u5f85\u5ba1\u6838\u4e2d\u5217\u8868\u4e2d\u5220\u9664\u3002\u5ba1\u6838\u4eba\u9700\u4e3a\u6709\u6548\u7528\u6237\u53ca\u7ba1\u7406\u5458\u3002 input: userAddress \u7528\u6237\u5730\u5740\u3002 auditStatus \u5ba1\u6838\u72b6\u6001\uff1a 2 \u6fc0\u6d3b\uff0c3 \u62d2\u7edd\u3002 output: int \u5ba1\u6838\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\u3002","title":"2.2.\u5ba1\u6838 | approve"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#23-getaccountbyaddress","text":"const char getAccountByAddress(const char address) const input: address \u7528\u6237\u5730\u5740 output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"succeed\",\"data\":{ ....}}' \u5982\u679c\u7528\u6237\u7533\u8bf7\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff1a '{\"code\":1,\"msg\":\"The user does not exist in the userRegisterManager\", \"data\":\"\"}'","title":"2.3.\u67e5\u8be2\u8d26\u6237\u4fe1\u606f | getAccountByAddress"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#24-getaccountbyusername","text":"const char getAccountByUsername(const char UserName) const input: UserName \u7528\u6237\u540d output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"succeed\",\"data\":{ ....}}' \u5982\u679c\u7528\u6237\u7533\u8bf7\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff1a '{\"code\":1,\"msg\":\"The user does not exist in the userRegisterManager\", \"data\":\"\"}'","title":"2.4.\u67e5\u8be2\u8d26\u6237\u4fe1\u606f | getAccountByUsername"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#25-getaccountsbystatus","text":"const char* getAccountsByStatus(int pageNum, int pageSize, int accountStatus) const input: pageNum \u9875\u7801 \uff0c\u53c2\u6570\u22650\u3002 pageSize \u6bcf\u9875\u7684\u6570\u636e\u6761\u6570\uff0c\u53c2\u6570\u22651\u3002 accountStatus \u7528\u6237\u72b6\u6001\uff1a1\u5ba1\u6838\u4e2d\uff0c2\u5df2\u6fc0\u6d3b\uff0c3\u5df2\u62d2\u7edd output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"succeed\",\"data\":{ ....}}' \u9519\u8bef\u8f93\u51fa\uff1a unsigned int startIndex = pageNum * pageSize; unsigned int endIndex = startIndex + pageSize - 1; if (startIndex >= size) { code = \"1\"; message = \"Adjust pageNum and pageSize\"; } { // bcwasm::println(\"\u72b6\u6001\u7528\u6237\u4e0d\u5b58\u5728\uff1a[\", accountStatus, \"],\u8bf7\u68c0\u67e5\"); code = \"2\"; message = \"The user status for the query does not exist in the UserRegister\"; userInfos = \"\\\"\\\"\"; } { code = \"3\"; message = \"user information is empty in the UserRegister\"; userInfos = \"\\\"\\\"\"; }","title":"2.5.\u5206\u9875\u67e5\u8be2\u67d0\u72b6\u6001\u7684\u7528\u6237 | getAccountsByStatus"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#26-getstatusbyaddress","text":"int getStatusByAddress(const char* address) const input: address\uff1a\u7528\u6237\u5730\u5740 output: int \u67e5\u8be2\u6210\u529f\u8fd4\u56de\u7528\u6237\u72b6\u60011,2,3\uff0c\u5931\u8d25\u8fd4\u56de-1\u3002","title":"2.6.\u67e5\u8be2\u7528\u6237\u72b6\u6001 | getStatusByAddress"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#3usermanager","text":"\u7528\u6765\u7ba1\u7406\u5e73\u53f0\u7528\u6237\u7684\u90ae\u7bb1\uff0c\u624b\u673a\u53f7\u53ca\u7528\u6237\u72b6\u6001\u3002 struct UserInfo { string user_address; // \u7528\u6237\u5730\u5740 string name;//\u7528\u6237\u540d\u79f0 string email; //\u7528\u6237\u90ae\u7bb1 string mobile; //\u624b\u673a\u53f7 unsigned int status; // \u662f\u5426\u7981\u7528\u7528\u6237\uff1a[0:\u53ef\u7528; 1:\u7981\u7528; 2:\u5220\u9664] };","title":"3.userManager"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#31-adduser","text":"int addUser(const char* userJson) \u8c03\u7528\u8005\u9700\u4e3a\u6709\u6548\u7528\u6237\u53ca\u7ba1\u7406\u5458\uff0c\u7528\u6237\u9700\u4e3a\u5df2\u6fc0\u6d3b\u7528\u6237\u3002 input: userJson \u7528\u6237\u4fe1\u606fJSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 output: int \u6dfb\u52a0\u7528\u6237\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1. Json\u5b57\u7b26\u4e32\u53c2\u8003\u683c\u5f0f\u5982\u4e0b\uff1a '{\"address\":\"0x33d253386582f38c66cb5819bfbdaad0910339b3\",\"name\":\"xiaoluo\",\"mobile\":\"13111111111\",\"email\":\"luodahui@qq.com\",\"roles\":[\"a\",\"b\",\"c\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"}'","title":"3.1.\u6dfb\u52a0\u7528\u6237 | addUser"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#32-enable","text":"int enable(const char* userAddr) \u8c03\u7528\u8005\u9700\u4e3a\u53ef\u7528\u7528\u6237\u4e14role\u4e3a\u7ba1\u7406\u5458\u3002\u5176\u4e2d\u8d85\u7ba1\u72b6\u6001\u4e0d\u53ef\u88ab\u4fee\u6539\u6052\u4e3a\u53ef\u7528\u72b6\u6001\uff0c\u666e\u7ba1\u72b6\u6001\u53ef\u7531\u4efb\u4f55\u666e\u7ba1\uff08\u5305\u62ec\u81ea\u5df1\uff09\u548c\u8d85\u7ba1\u4fee\u6539\u3002 \u5df2\u5220\u9664\u7528\u6237\u72b6\u6001\u4e0d\u80fd\u88ab\u53d8\u66f4\uff0c\u4ec5\u6709\u53ef\u7528\u548c\u4e0d\u53ef\u7528\u72b6\u6001\u53ef\u4ee5\u88ab\u4fee\u6539\u3002 input: userAddr \u7528\u6237\u5730\u5740 output: int \u8bbe\u7f6e\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1.","title":"3.2.\u8bbe\u7f6e\u7528\u6237\u53ef\u7528 | enable"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#33-disable","text":"int disable(const char* userAddr) input: userAddr \u7528\u6237\u5730\u5740 output: int \u8bbe\u7f6e\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1.","title":"3.3.\u7981\u7528\u7528\u6237 | disable"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#34-deluser","text":"int delUser(const char* userAddr) \u5df2\u5220\u9664\u7528\u6237\u4e0d\u80fd\u53d8\u66f4\u72b6\u6001 input: userAddr \u7528\u6237\u5730\u5740 output: int \u8bbe\u7f6e\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1.","title":"3.4.\u5220\u9664\u7528\u6237 | delUser"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#35-update","text":"int update(const char userAddr, const char updateJson) \u529f\u80fd\uff1a\u66f4\u65b0\u7528\u6237\u4fe1\u606f\uff0c\u53ea\u80fd\u66f4\u65b0\u7528\u6237\u7684email,mobile\u4fe1\u606f \u6bcf\u4e2a\u53ef\u7528\u7528\u6237\u90fd\u53ef\u4ee5\u4fee\u6539\u81ea\u5df1\u7684\u4fe1\u606f\u3002 \u4fee\u6539\u4ed6\u4eba\u4fe1\u606f\u65f6\uff0c\u8c03\u7528\u8005\u9700\u4e3a\u6709\u6548\u7528\u6237\u4e14\u4e3a\u7ba1\u7406\u5458\uff0c\u5176\u4e2d\u8d85\u7ba1\u6709\u4fee\u6539\u4e00\u5207\u7684\u6743\u9650\uff0c\u666e\u7ba1\u4ec5\u80fd\u4fee\u6539\u666e\u901a\u7528\u6237\u3002\u4e14\u7528\u6237\u9700\u4e3a\u6709\u6548\u7528\u6237\u3002 input: userAddr \u7528\u6237\u5730\u5740 updateJson \u66f4\u65b0\u4fe1\u606f\u7684json\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 output: int \u6dfb\u52a0\u7528\u6237\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1.","title":"3.5.\u66f4\u65b0\u7528\u6237\u4fe1\u606f  | update"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#36-getaccountbyname","text":"const char getAccountByName(const char name) const input: name \u7528\u6237\u540d output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a json '{\"code\":0,\"msg\":\"succeed\",\"data\":{ ....}}' \u200b \u5982\u679c\u7528\u6237\u7533\u8bf7\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff1a json '{\"code\":1,\"msg\":\"The user does not exist in the userRegisterManager\", \"data\":\"\"}'","title":"3.6.\u83b7\u53d6\u7528\u6237\u4fe1\u606f | getAccountByName"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#37-isvaliduser","text":"int isValidUser(const char* userAddr) const input: userAddr \u7528\u6237\u5730\u5740 output: int \u8fd4\u56de0\u4e3a\u6709\u6548\u7528\u6237\uff0c-1\u4e3a\u975e\u6709\u6548\u7528\u6237","title":"3.7.\u662f\u5426\u6709\u6548 | isValidUser"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#38-getaccountbyaddress","text":"const char getAccountByAddress(const char address) const input: address \u7528\u6237\u5730\u5740 output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"succeed\",\"data\":{ ....}}' \u200b \u5982\u679c\u7528\u6237\u7533\u8bf7\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff1a '{\"code\":1,\"msg\":\"The user does not exist in the userRegisterManager\", \"data\":\"\"}'","title":"3.8.\u83b7\u53d6\u7528\u6237\u4fe1\u606f | getAccountByAddress"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#4roleregister","text":"\u7528\u4ee5\u7533\u8bf7\u89d2\u8272\u3001\u5ba1\u6279\u89d2\u8272\u3001\u4ee5\u53ca\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f\u3002 typedef struct RegisterUserInfo { std::string userAddress; //\u8d26\u6237\u5730\u5740 std::string userName; //\u7528\u6237\u540d int roleRequireStatus; //\u89d2\u8272\u7533\u8bf7\u72b6\u6001 1 \u7533\u8bf7\u4e2d 2 \u5df2\u6279\u51c6 3 \u5df2\u62d2\u7edd std::vector<std::string> requireRoles; std::string approver; //\u5ba1\u6838\u4eba\u7684\u5730\u5740 BCWASM_SERIALIZE(RegisterUserInfo, (userAddress)(userName)(roleRequireStatus)(requireRoles)(approver)); }RegisterUserInfo_st; \u5177\u4f53\u89d2\u8272\u53ca\u6743\u9650\u8bf7\u53c2\u7167PlatONE\u5408\u7ea6\u6307\u5bfc\u6587\u6863\u3002","title":"4.roleRegister"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#41-registerrole","text":"int registerRole(const char* roles) \u8bb0\u5f55\u7528\u6237\u7533\u8bf7\u4fe1\u606f,\u4e00\u4e2a\u8d26\u6237\u53ef\u4ee5\u540c\u65f6\u7533\u8bf7\u591a\u4e2a\u89d2\u8272\uff0c\u53ea\u80fd\u7533\u8bf7\u4e00\u6b21\u3002 input: inputs : const char* roles eg: [ \\\"chainAdmin\\\",\\\"nodeAdmin\\\"] output: return \u542b\u4e49\u5982\u4e0b\uff1a 0 \u6ce8\u518c\u6210\u529f 1 \u5730\u5740\u72b6\u6001\u4e0d\u6b63\u786e 4 \u8f93\u5165\u53c2\u6570\u4e0d\u6b63\u786e\uff0c\u4e0d\u662flist\u7c7b\u578b 6 \u6ca1\u6709\u6709\u6548\u7684\u7533\u8bf7\u4fe1\u606f 7 \u89d2\u8272\u540d\u79f0\u65e0\u6548","title":"4.1.\u6ce8\u518c\u89d2\u8272 | registerRole"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#42-approverole","text":"int approveRole(const char* address, int status) \u53ea\u80fd\u5ba1\u6838\u6bd4\u81ea\u5df1\u6743\u9650\u66f4\u4f4e\u7684\u89d2\u8272\u7533\u8bf7\u3002 input: address \uff0c status output: return \u542b\u4e49\u5982\u4e0b\uff1a 0 \u6ce8\u518c\u6210\u529f 1 \u8d26\u53f7\u5730\u5740\u683c\u5f0f\u9519\u8bef 1\u5ba1\u6279\u4eba\u7528\u6237\u72b6\u6001\u4e0d\u6b63\u786e 2 \u89d2\u8272\u6743\u9650\u4e0d\u8db3 3 \u6ca1\u6709\u89d2\u8272\u7533\u8bf7\u4fe1\u606f 4 \u672a\u627e\u5230\u89d2\u8272\u7ba1\u7406\u5408\u7ea6 5 \u4e0d\u662f\u5408\u6cd5\u7684\u5ba1\u6279\u503c 6 \u5f53\u524d\u662f\u975e\u5ba1\u6279\u72b6\u6001 7 \u6dfb\u52a0\u89d2\u8272\u5931\u8d25","title":"4.2.\u5ba1\u6279\u89d2\u8272 | approveRole"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#43-getregisterinfobyaddress","text":"const char * getRegisterInfoByAddress(const char* address) const input: address output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32 \uff1a {\u72b6\u6001\u503c, msg, RegisterUserInfo} output\u8fd4\u56de\u683c\u5f0f\u5982\u4e0b\uff1a { code: 0, msg: \"ok\", data: { \"userAddress\": \"0x111222\", \"userName\": \"xiaoming\", \"roleRequireStatus\": 1, \"requireRoles\":[\"Admin\", \"ContractCaller\"], \"approveor\": \"01xxx\" } } \u9519\u8bef\u8f93\u51fa\u683c\u5f0f\uff1a { code:1, msg: \"not found\", data: { } }","title":"4.3.\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByAddress"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#44-getregisterinfobyname","text":"const char * getRegisterInfoByName(const char* name) const input: name output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32 \uff1a {\u72b6\u6001\u503c, msg, RegisterUserInfo}","title":"4.4.\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByName"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#45-getregisterinfosbystatus","text":"const char * getRegisterInfosByStatus(int status, int pageNum, int pageSize) const input: pageNum \u9875\u7801 \uff0c\u53c2\u6570\u22650\u3002 pageSize \u6bcf\u9875\u7684\u6570\u636e\u6761\u6570\uff0c\u53c2\u6570\u22651\u3002 accountStatus \u7528\u6237\u72b6\u6001\uff1a1\u5ba1\u6838\u4e2d\uff0c2\u5df2\u6fc0\u6d3b\uff0c3\u5df2\u62d2\u7edd output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32","title":"4.5.\u67e5\u8be2\u89d2\u8272\u7533\u8bf7\u4fe1\u606f | getRegisterInfosByStatus"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#5rolemanager","text":"\u7528\u6765\u7ba1\u7406\u5e73\u53f0\u7528\u6237\u7684\u89d2\u8272\u3002 namespace SystemContract { struct userRole{ bcwasm::Address address; string name; vector<string> roles; BCWASM_SERIALIZE(userRole,(address)(name)(roles)); };","title":"5.roleManager"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#51-addrole","text":"int addRole(const char name, const char address, const char *roles) \u5bf9\u76f8\u540c\u5730\u5740\u6765\u8bf4\uff0c\u5982\u679c\u5df2\u5b58\u5728\u5e76\u7528\u6237\u540d\u4e00\u6837\uff0c\u5219\u66f4\u65b0\u89d2\u8272\uff1b\u7528\u6237\u540d\u4e0d\u4e00\u6837\u8fd4\u56de6 input: name \uff0c address , roles output: return \u542b\u4e49\u5982\u4e0b\uff1a 0 Add roles success 1 Address format is invalid. 2 Caller unavailable, status: 3 User unavailable, status: 4 Roles invalid: 5 No permission to remove/addrole for roles: 6 Name must be unique 7 Add Roles failed","title":"5.1.\u6dfb\u52a0\u89d2\u8272 | addRole"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#52-removerole","text":"int removeRole(const char address,const char roles) \u8c03\u7528\u8005\u9700\u4e3a\u666e\u7ba1\u6216\u8005\u8d85\u7ba1\u3002\u5176\u4e2d\u8d85\u7ba1\u72b6\u6001\u4e0d\u53ef\u88ab\u4fee\u6539\u6052\u4e3a\u53ef\u7528\u72b6\u6001\uff0c\u666e\u7ba1\u72b6\u6001\u53ef\u7531\u4efb\u4f55\u666e\u7ba1\uff08\u5305\u62ec\u81ea\u5df1\uff09\u548c\u8d85\u7ba1\u4fee\u6539\u3002 input: address , roles output: return \u542b\u4e49\u5982\u4e0b\uff1a 0 Remove roles success. 1 Address format is invalid. 2 Caller unavailable, status: \"+ to_string(userStatus) + \" , Address: \" + string(address) 3 Cannot found address: \" + string(address) 4 Roles invalid: \" + string(roles) 5 No permission to remove for roles: \" + string(roles)","title":"5.2.\u5220\u9664\u89d2\u8272 | removeRole"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#53-getrolesbyaddress","text":"const char getRolesByAddress(const char address)const input: address \u7528\u6237\u5730\u5740 output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"Success\",\"data\":{ ....}}' \u200b \u9519\u8bef\u8fd4\u56de\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a '{\"code\":1,\"msg\":\"Address format is invalid.\", \"data\":\"\"}' '{\"code\":1,\"msg\":\"Not Found\", \"data\":\"\"}'","title":"5.3.\u67e5\u8be2\u89d2\u8272 | getRolesByAddress"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#54-getrolesbyname","text":"const char getRolesByName(const char name)const input: address \u7528\u6237\u5730\u5740 output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"Success\",\"data\":{ ....}}' \u200b \u9519\u8bef\u8fd4\u56de\u5982\u4e0b\uff1a '{\"code\":1,\"msg\":\"Not Found\", \"data\":\"\"}'","title":"5.4.\u67e5\u8be2\u89d2\u8272 | getRolesByName"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#55-getaccountsbyrole","text":"const char getAccountsByRole(const char role)const input: address \u7528\u6237\u5730\u5740 output: const char* \u8fd4\u56dejson\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a '{\"code\":0,\"msg\":\"Success\",\"data\":{ ....}}' \u200b \u9519\u8bef\u8fd4\u56de\u5982\u4e0b\uff1a '{\"code\":1,\"msg\":\"Not Found\", \"data\":\"\"}' '{\"code\":1,\"msg\":\"role parameter invalid\", \"data\":\"\"}'","title":"5.5.\u67e5\u8be2\u8d26\u6237 | getAccountsByRole"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#56-hasrole","text":"int hasRole(const char addr, const char role) const input: address \u7528\u6237\u5730\u5740 role \u89d2\u8272json\u683c\u5f0f\u5b57\u7b26\u4e32 output: int \u8fd4\u56de0\u4e3a\u6ca1\u6709\uff0c1\u4e3a\u6709","title":"5.6.\u662f\u5426\u6709\u89d2\u8272 | hasRole"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#6noderegister","text":"struct RegisterInfo { std::string name; //\u8282\u70b9\u540d\u79f0 std::string owner; //\u7533\u8bf7\u8005\u7684\u5730\u5740 std::string desc; //\u8282\u70b9\u63cf\u8ff0,\u957f\u5ea6\u9650\u52361000 int type; //1:\u5171\u8bc6\u8282\u70b9\uff1b0:\u89c2\u5bdf\u8005\u8282\u70b9 std::string publicKey; //\u516c\u94a5 std::string externalIP; std::string internalIP; int rpcPort; int p2pPort; int status; //0:\u672a\u5904\u7406\uff1b1:\u7533\u8bf7\u901a\u8fc7\uff1b2:\u62d2\u7edd\u7533\u8bf7 bool root; //true \u6839\u8282\u70b9 false \u975e\u8ddf\u8282\u70b9 std::string approver; //\u5ba1\u6838\u4eba\u7684\u5730\u5740 int64_t registerTime; //\u7533\u8bf7\u65f6\u95f4 BCWASM_SERIALIZE(RegisterInfo, (name)(owner)(desc)(type)(publicKey)(externalIP)(internalIP)(rpcPort)(p2pPort)(status)(root)(approver)(registerTime)); };","title":"6.nodeRegister"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#61-registernode","text":"int registerNode(const char *nodeJson) \u53ea\u80fd\u7531chainCreater\u3001chainAdmin\u3001nodeAdmin\u8c03\u7528 name\uff1a\u53ea\u53ef\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u3001\u8fde\u5b57\u7b26\uff0c\u5ba1\u6838\u901a\u8fc7\u7684name\u4e0d\u53ef\u4ee5\u91cd\u590d desc\uff1a\u957f\u5ea6\u9650\u5236\u4e3a4-1000 type\uff1a\u5fc5\u987b\u662f0\u6216\u80051\uff0c0\u8868\u793a\u89c2\u5bdf\u8005\u8282\u70b9 publicKey\uff1a\u957f\u5ea6\u9650\u5236\u4e3a4-1000\uff0cpublicKey\u4e0d\u80fd\u91cd\u590d\u7533\u8bf7 IP\u548c\u7aef\u53e3\uff1a\u4efb\u610f\u7ec4\u5408\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u4e0d\u80fd\u91cd\u590d\u7533\u8bf7 inputs: RegisterInfo\u662fJson\u5b57\u7b26\u4e32\uff0c\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a '{ \"name\":\"node1\", \"desc\":\"i love this world\", \"type\":1, \"publicKey\":\"acb2281452fb9fc25d40113fb6afe82b498361de0eea6449c2502\", \"externalIP\":\"127.0.0.1\", \"internalIP\":\"127.0.0.1\", \"rpcPort\":4789, \"p2pPort\":14789 }' output: int \u200b 0 \u6210\u529f \u200b 1 \u53c2\u6570\u4e0d\u89c4\u8303 \u200b 2 \u65e0\u6743\u9650","title":"6.1.\u6ce8\u518c\u8282\u70b9\u4fe1\u606f | registerNode"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#62-approve","text":"int approve(char *publicKey, int status) \u53ea\u80fd\u7531chainCreater\u3001chainAdmin\u8c03\u7528 \u5982\u679c\u72b6\u6001\u662f\u5df2\u5ba1\u6838\uff0c\u4e0d\u80fd\u91cd\u65b0\u5ba1\u6838 \u5ba1\u6838\u901a\u8fc7\u7684name\u3001IP+Port\u4e0d\u53ef\u4ee5\u518d\u6b21\u5ba1\u6838\u901a\u8fc7 \u5f53\u5ba1\u6838\u901a\u8fc7\uff08status = 1\uff09\u540e\uff0c\u7cfb\u7edf\u8c03\u7528NodeManager\u5408\u7ea6\u7684add()\u65b9\u6cd5\u628a\u8282\u70b9\u4fe1\u606f\u653e\u5165\u8282\u70b9\u7ba1\u7406\u5408\u7ea6 inputs: publicKey:\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u5982\u679c\u6ca1\u7533\u8bf7\u8fc7\u5219\u65e0\u6548 status\uff1a\u5fc5\u987b\u662f1\u6216\u80052\uff0c1\u8868\u793a\u901a\u8fc7\uff0c2\u8868\u793a\u62d2\u7edd output: int \u200b 0 \u6210\u529f \u200b 1 \u53c2\u6570\u4e0d\u89c4\u8303 \u200b 2 \u65e0\u6743\u9650","title":"6.2.\u5ba1\u6838\u8282\u70b9\u7533\u8bf7 | approve"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#63-getregisterinfobystatus","text":"const char *getRegisterInfoByStatus(int status, int pageNum, int pageSize) const inputs: status:\u67e5\u8be2\u72b6\u6001\uff0c0\u7533\u8bf7\u672a\u5904\u7406\u30011\u7533\u8bf7\u901a\u8fc7\u30012\u7533\u8bf7\u62d2\u7edd pageNum\uff1a\u9875\u9762\u7f16\u53f7\uff08\u4ece0\u5f00\u59cb\uff09 pageSize\uff1a\u6bcf\u9875\u663e\u793a\u6761\u76ee\u6570 output: { \"code\":0, \"msg\":\"\", \"data\":{ \"name\":\"node1\", \"owner\":\"0x4FCd6fe35f0612C7866943cb66C1d93eb0746bcC\", \"desc\":\"i love this world\", \"type\":1, \"publicKey\":\"acb2281452fb9fc25d40113fb6afe82b498361de0eea6449c2502\", \"externalIP\":\"127.0.0.1\", \"internalIP\":\"127.0.0.1\", \"rpcPort\":4789, \"p2pPort\":14789, \"status\":0, \"approveor\":\"0x4FCd6fe35f0612C7866943cb66C1d93eb0746bcC\", \"registerTime\":23489723 } } \u9519\u8bef\u8f93\u51fa\u683c\u5f0f\uff1a { code:1, msg: \"Can't find info\", data: { } } { code:2, msg: \"Parameter error!\", data: { } }","title":"6.3.\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByStatus"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#64-getregisterinfobypublickey","text":"const char getRegisterInfoByPublicKey(char publicKey) const inputs: publicKey\uff1a\u7533\u8bf7\u8fc7\u7684\u516c\u94a5 output: \u8fd4\u56deJson\u5b57\u7b26\u4e32","title":"6.4.\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByPublicKey"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#65-getregisterinfobyowneraddress","text":"const char getRegisterInfoByOwnerAddress(char owner) const inputs: ownerAddress\uff1a\u7533\u8bf7\u8005\u5730\u5740 output: \u8fd4\u56deJson\u5b57\u7b26\u4e32","title":"6.5.\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f | getRegisterInfoByOwnerAddress"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#7nodemanager","text":"//\u6b64\u7ed3\u6784\u4f53\u5df2\u6ce8\u91ca\u6389\uff0c\u4ee3\u7801\u90e8\u5206\u4e0d\u662f\u901a\u8fc7\u7ed3\u6784\u4f53\u65b9\u5f0f\u5b9a\u4e49\u4ee5\u4e0b\u53d8\u91cf { string name; // \u8282\u70b9\u540d\u5b57 address owner; // \u7533\u8bf7\u8005\u7684\u5730\u5740 string desc; // \u8282\u70b9\u63cf\u8ff0 int type; // 0:\u89c2\u5bdf\u8005\u8282\u70b9\uff1b1:\u5171\u8bc6\u8282\u70b9 string publicKey; // \u8282\u70b9\u516c\u94a5 string externalIP; // \u5916\u7f51 IP string internalIP; // \u5185\u7f51 IP int rpcPort; // rpc \u901a\u8baf\u7aef\u53e3 int p2pPort; // p2p \u901a\u8baf\u7aef\u53e3 int status; // 1:\u6b63\u5e38\uff1b2\uff1a\u5220\u9664 address approveor; // \u5ba1\u6838\u4eba\u7684\u5730\u5740 int delayNum; // \u5171\u8bc6\u8282\u70b9\u5ef6\u8fdf\u8bbe\u7f6e\u7684\u533a\u5757\u9ad8\u5ea6 (\u53ef\u9009, \u9ed8\u8ba4\u5b9e\u65f6\u8bbe\u7f6e) }","title":"7.nodeManager"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#71-add","text":"int add(const char *nodeJsonStr) \u5fc5\u8981\u7684key:{\"name\", \"owner\", \"desc\", \"type\", \"publicKey\", \"externalIP\", \"internalIP\", \"rpcPort\", \"p2pPort\", \"status\"} \u53ea\u6709chainCreator\uff0cchainAdmin\uff0cnodeAdmin\u53ef\u6dfb\u52a0\u8282\u70b9\u4fe1\u606f \u516c\u94a5\u5fc5\u987b\u552f\u4e00 \u8282\u70b9\u540d\u5b57\u4e0d\u80fd\u4e0e\u975e\u5220\u9664\u8282\u70b9\u91cd\u590d \u6dfb\u52a0\u8282\u70b9\u65f6\u7c7b\u578b\u5fc5\u987b\u662f\u89c2\u5bdf\u8005\u8282\u70b9\uff0c\u5373type=0 \u6dfb\u52a0\u8282\u70b9\u7684status\u53ea\u80fd\u662f1\u62162 inputs: nodeJsonStr \u8282\u70b9\u4fe1\u606fJSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32\uff0c\u5982\uff1a '{ \"name\": \"node1\", \"owner\": \"0x4FCd6fe35f0612C7866943cb66C1d93eb0746bcC\", \"approveor\": \"0xdF6518e51e0d90A3CBa26e4AdFE74454E2D90BdE\", \"desc\": \"i love this world\", \"type\": 1, \"publicKey\": \"0x81ec63a2335c1f79244cbe485eb6bffef48cfd7df58b1009411c6114670eefd27da865914c70f7e49ceeb1002f1c24f4930975a2eb05cb5ac1373bed83a9932a\", \"externalIP\": \"127.0.0.1\", \"internalIP\": \"127.0.0.1\", \"rpcPort\": 6789, \"p2pPort\": 16789, \"status\": 1 }' output: int \u200b 0 \u6210\u529f \u200b 1 \u53c2\u6570\u4e0d\u89c4\u8303 \u200b 2 \u65e0\u6743\u9650","title":"7.1.\u6dfb\u52a0\u8282\u70b9\u4fe1\u606f | add"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#72-getallnodes","text":"const char *getAllNodes() const inputs: \u65e0 outputs\uff1a \u200b nodes \u6240\u6709\u8282\u70b9\u4fe1\u606fJSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 { \"code\": 0, \"msg\": \"success\", \"data\": [...] }","title":"7.2.\u67e5\u8be2\u6240\u6709\u8282\u70b9\u4fe1\u606f  | getAllNodes"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#73-getnodes","text":"const char getNodes(const char nodeJsonStr) const inputs: \u200b \u6839\u636e\u7279\u5b9a\u6761\u4ef6\uff0c\u8fd4\u56de\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u4fe1\u606f\u3002\u6bd4\u5982\uff0c\u6211\u9700\u8981\u67e5\u8be2\u8282\u70b9\u7684\u540d\u5b57\u4e3a\"node1\"\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u90a3\u4e48\u4f20\u5165\u5b57\u7b26\u4e32 {\"name\":\"node1\"}\uff1b\u5982\u679c\u9700\u8981\u67e5\u8be2\u6240\u6709\u6b63\u5e38\u8282\u70b9\uff0c\u90a3\u4e48\u4f20\u5165\u5b57\u7b26\u4e32{\"status\":1}\uff1b\u5982\u679c\u6211\u9700\u8981\u8fd4\u56de\u6b63\u5e38\u8282\u70b9\u800c\u4e14\u662f\u5171\u8bc6\u8282\u70b9\uff0c\u90a3\u4e48\u4f20\u5165\u5b57\u7b26\u4e32{\"status\":1, \"type\":1}\u3002\u603b\u4e4b\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u8282\u70b9\u4fe1\u606f\u53ef\u591a\u4e2a\u7ec4\u5408\u8fdb\u884c\u67e5\u8be2\u3002 outputs\uff1a \u200b nodes \u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u4fe1\u606fJSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 { \"code\": 0, \"msg\": \"success\", \"data\": [...] }","title":"7.3.\u67e5\u8be2\u8282\u70b9\u4fe1\u606f | getNodes"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#74-nodesnum","text":"int nodesNum(const char *nodeJsonStr) const inputs: \u200b \u4e00\u4e9b\u6761\u4ef6\u7684JSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 outputs\uff1a \u200b nodes \u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u4e2a\u6570\u3002","title":"7.4.\u7b26\u5408\u6761\u4ef6\u8282\u70b9\u4e2a\u6570 | nodesNum"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#75-update","text":"int update(const char name, const char nodeJsonStr) CHAIN_CREATOR\uff0cCHAIN_ADMIN\uff0cNODE_ADMIN\u624d\u6709\u6743\u9650update \u975e\u6b63\u5e38\u72b6\u6001\u7684\u8282\u70b9, \u4e0d\u80fd\u8fdb\u884c\u66f4\u65b0\uff08status!=1\uff09 \u8282\u70b9status \u53ea\u80fd\u4ece1\u66f4\u65b0\u4e3a2 \u8282\u70b9type \u53ea\u80fd\u57280\u548c1\u4e4b\u95f4\u8fdb\u884c\u66f4\u65b0 \u66f4\u65b0\u8282\u70b9\u4fe1\u606f\u53ea\u80fd\u662f\uff1adesc, type, status, delayNum inputs: name \u8282\u70b9\u540d\u5b57 nodeJsonStr \u9700\u8981\u66f4\u65b0\u7684\u4fe1\u606f\uff0c\u4ee5json\u8868\u793a\u3002 output: int \u200b 0 \u5931\u8d25 \u200b 1 \u6210\u529f","title":"7.5.\u66f4\u65b0\u4fe1\u606f | update"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#76-validjoinnode","text":"int validJoinNode(const char *publicKey) const inputs: publicKey output: int \u8f93\u51fa\u67d0\u516c\u94a5\u4e0b\u6240\u6709\u6709\u6548\u7684\uff08status=1\uff09\u8282\u70b9\u4e2a\u6570","title":"7.6.\u67d0\u516c\u94a5\u6709\u6548\u8282\u70b9\u4e2a\u6570 | validJoinNode"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#77-getnormalenodenodes","text":"const char *getNormalEnodeNodes() const inputs: \u65e0 output: int \u8f93\u51fa\u6b63\u5e38\u72b6\u6001\u7684\u8282\u70b9\u4e2a\u6570","title":"7.7.\u6b63\u5e38\u72b6\u6001\u8282\u70b9\u4e2a\u6570 | getNormalEnodeNodes"},{"location":"PlatONE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%EF%BC%88%E5%BE%85%E5%AE%9A%EF%BC%89%E7%89%B9%E5%AE%9A%E5%90%88%E7%BA%A6%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/SystemContract/#78-getdeletedenodenodes","text":"const char *getDeletedEnodeNodes() const inputs: \u65e0 output: int \u8f93\u51fa\u5220\u9664\u72b6\u6001\u7684\u8282\u70b9\u4e2a\u6570","title":"7.8.\u5220\u9664\u72b6\u6001\u8282\u70b9\u4e2a\u6570 | getDeletedEnodeNodes"},{"location":"SDK/JAVA-SDK/","text":"Java - SDK PlatONE Java SDK\u662f\u9762\u5411java\u5f00\u53d1\u8005\uff0c\u63d0\u4f9b\u7684PlatONE\u8054\u76df\u94fe\u7684java\u5f00\u53d1\u5de5\u5177\u5305\uff0c\u63d0\u4f9b\u4e86\u5728\u5e94\u7528\u5c42\uff08java \u4ee3\u7801\uff09\u8bbf\u95ee\u533a\u5757\u94fe\u8282\u70b9\u5e76\u83b7\u53d6\u670d\u52a1\u7684\u63a5\u53e3\uff0c\u6bd4\u5982\u90e8\u7f72\u5408\u7ea6\u3001\u8c03\u7528\u5408\u7ea6\u3001\u67e5\u8be2\u94fe\u4e0a\u6570\u636e\u7b49\u3002 1. \u4e0b\u8f7d\u4e0e\u5b89\u88c5 \u8bf7\u9996\u5148\u4e0b\u8f7dSDK\u6700\u65b0\u7248\u672c\u7684\u53d1\u5e03\u5305\uff0c \u4e0b\u8f7d\u5730\u5740 \u3002 \u5c06\u53d1\u5e03\u5305\u89e3\u538b\u5230\u672c\u5730\u76ee\u5f55\uff0c\u5982\u4e0b\u6240\u793a\uff1a # \u4e0b\u8f7d wget https://github.com/PlatONEnterprise/PlatONE-Go/releases/download/v0.9.0/java_sdk_linux_v0.9.0.tar.gz # \u89e3\u538b tar -zxvf java_sdk_linux_v0.9.0.tar.gz && export SDKPATH=java-sdk \u5b89\u88c5\u4f9d\u8d56\u73af\u5883 # java\u7248\u672c\uff1ajdk1.8 sudo apt install cmake g++ maven # \u5b89\u88c5maven\u4f9d\u8d56 cd ${SDKPATH}/bin && ./mvn.sh \u521b\u5efajava\u9879\u76ee\u5e76\u5728maven\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u7684\u4f9d\u8d56\u9879\uff1a <dependencies> <dependency> <groupId>com.platone.client</groupId> <artifactId>core</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>com.platone.client</groupId> <artifactId>crypto</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>com.platone.client</groupId> <artifactId>abi</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>com.platone.client</groupId> <artifactId>rlp</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>com.platone.client</groupId> <artifactId>tuples</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>com.platone.client</groupId> <artifactId>utils</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-api</artifactId> <version>1.7.5</version> </dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> <version>1.7.5</version> </dependency> <dependency> <groupId>com.squareup.okhttp3</groupId> <artifactId>okhttp</artifactId> <version>3.8.1</version> </dependency> <dependency> <groupId>com.squareup.okhttp3</groupId> <artifactId>logging-interceptor</artifactId> <version>3.8.1</version> </dependency> <dependency> <groupId>io.reactivex</groupId> <artifactId>rxjava</artifactId> <version>1.2.4</version> </dependency> <dependency> <groupId>org.java-websocket</groupId> <artifactId>Java-WebSocket</artifactId> <version>1.3.8</version> </dependency> <dependency> <groupId>com.github.jnr</groupId> <artifactId>jnr-unixsocket</artifactId> <version>0.15</version> </dependency> <dependency> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-databind</artifactId> <version>2.8.5</version> </dependency> <dependency> <groupId>org.bouncycastle</groupId> <artifactId>bcprov-jdk15on</artifactId> <version>1.54</version> </dependency> </dependencies> 2. \u8fde\u63a5\u8282\u70b9 \u9996\u5148\u9700\u8981\u4e0ePlatONE\u8282\u70b9\u5efa\u7acb\u8fde\u63a5\uff0c\u4ee5\u83b7\u53d6\u94fe\u4e0a\u6709\u5173\u670d\u52a1\u3002PlatONE\u652f\u6301\u5efa\u7acbhttp\u8fde\u63a5\u548cwebsocket\u8fde\u63a5\u4e24\u79cd\u65b9\u5f0f\u3002 //http\u77ed\u8fde\u63a5 Web3j web3j = Web3j.build(new HttpService(\"http://127.0.0.1:6791\")); //ws\u957f\u8fde\u63a5 WebSocketClient webSocketClient = new WebSocketClient(newURI(\"ws://127.0.0.1:6791\")); WebSocketService ws = new WebSocketService(webSocketClient\uff0ctrue); ws.connect(); Web3j web3j = Web3j.build(ws); \u8bf4\u660e\uff1a \u5efa\u7acbWebsocket\u8fde\u63a5\u9700\u8981\u663e\u5f0f\u8c03\u7528connect\u65b9\u6cd5\uff08\u4e0eHTTP\u4e0d\u540c\uff09\u3002 PlatONE\u8282\u70b9\u9700\u8981\u5728\u542f\u52a8\u65f6\u6253\u5f00websocket\u76d1\u542c\u529f\u80fd\uff0c\u5373\u542f\u52a8\u65f6\u52a0\u5165\u53c2\u6570\uff1a--ws\u3002 3. \u5408\u7ea6\u4ea4\u4e92 \u4e3a\u4e86\u65b9\u4fbf\u5728java\u9879\u76ee\u4e2d\u8c03\u7528\u94fe\u4e0a\u5408\u7ea6\uff0c\u9700\u8981\u9996\u5148\u751f\u6210\u5408\u7ea6\u5bf9\u5e94\u7684java\u7c7b\uff0c\u5728\u9879\u76ee\u4e2d\u521b\u5efa\u5408\u7ea6\u7c7b\u5b9e\u4f8b\u540e\uff0c\u4fbf\u53ef\u4ee5\u8c03\u7528\u5408\u7ea6\u3002 3.1 \u5408\u7ea6\u9aa8\u67b6\u751f\u6210 \u7f16\u5199\u5408\u7ea6(\u4ee5demo\u4e3a\u4f8b)\uff0c\u7f16\u5199\u5408\u7ea6\u7684\u6b65\u9aa4\u8bf7\u53c2\u9605 Wasm\u5408\u7ea6\u5f00\u53d1 \u3002 #include <stdlib.h> #include <string.h> #include <string> #include <bcwasm/bcwasm.hpp> namespace demo { class FirstDemo : public bcwasm::Contract { public: FirstDemo(){} /// \u5b9e\u73b0\u7236\u7c7b: bcwasm::Contract \u7684\u865a\u51fd\u6570 /// \u8be5\u51fd\u6570\u5728\u5408\u7ea6\u9996\u6b21\u53d1\u5e03\u65f6\u6267\u884c\uff0c\u4ec5\u8c03\u7528\u4e00\u6b21 void init() { bcwasm::println(\"init success...\"); } public: void setName(const char *msg) { // \u5b9a\u4e49\u72b6\u6001\u53d8\u91cf bcwasm::setState(\"NAME_KEY\"\uff0cstd::string(msg)); } const char* getName() const { std::string value; bcwasm::getState(\"NAME_KEY\"\uff0cvalue); // \u8bfb\u53d6\u5408\u7ea6\u6570\u636e\u5e76\u8fd4\u56de return value.c_str(); } }; } // \u6b64\u5904\u5b9a\u4e49\u7684\u51fd\u6570\u4f1a\u751f\u6210ABI\u6587\u4ef6\u4f9b\u5916\u90e8\u8c03\u7528 BCWASM_ABI(demo::FirstDemo\uff0csetName) BCWASM_ABI(demo::FirstDemo\uff0cgetName) \u5408\u7ea6\u7f16\u8bd1\u540e\u4f1a\u4ea7\u751fdemo.cpp.abi.json\u548cdemo.wasm\uff0c\u5728\u751f\u6210java\u5408\u7ea6\u4ee3\u7801\u65f6\u9700\u8981\u7528\u5230\u8fd9\u4e24\u4e2a\u6587\u4ef6\u3002 \u4f7f\u7528\u5408\u7ea6\u9aa8\u67b6\u751f\u6210\u5de5\u5177\u751f\u6210java\u5408\u7ea6\u9aa8\u67b6: cd java_sdk_linux_v0.9.0/java-sdk/bin ./client-sdk wasm generate --javaTypes \\ </path/to/demo.wasm> \\ </path/to/demo.cpp.abi.json> \\ -o </path/to/src/main/java> \\ -p <com.your.organisation.name> \\ -t wasm \u8bf4\u660e\uff1a\u628a\u5c16\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u66ff\u6362\u6210\u81ea\u5df1\u7684\u5185\u5bb9\u3002 \u8fd0\u884c\u540e\u4f1a\u751f\u6210\u5408\u7ea6\u5bf9\u5e94\u7684java\u7c7b\u3002 java\u7c7b\u4e2d\u5305\u542b\u4e86\u5408\u7ea6\u4e2d\u7684\u65b9\u6cd5\uff0c\u65b9\u4fbf\u5728\u5e94\u7528\u5c42\u4e2d\u8c03\u7528\u5408\u7ea6\u3002 3.2 \u5408\u7ea6\u64cd\u4f5c \u90e8\u7f72\u5408\u7ea6 //optional class NodeConfiguration { public static final String WALLETSOURCE = \"/home/username/Work/PlatONE/data/keystore/keyfile.json\"; public static final String DEMOBIN = \"/home/user/Work/client-sdk-0.4.1/contract/firstdemo.wasm\"; } //\u5efa\u7acb\u8fde\u63a5 Web3j web3j = Web3j.build(new HttpService(\"http://127.0.0.1:6791\")); //\u52a0\u8f7d\u94b1\u5305 Credentials credentials = WalletUtils.loadCredentials(\"<wallet password>\"\uff0cNodeConfiguration.WALLETSOURCE); //\u90e8\u7f72\u5408\u7ea6 byte[] dataBytes = Files.readBytes(new File(NodeConfiguration.DEMOBIN)); String binData = Hex.toHexString(dataBytes); Firstdemo demo = Firstdemo.deploy(web3j\uff0ccredentials\uff0cbinData\uff0cnew DefaultWasmGasProvider()).send(); \u52a0\u8f7d\u5408\u7ea6 //optional class NodeConfiguration { public static final String WALLETSOURCE = \"/home/username/Work/PlatONE/data/keystore/keyfile.json\"; public static final String DEMOBIN = \"/home/user/Work/client-sdk-0.4.0/contract/firstdemo.wasm\"; } //\u5efa\u7acb\u8fde\u63a5 Web3j web3j = Web3j.build(new HttpService(\"http://127.0.0.1:6791\")); //\u52a0\u8f7d\u94b1\u5305 Credentials credentials = WalletUtils.loadCredentials(\"<wallet password>\"\uff0cNodeConfiguration.WALLETSOURCE); //\u52a0\u8f7d\u5408\u7ea6 byte[] dataBytes = Files.readBytes(new File(NodeConfiguration.DEMOBIN)); String binData = Hex.toHexString(dataBytes); Firstdemo contract = Firstdemo.load(binData\uff0c\u201c<contract address>\u201d\uff0cweb3j\uff0ccredentials\uff0cnew DefaultWasmGasProvider()); \u8c03\u7528\u5408\u7ea6\u793a\u4f8b \u5728\u5408\u7ea6\u90e8\u7f72\u540e\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u5408\u7ea6\u8c03\u7528\u3002 \u5408\u7ea6\u5730\u5740 public static void main(String args[]) { Web3j web3j = Web3j.build(new HttpService(\"http://127.0.0.1:6791\")); try { // \u5bc6\u94a5\u8d26\u6237\uff0ckeyfile.json\u4e3aethkey\u5de5\u5177\u751f\u6210\u7684\u8d26\u6237\u6587\u4ef6\uff0c\u53c2\u7167\u300aPlatONE\u5bc6\u94a5\u5de5\u5177\u6587\u6863\u300b Credentials credentials = WalletUtils.loadCredentials(\"1\"\uff0c\"/home/wxuser/keyfile.json\"); // \u5408\u7ea6\u6570\u636e byte[] dataBytes = Files.readBytes(new File(\"/home/user/PlatONE-Workspace-0.2/contracts/build/appContract/demo/demo.wasm\")); String binData = Hex.toHexString(dataBytes); // \u52a0\u8f7d\u5408\u7ea6 Demo demo = Demo.load(binData\uff0c\"0x1d7f2695b43be56f52f24baa199420f8c10ac1d3\"\uff0cweb3j\uff0ccredentials\uff0cnew DefaultWasmGasProvider()); // \u8c03\u7528demo\u5408\u7ea6\u7684setName\u65b9\u6cd5\uff0c\u53c2\u6570\u8f93\u5165\u5b57\u7b26\u4e32\"platone\" TransactionReceipt ret = demo.setName(\"platone\").send(); System.out.println(\"Transaction Hash: \"+ret.getTransactionHash()); // \u8c03\u7528demo\u5408\u7ea6\u7684getName\u65b9\u6cd5 System.out.println(\"getName: \" + demo.getName().send()); }catch (Exception e){ System.out.println(e); } } \u5408\u7ea6\u540d\u79f0 public static void main(String[] args) { try { Web3j web3j = Web3j.build(new HttpService(\"http://127.0.0.1:6791\")); Credentials credentials = WalletUtils.loadCredentials(\"1\"\uff0c\"/home/wxuser/keyfile.json\"); byte[] dataBytes = Files.readBytes(new File(\"/home/user/PlatONE-Workspace-0.2/contracts/build/appContract/demo/demo.wasm\")); String binData = Hex.toHexString(dataBytes); // load contract CnsManager cns = CnsManager.load(null\uff0c\"0x0000000000000000000000000000000000000011\"\uff0cweb3j\uff0ccredentials\uff0cnew DefaultWasmGasProvider()); TransactionReceipt r = cns.cnsRegister(\"demo\"\uff0c\"1.0.0.0\"\uff0c\"0x1d7f2695b43be56f52f24baa199420f8c10ac1d3\").send(); if (r.isStatusOK()){ Demo d = Demo.load(null\uff0c\"demo\"\uff0cweb3j\uff0cc\uff0cnew DefaultWasmGasProvider()); d.setName(\"cns\").send(); System.out.println(d.getName().send()); } } catch (Exception e) { e.printStackTrace(); } finally { System.out.println(\"Done...\"); } } 3.3 \u8ba2\u9605\u4e8b\u4ef6 \u8ba2\u9605\u533a\u5757: \u5728\u65b0\u533a\u5757\u4ea7\u751f\u65f6\uff0cclient\u53ef\u4ee5\u5f97\u5230\u8282\u70b9\u7684\u533a\u5757\u6570\u636e\u63a8\u9001\u3002 Subscription sub = web3j.blockObservable(false).subscribe( block -> { System.out.println(block.getBlock().getNumber()); }); \u8ba2\u9605event: \u5728\u5408\u7ea6\u4e2d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e8b\u4ef6\uff0cclient\u901a\u8fc7\u8ba2\u9605\u4e8b\u4ef6\u7684\u65b9\u5f0f\u6765\u83b7\u6089\u5408\u7ea6\u8c03\u7528\u4e2d\u6240\u89e6\u53d1\u7684\u4e8b\u4ef6\u3002 \u5408\u7ea6\u4e2d\u5b9a\u4e49\u5982\u4e0b\u7684event\uff0c\u6bcf\u6b21setName\u88ab\u8c03\u7528\u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1\u8be5event\u3002 // event\u5b9a\u4e49 BCWASM_EVENT(setName\uff0cconst char *) void setName(const char *msg) { // \u5b9a\u4e49\u72b6\u6001\u53d8\u91cf bcwasm::setState(\"NAME_KEY\"\uff0cstd::string(msg)); // \u65e5\u5fd7\u8f93\u51fa // \u4e8b\u4ef6\u8fd4\u56de BCWASM_EMIT_EVENT(setName\uff0c\"std::string(msg)\"); } String contractAddress = \"0x1d7f2695b43be56f52f24baa199420f8c10ac1d3\"; String eventHash = Hash.sha3String(\"setName\"); EthFilter filter = new EthFilter(DefaultBlockParameterName.EARLIEST\uff0cDefaultBlockParameterName.LATEST\uff0ccontractAddress).addSingleTopic(eventHash); Subscription subTx = web3j.ethLogObservable(filter).subscribe(log -> { System.out.println(\"output: \" + log.getData()); } \u8bf4\u660e\uff1aFilter\u5b9e\u4f8b\u5316\u7684\u8f93\u5165\uff0c\u7b2c\u4e09\u4e2a\u662f\u5408\u7ea6\u7684\u5730\u5740\uff0c\u7b2c\u56db\u4e2a\u662fTopic\u7684\u54c8\u5e0c\u503c\uff08SHA-3\uff09\uff0c\u8fd4\u56de\u7ed3\u679c\u4e2dlog\u7684Data\u5b57\u6bb5\u662f\u4e8b\u4ef6\u503c\u7684rlp\u7f16\u7801\u3002 3.4 web3 api\u8c03\u7528 web3j.ethBlockNumber(); // \u5f53\u524d\u6700\u65b0\u533a\u5757\u9ad8\u5ea6 web3j.ethGetTransactionByHash(\"0x...\"); // \u6839\u636e\u4ea4\u6613\u54c8\u5e0c\u591a\u53bb\u4ea4\u6613\u5185\u5bb9 web3j.ethGetTransactionReceipt(\"0x...\"); // \u6839\u636e\u4ea4\u6613\u54c8\u5e0c\u83b7\u53d6\u4ea4\u6613\u7684\u56de\u6267","title":"Java - SDK"},{"location":"SDK/JAVA-SDK/#java-sdk","text":"PlatONE Java SDK\u662f\u9762\u5411java\u5f00\u53d1\u8005\uff0c\u63d0\u4f9b\u7684PlatONE\u8054\u76df\u94fe\u7684java\u5f00\u53d1\u5de5\u5177\u5305\uff0c\u63d0\u4f9b\u4e86\u5728\u5e94\u7528\u5c42\uff08java \u4ee3\u7801\uff09\u8bbf\u95ee\u533a\u5757\u94fe\u8282\u70b9\u5e76\u83b7\u53d6\u670d\u52a1\u7684\u63a5\u53e3\uff0c\u6bd4\u5982\u90e8\u7f72\u5408\u7ea6\u3001\u8c03\u7528\u5408\u7ea6\u3001\u67e5\u8be2\u94fe\u4e0a\u6570\u636e\u7b49\u3002","title":"Java - SDK"},{"location":"SDK/JAVA-SDK/#1","text":"\u8bf7\u9996\u5148\u4e0b\u8f7dSDK\u6700\u65b0\u7248\u672c\u7684\u53d1\u5e03\u5305\uff0c \u4e0b\u8f7d\u5730\u5740 \u3002 \u5c06\u53d1\u5e03\u5305\u89e3\u538b\u5230\u672c\u5730\u76ee\u5f55\uff0c\u5982\u4e0b\u6240\u793a\uff1a # \u4e0b\u8f7d wget https://github.com/PlatONEnterprise/PlatONE-Go/releases/download/v0.9.0/java_sdk_linux_v0.9.0.tar.gz # \u89e3\u538b tar -zxvf java_sdk_linux_v0.9.0.tar.gz && export SDKPATH=java-sdk \u5b89\u88c5\u4f9d\u8d56\u73af\u5883 # java\u7248\u672c\uff1ajdk1.8 sudo apt install cmake g++ maven # \u5b89\u88c5maven\u4f9d\u8d56 cd ${SDKPATH}/bin && ./mvn.sh \u521b\u5efajava\u9879\u76ee\u5e76\u5728maven\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u7684\u4f9d\u8d56\u9879\uff1a <dependencies> <dependency> <groupId>com.platone.client</groupId> <artifactId>core</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>com.platone.client</groupId> <artifactId>crypto</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>com.platone.client</groupId> <artifactId>abi</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>com.platone.client</groupId> <artifactId>rlp</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>com.platone.client</groupId> <artifactId>tuples</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>com.platone.client</groupId> <artifactId>utils</artifactId> <version>0.4.1</version> </dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-api</artifactId> <version>1.7.5</version> </dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> <version>1.7.5</version> </dependency> <dependency> <groupId>com.squareup.okhttp3</groupId> <artifactId>okhttp</artifactId> <version>3.8.1</version> </dependency> <dependency> <groupId>com.squareup.okhttp3</groupId> <artifactId>logging-interceptor</artifactId> <version>3.8.1</version> </dependency> <dependency> <groupId>io.reactivex</groupId> <artifactId>rxjava</artifactId> <version>1.2.4</version> </dependency> <dependency> <groupId>org.java-websocket</groupId> <artifactId>Java-WebSocket</artifactId> <version>1.3.8</version> </dependency> <dependency> <groupId>com.github.jnr</groupId> <artifactId>jnr-unixsocket</artifactId> <version>0.15</version> </dependency> <dependency> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-databind</artifactId> <version>2.8.5</version> </dependency> <dependency> <groupId>org.bouncycastle</groupId> <artifactId>bcprov-jdk15on</artifactId> <version>1.54</version> </dependency> </dependencies>","title":"1. \u4e0b\u8f7d\u4e0e\u5b89\u88c5"},{"location":"SDK/JAVA-SDK/#2","text":"\u9996\u5148\u9700\u8981\u4e0ePlatONE\u8282\u70b9\u5efa\u7acb\u8fde\u63a5\uff0c\u4ee5\u83b7\u53d6\u94fe\u4e0a\u6709\u5173\u670d\u52a1\u3002PlatONE\u652f\u6301\u5efa\u7acbhttp\u8fde\u63a5\u548cwebsocket\u8fde\u63a5\u4e24\u79cd\u65b9\u5f0f\u3002 //http\u77ed\u8fde\u63a5 Web3j web3j = Web3j.build(new HttpService(\"http://127.0.0.1:6791\")); //ws\u957f\u8fde\u63a5 WebSocketClient webSocketClient = new WebSocketClient(newURI(\"ws://127.0.0.1:6791\")); WebSocketService ws = new WebSocketService(webSocketClient\uff0ctrue); ws.connect(); Web3j web3j = Web3j.build(ws); \u8bf4\u660e\uff1a \u5efa\u7acbWebsocket\u8fde\u63a5\u9700\u8981\u663e\u5f0f\u8c03\u7528connect\u65b9\u6cd5\uff08\u4e0eHTTP\u4e0d\u540c\uff09\u3002 PlatONE\u8282\u70b9\u9700\u8981\u5728\u542f\u52a8\u65f6\u6253\u5f00websocket\u76d1\u542c\u529f\u80fd\uff0c\u5373\u542f\u52a8\u65f6\u52a0\u5165\u53c2\u6570\uff1a--ws\u3002","title":"2. \u8fde\u63a5\u8282\u70b9"},{"location":"SDK/JAVA-SDK/#3","text":"\u4e3a\u4e86\u65b9\u4fbf\u5728java\u9879\u76ee\u4e2d\u8c03\u7528\u94fe\u4e0a\u5408\u7ea6\uff0c\u9700\u8981\u9996\u5148\u751f\u6210\u5408\u7ea6\u5bf9\u5e94\u7684java\u7c7b\uff0c\u5728\u9879\u76ee\u4e2d\u521b\u5efa\u5408\u7ea6\u7c7b\u5b9e\u4f8b\u540e\uff0c\u4fbf\u53ef\u4ee5\u8c03\u7528\u5408\u7ea6\u3002","title":"3. \u5408\u7ea6\u4ea4\u4e92"},{"location":"SDK/JAVA-SDK/#31","text":"\u7f16\u5199\u5408\u7ea6(\u4ee5demo\u4e3a\u4f8b)\uff0c\u7f16\u5199\u5408\u7ea6\u7684\u6b65\u9aa4\u8bf7\u53c2\u9605 Wasm\u5408\u7ea6\u5f00\u53d1 \u3002 #include <stdlib.h> #include <string.h> #include <string> #include <bcwasm/bcwasm.hpp> namespace demo { class FirstDemo : public bcwasm::Contract { public: FirstDemo(){} /// \u5b9e\u73b0\u7236\u7c7b: bcwasm::Contract \u7684\u865a\u51fd\u6570 /// \u8be5\u51fd\u6570\u5728\u5408\u7ea6\u9996\u6b21\u53d1\u5e03\u65f6\u6267\u884c\uff0c\u4ec5\u8c03\u7528\u4e00\u6b21 void init() { bcwasm::println(\"init success...\"); } public: void setName(const char *msg) { // \u5b9a\u4e49\u72b6\u6001\u53d8\u91cf bcwasm::setState(\"NAME_KEY\"\uff0cstd::string(msg)); } const char* getName() const { std::string value; bcwasm::getState(\"NAME_KEY\"\uff0cvalue); // \u8bfb\u53d6\u5408\u7ea6\u6570\u636e\u5e76\u8fd4\u56de return value.c_str(); } }; } // \u6b64\u5904\u5b9a\u4e49\u7684\u51fd\u6570\u4f1a\u751f\u6210ABI\u6587\u4ef6\u4f9b\u5916\u90e8\u8c03\u7528 BCWASM_ABI(demo::FirstDemo\uff0csetName) BCWASM_ABI(demo::FirstDemo\uff0cgetName) \u5408\u7ea6\u7f16\u8bd1\u540e\u4f1a\u4ea7\u751fdemo.cpp.abi.json\u548cdemo.wasm\uff0c\u5728\u751f\u6210java\u5408\u7ea6\u4ee3\u7801\u65f6\u9700\u8981\u7528\u5230\u8fd9\u4e24\u4e2a\u6587\u4ef6\u3002 \u4f7f\u7528\u5408\u7ea6\u9aa8\u67b6\u751f\u6210\u5de5\u5177\u751f\u6210java\u5408\u7ea6\u9aa8\u67b6: cd java_sdk_linux_v0.9.0/java-sdk/bin ./client-sdk wasm generate --javaTypes \\ </path/to/demo.wasm> \\ </path/to/demo.cpp.abi.json> \\ -o </path/to/src/main/java> \\ -p <com.your.organisation.name> \\ -t wasm \u8bf4\u660e\uff1a\u628a\u5c16\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u66ff\u6362\u6210\u81ea\u5df1\u7684\u5185\u5bb9\u3002 \u8fd0\u884c\u540e\u4f1a\u751f\u6210\u5408\u7ea6\u5bf9\u5e94\u7684java\u7c7b\u3002 java\u7c7b\u4e2d\u5305\u542b\u4e86\u5408\u7ea6\u4e2d\u7684\u65b9\u6cd5\uff0c\u65b9\u4fbf\u5728\u5e94\u7528\u5c42\u4e2d\u8c03\u7528\u5408\u7ea6\u3002","title":"3.1 \u5408\u7ea6\u9aa8\u67b6\u751f\u6210"},{"location":"SDK/JAVA-SDK/#32","text":"\u90e8\u7f72\u5408\u7ea6 //optional class NodeConfiguration { public static final String WALLETSOURCE = \"/home/username/Work/PlatONE/data/keystore/keyfile.json\"; public static final String DEMOBIN = \"/home/user/Work/client-sdk-0.4.1/contract/firstdemo.wasm\"; } //\u5efa\u7acb\u8fde\u63a5 Web3j web3j = Web3j.build(new HttpService(\"http://127.0.0.1:6791\")); //\u52a0\u8f7d\u94b1\u5305 Credentials credentials = WalletUtils.loadCredentials(\"<wallet password>\"\uff0cNodeConfiguration.WALLETSOURCE); //\u90e8\u7f72\u5408\u7ea6 byte[] dataBytes = Files.readBytes(new File(NodeConfiguration.DEMOBIN)); String binData = Hex.toHexString(dataBytes); Firstdemo demo = Firstdemo.deploy(web3j\uff0ccredentials\uff0cbinData\uff0cnew DefaultWasmGasProvider()).send(); \u52a0\u8f7d\u5408\u7ea6 //optional class NodeConfiguration { public static final String WALLETSOURCE = \"/home/username/Work/PlatONE/data/keystore/keyfile.json\"; public static final String DEMOBIN = \"/home/user/Work/client-sdk-0.4.0/contract/firstdemo.wasm\"; } //\u5efa\u7acb\u8fde\u63a5 Web3j web3j = Web3j.build(new HttpService(\"http://127.0.0.1:6791\")); //\u52a0\u8f7d\u94b1\u5305 Credentials credentials = WalletUtils.loadCredentials(\"<wallet password>\"\uff0cNodeConfiguration.WALLETSOURCE); //\u52a0\u8f7d\u5408\u7ea6 byte[] dataBytes = Files.readBytes(new File(NodeConfiguration.DEMOBIN)); String binData = Hex.toHexString(dataBytes); Firstdemo contract = Firstdemo.load(binData\uff0c\u201c<contract address>\u201d\uff0cweb3j\uff0ccredentials\uff0cnew DefaultWasmGasProvider()); \u8c03\u7528\u5408\u7ea6\u793a\u4f8b \u5728\u5408\u7ea6\u90e8\u7f72\u540e\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u5408\u7ea6\u8c03\u7528\u3002 \u5408\u7ea6\u5730\u5740 public static void main(String args[]) { Web3j web3j = Web3j.build(new HttpService(\"http://127.0.0.1:6791\")); try { // \u5bc6\u94a5\u8d26\u6237\uff0ckeyfile.json\u4e3aethkey\u5de5\u5177\u751f\u6210\u7684\u8d26\u6237\u6587\u4ef6\uff0c\u53c2\u7167\u300aPlatONE\u5bc6\u94a5\u5de5\u5177\u6587\u6863\u300b Credentials credentials = WalletUtils.loadCredentials(\"1\"\uff0c\"/home/wxuser/keyfile.json\"); // \u5408\u7ea6\u6570\u636e byte[] dataBytes = Files.readBytes(new File(\"/home/user/PlatONE-Workspace-0.2/contracts/build/appContract/demo/demo.wasm\")); String binData = Hex.toHexString(dataBytes); // \u52a0\u8f7d\u5408\u7ea6 Demo demo = Demo.load(binData\uff0c\"0x1d7f2695b43be56f52f24baa199420f8c10ac1d3\"\uff0cweb3j\uff0ccredentials\uff0cnew DefaultWasmGasProvider()); // \u8c03\u7528demo\u5408\u7ea6\u7684setName\u65b9\u6cd5\uff0c\u53c2\u6570\u8f93\u5165\u5b57\u7b26\u4e32\"platone\" TransactionReceipt ret = demo.setName(\"platone\").send(); System.out.println(\"Transaction Hash: \"+ret.getTransactionHash()); // \u8c03\u7528demo\u5408\u7ea6\u7684getName\u65b9\u6cd5 System.out.println(\"getName: \" + demo.getName().send()); }catch (Exception e){ System.out.println(e); } } \u5408\u7ea6\u540d\u79f0 public static void main(String[] args) { try { Web3j web3j = Web3j.build(new HttpService(\"http://127.0.0.1:6791\")); Credentials credentials = WalletUtils.loadCredentials(\"1\"\uff0c\"/home/wxuser/keyfile.json\"); byte[] dataBytes = Files.readBytes(new File(\"/home/user/PlatONE-Workspace-0.2/contracts/build/appContract/demo/demo.wasm\")); String binData = Hex.toHexString(dataBytes); // load contract CnsManager cns = CnsManager.load(null\uff0c\"0x0000000000000000000000000000000000000011\"\uff0cweb3j\uff0ccredentials\uff0cnew DefaultWasmGasProvider()); TransactionReceipt r = cns.cnsRegister(\"demo\"\uff0c\"1.0.0.0\"\uff0c\"0x1d7f2695b43be56f52f24baa199420f8c10ac1d3\").send(); if (r.isStatusOK()){ Demo d = Demo.load(null\uff0c\"demo\"\uff0cweb3j\uff0cc\uff0cnew DefaultWasmGasProvider()); d.setName(\"cns\").send(); System.out.println(d.getName().send()); } } catch (Exception e) { e.printStackTrace(); } finally { System.out.println(\"Done...\"); } }","title":"3.2 \u5408\u7ea6\u64cd\u4f5c"},{"location":"SDK/JAVA-SDK/#33","text":"\u8ba2\u9605\u533a\u5757: \u5728\u65b0\u533a\u5757\u4ea7\u751f\u65f6\uff0cclient\u53ef\u4ee5\u5f97\u5230\u8282\u70b9\u7684\u533a\u5757\u6570\u636e\u63a8\u9001\u3002 Subscription sub = web3j.blockObservable(false).subscribe( block -> { System.out.println(block.getBlock().getNumber()); }); \u8ba2\u9605event: \u5728\u5408\u7ea6\u4e2d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e8b\u4ef6\uff0cclient\u901a\u8fc7\u8ba2\u9605\u4e8b\u4ef6\u7684\u65b9\u5f0f\u6765\u83b7\u6089\u5408\u7ea6\u8c03\u7528\u4e2d\u6240\u89e6\u53d1\u7684\u4e8b\u4ef6\u3002 \u5408\u7ea6\u4e2d\u5b9a\u4e49\u5982\u4e0b\u7684event\uff0c\u6bcf\u6b21setName\u88ab\u8c03\u7528\u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1\u8be5event\u3002 // event\u5b9a\u4e49 BCWASM_EVENT(setName\uff0cconst char *) void setName(const char *msg) { // \u5b9a\u4e49\u72b6\u6001\u53d8\u91cf bcwasm::setState(\"NAME_KEY\"\uff0cstd::string(msg)); // \u65e5\u5fd7\u8f93\u51fa // \u4e8b\u4ef6\u8fd4\u56de BCWASM_EMIT_EVENT(setName\uff0c\"std::string(msg)\"); } String contractAddress = \"0x1d7f2695b43be56f52f24baa199420f8c10ac1d3\"; String eventHash = Hash.sha3String(\"setName\"); EthFilter filter = new EthFilter(DefaultBlockParameterName.EARLIEST\uff0cDefaultBlockParameterName.LATEST\uff0ccontractAddress).addSingleTopic(eventHash); Subscription subTx = web3j.ethLogObservable(filter).subscribe(log -> { System.out.println(\"output: \" + log.getData()); } \u8bf4\u660e\uff1aFilter\u5b9e\u4f8b\u5316\u7684\u8f93\u5165\uff0c\u7b2c\u4e09\u4e2a\u662f\u5408\u7ea6\u7684\u5730\u5740\uff0c\u7b2c\u56db\u4e2a\u662fTopic\u7684\u54c8\u5e0c\u503c\uff08SHA-3\uff09\uff0c\u8fd4\u56de\u7ed3\u679c\u4e2dlog\u7684Data\u5b57\u6bb5\u662f\u4e8b\u4ef6\u503c\u7684rlp\u7f16\u7801\u3002","title":"3.3 \u8ba2\u9605\u4e8b\u4ef6"},{"location":"SDK/JAVA-SDK/#34-web3-api","text":"web3j.ethBlockNumber(); // \u5f53\u524d\u6700\u65b0\u533a\u5757\u9ad8\u5ea6 web3j.ethGetTransactionByHash(\"0x...\"); // \u6839\u636e\u4ea4\u6613\u54c8\u5e0c\u591a\u53bb\u4ea4\u6613\u5185\u5bb9 web3j.ethGetTransactionReceipt(\"0x...\"); // \u6839\u636e\u4ea4\u6613\u54c8\u5e0c\u83b7\u53d6\u4ea4\u6613\u7684\u56de\u6267","title":"3.4 web3 api\u8c03\u7528"},{"location":"SDK/SDK%E6%A6%82%E8%BF%B0/","text":"SDK\u6982\u8ff0 PlatONE\u66b4\u9732\u4e86\u4e00\u7cfb\u5217RPC\u63a5\u53e3\u4f9b\u5916\u90e8\u8c03\u7528\uff0c\u4e0a\u5c42\u4e1a\u52a1\u7a0b\u5e8f\u53ef\u4ee5SDK\u6765\u8c03\u7528\u8fd9\u4e9b\u63a5\u53e3\uff0c\u4ee5\u5b8c\u6210\u4e0a\u5c42\u4e1a\u52a1\u4e0e\u94fe\u7684\u4ea4\u4e92\u3002\u5f00\u53d1\u8005\u53ea\u9700\u8981\u6839\u636e\u81ea\u8eab\u4e1a\u52a1\u7a0b\u5e8f\u7684\u8981\u6c42\uff0c\u7528SDK\u63d0\u4f9b\u7684API\u8fdb\u884c\u7f16\u7a0b\uff0c\u5373\u53ef\u5b9e\u73b0\u5bf9\u533a\u5757\u94fe\u7684\u64cd\u4f5c\u3002 \u76ee\u524d\uff0cSDK\u63a5\u53e3\u53ef\u5b9e\u73b0\u7684\u529f\u80fd\u5305\u62ec\uff08\u4f46\u4e0d\u9650\u4e8e\uff09\uff1a \u5408\u7ea6\u7f16\u8bd1\u3001\u90e8\u7f72\u3001\u67e5\u8be2 \u4ea4\u6613\u53d1\u9001\u3001\u4e0a\u94fe\u901a\u77e5\u3001\u53c2\u6570\u89e3\u6790\u3001\u56de\u6267\u89e3\u6790 \u94fe\u72b6\u6001\u67e5\u8be2\u3001\u94fe\u53c2\u6570\u8bbe\u7f6e \u94fe\u53c2\u6570\u7ba1\u7406\uff08\u7ba1\u7406\u5458\uff09 \u7ec4\u5458\u7ba1\u7406 \u6743\u9650\u8bbe\u7f6e","title":"SDK\u6982\u8ff0"},{"location":"SDK/SDK%E6%A6%82%E8%BF%B0/#sdk","text":"PlatONE\u66b4\u9732\u4e86\u4e00\u7cfb\u5217RPC\u63a5\u53e3\u4f9b\u5916\u90e8\u8c03\u7528\uff0c\u4e0a\u5c42\u4e1a\u52a1\u7a0b\u5e8f\u53ef\u4ee5SDK\u6765\u8c03\u7528\u8fd9\u4e9b\u63a5\u53e3\uff0c\u4ee5\u5b8c\u6210\u4e0a\u5c42\u4e1a\u52a1\u4e0e\u94fe\u7684\u4ea4\u4e92\u3002\u5f00\u53d1\u8005\u53ea\u9700\u8981\u6839\u636e\u81ea\u8eab\u4e1a\u52a1\u7a0b\u5e8f\u7684\u8981\u6c42\uff0c\u7528SDK\u63d0\u4f9b\u7684API\u8fdb\u884c\u7f16\u7a0b\uff0c\u5373\u53ef\u5b9e\u73b0\u5bf9\u533a\u5757\u94fe\u7684\u64cd\u4f5c\u3002 \u76ee\u524d\uff0cSDK\u63a5\u53e3\u53ef\u5b9e\u73b0\u7684\u529f\u80fd\u5305\u62ec\uff08\u4f46\u4e0d\u9650\u4e8e\uff09\uff1a \u5408\u7ea6\u7f16\u8bd1\u3001\u90e8\u7f72\u3001\u67e5\u8be2 \u4ea4\u6613\u53d1\u9001\u3001\u4e0a\u94fe\u901a\u77e5\u3001\u53c2\u6570\u89e3\u6790\u3001\u56de\u6267\u89e3\u6790 \u94fe\u72b6\u6001\u67e5\u8be2\u3001\u94fe\u53c2\u6570\u8bbe\u7f6e \u94fe\u53c2\u6570\u7ba1\u7406\uff08\u7ba1\u7406\u5458\uff09 \u7ec4\u5458\u7ba1\u7406 \u6743\u9650\u8bbe\u7f6e","title":"SDK\u6982\u8ff0"},{"location":"%E4%B8%BB%E9%A1%B5%E9%9D%A2/%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%E9%9B%86/","text":"\u5e94\u7528\u6848\u4f8b\u96c6 \u57fa\u4e8ePlatONE\u8054\u76df\u94fe\u57fa\u7840\u5e73\u53f0\uff0c\u5229\u7528\u5176\u63d0\u4f9b\u7684\u6280\u672f\u7279\u6027\uff0c\u53ef\u4ee5\u5b9e\u65bd\u5f00\u5c55\u548c\u884c\u4e1a\u76f8\u5951\u5408\u7684\u5404\u79cd\u4e1a\u52a1\u573a\u666f\uff0c\u5305\u62ec\u5982\u4e0b\u65b9\u9762\u3002 1. \u4f9b\u5e94\u94fe\u91d1\u878d \u53ef\u4e3a\u4f9b\u5e94\u94fe\u4e0a\u4e0b\u6e38\u4f01\u4e1a\u6784\u5efa\u4e00\u4e2a\u4fe1\u606f\u5bf9\u79f0\u5171\u4eab\u3001\u6838\u5fc3\u4f01\u4e1a\u4fe1\u7528\u4ef7\u503c\u53ef\u4f20\u9012\u3001\u5546\u7968\u53ef\u62c6\u5206\u6d41\u7a0b\u3001\u98ce\u9669\u53ef\u63a7\u7684\u65b0\u578b\u4f9b\u5e94\u94fe\u91d1\u878d\u878d\u8d44\u6a21\u5f0f\uff0c\u5e76\u4e3a\u76d1\u7ba1\u63d0\u4f9b\u6570\u636e\u8ffd\u6eaf\u4fbf\u5229\uff0c\u63d0\u5347\u884c\u4e1a\u6574\u4f53\u670d\u52a1\u6548\u7387\u3002 \u4f20\u7edf\u4f9b\u5e94\u94fe\u91d1\u878d\u7684\u75db\u70b9 : \uff081\uff09\u76d1\u7ba1\u96be\u4ee5\u7a7f\u900f \u4f9b\u5e94\u94fe\u5c42\u7ea7\u7684\u7e41\u590d\uff0c\u4f7f\u8d38\u6613\u771f\u5b9e\u6027\u548c\u4ea4\u6613\u900f\u660e\u6027\u65e0\u6cd5\u7b80\u5355\u901a\u8fc7\u7cfb\u7edf\u8fdb\u884c\u786e\u8ba4\u548c\u5ba1\u6838\uff0c\u9020\u6210\u4e86\u76d1\u7ba1\u7684\u4e0d\u4fbf\u5229\u6027\u3002 \uff082\uff09\u5546\u7968\u4e0d\u53ef\u62c6\u5206\u3001\u6d41\u8f6c \u4f20\u7edf\u7684\u5546\u7968\u4e0d\u53ef\u62c6\u5206\uff0c\u4f9b\u5e94\u5546\u65e0\u6cd5\u57fa\u4e8e\u5546\u7968\u518d\u6b21\u80cc\u4e66\u8f6c\u8ba9\uff0c\u6838\u5fc3\u4f01\u4e1a\u4fe1\u7528\u65e0\u6cd5\u6709\u6548\u4f20\u9012\u7ed9\u591a\u7ea7\u4f9b\u5e94\u5546\u4f53\u7cfb\u3002 \uff083\uff09\u91d1\u878d\u673a\u6784\u98ce\u9669\u655e\u53e3\u8f83\u5927 \u4f9b\u5e94\u5546\u3001\u7ecf\u9500\u5546\u4e4b\u95f4\u7684\u7ea6\u5b9a\u6216\u5408\u540c\u4fe1\u606f\u65e0\u6cd5\u5f97\u5230\u6709\u6548\u786e\u8ba4\u6216\u6838\u5b9e\uff0c\u4f7f\u5f97\u91d1\u878d\u673a\u6784\u5b58\u5728\u8f83\u5927\u7684\u6388\u4fe1\u98ce\u9669\u3002 \uff084\uff09\u6838\u5fc3\u4f01\u4e1a\u4fe1\u7528\u65e0\u6cd5\u4f20\u9012 \u5728\u4f20\u7edf\u4f9b\u5e94\u94fe\u91d1\u878d\u591a\u7ea7\u4f9b\u5e94\u5546\u4f53\u7cfb\u4e0b\uff0c\u4fe1\u606f\u96be\u4ee5\u6709\u6548\u4f20\u9012\uff0c\u4f7f\u5f97\u4e00\u7ea7\u4f9b\u5e94\u5546\u4ee5\u5916\u7684\u5176\u4ed6\u5c42\u7ea7\u4f9b\u5e94\u5546\u65e0\u6cd5\u4eab\u53d7\u5230\u6838\u5fc3\u4f01\u4e1a\u7684\u4fe1\u7528\uff0c\u878d\u8d44\u8f83\u96be\u3002 \u57fa\u4e8e\u533a\u5757\u94fe\u6280\u672f\u548c\u5bc6\u7801\u5b66\u7b97\u6cd5\uff0cPlatONE\u4e3a\u4f9b\u5e94\u94fe\u91d1\u878d\u63d0\u4f9b\u4e86\u8d44\u4ea7\u53ef\u6570\u5b57\u5316\u786e\u8ba4\u3001\u5904\u7406\u3001\u6d41\u8f6c\u7684\u5e73\u53f0\u89e3\u51b3\u65b9\u6848\uff0c\u4e3b\u8981\u529f\u80fd\u6a21\u5757\u6709\uff1a \uff081\uff09\u8d44\u4ea7\u767b\u8bb0 \u4f01\u4e1a\u503a\u6743\u53ef\u901a\u8fc7\u533a\u5757\u94fe\u8fdb\u884c\u767b\u8bb0\u5b58\u50a8\uff0c\u5f62\u6210\u4e0d\u53ef\u7be1\u6539\u7684\u6570\u636e\u8bb0\u5f55\uff0c\u5b9e\u73b0\u5404\u53c2\u4e0e\u673a\u6784\u95f4\u7684\u4fe1\u606f\u5b9e\u65f6\u5171\u4eab\u3002 \uff082\uff09\u8d44\u4ea7\u786e\u6743 \u901a\u8fc7\u76f8\u5173\u53c2\u4e0e\u65b9\u7684\u786e\u8ba4\uff0c\u7531\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u5c06\u5e94\u6536\u8d26\u6b3e\u548c\u6838\u5fc3\u4f01\u4e1a\u4fe1\u7528\u8f6c\u5316\u6210\u6570\u5b57\u8d44\u4ea7\u5e76\u767b\u8bb0\u5230\u76f8\u5e94\u8d26\u6237\uff0c\u5b9e\u73b0\u8d44\u4ea7\u7684\u786e\u6743\u3002 \uff083\uff09\u8d44\u4ea7\u6570\u5b57\u5316 \u4ee5\u94fe\u4e0a\u786e\u6743\u6570\u636e\u4fe1\u606f\u4e3a\u57fa\u7840\uff0c\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u4e3a\u4f01\u4e1a\u5efa\u7acb\u53ef\u5728\u533a\u5757\u94fe\u8054\u76df\u95f4\u8fdb\u884c\u4ea4\u6613\u548c\u6d41\u8f6c\u7684\u6570\u5b57\u8d44\u4ea7\u3002 \uff084\uff09\u6570\u5b57\u8d44\u4ea7\u7ba1\u7406 \u652f\u6301\u4e0d\u540c\u5c5e\u6027\u8d44\u4ea7\u7684\u7edf\u4e00\u7ba1\u7406\u548c\u67e5\u8be2\uff0c\u901a\u8fc7\u9884\u8bbe\u7684\u667a\u80fd\u5408\u7ea6\u5b9e\u73b0\u94fe\u4e0a\u8d44\u4ea7\u7684\u7684\u81ea\u52a8\u5316\u5206\u914d\u3001\u62c6\u5206\u3001\u6d41\u8f6c\u548c\u6ce8\u9500\u3002 \uff085\uff09\u76d1\u7ba1\u5ba1\u8ba1 \u63d0\u4f9b\u76d1\u7ba1\u5ba1\u8ba1\u5165\u53e3\uff0c\u8d4b\u4e88\u76d1\u7ba1\u673a\u6784\u5ba1\u8ba1\u6743\u9650\uff0c\u53ef\u67e5\u770b\u5e73\u53f0\u4e0a\u6240\u6709\u8d44\u4ea7\u7684\u4ea4\u6613\u3002 \uff086\uff09\u591a\u5c42\u7ea7\u9690\u79c1\u4fdd\u62a4 \u8fd0\u7528\u5e7f\u64ad\u52a0\u5bc6\u3001\u540c\u6001\u52a0\u5bc6\u3001\u96f6\u77e5\u8bc6\u8bc1\u660e\u7b49\u52a0\u5bc6\u7b97\u6cd5\u4fdd\u62a4\u4f9b\u5e94\u94fe\u91d1\u878d\u5404\u53c2\u4e0e\u65b9\u7684\u6570\u636e\u5b89\u5168\u548c\u9690\u79c1\u4fdd\u62a4\u3002 \u9002\u7528\u573a\u666f : \uff081\uff09\u6388\u4fe1\u878d\u8d44 \u91d1\u878d\u673a\u6784\u5bf9\u5ba2\u6237\u6388\u4e88\u4fe1\u7528\u989d\u5ea6\uff0c\u5728\u8fd9\u4e2a\u989d\u5ea6\u5185\u5ba2\u6237\u5411\u94f6\u884c\u501f\u6b3e\u53ef\u51cf\u5c11\u7e41\u7410\u7684\u8d37\u6b3e\u68c0\u67e5\u3002 \uff082\uff09\u5e94\u6536\u6b3e\u878d\u8d44 \u4f01\u4e1a\u4ee5\u81ea\u5df1\u7684\u5e94\u6536\u8d26\u6b3e\u8f6c\u8ba9\u7ed9\u94f6\u884c\u5e76\u7533\u8bf7\u8d37\u6b3e\u3002 \uff083\uff09\u7968\u636e\u878d\u8d44 \u5c06\u5546\u4e1a\u7968\u636e\u8f6c\u8ba9\u7ed9\u94f6\u884c\uff0c\u94f6\u884c\u6309\u7968\u9762\u91d1\u989d\u6263\u9664\u8d34\u73b0\u5229\u606f\u540e\u5c06\u4f59\u989d\u652f\u4ed8\u7ed9\u6536\u6b3e\u4eba\u3002 PlatONE\u5df2\u88ab\u7528\u4e8e\u6253\u9020\u56fd\u5185\u9996\u6b3e\u57fa\u4e8e\u533a\u5757\u94fe\u6280\u672f\uff0c\u4e13\u6ce8\u4e8e\u6c7d\u8f66\u4f9b\u5e94\u94fe\uff0c\u670d\u52a1\u4e8e\u6c7d\u8f66\u4ea7\u4e1a\u6838\u5fc3\u4f01\u4e1a\u7684\u91d1\u878d\u4ea7\u54c1\u3002\u4ea7\u54c1\u63d0\u4f9b\u4f9b\u5e94\u94fe\u5e94\u6536\u8d27\u6b3e\u878d\u8d44\u7684\u9ad8\u6548\u89e3\u51b3\u65b9\u6848\uff0c\u89e3\u51b3\u4e86\u591a\u65b9\u4fe1\u4efb\u7684\u95ee\u9898\uff0c\u5728\u4fdd\u969c\u6570\u636e\u5b89\u5168\u7684\u6761\u4ef6\u4e0b\u89e3\u51b3\u6570\u636e\u4e3b\u6743\u95ee\u9898\u3002\u53e6\u5916\uff0cPlatONE\u8fd8\u88ab\u4e1a\u5185\u9ad8\u79d1\u6280\u516c\u53f8\u548c\u94f6\u884c\u5171\u540c\u6253\u9020\u6210\u57fa\u4e8e\u533a\u5757\u94fe\u4f9b\u5e94\u94fe\u91d1\u878d\u5e73\u53f0\uff0c\u5e73\u53f0\u6d3b\u8dc3\u7528\u6237\u5df2\u8fbe56\u5bb6\uff0c\u878d\u8d44\u989d\u7d2f\u8ba1\u81f3\u6570\u5343\u4e07\u3002 2. \u9632\u4f2a\u6eaf\u6e90 \u5229\u7528\u533a\u5757\u94fe\u94fe\u4e0a\u4fe1\u606f\u4e0d\u53ef\u7be1\u6539\u548c\u53ef\u8ffd\u6eaf\u7684\u7279\u6027\uff0c\u4e0e\u73b0\u6709\u4e1a\u52a1\u573a\u666f\u76f8\u7ed3\u5408\uff0c\u63d0\u4f9b\u6570\u636e\u5b58\u50a8\u3001\u6eaf\u6e90\u548c\u9a8c\u8bc1\u7684\u4e00\u7ad9\u5f0f\u670d\u52a1\uff0c\u5b9e\u73b0\u53ef\u4fe1\u7684\u5546\u54c1\u9632\u4f2a\u6eaf\u6e90\u3002\u57fa\u4e8e\u533a\u5757\u94fe\u3001\u7269\u8054\u7f51\u548c\u667a\u80fd\u9632\u4f2a\u7b49\u6280\u672f\u8bb0\u5f55\u4ea7\u54c1\u751f\u4ea7\u5404\u73af\u8282\u7684\u4fe1\u606f\uff0c\u63d0\u4f9b\u4ea7\u54c1\u7684\u533a\u5757\u94fe\u6eaf\u6e90\u670d\u52a1\u548c\u4f01\u4e1a\u8425\u9500\u670d\u52a1\u3002 PlatONE\u5df2\u5728\u9632\u4f2a\u6eaf\u6e90\u9886\u57df\u8fdb\u884c\u4e86\u76f8\u5173\u65b9\u6848\u8bbe\u8ba1\u548cPOC\uff0c\u53ef\u5b9e\u73b0\u4ee5\u4e0b\u4e1a\u52a1\u6d41\u7a0b\uff1a \uff081\uff09\u6570\u636e\u5b58\u50a8\u4e0e\u767b\u8bb0\uff1a \u7269\u8054\u7f51\u8bbe\u5907\u626b\u63cf\u4fe1\u606f\u540e\u76f4\u63a5\u4e0a\u94fe\uff0c\u786e\u4fdd\u4e00\u624b\u6570\u636e\u6765\u6e90\u7684\u771f\u5b9e\u6027\u3002 \u4ea7\u54c1\u5168\u6d41\u7a0b\u4fe1\u606f\u533a\u5757\u94fe\u5b58\u6863\uff0c\u4e0d\u53ef\u7be1\u6539\u3002 \uff082\uff09\u6570\u636e\u67e5\u8be2\u4e0e\u9a8c\u8bc1\uff1a \u5404\u73af\u8282\u7528\u6237\u6216\u6d88\u8d39\u8005\u53ef\u81ea\u4e3b\u9009\u62e9\u533a\u5757\u94fe\u8282\u70b9\u8fdb\u884c\u4fe1\u606f\u67e5\u8be2\u3002 \u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u7ef4\u62a4\u6570\u636e\u5904\u7406\u903b\u8f91\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u539f\u59cb\u6570\u636e\u7684\u9a8c\u8bc1\u6e20\u9053\u3002 \uff083\uff09\u6570\u636e\u7edf\u8ba1\u4e0e\u5206\u6790\uff1a \u652f\u6301\u6d88\u8d39\u8005\u67e5\u8be2\u6570\u636e\u7684\u7edf\u8ba1\uff0c\u652f\u6301\u7cbe\u51c6\u8425\u9500\u3002 \u57fa\u4e8e\u626b\u7801\u6570\u636e\u8fdb\u884c\u9500\u91cf\u5206\u6790\uff0c\u6307\u5f15\u9500\u552e\u7b56\u7565\u3002 \u57fa\u4e8ePlatONE\u8054\u76df\u94fe\u5b9e\u73b0\u7684\u9632\u4f2a\u6eaf\u6e90\u65b9\u6848\u5177\u5907\u4ee5\u4e0b\u4f18\u70b9\uff1a \uff081\uff09\u7269\u8054\u7f51\u589e\u5f3a\u6570\u636e\u771f\u5b9e\u6027 \u5c06\u533a\u5757\u94feSDK\u5d4c\u5165\u4ea7\u7ebf\u626b\u7801\u8bbe\u5907\uff0c \u5b9e\u73b0\u626b\u7801\u6570\u636e\u76f4\u63a5\u4e0a\u94fe\u8bb0\u5f55\uff0c\u51cf\u5c11\u4eba\u5de5\u5e72\u9884\uff0c\u63d0\u9ad8\u6570\u636e\u771f\u5b9e\u6027\u3002 \uff082\uff09\u6570\u636e\u9690\u79c1\u4fdd\u62a4 \u52a0\u5bc6\u7b97\u6cd5\u4fdd\u62a4\u5e73\u53f0\u53c2\u4e0e\u673a\u6784\u95f4\u7684\u6eaf\u6e90\u6838\u5fc3\u6570\u636e\u5b89\u5168\uff0c\u51cf\u5c11\u5f00\u653e\u670d\u52a1\u7684\u4ea4\u6613\u6469\u64e6\uff0c\u4fdd\u969c\u5e73\u53f0\u4fe1\u606f\u5b89\u5168\u3002 \uff083\uff09\u5e73\u53f0\u5316\u8fd0\u8425 \u5efa\u7acb\u884c\u4e1a\u6eaf\u6e90\u5e73\u53f0\u751f\u6001\uff0c\u8fdb\u884c\u751f\u4ea7\u6d41\u901a\u6570\u636e\u7684\u7cbe\u7ec6\u5316\u8fd0\u8425\u6316\u6398\uff0c\u534f\u52a9\u4f01\u4e1a\u751f\u4ea7\u51b3\u7b56\u3002 3. \u79ef\u5206\u7ba1\u7406 \u57fa\u4e8ePlatONE\u53ef\u5b9e\u65bd\u4e00\u7ad9\u5f0f\u79ef\u5206\u7ba1\u7406\u5e73\u53f0\uff0c\u5f15\u5165\u79ef\u5206\u53d1\u884c\u65b9\u3001\u5546\u6237\u3001\u6d88\u8d39\u8005\u3002\u5c06\u79ef\u5206\u7684\u53d1\u884c\u3001\u6d41\u901a\u3001\u6d88\u8d39\u7b49\u884c\u4e3a\u5ba1\u8ba1\u4e0a\u94fe\u3002 \u73b0\u6709\u79ef\u5206\u4f53\u7cfb\u7684\u75db\u70b9 : \uff081\uff09\u79ef\u5206\u4f7f\u7528\u4e0d\u4fbf \u5355\u4e00\u4f01\u4e1a\u7684\u79ef\u5206\u5b58\u5728\u4f7f\u7528\u9650\u5236\u548c\u5151\u6362\u5c40\u9650\uff0c\u96be\u4ee5\u63d0\u5347\u6d88\u8d39\u8005\u79ef\u5206\u4f7f\u7528\u79ef\u6781\u6027\uff0c\u65e0\u6cd5\u5f62\u6210\u79ef\u5206\u5956\u52b1\u7b56\u7565\u7684\u826f\u6027\u5faa\u73af\u3002 \uff082\uff09\u79ef\u5206\u96be\u4ee5\u6d41\u901a \u7f3a\u5c11\u4fbf\u6377\u7684\u5f02\u4e1a\u901a\u5151\u6e20\u9053\uff0c\u8de8\u884c\u4e1a\u6216\u673a\u6784\u7684\u79ef\u5206\u7ed3\u7b97\u8f83\u590d\u6742\uff0c\u96be\u4ee5\u5f62\u6210\u5e7f\u6cdb\u7684\u79ef\u5206\u8f6c\u8ba9\u3001\u8d60\u9001\u3001\u8de8\u5e73\u53f0\u4f7f\u7528\u6e20\u9053\u3002 \uff083\uff09\u7cfb\u7edf\u5efa\u8bbe\u6210\u672c\u9ad8 \u81ea\u5efa\u79ef\u5206\u7cfb\u7edf\u6210\u672c\u9ad8\uff0c\u6d89\u53ca\u5408\u4f5c\u4f19\u4f34\u95f4\u7684\u79ef\u5206\u5151\u6362\uff0c\u5219\u9700\u8981\u7cfb\u7edf\u5bf9\u63a5\u5e76\u8bbe\u7f6e\u5151\u6362\u6bd4\u4f8b\uff0c\u589e\u52a0\u4e86\u7ba1\u7406\u548c\u7ef4\u62a4\u6210\u672c\u3002 \u65b9\u6848\u8be6\u60c5 : \u57fa\u4e8ePlatONE\u6253\u9020\u7684\u79ef\u5206\u901a\u5151\u4e92\u6362\u5e73\u53f0\uff0c\u53ef\u652f\u6301\u4e0d\u540c\u4f01\u4e1a\u4ee5\u5408\u7ea6\u7684\u65b9\u5f0f\u5feb\u901f\u8fdb\u884c\u79ef\u5206\u7684\u53d1\u884c\u3001\u5151\u6362\u6bd4\u4f8b\u8bbe\u7f6e\u548c\u4ea4\u6613\u7ed3\u7b97\u3002 \uff081\uff09 \u79ef\u5206\u53d1\u884c \u79ef\u5206\u53d1\u884c\u5546\u53ef\u901a\u8fc7\u5e73\u53f0\u81ea\u4e3b\u7ef4\u62a4\u79ef\u5206\u53d1\u884c\u6570\u91cf\uff0c\u8bbe\u5b9a\u79ef\u5206\u5956\u52b1\u6bd4\u7387\u3002 \uff082\uff09\u79ef\u5206\u5151\u6362 \u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u7ef4\u62a4\u79ef\u5206\u5151\u6362\u6bd4\u4f8b\uff0c\u5b9e\u73b0\u6d88\u8d39\u8005\u6d88\u8d39\u65f6\u79ef\u5206\u7684\u81ea\u52a8\u589e\u51cf\u3002 \uff083\uff09\u79ef\u5206\u901a\u5151 \u901a\u8fc7\u4e0a\u5c42\u5408\u7ea6\uff0c\u53ef\u5b9e\u73b0\u8de8\u673a\u6784\u95f4\u7684\u79ef\u5206\u4f7f\u7528\uff0c\u5e76\u6309\u7167\u5404\u4f01\u4e1a\u8bbe\u7f6e\u7684\u79ef\u5206\u5151\u6362\u6bd4\u4f8b\uff0c\u5feb\u901f\u5b8c\u6210\u79ef\u5206\u8f6c\u6362\u548c\u8d26\u52a1\u6838\u5bf9\u3002 \uff084\uff09\u79ef\u5206\u67e5\u8be2 \u79ef\u5206\u53c2\u4e0e\u65b9\u6216\u6d88\u8d39\u8005\u53ef\u5728\u94fe\u4e0a\u5b9e\u65f6\u67e5\u8be2\u79ef\u5206\u5956\u52b1\u548c\u4ea4\u6613\u8bb0\u5f55\u3002 \uff085\uff09\u79ef\u5206\u5bf9\u8d26 \u6839\u636e\u79ef\u5206\u94fe\u4e0a\u6d41\u8f6c\u8bb0\u5f55\uff0c\u652f\u6301\u79ef\u5206\u53d1\u884c\u5546\u4e0e\u5546\u5bb6\u3001\u79ef\u5206\u53d1\u884c\u5546\u4e4b\u95f4\u7684\u81ea\u52a8\u5bf9\u8d26\u3002 \u9002\u7528\u573a\u666f : \uff081\uff09\u79ef\u5206\u5546\u57ce \u7528\u6237\u53ef\u51ed\u79ef\u5206\u5151\u6362\u7269\u54c1\u6216\u670d\u52a1\u3002 \uff082\uff09\u5458\u5de5\u798f\u5229 \u4f01\u4e1a\u53ef\u7528\u79ef\u5206\u6fc0\u52b1\u6216\u5956\u52b1\u5458\u5de5\uff0c\u5458\u5de5\u53ef\u4f7f\u7528\u79ef\u5206\u5151\u6362\u798f\u5229\u3002 \uff083\uff09\u4f1a\u5458\u79ef\u5206 \u5546\u6237\u7ed9\u6d88\u8d39\u8005\u53d1\u653e\u7684\u4f1a\u5458\u5361\uff08\u6216\u8d26\u6237\uff09\u8fdb\u884c\u79ef\u5206\uff0c\u79ef\u5206\u4e00\u822c\u9650\u4e8e\u5f53\u5730\u6216\u8005\u53d1\u5361\u5546\u6237\u4f7f\u7528\u3002 \uff084\uff09\u5f02\u4e1a\u79ef\u5206\u901a\u5151\u4e92\u6362 \u8de8\u884c\u4e1a\u79ef\u5206\u8054\u76df\u4e4b\u95f4\u79ef\u5206\u4e92\u5151\uff0c\u4f8b\u5982\uff1a\u822a\u7a7a\u79ef\u5206\u5151\u6362\u9152\u5e97\u4f4f\u5bbf\u3002 4. \u80a1\u6743\u767b\u8bb0 \u57fa\u4e8ePlatONE\u53ef\u5b9e\u73b0\u4f01\u4e1a\u80a1\u6743\u4fe1\u606f\u7684\u53ca\u65f6\u767b\u8bb0\u786e\u8ba4\u4e0e\u7ef4\u62a4\uff0c\u901a\u8fc7\u5206\u5e03\u5f0f\u67b6\u6784\u964d\u4f4e\u673a\u6784\u5bf9\u63a5\u95e8\u69db\uff0c\u5b9e\u73b0\u80a1\u6743\u6570\u636e\u7684\u5b9e\u65f6\u5b89\u5168\u5171\u4eab\uff0c\u4fdd\u8bc1\u91cd\u8981\u4fe1\u606f\u62ab\u9732\u7684\u51c6\u786e\u6027\u548c\u900f\u660e\u6027\uff0c\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u66f4\u4e3a\u4fbf\u5229\u548c\u9ad8\u6548\u7684\u91d1\u878d\u670d\u52a1\u652f\u6301\u3002 \u4f20\u7edf\u80a1\u6743\u767b\u8bb0\u6d41\u7a0b\u7684\u75db\u70b9 : \uff081\uff09\u4fe1\u606f\u540c\u6b65\u6ede\u540e \u4f9d\u6258\u5de5\u5546\u5c40\u7684\u80a1\u6743\u767b\u8bb0\uff0c\u5177\u6709\u6ede\u540e\u6027\uff0c\u80a1\u6743\u7684\u53d8\u66f4\u4fe1\u606f\u4e0d\u80fd\u5b9e\u65f6\u540c\u6b65\uff0c\u4e0d\u5229\u4e8e\u6f5c\u5728\u6295\u8d44\u8005\u67e5\u770b\u516c\u53f8\u771f\u5b9e\u80a1\u6743\u4fe1\u606f\u3002 \uff082\uff09\u80a1\u6743\u6240\u5c5e\u6743\u7ef4\u62a4\u5173\u7cfb\u8584\u5f31 \u4f01\u4e1a\u9891\u7e41\u7684\u80a1\u6743\u53d8\u66f4\uff0c\u4f1a\u7ed9\u80a1\u4e1c\u540d\u518c\u7684\u7ef4\u62a4\u589e\u52a0\u56f0\u96be\uff0c\u4e0d\u5229\u4e8e\u5386\u53f2\u4ea4\u6613\u7684\u7ef4\u62a4\u548c\u8ddf\u8e2a\u3002 \uff083\uff09\u4f20\u7edf\u65b9\u5f0f\u4e0d\u4fbf\u5229 \u7eb8\u8d28\u6750\u6599\u4f20\u9012\u548c\u4eba\u5de5\u529e\u7406\u7684\u4e0d\u4fbf\u5229\u3002 \u65b9\u6848\u8be6\u60c5 : \u57fa\u4e8ePlatONE\u6784\u5efa\u7684\u80a1\u6743\u767b\u8bb0\u3001\u67e5\u8be2\u5e73\u53f0\uff0c\u53ef\u4e3a\u4f01\u4e1a\u3001\u80a1\u4e1c\u63d0\u4f9b\u53ef\u9760\u7684\u80a1\u6743\u767b\u8bb0\u3001\u53d8\u66f4\u53ca\u4ea4\u6613\u6a21\u5f0f\uff0c\u5e76\u652f\u6301\u4e0e\u5de5\u5546\u3001\u4fe1\u606f\u670d\u52a1\u673a\u6784\u7684\u5bf9\u63a5\uff0c\u63d0\u5347\u573a\u5916\u80a1\u6743\u767b\u8bb0\u3001\u7ef4\u62a4\u6548\u7387\u548c\u53ef\u4fe1\u5ea6\u3002\u5177\u4f53\u529f\u80fd\u6a21\u5757\u6709\uff1a \uff081\uff09\u80a1\u6743\u4fe1\u606f\u767b\u8bb0 \u5728\u94fe\u4e0a\u8fdb\u884c\u80a1\u6743\u4fe1\u606f\u7684\u767b\u8bb0\u548c\u5b58\u50a8\uff0c\u533a\u5757\u94fe\u7684\u8282\u70b9\u5171\u8bc6\u7279\u6027\u53ef\u4fdd\u8bc1\u53c2\u4e0e\u65b9\u95f4\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\u533a\u5757\u94fe\u5b8c\u6574\u8bb0\u5f55\u4e86\u80a1\u6743\u6240\u6709\u6743\u4fe1\u606f\u548c\u53d8\u66f4\u8bb0\u5f55\uff0c\u786e\u4fdd\u6570\u636e\u7684\u4e0d\u53ef\u7be1\u6539\u3002 \uff082\uff09\u80a1\u4e1c\u540d\u518c\u7ef4\u62a4 \u4f01\u4e1a\u53ef\u5c06\u80a1\u4e1c\u540d\u518c\u767b\u8bb0\u4e0a\u94fe\uff0c\u80a1\u4e1c\u53ef\u5728\u7b2c\u4e00\u65f6\u95f4\u83b7\u5f97\u80a1\u4e1c\u540d\u518c\u7684\u66f4\u65b0\u4fe1\u606f\u5e76\u901a\u8fc7\u7b7e\u540d\u8fdb\u884c\u786e\u8ba4\uff0c\u4ee5\u6b64\u6765\u786e\u4fdd\u80a1\u4e1c\u540d\u518c\u7684\u4e00\u81f4\u6027\u548c\u6709\u6548\u6027\u3002 \uff083\uff09\u80a1\u6743\u4fe1\u606f\u540c\u6b65 \u4e0e\u5de5\u5546\u6216\u8005\u670d\u52a1\u673a\u6784\u95f4\u7684\u4fe1\u606f\u540c\u6b65\u548c\u786e\u8ba4\uff0c\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u80a1\u6743\u767b\u8bb0\u5e73\u53f0\uff0c\u53ef\u5f62\u6210\u4f01\u4e1a\u53ef\u8ffd\u6eaf\u3001\u53ef\u5ba1\u8ba1\u3001\u53ef\u9760\u7684\u4f01\u4e1a\u4fe1\u606f\u53ca\u80a1\u6743\u767b\u8bb0\u53d8\u66f4\u6863\u6848\u3002 \u9002\u7528\u573a\u666f : \uff081\uff09\u521b\u4e1a\u516c\u53f8\u80a1\u6743\u7ba1\u7406 \u521b\u4e1a\u516c\u53f8\u5458\u5de5\u6301\u80a1\u3001\u80a1\u6743\u6fc0\u52b1\u3001\u9884\u5206\u914d\u7b49\u3002 \uff082\uff09\u573a\u5916\u5e02\u573a\u80a1\u6743\u767b\u8bb0 \u573a\u5916\u80a1\u6743\u6258\u7ba1\u3001\u6302\u724c\u3001\u4ea4\u6613\u7b49\u3002 5. \u7269\u6d41 \u5728\u73b0\u6709\u7684\u6574\u8f66\u7269\u6d41\u8fd0\u8f93\u4e1a\u52a1\u4e2d\uff0c\u4f7f\u7528\u4f20\u7edf\u7684\u7eb8\u8d28\u8fd0\u5355\u4f5c\u4e3a\u7269\u6d41\u8fc7\u7a0b\u4e2d\u7684\u4f5c\u4e1a\u4ea4\u63a5\u51ed\u8bc1\u548c\u7ed3\u7b97\u51ed\u8bc1\uff0c\u5e76\u901a\u8fc7\u7ecf\u9500\u5e97\u786e\u8ba4\u540e\u6d41\u8f6c\u56de\u4e3b\u673a\u5382\u8fdb\u884c\u6838\u5bf9\u7ed3\u7b97\u3002\u8be5\u65b9\u5f0f\u5177\u6709\u8fd0\u5355\u6d41\u8f6c\u5468\u671f\u957f\u3001\u6548\u7387\u4f4e\u3001\u7ed3\u7b97\u6838\u5bf9\u7e41\u91cd\u3001\u6210\u672c\u9ad8\u7b49\u7f3a\u70b9\u3002 2018\u5e7411\u670830\u65e5\uff0c\u4e07\u5411\u533a\u5757\u94fe\u4e0e\u7269\u6d41\u3001\u94f6\u884c\u7b49\u5408\u4f5c\u4f19\u4f34\u4e8e\u4e0a\u6d77\u8054\u5408\u5ba3\u5e03\uff0c\u57fa\u4e8e\u533a\u5757\u94fe\u6280\u672f\u7684\u201c\u8fd0\u94fe\u76df-\u6c7d\u8f66\u4f9b\u5e94\u94fe\u7269\u6d41\u670d\u52a1\u5e73\u53f0\u201d\u6b63\u5f0f\u4e0a\u7ebf\u3002\u5176\u4e2d\u6700\u65b0\u7248\u7684\u5e73\u53f0\u4e2d\u6240\u8fd0\u7528\u7684\u533a\u5757\u94fe\u6280\u672f\u6b63\u662fPlatONE\uff0c\u800c\u8be5\u5e73\u53f0\u662f\u56fd\u5185\u9996\u4e2a\u533a\u5757\u94fe\u6280\u672f\u5728\u6c7d\u8f66\u6574\u8f66\u7269\u6d41\u884c\u4e1a\u7684\u843d\u5730\u6848\u4f8b\uff0c\u76ee\u524d\u8d8a\u6765\u8d8a\u591a\u7684\u7528\u6237\u52a0\u5165\u8fd0\u94fe\u76df\u5e73\u53f0\u3002 \u6700\u65b0\u4e00\u4ee3\u7684\u8fd0\u94fe\u76df\u662f\u4e00\u4e2a\u57fa\u4e8ePlatONE\u533a\u5757\u94fe\u6280\u672f\uff0c\u4ee5\u6c7d\u8f66\u6574\u8f66\u7269\u6d41\u4f5c\u4e3a\u5b9e\u9645\u4e1a\u52a1\u573a\u666f\uff0c\u96c6\u7269\u6d41\u3001\u7ed3\u7b97\u4e0e\u4f9b\u5e94\u94fe\u91d1\u878d\u4e09\u5927\u529f\u80fd\u6a21\u5757\u7684\u7efc\u5408\u670d\u52a1\u5e73\u53f0\uff0c\u65e8\u5728\u5229\u7528\u533a\u5757\u94fe\u6280\u672f\uff0c\u901a\u8fc7\u89e3\u51b3\u4ef7\u503c\u4f20\u9012\u8fc7\u7a0b\u4e2d\u535a\u5f08\u591a\u65b9\u4e92\u4fe1\u7b49\u75db\u70b9\uff0c\u4e3a\u5b9e\u4f53\u7ecf\u6d4e\u6ce8\u5165\u65b0\u7684\u529b\u91cf\u6e90\u6cc9\u3002 \u9996\u5148\uff0c\u8fd0\u94fe\u76df\u5b9e\u73b0\u4e86\u7269\u6d41\u8fd0\u8f93\u8fc7\u7a0b\u4e2d\u7684\u8ba2\u5355\u3001\u8fd0\u5355\u7535\u5b50\u5316\uff0c\u4ee5\u53ca\u4e0a\u4e0b\u6e38\u4f01\u4e1a\u5728\u7ebf\u5bf9\u8d26\u6a21\u5f0f\uff0c\u80fd\u591f\u6709\u6548\u964d\u4f4e\u4f20\u7edf\u7eb8\u8d28\u5355\u636e\u7684\u6210\u672c\u3002 \u7b2c\u4e8c\uff0c\u4e1a\u52a1\u6d41\u7a0b\u94fe\u4e0a\u7ba1\u7406\uff0c\u4e0a\u4e0b\u6e38\u4f01\u4e1a\u53ef\u5b9e\u73b0\u6570\u636e\u5171\u4eab\uff0c\u63d0\u9ad8\u6574\u4f53\u8fd0\u4f5c\u6548\u7387\uff1b \u7b2c\u4e09\uff0c\u91d1\u878d\u673a\u6784\u4f9d\u6258\u6c7d\u8f66\u4e3b\u673a\u5382\u5546\u7684\u4fe1\u4efb\u4f20\u9012\uff0c\u4ee5\u53ca\u5728\u7ebf\u5e94\u6536\u8d26\u6b3e\u8bb0\u5f55\u548c\u53d1\u7968\uff0c\u4e3a\u627f\u8fd0\u5546\u63d0\u4f9b\u878d\u8d44\u670d\u52a1\uff0c\u4e2d\u5c0f\u627f\u8fd0\u5546\u4e5f\u80fd\u83b7\u5f97\u66f4\u591a\u878d\u8d44\u673a\u4f1a\u3002 \u7b2c\u56db\uff0c\u533a\u5757\u94fe\u53ef\u4fdd\u969c\u8bb0\u5f55\u6570\u636e\u771f\u5b9e\u53ef\u9760\uff0c\u4e3a\u6240\u6709\u4e1a\u52a1\u65b9\u63d0\u4f9b\u5168\u6d41\u7a0b\u53ef\u8ffd\u6eaf\u3001\u7a7f\u900f\u5f0f\u8d44\u4ea7\u786e\u6743\u548c\u9a8c\u8bc1\u6e20\u9053\uff0c\u51cf\u5c11\u9020\u5047\u53ef\u80fd\u6027\uff0c\u63a8\u52a8\u884c\u4e1a\u5065\u5eb7\u7a33\u5b9a\u53d1\u5c55\u3002 6. \u6148\u5584\u884c\u4e1a \u5728\u300a\u6148\u5584\u6cd5\u300b\u6b63\u5f0f\u65bd\u884c3\u5468\u5e74\u4e4b\u9645\uff0c\u6148\u5584\u4fe1\u6258\u8fd9\u4e2a\u66fe\u88ab\u4e1a\u754c\u89c6\u4e3a\u62e5\u6709\u201c\u5343\u4ebf\u84dd\u6d77\u201d\u5e02\u573a\u7684\u4fe1\u6258\u4e1a\u52a1\uff0c\u8fce\u6765\u4e86\u5907\u6848\u6570\u91cf\u7684\u7206\u53d1\u5f0f\u589e\u957f\u3002 \u7edf\u8ba1\u6570\u636e\u663e\u793a\uff0c\u8fd1\u4e00\u5e74\u6765\uff0c\u5df2\u7ecf\u5907\u6848\u7684\u6148\u5584\u4fe1\u6258\u6570\u91cf\u8fbe108\u5355\uff0c\u540c\u6bd4\u5927\u589e83%\u3002\u5728\u5907\u6848\u6570\u91cf\u5927\u5e45\u589e\u957f\u7684\u60c5\u51b5\u4e0b\uff0c\u6148\u5584\u4fe1\u6258\u7684\u5907\u6848\u89c4\u6a21\u5374\u51fa\u73b0\u540c\u6bd4\u4e0b\u964d\u7684\u60c5\u51b5\u3002 \u4e3a\u6148\u5584\u7ec4\u7ec7\u8bbe\u7acb\u5355\u72ec\u4fe1\u6258\u8d26\u6237\u8fdb\u884c\u8d44\u4ea7\u7ba1\u7406\uff0c\u7528\u6237\u4f7f\u7528\u533a\u5757\u94fe\u6280\u672f\u5b9e\u73b0\u5373\u5165\u8d26\u5373\u914d\u7f6e\uff0c\u5728\u4e00\u4e2a\u8d26\u6237\u914d\u7f6e\u91d1\u878d\u4ea7\u54c1\u3001\u7ba1\u7406\u8d22\u4ea7\u6743\uff1b\u534f\u52a9\u6148\u5584\u7ec4\u7ec7\u4f18\u5316\u73b0\u91d1\u6d41\u7ba1\u7406\uff0c\u63d0\u5347\u6295\u8d44\u7ba1\u7406\u7684\u6c34\u5e73\u3002\u5229\u7528\u4fe1\u6258\u516c\u53f8\u5f3a\u5927\u7684\u4e2d\u540e\u53f0\u5b9e\u529b\uff0c\u4e3a\u6148\u5584\u7ec4\u7ec7\u63d0\u4f9b\u9884\u7b97\u7ba1\u7406\u3001\u5584\u6b3e\u53d1\u653e\u3001\u671f\u95f4\u7ba1\u7406\u7b49\u8d44\u52a9\u9879\u76ee\u6258\u7ba1\u670d\u52a1\uff1b\u4ee5\u53ca\u6148\u5584\u8d44\u4ea7\u76f8\u5173\u7684\u8d22\u52a1\u3001\u6cd5\u5f8b\u3001\u5408\u89c4\u7684\u5916\u5305\u670d\u52a1\u3002\u4f7f\u6148\u5584\u7ec4\u7ec7\u53ef\u4ee5\u66f4\u597d\u5730\u4e13\u6ce8\u6148\u5584\u76ee\u6807\uff0c\u8282\u7ea6\u65f6\u95f4\u4e0e\u6210\u672c\u3002 \u9664\u4e86\u4ee5\u4e0a\u573a\u666f\uff0cPlatONE\u8fd8\u52a9\u529b\u5728\u5927\u5b97\u5546\u54c1\u76d1\u7ba1\u4e0e\u8d38\u6613\u878d\u8d44\uff0c\u6c7d\u8f66\u5e02\u573a\u3001\u519c\u4ea7\u54c1\u6eaf\u6e90\u3001\u4fe1\u6258\u4e0e\u6148\u5584\u670d\u52a1\u7b49\u9886\u57df\u5b8c\u6210\u4e86POC\u3002","title":"\u5e94\u7528\u6848\u4f8b"},{"location":"%E4%B8%BB%E9%A1%B5%E9%9D%A2/%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%E9%9B%86/#_1","text":"\u57fa\u4e8ePlatONE\u8054\u76df\u94fe\u57fa\u7840\u5e73\u53f0\uff0c\u5229\u7528\u5176\u63d0\u4f9b\u7684\u6280\u672f\u7279\u6027\uff0c\u53ef\u4ee5\u5b9e\u65bd\u5f00\u5c55\u548c\u884c\u4e1a\u76f8\u5951\u5408\u7684\u5404\u79cd\u4e1a\u52a1\u573a\u666f\uff0c\u5305\u62ec\u5982\u4e0b\u65b9\u9762\u3002","title":"\u5e94\u7528\u6848\u4f8b\u96c6"},{"location":"%E4%B8%BB%E9%A1%B5%E9%9D%A2/%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%E9%9B%86/#1","text":"\u53ef\u4e3a\u4f9b\u5e94\u94fe\u4e0a\u4e0b\u6e38\u4f01\u4e1a\u6784\u5efa\u4e00\u4e2a\u4fe1\u606f\u5bf9\u79f0\u5171\u4eab\u3001\u6838\u5fc3\u4f01\u4e1a\u4fe1\u7528\u4ef7\u503c\u53ef\u4f20\u9012\u3001\u5546\u7968\u53ef\u62c6\u5206\u6d41\u7a0b\u3001\u98ce\u9669\u53ef\u63a7\u7684\u65b0\u578b\u4f9b\u5e94\u94fe\u91d1\u878d\u878d\u8d44\u6a21\u5f0f\uff0c\u5e76\u4e3a\u76d1\u7ba1\u63d0\u4f9b\u6570\u636e\u8ffd\u6eaf\u4fbf\u5229\uff0c\u63d0\u5347\u884c\u4e1a\u6574\u4f53\u670d\u52a1\u6548\u7387\u3002 \u4f20\u7edf\u4f9b\u5e94\u94fe\u91d1\u878d\u7684\u75db\u70b9 : \uff081\uff09\u76d1\u7ba1\u96be\u4ee5\u7a7f\u900f \u4f9b\u5e94\u94fe\u5c42\u7ea7\u7684\u7e41\u590d\uff0c\u4f7f\u8d38\u6613\u771f\u5b9e\u6027\u548c\u4ea4\u6613\u900f\u660e\u6027\u65e0\u6cd5\u7b80\u5355\u901a\u8fc7\u7cfb\u7edf\u8fdb\u884c\u786e\u8ba4\u548c\u5ba1\u6838\uff0c\u9020\u6210\u4e86\u76d1\u7ba1\u7684\u4e0d\u4fbf\u5229\u6027\u3002 \uff082\uff09\u5546\u7968\u4e0d\u53ef\u62c6\u5206\u3001\u6d41\u8f6c \u4f20\u7edf\u7684\u5546\u7968\u4e0d\u53ef\u62c6\u5206\uff0c\u4f9b\u5e94\u5546\u65e0\u6cd5\u57fa\u4e8e\u5546\u7968\u518d\u6b21\u80cc\u4e66\u8f6c\u8ba9\uff0c\u6838\u5fc3\u4f01\u4e1a\u4fe1\u7528\u65e0\u6cd5\u6709\u6548\u4f20\u9012\u7ed9\u591a\u7ea7\u4f9b\u5e94\u5546\u4f53\u7cfb\u3002 \uff083\uff09\u91d1\u878d\u673a\u6784\u98ce\u9669\u655e\u53e3\u8f83\u5927 \u4f9b\u5e94\u5546\u3001\u7ecf\u9500\u5546\u4e4b\u95f4\u7684\u7ea6\u5b9a\u6216\u5408\u540c\u4fe1\u606f\u65e0\u6cd5\u5f97\u5230\u6709\u6548\u786e\u8ba4\u6216\u6838\u5b9e\uff0c\u4f7f\u5f97\u91d1\u878d\u673a\u6784\u5b58\u5728\u8f83\u5927\u7684\u6388\u4fe1\u98ce\u9669\u3002 \uff084\uff09\u6838\u5fc3\u4f01\u4e1a\u4fe1\u7528\u65e0\u6cd5\u4f20\u9012 \u5728\u4f20\u7edf\u4f9b\u5e94\u94fe\u91d1\u878d\u591a\u7ea7\u4f9b\u5e94\u5546\u4f53\u7cfb\u4e0b\uff0c\u4fe1\u606f\u96be\u4ee5\u6709\u6548\u4f20\u9012\uff0c\u4f7f\u5f97\u4e00\u7ea7\u4f9b\u5e94\u5546\u4ee5\u5916\u7684\u5176\u4ed6\u5c42\u7ea7\u4f9b\u5e94\u5546\u65e0\u6cd5\u4eab\u53d7\u5230\u6838\u5fc3\u4f01\u4e1a\u7684\u4fe1\u7528\uff0c\u878d\u8d44\u8f83\u96be\u3002 \u57fa\u4e8e\u533a\u5757\u94fe\u6280\u672f\u548c\u5bc6\u7801\u5b66\u7b97\u6cd5\uff0cPlatONE\u4e3a\u4f9b\u5e94\u94fe\u91d1\u878d\u63d0\u4f9b\u4e86\u8d44\u4ea7\u53ef\u6570\u5b57\u5316\u786e\u8ba4\u3001\u5904\u7406\u3001\u6d41\u8f6c\u7684\u5e73\u53f0\u89e3\u51b3\u65b9\u6848\uff0c\u4e3b\u8981\u529f\u80fd\u6a21\u5757\u6709\uff1a \uff081\uff09\u8d44\u4ea7\u767b\u8bb0 \u4f01\u4e1a\u503a\u6743\u53ef\u901a\u8fc7\u533a\u5757\u94fe\u8fdb\u884c\u767b\u8bb0\u5b58\u50a8\uff0c\u5f62\u6210\u4e0d\u53ef\u7be1\u6539\u7684\u6570\u636e\u8bb0\u5f55\uff0c\u5b9e\u73b0\u5404\u53c2\u4e0e\u673a\u6784\u95f4\u7684\u4fe1\u606f\u5b9e\u65f6\u5171\u4eab\u3002 \uff082\uff09\u8d44\u4ea7\u786e\u6743 \u901a\u8fc7\u76f8\u5173\u53c2\u4e0e\u65b9\u7684\u786e\u8ba4\uff0c\u7531\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u5c06\u5e94\u6536\u8d26\u6b3e\u548c\u6838\u5fc3\u4f01\u4e1a\u4fe1\u7528\u8f6c\u5316\u6210\u6570\u5b57\u8d44\u4ea7\u5e76\u767b\u8bb0\u5230\u76f8\u5e94\u8d26\u6237\uff0c\u5b9e\u73b0\u8d44\u4ea7\u7684\u786e\u6743\u3002 \uff083\uff09\u8d44\u4ea7\u6570\u5b57\u5316 \u4ee5\u94fe\u4e0a\u786e\u6743\u6570\u636e\u4fe1\u606f\u4e3a\u57fa\u7840\uff0c\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u4e3a\u4f01\u4e1a\u5efa\u7acb\u53ef\u5728\u533a\u5757\u94fe\u8054\u76df\u95f4\u8fdb\u884c\u4ea4\u6613\u548c\u6d41\u8f6c\u7684\u6570\u5b57\u8d44\u4ea7\u3002 \uff084\uff09\u6570\u5b57\u8d44\u4ea7\u7ba1\u7406 \u652f\u6301\u4e0d\u540c\u5c5e\u6027\u8d44\u4ea7\u7684\u7edf\u4e00\u7ba1\u7406\u548c\u67e5\u8be2\uff0c\u901a\u8fc7\u9884\u8bbe\u7684\u667a\u80fd\u5408\u7ea6\u5b9e\u73b0\u94fe\u4e0a\u8d44\u4ea7\u7684\u7684\u81ea\u52a8\u5316\u5206\u914d\u3001\u62c6\u5206\u3001\u6d41\u8f6c\u548c\u6ce8\u9500\u3002 \uff085\uff09\u76d1\u7ba1\u5ba1\u8ba1 \u63d0\u4f9b\u76d1\u7ba1\u5ba1\u8ba1\u5165\u53e3\uff0c\u8d4b\u4e88\u76d1\u7ba1\u673a\u6784\u5ba1\u8ba1\u6743\u9650\uff0c\u53ef\u67e5\u770b\u5e73\u53f0\u4e0a\u6240\u6709\u8d44\u4ea7\u7684\u4ea4\u6613\u3002 \uff086\uff09\u591a\u5c42\u7ea7\u9690\u79c1\u4fdd\u62a4 \u8fd0\u7528\u5e7f\u64ad\u52a0\u5bc6\u3001\u540c\u6001\u52a0\u5bc6\u3001\u96f6\u77e5\u8bc6\u8bc1\u660e\u7b49\u52a0\u5bc6\u7b97\u6cd5\u4fdd\u62a4\u4f9b\u5e94\u94fe\u91d1\u878d\u5404\u53c2\u4e0e\u65b9\u7684\u6570\u636e\u5b89\u5168\u548c\u9690\u79c1\u4fdd\u62a4\u3002 \u9002\u7528\u573a\u666f : \uff081\uff09\u6388\u4fe1\u878d\u8d44 \u91d1\u878d\u673a\u6784\u5bf9\u5ba2\u6237\u6388\u4e88\u4fe1\u7528\u989d\u5ea6\uff0c\u5728\u8fd9\u4e2a\u989d\u5ea6\u5185\u5ba2\u6237\u5411\u94f6\u884c\u501f\u6b3e\u53ef\u51cf\u5c11\u7e41\u7410\u7684\u8d37\u6b3e\u68c0\u67e5\u3002 \uff082\uff09\u5e94\u6536\u6b3e\u878d\u8d44 \u4f01\u4e1a\u4ee5\u81ea\u5df1\u7684\u5e94\u6536\u8d26\u6b3e\u8f6c\u8ba9\u7ed9\u94f6\u884c\u5e76\u7533\u8bf7\u8d37\u6b3e\u3002 \uff083\uff09\u7968\u636e\u878d\u8d44 \u5c06\u5546\u4e1a\u7968\u636e\u8f6c\u8ba9\u7ed9\u94f6\u884c\uff0c\u94f6\u884c\u6309\u7968\u9762\u91d1\u989d\u6263\u9664\u8d34\u73b0\u5229\u606f\u540e\u5c06\u4f59\u989d\u652f\u4ed8\u7ed9\u6536\u6b3e\u4eba\u3002 PlatONE\u5df2\u88ab\u7528\u4e8e\u6253\u9020\u56fd\u5185\u9996\u6b3e\u57fa\u4e8e\u533a\u5757\u94fe\u6280\u672f\uff0c\u4e13\u6ce8\u4e8e\u6c7d\u8f66\u4f9b\u5e94\u94fe\uff0c\u670d\u52a1\u4e8e\u6c7d\u8f66\u4ea7\u4e1a\u6838\u5fc3\u4f01\u4e1a\u7684\u91d1\u878d\u4ea7\u54c1\u3002\u4ea7\u54c1\u63d0\u4f9b\u4f9b\u5e94\u94fe\u5e94\u6536\u8d27\u6b3e\u878d\u8d44\u7684\u9ad8\u6548\u89e3\u51b3\u65b9\u6848\uff0c\u89e3\u51b3\u4e86\u591a\u65b9\u4fe1\u4efb\u7684\u95ee\u9898\uff0c\u5728\u4fdd\u969c\u6570\u636e\u5b89\u5168\u7684\u6761\u4ef6\u4e0b\u89e3\u51b3\u6570\u636e\u4e3b\u6743\u95ee\u9898\u3002\u53e6\u5916\uff0cPlatONE\u8fd8\u88ab\u4e1a\u5185\u9ad8\u79d1\u6280\u516c\u53f8\u548c\u94f6\u884c\u5171\u540c\u6253\u9020\u6210\u57fa\u4e8e\u533a\u5757\u94fe\u4f9b\u5e94\u94fe\u91d1\u878d\u5e73\u53f0\uff0c\u5e73\u53f0\u6d3b\u8dc3\u7528\u6237\u5df2\u8fbe56\u5bb6\uff0c\u878d\u8d44\u989d\u7d2f\u8ba1\u81f3\u6570\u5343\u4e07\u3002","title":"1. \u4f9b\u5e94\u94fe\u91d1\u878d"},{"location":"%E4%B8%BB%E9%A1%B5%E9%9D%A2/%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%E9%9B%86/#2","text":"\u5229\u7528\u533a\u5757\u94fe\u94fe\u4e0a\u4fe1\u606f\u4e0d\u53ef\u7be1\u6539\u548c\u53ef\u8ffd\u6eaf\u7684\u7279\u6027\uff0c\u4e0e\u73b0\u6709\u4e1a\u52a1\u573a\u666f\u76f8\u7ed3\u5408\uff0c\u63d0\u4f9b\u6570\u636e\u5b58\u50a8\u3001\u6eaf\u6e90\u548c\u9a8c\u8bc1\u7684\u4e00\u7ad9\u5f0f\u670d\u52a1\uff0c\u5b9e\u73b0\u53ef\u4fe1\u7684\u5546\u54c1\u9632\u4f2a\u6eaf\u6e90\u3002\u57fa\u4e8e\u533a\u5757\u94fe\u3001\u7269\u8054\u7f51\u548c\u667a\u80fd\u9632\u4f2a\u7b49\u6280\u672f\u8bb0\u5f55\u4ea7\u54c1\u751f\u4ea7\u5404\u73af\u8282\u7684\u4fe1\u606f\uff0c\u63d0\u4f9b\u4ea7\u54c1\u7684\u533a\u5757\u94fe\u6eaf\u6e90\u670d\u52a1\u548c\u4f01\u4e1a\u8425\u9500\u670d\u52a1\u3002 PlatONE\u5df2\u5728\u9632\u4f2a\u6eaf\u6e90\u9886\u57df\u8fdb\u884c\u4e86\u76f8\u5173\u65b9\u6848\u8bbe\u8ba1\u548cPOC\uff0c\u53ef\u5b9e\u73b0\u4ee5\u4e0b\u4e1a\u52a1\u6d41\u7a0b\uff1a \uff081\uff09\u6570\u636e\u5b58\u50a8\u4e0e\u767b\u8bb0\uff1a \u7269\u8054\u7f51\u8bbe\u5907\u626b\u63cf\u4fe1\u606f\u540e\u76f4\u63a5\u4e0a\u94fe\uff0c\u786e\u4fdd\u4e00\u624b\u6570\u636e\u6765\u6e90\u7684\u771f\u5b9e\u6027\u3002 \u4ea7\u54c1\u5168\u6d41\u7a0b\u4fe1\u606f\u533a\u5757\u94fe\u5b58\u6863\uff0c\u4e0d\u53ef\u7be1\u6539\u3002 \uff082\uff09\u6570\u636e\u67e5\u8be2\u4e0e\u9a8c\u8bc1\uff1a \u5404\u73af\u8282\u7528\u6237\u6216\u6d88\u8d39\u8005\u53ef\u81ea\u4e3b\u9009\u62e9\u533a\u5757\u94fe\u8282\u70b9\u8fdb\u884c\u4fe1\u606f\u67e5\u8be2\u3002 \u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u7ef4\u62a4\u6570\u636e\u5904\u7406\u903b\u8f91\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u539f\u59cb\u6570\u636e\u7684\u9a8c\u8bc1\u6e20\u9053\u3002 \uff083\uff09\u6570\u636e\u7edf\u8ba1\u4e0e\u5206\u6790\uff1a \u652f\u6301\u6d88\u8d39\u8005\u67e5\u8be2\u6570\u636e\u7684\u7edf\u8ba1\uff0c\u652f\u6301\u7cbe\u51c6\u8425\u9500\u3002 \u57fa\u4e8e\u626b\u7801\u6570\u636e\u8fdb\u884c\u9500\u91cf\u5206\u6790\uff0c\u6307\u5f15\u9500\u552e\u7b56\u7565\u3002 \u57fa\u4e8ePlatONE\u8054\u76df\u94fe\u5b9e\u73b0\u7684\u9632\u4f2a\u6eaf\u6e90\u65b9\u6848\u5177\u5907\u4ee5\u4e0b\u4f18\u70b9\uff1a \uff081\uff09\u7269\u8054\u7f51\u589e\u5f3a\u6570\u636e\u771f\u5b9e\u6027 \u5c06\u533a\u5757\u94feSDK\u5d4c\u5165\u4ea7\u7ebf\u626b\u7801\u8bbe\u5907\uff0c \u5b9e\u73b0\u626b\u7801\u6570\u636e\u76f4\u63a5\u4e0a\u94fe\u8bb0\u5f55\uff0c\u51cf\u5c11\u4eba\u5de5\u5e72\u9884\uff0c\u63d0\u9ad8\u6570\u636e\u771f\u5b9e\u6027\u3002 \uff082\uff09\u6570\u636e\u9690\u79c1\u4fdd\u62a4 \u52a0\u5bc6\u7b97\u6cd5\u4fdd\u62a4\u5e73\u53f0\u53c2\u4e0e\u673a\u6784\u95f4\u7684\u6eaf\u6e90\u6838\u5fc3\u6570\u636e\u5b89\u5168\uff0c\u51cf\u5c11\u5f00\u653e\u670d\u52a1\u7684\u4ea4\u6613\u6469\u64e6\uff0c\u4fdd\u969c\u5e73\u53f0\u4fe1\u606f\u5b89\u5168\u3002 \uff083\uff09\u5e73\u53f0\u5316\u8fd0\u8425 \u5efa\u7acb\u884c\u4e1a\u6eaf\u6e90\u5e73\u53f0\u751f\u6001\uff0c\u8fdb\u884c\u751f\u4ea7\u6d41\u901a\u6570\u636e\u7684\u7cbe\u7ec6\u5316\u8fd0\u8425\u6316\u6398\uff0c\u534f\u52a9\u4f01\u4e1a\u751f\u4ea7\u51b3\u7b56\u3002","title":"2. \u9632\u4f2a\u6eaf\u6e90"},{"location":"%E4%B8%BB%E9%A1%B5%E9%9D%A2/%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%E9%9B%86/#3","text":"\u57fa\u4e8ePlatONE\u53ef\u5b9e\u65bd\u4e00\u7ad9\u5f0f\u79ef\u5206\u7ba1\u7406\u5e73\u53f0\uff0c\u5f15\u5165\u79ef\u5206\u53d1\u884c\u65b9\u3001\u5546\u6237\u3001\u6d88\u8d39\u8005\u3002\u5c06\u79ef\u5206\u7684\u53d1\u884c\u3001\u6d41\u901a\u3001\u6d88\u8d39\u7b49\u884c\u4e3a\u5ba1\u8ba1\u4e0a\u94fe\u3002 \u73b0\u6709\u79ef\u5206\u4f53\u7cfb\u7684\u75db\u70b9 : \uff081\uff09\u79ef\u5206\u4f7f\u7528\u4e0d\u4fbf \u5355\u4e00\u4f01\u4e1a\u7684\u79ef\u5206\u5b58\u5728\u4f7f\u7528\u9650\u5236\u548c\u5151\u6362\u5c40\u9650\uff0c\u96be\u4ee5\u63d0\u5347\u6d88\u8d39\u8005\u79ef\u5206\u4f7f\u7528\u79ef\u6781\u6027\uff0c\u65e0\u6cd5\u5f62\u6210\u79ef\u5206\u5956\u52b1\u7b56\u7565\u7684\u826f\u6027\u5faa\u73af\u3002 \uff082\uff09\u79ef\u5206\u96be\u4ee5\u6d41\u901a \u7f3a\u5c11\u4fbf\u6377\u7684\u5f02\u4e1a\u901a\u5151\u6e20\u9053\uff0c\u8de8\u884c\u4e1a\u6216\u673a\u6784\u7684\u79ef\u5206\u7ed3\u7b97\u8f83\u590d\u6742\uff0c\u96be\u4ee5\u5f62\u6210\u5e7f\u6cdb\u7684\u79ef\u5206\u8f6c\u8ba9\u3001\u8d60\u9001\u3001\u8de8\u5e73\u53f0\u4f7f\u7528\u6e20\u9053\u3002 \uff083\uff09\u7cfb\u7edf\u5efa\u8bbe\u6210\u672c\u9ad8 \u81ea\u5efa\u79ef\u5206\u7cfb\u7edf\u6210\u672c\u9ad8\uff0c\u6d89\u53ca\u5408\u4f5c\u4f19\u4f34\u95f4\u7684\u79ef\u5206\u5151\u6362\uff0c\u5219\u9700\u8981\u7cfb\u7edf\u5bf9\u63a5\u5e76\u8bbe\u7f6e\u5151\u6362\u6bd4\u4f8b\uff0c\u589e\u52a0\u4e86\u7ba1\u7406\u548c\u7ef4\u62a4\u6210\u672c\u3002 \u65b9\u6848\u8be6\u60c5 : \u57fa\u4e8ePlatONE\u6253\u9020\u7684\u79ef\u5206\u901a\u5151\u4e92\u6362\u5e73\u53f0\uff0c\u53ef\u652f\u6301\u4e0d\u540c\u4f01\u4e1a\u4ee5\u5408\u7ea6\u7684\u65b9\u5f0f\u5feb\u901f\u8fdb\u884c\u79ef\u5206\u7684\u53d1\u884c\u3001\u5151\u6362\u6bd4\u4f8b\u8bbe\u7f6e\u548c\u4ea4\u6613\u7ed3\u7b97\u3002 \uff081\uff09 \u79ef\u5206\u53d1\u884c \u79ef\u5206\u53d1\u884c\u5546\u53ef\u901a\u8fc7\u5e73\u53f0\u81ea\u4e3b\u7ef4\u62a4\u79ef\u5206\u53d1\u884c\u6570\u91cf\uff0c\u8bbe\u5b9a\u79ef\u5206\u5956\u52b1\u6bd4\u7387\u3002 \uff082\uff09\u79ef\u5206\u5151\u6362 \u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u7ef4\u62a4\u79ef\u5206\u5151\u6362\u6bd4\u4f8b\uff0c\u5b9e\u73b0\u6d88\u8d39\u8005\u6d88\u8d39\u65f6\u79ef\u5206\u7684\u81ea\u52a8\u589e\u51cf\u3002 \uff083\uff09\u79ef\u5206\u901a\u5151 \u901a\u8fc7\u4e0a\u5c42\u5408\u7ea6\uff0c\u53ef\u5b9e\u73b0\u8de8\u673a\u6784\u95f4\u7684\u79ef\u5206\u4f7f\u7528\uff0c\u5e76\u6309\u7167\u5404\u4f01\u4e1a\u8bbe\u7f6e\u7684\u79ef\u5206\u5151\u6362\u6bd4\u4f8b\uff0c\u5feb\u901f\u5b8c\u6210\u79ef\u5206\u8f6c\u6362\u548c\u8d26\u52a1\u6838\u5bf9\u3002 \uff084\uff09\u79ef\u5206\u67e5\u8be2 \u79ef\u5206\u53c2\u4e0e\u65b9\u6216\u6d88\u8d39\u8005\u53ef\u5728\u94fe\u4e0a\u5b9e\u65f6\u67e5\u8be2\u79ef\u5206\u5956\u52b1\u548c\u4ea4\u6613\u8bb0\u5f55\u3002 \uff085\uff09\u79ef\u5206\u5bf9\u8d26 \u6839\u636e\u79ef\u5206\u94fe\u4e0a\u6d41\u8f6c\u8bb0\u5f55\uff0c\u652f\u6301\u79ef\u5206\u53d1\u884c\u5546\u4e0e\u5546\u5bb6\u3001\u79ef\u5206\u53d1\u884c\u5546\u4e4b\u95f4\u7684\u81ea\u52a8\u5bf9\u8d26\u3002 \u9002\u7528\u573a\u666f : \uff081\uff09\u79ef\u5206\u5546\u57ce \u7528\u6237\u53ef\u51ed\u79ef\u5206\u5151\u6362\u7269\u54c1\u6216\u670d\u52a1\u3002 \uff082\uff09\u5458\u5de5\u798f\u5229 \u4f01\u4e1a\u53ef\u7528\u79ef\u5206\u6fc0\u52b1\u6216\u5956\u52b1\u5458\u5de5\uff0c\u5458\u5de5\u53ef\u4f7f\u7528\u79ef\u5206\u5151\u6362\u798f\u5229\u3002 \uff083\uff09\u4f1a\u5458\u79ef\u5206 \u5546\u6237\u7ed9\u6d88\u8d39\u8005\u53d1\u653e\u7684\u4f1a\u5458\u5361\uff08\u6216\u8d26\u6237\uff09\u8fdb\u884c\u79ef\u5206\uff0c\u79ef\u5206\u4e00\u822c\u9650\u4e8e\u5f53\u5730\u6216\u8005\u53d1\u5361\u5546\u6237\u4f7f\u7528\u3002 \uff084\uff09\u5f02\u4e1a\u79ef\u5206\u901a\u5151\u4e92\u6362 \u8de8\u884c\u4e1a\u79ef\u5206\u8054\u76df\u4e4b\u95f4\u79ef\u5206\u4e92\u5151\uff0c\u4f8b\u5982\uff1a\u822a\u7a7a\u79ef\u5206\u5151\u6362\u9152\u5e97\u4f4f\u5bbf\u3002","title":"3. \u79ef\u5206\u7ba1\u7406"},{"location":"%E4%B8%BB%E9%A1%B5%E9%9D%A2/%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%E9%9B%86/#4","text":"\u57fa\u4e8ePlatONE\u53ef\u5b9e\u73b0\u4f01\u4e1a\u80a1\u6743\u4fe1\u606f\u7684\u53ca\u65f6\u767b\u8bb0\u786e\u8ba4\u4e0e\u7ef4\u62a4\uff0c\u901a\u8fc7\u5206\u5e03\u5f0f\u67b6\u6784\u964d\u4f4e\u673a\u6784\u5bf9\u63a5\u95e8\u69db\uff0c\u5b9e\u73b0\u80a1\u6743\u6570\u636e\u7684\u5b9e\u65f6\u5b89\u5168\u5171\u4eab\uff0c\u4fdd\u8bc1\u91cd\u8981\u4fe1\u606f\u62ab\u9732\u7684\u51c6\u786e\u6027\u548c\u900f\u660e\u6027\uff0c\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u66f4\u4e3a\u4fbf\u5229\u548c\u9ad8\u6548\u7684\u91d1\u878d\u670d\u52a1\u652f\u6301\u3002 \u4f20\u7edf\u80a1\u6743\u767b\u8bb0\u6d41\u7a0b\u7684\u75db\u70b9 : \uff081\uff09\u4fe1\u606f\u540c\u6b65\u6ede\u540e \u4f9d\u6258\u5de5\u5546\u5c40\u7684\u80a1\u6743\u767b\u8bb0\uff0c\u5177\u6709\u6ede\u540e\u6027\uff0c\u80a1\u6743\u7684\u53d8\u66f4\u4fe1\u606f\u4e0d\u80fd\u5b9e\u65f6\u540c\u6b65\uff0c\u4e0d\u5229\u4e8e\u6f5c\u5728\u6295\u8d44\u8005\u67e5\u770b\u516c\u53f8\u771f\u5b9e\u80a1\u6743\u4fe1\u606f\u3002 \uff082\uff09\u80a1\u6743\u6240\u5c5e\u6743\u7ef4\u62a4\u5173\u7cfb\u8584\u5f31 \u4f01\u4e1a\u9891\u7e41\u7684\u80a1\u6743\u53d8\u66f4\uff0c\u4f1a\u7ed9\u80a1\u4e1c\u540d\u518c\u7684\u7ef4\u62a4\u589e\u52a0\u56f0\u96be\uff0c\u4e0d\u5229\u4e8e\u5386\u53f2\u4ea4\u6613\u7684\u7ef4\u62a4\u548c\u8ddf\u8e2a\u3002 \uff083\uff09\u4f20\u7edf\u65b9\u5f0f\u4e0d\u4fbf\u5229 \u7eb8\u8d28\u6750\u6599\u4f20\u9012\u548c\u4eba\u5de5\u529e\u7406\u7684\u4e0d\u4fbf\u5229\u3002 \u65b9\u6848\u8be6\u60c5 : \u57fa\u4e8ePlatONE\u6784\u5efa\u7684\u80a1\u6743\u767b\u8bb0\u3001\u67e5\u8be2\u5e73\u53f0\uff0c\u53ef\u4e3a\u4f01\u4e1a\u3001\u80a1\u4e1c\u63d0\u4f9b\u53ef\u9760\u7684\u80a1\u6743\u767b\u8bb0\u3001\u53d8\u66f4\u53ca\u4ea4\u6613\u6a21\u5f0f\uff0c\u5e76\u652f\u6301\u4e0e\u5de5\u5546\u3001\u4fe1\u606f\u670d\u52a1\u673a\u6784\u7684\u5bf9\u63a5\uff0c\u63d0\u5347\u573a\u5916\u80a1\u6743\u767b\u8bb0\u3001\u7ef4\u62a4\u6548\u7387\u548c\u53ef\u4fe1\u5ea6\u3002\u5177\u4f53\u529f\u80fd\u6a21\u5757\u6709\uff1a \uff081\uff09\u80a1\u6743\u4fe1\u606f\u767b\u8bb0 \u5728\u94fe\u4e0a\u8fdb\u884c\u80a1\u6743\u4fe1\u606f\u7684\u767b\u8bb0\u548c\u5b58\u50a8\uff0c\u533a\u5757\u94fe\u7684\u8282\u70b9\u5171\u8bc6\u7279\u6027\u53ef\u4fdd\u8bc1\u53c2\u4e0e\u65b9\u95f4\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\u533a\u5757\u94fe\u5b8c\u6574\u8bb0\u5f55\u4e86\u80a1\u6743\u6240\u6709\u6743\u4fe1\u606f\u548c\u53d8\u66f4\u8bb0\u5f55\uff0c\u786e\u4fdd\u6570\u636e\u7684\u4e0d\u53ef\u7be1\u6539\u3002 \uff082\uff09\u80a1\u4e1c\u540d\u518c\u7ef4\u62a4 \u4f01\u4e1a\u53ef\u5c06\u80a1\u4e1c\u540d\u518c\u767b\u8bb0\u4e0a\u94fe\uff0c\u80a1\u4e1c\u53ef\u5728\u7b2c\u4e00\u65f6\u95f4\u83b7\u5f97\u80a1\u4e1c\u540d\u518c\u7684\u66f4\u65b0\u4fe1\u606f\u5e76\u901a\u8fc7\u7b7e\u540d\u8fdb\u884c\u786e\u8ba4\uff0c\u4ee5\u6b64\u6765\u786e\u4fdd\u80a1\u4e1c\u540d\u518c\u7684\u4e00\u81f4\u6027\u548c\u6709\u6548\u6027\u3002 \uff083\uff09\u80a1\u6743\u4fe1\u606f\u540c\u6b65 \u4e0e\u5de5\u5546\u6216\u8005\u670d\u52a1\u673a\u6784\u95f4\u7684\u4fe1\u606f\u540c\u6b65\u548c\u786e\u8ba4\uff0c\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u80a1\u6743\u767b\u8bb0\u5e73\u53f0\uff0c\u53ef\u5f62\u6210\u4f01\u4e1a\u53ef\u8ffd\u6eaf\u3001\u53ef\u5ba1\u8ba1\u3001\u53ef\u9760\u7684\u4f01\u4e1a\u4fe1\u606f\u53ca\u80a1\u6743\u767b\u8bb0\u53d8\u66f4\u6863\u6848\u3002 \u9002\u7528\u573a\u666f : \uff081\uff09\u521b\u4e1a\u516c\u53f8\u80a1\u6743\u7ba1\u7406 \u521b\u4e1a\u516c\u53f8\u5458\u5de5\u6301\u80a1\u3001\u80a1\u6743\u6fc0\u52b1\u3001\u9884\u5206\u914d\u7b49\u3002 \uff082\uff09\u573a\u5916\u5e02\u573a\u80a1\u6743\u767b\u8bb0 \u573a\u5916\u80a1\u6743\u6258\u7ba1\u3001\u6302\u724c\u3001\u4ea4\u6613\u7b49\u3002","title":"4. \u80a1\u6743\u767b\u8bb0"},{"location":"%E4%B8%BB%E9%A1%B5%E9%9D%A2/%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%E9%9B%86/#5","text":"\u5728\u73b0\u6709\u7684\u6574\u8f66\u7269\u6d41\u8fd0\u8f93\u4e1a\u52a1\u4e2d\uff0c\u4f7f\u7528\u4f20\u7edf\u7684\u7eb8\u8d28\u8fd0\u5355\u4f5c\u4e3a\u7269\u6d41\u8fc7\u7a0b\u4e2d\u7684\u4f5c\u4e1a\u4ea4\u63a5\u51ed\u8bc1\u548c\u7ed3\u7b97\u51ed\u8bc1\uff0c\u5e76\u901a\u8fc7\u7ecf\u9500\u5e97\u786e\u8ba4\u540e\u6d41\u8f6c\u56de\u4e3b\u673a\u5382\u8fdb\u884c\u6838\u5bf9\u7ed3\u7b97\u3002\u8be5\u65b9\u5f0f\u5177\u6709\u8fd0\u5355\u6d41\u8f6c\u5468\u671f\u957f\u3001\u6548\u7387\u4f4e\u3001\u7ed3\u7b97\u6838\u5bf9\u7e41\u91cd\u3001\u6210\u672c\u9ad8\u7b49\u7f3a\u70b9\u3002 2018\u5e7411\u670830\u65e5\uff0c\u4e07\u5411\u533a\u5757\u94fe\u4e0e\u7269\u6d41\u3001\u94f6\u884c\u7b49\u5408\u4f5c\u4f19\u4f34\u4e8e\u4e0a\u6d77\u8054\u5408\u5ba3\u5e03\uff0c\u57fa\u4e8e\u533a\u5757\u94fe\u6280\u672f\u7684\u201c\u8fd0\u94fe\u76df-\u6c7d\u8f66\u4f9b\u5e94\u94fe\u7269\u6d41\u670d\u52a1\u5e73\u53f0\u201d\u6b63\u5f0f\u4e0a\u7ebf\u3002\u5176\u4e2d\u6700\u65b0\u7248\u7684\u5e73\u53f0\u4e2d\u6240\u8fd0\u7528\u7684\u533a\u5757\u94fe\u6280\u672f\u6b63\u662fPlatONE\uff0c\u800c\u8be5\u5e73\u53f0\u662f\u56fd\u5185\u9996\u4e2a\u533a\u5757\u94fe\u6280\u672f\u5728\u6c7d\u8f66\u6574\u8f66\u7269\u6d41\u884c\u4e1a\u7684\u843d\u5730\u6848\u4f8b\uff0c\u76ee\u524d\u8d8a\u6765\u8d8a\u591a\u7684\u7528\u6237\u52a0\u5165\u8fd0\u94fe\u76df\u5e73\u53f0\u3002 \u6700\u65b0\u4e00\u4ee3\u7684\u8fd0\u94fe\u76df\u662f\u4e00\u4e2a\u57fa\u4e8ePlatONE\u533a\u5757\u94fe\u6280\u672f\uff0c\u4ee5\u6c7d\u8f66\u6574\u8f66\u7269\u6d41\u4f5c\u4e3a\u5b9e\u9645\u4e1a\u52a1\u573a\u666f\uff0c\u96c6\u7269\u6d41\u3001\u7ed3\u7b97\u4e0e\u4f9b\u5e94\u94fe\u91d1\u878d\u4e09\u5927\u529f\u80fd\u6a21\u5757\u7684\u7efc\u5408\u670d\u52a1\u5e73\u53f0\uff0c\u65e8\u5728\u5229\u7528\u533a\u5757\u94fe\u6280\u672f\uff0c\u901a\u8fc7\u89e3\u51b3\u4ef7\u503c\u4f20\u9012\u8fc7\u7a0b\u4e2d\u535a\u5f08\u591a\u65b9\u4e92\u4fe1\u7b49\u75db\u70b9\uff0c\u4e3a\u5b9e\u4f53\u7ecf\u6d4e\u6ce8\u5165\u65b0\u7684\u529b\u91cf\u6e90\u6cc9\u3002 \u9996\u5148\uff0c\u8fd0\u94fe\u76df\u5b9e\u73b0\u4e86\u7269\u6d41\u8fd0\u8f93\u8fc7\u7a0b\u4e2d\u7684\u8ba2\u5355\u3001\u8fd0\u5355\u7535\u5b50\u5316\uff0c\u4ee5\u53ca\u4e0a\u4e0b\u6e38\u4f01\u4e1a\u5728\u7ebf\u5bf9\u8d26\u6a21\u5f0f\uff0c\u80fd\u591f\u6709\u6548\u964d\u4f4e\u4f20\u7edf\u7eb8\u8d28\u5355\u636e\u7684\u6210\u672c\u3002 \u7b2c\u4e8c\uff0c\u4e1a\u52a1\u6d41\u7a0b\u94fe\u4e0a\u7ba1\u7406\uff0c\u4e0a\u4e0b\u6e38\u4f01\u4e1a\u53ef\u5b9e\u73b0\u6570\u636e\u5171\u4eab\uff0c\u63d0\u9ad8\u6574\u4f53\u8fd0\u4f5c\u6548\u7387\uff1b \u7b2c\u4e09\uff0c\u91d1\u878d\u673a\u6784\u4f9d\u6258\u6c7d\u8f66\u4e3b\u673a\u5382\u5546\u7684\u4fe1\u4efb\u4f20\u9012\uff0c\u4ee5\u53ca\u5728\u7ebf\u5e94\u6536\u8d26\u6b3e\u8bb0\u5f55\u548c\u53d1\u7968\uff0c\u4e3a\u627f\u8fd0\u5546\u63d0\u4f9b\u878d\u8d44\u670d\u52a1\uff0c\u4e2d\u5c0f\u627f\u8fd0\u5546\u4e5f\u80fd\u83b7\u5f97\u66f4\u591a\u878d\u8d44\u673a\u4f1a\u3002 \u7b2c\u56db\uff0c\u533a\u5757\u94fe\u53ef\u4fdd\u969c\u8bb0\u5f55\u6570\u636e\u771f\u5b9e\u53ef\u9760\uff0c\u4e3a\u6240\u6709\u4e1a\u52a1\u65b9\u63d0\u4f9b\u5168\u6d41\u7a0b\u53ef\u8ffd\u6eaf\u3001\u7a7f\u900f\u5f0f\u8d44\u4ea7\u786e\u6743\u548c\u9a8c\u8bc1\u6e20\u9053\uff0c\u51cf\u5c11\u9020\u5047\u53ef\u80fd\u6027\uff0c\u63a8\u52a8\u884c\u4e1a\u5065\u5eb7\u7a33\u5b9a\u53d1\u5c55\u3002","title":"5. \u7269\u6d41"},{"location":"%E4%B8%BB%E9%A1%B5%E9%9D%A2/%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%E9%9B%86/#6","text":"\u5728\u300a\u6148\u5584\u6cd5\u300b\u6b63\u5f0f\u65bd\u884c3\u5468\u5e74\u4e4b\u9645\uff0c\u6148\u5584\u4fe1\u6258\u8fd9\u4e2a\u66fe\u88ab\u4e1a\u754c\u89c6\u4e3a\u62e5\u6709\u201c\u5343\u4ebf\u84dd\u6d77\u201d\u5e02\u573a\u7684\u4fe1\u6258\u4e1a\u52a1\uff0c\u8fce\u6765\u4e86\u5907\u6848\u6570\u91cf\u7684\u7206\u53d1\u5f0f\u589e\u957f\u3002 \u7edf\u8ba1\u6570\u636e\u663e\u793a\uff0c\u8fd1\u4e00\u5e74\u6765\uff0c\u5df2\u7ecf\u5907\u6848\u7684\u6148\u5584\u4fe1\u6258\u6570\u91cf\u8fbe108\u5355\uff0c\u540c\u6bd4\u5927\u589e83%\u3002\u5728\u5907\u6848\u6570\u91cf\u5927\u5e45\u589e\u957f\u7684\u60c5\u51b5\u4e0b\uff0c\u6148\u5584\u4fe1\u6258\u7684\u5907\u6848\u89c4\u6a21\u5374\u51fa\u73b0\u540c\u6bd4\u4e0b\u964d\u7684\u60c5\u51b5\u3002 \u4e3a\u6148\u5584\u7ec4\u7ec7\u8bbe\u7acb\u5355\u72ec\u4fe1\u6258\u8d26\u6237\u8fdb\u884c\u8d44\u4ea7\u7ba1\u7406\uff0c\u7528\u6237\u4f7f\u7528\u533a\u5757\u94fe\u6280\u672f\u5b9e\u73b0\u5373\u5165\u8d26\u5373\u914d\u7f6e\uff0c\u5728\u4e00\u4e2a\u8d26\u6237\u914d\u7f6e\u91d1\u878d\u4ea7\u54c1\u3001\u7ba1\u7406\u8d22\u4ea7\u6743\uff1b\u534f\u52a9\u6148\u5584\u7ec4\u7ec7\u4f18\u5316\u73b0\u91d1\u6d41\u7ba1\u7406\uff0c\u63d0\u5347\u6295\u8d44\u7ba1\u7406\u7684\u6c34\u5e73\u3002\u5229\u7528\u4fe1\u6258\u516c\u53f8\u5f3a\u5927\u7684\u4e2d\u540e\u53f0\u5b9e\u529b\uff0c\u4e3a\u6148\u5584\u7ec4\u7ec7\u63d0\u4f9b\u9884\u7b97\u7ba1\u7406\u3001\u5584\u6b3e\u53d1\u653e\u3001\u671f\u95f4\u7ba1\u7406\u7b49\u8d44\u52a9\u9879\u76ee\u6258\u7ba1\u670d\u52a1\uff1b\u4ee5\u53ca\u6148\u5584\u8d44\u4ea7\u76f8\u5173\u7684\u8d22\u52a1\u3001\u6cd5\u5f8b\u3001\u5408\u89c4\u7684\u5916\u5305\u670d\u52a1\u3002\u4f7f\u6148\u5584\u7ec4\u7ec7\u53ef\u4ee5\u66f4\u597d\u5730\u4e13\u6ce8\u6148\u5584\u76ee\u6807\uff0c\u8282\u7ea6\u65f6\u95f4\u4e0e\u6210\u672c\u3002 \u9664\u4e86\u4ee5\u4e0a\u573a\u666f\uff0cPlatONE\u8fd8\u52a9\u529b\u5728\u5927\u5b97\u5546\u54c1\u76d1\u7ba1\u4e0e\u8d38\u6613\u878d\u8d44\uff0c\u6c7d\u8f66\u5e02\u573a\u3001\u519c\u4ea7\u54c1\u6eaf\u6e90\u3001\u4fe1\u6258\u4e0e\u6148\u5584\u670d\u52a1\u7b49\u9886\u57df\u5b8c\u6210\u4e86POC\u3002","title":"6. \u6148\u5584\u884c\u4e1a"},{"location":"%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E7%AD%94/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E7%AD%94/","text":"\u5e38\u89c1\u95ee\u9898\u89e3\u7b54 1.PlatONE\u7684\u5e94\u7528\u573a\u666f\u6709\u54ea\u4e9b\uff1f PlatONE\u662f\u4f01\u4e1a\u7ea7\u91d1\u878d\u533a\u5757\u94fe\u5e95\u5c42\u6280\u672f\u5e73\u53f0\uff0c\u76ee\u524d\u6d89\u53ca\u7684\u5e94\u7528\u573a\u666f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u652f\u4ed8\u6e05\u7b97\u3001AI\u548c\u7269\u8054\u7f51\u3001\u533b\u7597\u5065\u5eb7\u3001\u5f81\u4fe1\u7cfb\u7edf\u3001\u5e7f\u544a\u3001\u5bc6\u94a5\u7ba1\u7406\u7b49\u9886\u57df\u3002 2.PlatONE\u4f7f\u7528\u54ea\u79cd\u5171\u8bc6\u7b97\u6cd5\uff1f\u8fbe\u6210\u5171\u8bc6\u6240\u9700\u8981\u7684\u65f6\u95f4\u662f\u591a\u5c11\uff1f PlatONE\u53ef\u63d2\u4ef6\u5316\u652f\u6301\u4e0d\u540c\u7684\u5171\u8bc6\u7b97\u6cd5\uff0c\u76ee\u524d\u652f\u6301Concurrent BFT\u548cOptimized BFT\u5171\u8bc6\uff0c\u91c7\u7528VRF\u548c\u6982\u7387\u5206\u5e03\u65b9\u5f0f\u968f\u673a\u9009\u53d6\u5171\u8bc6\u8282\u70b9\uff0c\u5f88\u597d\u5730\u5e73\u8861\u4e86\u53bb\u4e2d\u5fc3\u5316\u548c\u53ef\u6269\u5c55\u6027\u95ee\u9898\u3002 Concurrent BFT\uff1a\u51fa\u5757\u548c\u533a\u5757\u9a8c\u8bc1\u5e76\u884c\u8fdb\u884c\uff0c\u5728\u4fdd\u8bc1BFT 1/3\u5bb9\u9519\u6027\u7684\u540c\u65f6\uff0c\u5927\u5927\u7684\u63d0\u9ad8\u4e86\u51fa\u5757\u7684\u901f\u7387\u3002\u5728\u6d4b\u8bd5\u7f51\u7edc\u4e2d\uff0c\u5404\u4e2a\u8282\u70b9\u8fbe\u6210\u5171\u8bc6\u5e76\u51fa\u5757\u7684\u65f6\u95f4\u4e3a1s\u3002 Optimized BFT\uff1a\u6dfb\u52a0\u89e3\u9501\u673a\u5236\uff0c\u89e3\u51b3\u5171\u8bc6\u6b7b\u9501\u95ee\u9898\uff0c\u652f\u6301\u8d85\u8fc7100\u4e2a\u5171\u8bc6\u8282\u70b9\u3002\u5728\u6d4b\u8bd5\u7f51\u7edc\u4e2d\uff0c\u5404\u4e2a\u8282\u70b9\u8fbe\u6210\u5171\u8bc6\u5e76\u51fa\u5757\u7684\u65f6\u95f4\u4e3a1s\u3002 3.\u4ece\u6280\u672f\u89d2\u5ea6\u6765\u8bb2PlatONE\u5177\u5907\u54ea\u4e9b\u4f18\u52bf\u548c\u9886\u5148\u6027\uff1f PlatONE\u5f15\u8fdb\u884c\u4e1a\u6700\u65b0\u6280\u672f\uff0c\u4e3a\u4f01\u4e1a\u7ea7\u7cfb\u7edf\u63d0\u4f9b\u7a33\u5b9a\u3001\u9ad8\u901f\u529f\u80fd\u5f3a\u5927\u7684\u5e73\u53f0\u3002\u6838\u5fc3\u6280\u672f\u4e3b\u8981\u6709\uff1a \u9690\u79c1\u548c\u4fdd\u5bc6\u673a\u5236\uff1a\u5f15\u5165\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\uff08MPC\uff09\u3001\u540c\u6001\u52a0\u5bc6\uff08HE\uff09\u3001\u56fd\u5bc6\u4ee5\u53ca\u5206\u5e03\u5f0f\u5bc6\u94a5\u7ba1\u7406\u7b49\u5148\u8fdb\u5bc6\u7801\u5b66\u7b97\u6cd5\uff0c\u5728\u4fdd\u62a4\u9690\u79c1\u7684\u524d\u63d0\u4e0b\u4fdd\u8bc1\u591a\u65b9\u5171\u4eab\u6570\u636e\u7684\u5b89\u5168\u6027\u3002 \u5171\u8bc6\u7b97\u6cd5\uff1a\u4f7f\u7528\u9ad8\u5ea6\u4f18\u5316\u7684BFT\u7c7b\u5171\u8bc6\u7b97\u6cd5\uff0c\u652f\u6301\u8d85\u8fc7100\u4e2a\u5171\u8bc6\u8282\u70b9\uff0c\u80fd\u591f\u9884\u9632\u62dc\u5360\u5ead\u884c\u4e3a\uff0c\u4fdd\u8bc1\u94fe\u7684\u5b89\u5168\uff0c\u5e76\u4e14\u80fd\u591f\u5feb\u901f\u8fbe\u5230\u5373\u65f6\u786e\u8ba4\u3002\u6b64\u5916\u6dfb\u52a0\u89e3\u9501\u673a\u5236\uff0c\u89e3\u51b3\u4e1a\u754c\u591a\u4e2a\u77e5\u540d\u9879\u76ee\u5b58\u5728\u7684\u5171\u8bc6\u6b7b\u9501\u95ee\u9898\u3002 \u8fd0\u884c\u7ba1\u7406\uff1a\u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u7684\u65b9\u5f0f\uff0c\u5b9e\u73b0\u7cfb\u7edf\u53c2\u6570\u52a8\u6001\u8c03\u6574\uff0cCNS\u7b49\u4e2a\u6027\u5316\u5b9a\u5236\u670d\u52a1\u3002 \u667a\u80fd\u5408\u7ea6\u865a\u62df\u673a\uff1a\u9664\u4e86\u652f\u6301\u539f\u6709\u7684EVM\uff0c\u540c\u662f\u4e5f\u652f\u6301WASM\uff08WebAssembly\uff09\uff0c\u7528\u6237\u90e8\u7f72\u94fe\u65f6\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4efb\u9009\u3002 4.PlatONE\u5982\u4f55\u642d\u5efa\u6d4b\u8bd5\u8282\u70b9? \u76ee\u524d\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u5957\u642d\u5efa\u8282\u70b9\u6307\u5357\uff1a + \u624b\u52a8\u642d\u5efa\u8282\u70b9\u6307\u5357\uff1a\u5177\u4f53\u8bf7\u53c2\u80031.4.1\u5c0f\u8282\uff1b + \u5feb\u901f\u642d\u5efa\u8282\u70b9\u6307\u5357\uff1a\u652f\u6301\u4e00\u952e\u90e8\u7f72\u548c\u542f\u52a8\uff0c\u5177\u4f53\u8bf7\u53c2\u80031.4.2\u5c0f\u8282\u3002 5.\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\uff08MPC\uff09\u6700\u591a\u80fd\u652f\u6301\u51e0\u65b9\u5171\u540c\u8fdb\u884c\u8ba1\u7b97\uff1f PlatONE\u540e\u7eed\u4f1a\u5148\u63a8\u51fa\u4e24\u65b9\u53c2\u4e0e\u7684\u5b89\u5168\u8ba1\u7b97\u7248\u672c\uff0c\u7136\u540e\u4f1a\u8fdb\u4e00\u6b65\u652f\u6301\u591a\u65b9\u8ba1\u7b97\uff0c\u656c\u8bf7\u5173\u6ce8\u3002\u7406\u8bba\u4e0a\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u652f\u6301\u7684\u53c2\u4e0e\u65b9\u6570\u91cf\u6ca1\u6709\u9650\u5236\u3002 6.PlatONE\u8282\u70b9\u7684\u90e8\u7f72\u5bf9\u786c\u4ef6\u548c\u8f6f\u4ef6\u73af\u5883\u6709\u4ec0\u4e48\u8981\u6c42\uff1f \u8fd0\u884cPlatONE\u8282\u70b9\u5bf9\u7b97\u529b\u6ca1\u6709\u7279\u522b\u7684\u8981\u6c42\uff0c\u4f46\u662f\u8bf7\u914d\u7f6e\u5c3d\u53ef\u80fd\u5927\u7684\u78c1\u76d8\u7a7a\u95f4\u4ee5\u9002\u5e94\u533a\u5757\u94fe\u6570\u636e\u672a\u6765\u4e0d\u65ad\u589e\u957f\u7684\u9700\u8981\u3002 \u8282\u70b9\u670d\u52a1\u5668\u6700\u5c0f\u914d\u7f6e\uff1a CPU: 2\u6838 \u5185\u5b58: 2G \u786c\u76d8: 100G PlatONE\u76ee\u524d\u4ec5\u53d1\u5e03\u4e86GO\u7248\u672c\uff0c\u8f6f\u4ef6\u9700\u6c42\u5982\u4e0b\uff1a \u64cd\u4f5c\u7cfb\u7edf\uff1aLinux Golang\uff1aGo 1.11+ Cmake\uff1a3.10+ gcc\uff1a7.3+ 7.PlatONE\u4e2d\u7684\u667a\u80fd\u5408\u7ea6\u548c\u6211\u4eec\u6700\u719f\u6089\u7684\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u8ddf\u4ee5\u592a\u574a\u53ea\u652f\u6301EVM\u4e0a\u8fd0\u884c\u7684\u4ee5Solidity\u4e3a\u4e3b\u8981\u5f00\u53d1\u8bed\u8a00\u7684\u667a\u80fd\u5408\u7ea6\u4e0d\u540c\uff0cPlatONE\u4e0a\u76ee\u524d\u5df2\u652f\u6301\u7684\u667a\u80fd\u5408\u7ea6\u5206\u4e3a\u4e09\u7c7b\uff1a Wasm\u5408\u7ea6 \u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210Wasm\u6267\u884c\u3002\u89e6\u53d1Wasm\u5408\u7ea6\u7684\u4ea4\u6613\u7531\u5171\u8bc6\u8282\u70b9\u6253\u5305\uff0c\u5168\u7f51\u8282\u70b9\u91cd\u590d\u6267\u884c\u9a8c\u8bc1\u3002Wasm\u5408\u7ea6\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u516c\u5171\u8d26\u672c\u4e2d\u3002 \u53ef\u9a8c\u8bc1\u5408\u7ea6 \u662fPlatONE\u7279\u6709\u7684\u667a\u80fd\u5408\u7ea6\uff0c\u5728\u5f00\u53d1\u548c\u53d1\u5e03\u4e0a\u8ddfWasm\u5408\u7ea6\u6ca1\u6709\u533a\u522b\uff0c\u6700\u7ec8\u4e5f\u662f\u7f16\u8bd1\u6210Wasm\u6267\u884c\u3002\u4f46\u53ef\u9a8c\u8bc1\u5408\u7ea6\u53ef\u4ee5\u901a\u8fc7\u72b6\u6001\u8f6c\u6362\u5728\u94fe\u4e0b\u7531\u8ba1\u7b97\u8282\u70b9\u5f02\u6b65\u6267\u884c\uff0c\u8ba1\u7b97\u5b8c\u6210\u540e\u5c06\u65b0\u7684\u72b6\u6001\u548c\u72b6\u6001\u8f6c\u6362\u8bc1\u660e\u63d0\u4ea4\u5230\u94fe\u4e0a\uff0c\u5168\u7f51\u8282\u70b9\u53ef\u5feb\u901f\u9a8c\u8bc1\u6b63\u786e\u6027\u5e76\u5c06\u65b0\u7684\u72b6\u6001\u66f4\u65b0\u5230\u516c\u5171\u8d26\u672c\u4e2d\u3002\u901a\u8fc7\u8fd9\u6837\u5c06\u4fe1\u4efb\u4f20\u9012\u5230\u94fe\u4e0b\u7684\u65b9\u5f0f\uff0c\u53ef\u9a8c\u8bc1\u5408\u7ea6\u53ef\u4ee5\u652f\u6301\u590d\u6742\u3001\u7e41\u91cd\u7684\u8ba1\u7b97\u903b\u8f91\u800c\u4e0d\u5f71\u54cd\u6574\u6761\u94fe\u7684\u6027\u80fd\u3002 \u9690\u79c1\u5408\u7ea6 \u540c\u6837\u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210llvm ir\u4e2d\u95f4\u8bed\u8a00\u6267\u884c\u3002\u9690\u79c1\u5408\u7ea6\u7684\u8f93\u5165\u6570\u636e\u4fdd\u5b58\u5728\u6570\u636e\u8282\u70b9\u672c\u5730\uff0c\u7531\u6570\u636e\u8282\u70b9\u5728\u94fe\u4e0b\u4ee5\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u65b9\u5f0f\u8fdb\u884c\u9690\u79c1\u8ba1\u7b97\uff0c\u5e76\u63d0\u4ea4\u8ba1\u7b97\u7ed3\u679c\u5230\u94fe\u4e0a\u3002 8.PlatONE\u91c7\u7528\u54ea\u79cd\u5f00\u53d1\u8bed\u8a00\uff1f PlatONE\u6240\u91c7\u7528\u7684\u5f00\u53d1\u8bed\u8a00\u5305\u62ec\uff1a \u5e95\u5c42\uff1aGolang \u5408\u7ea6\uff1aC++/Python/Go/Rust/Solidity/Js/Java\uff08Wasm\u652f\u6301\u7684\u8bed\u8a00\uff09 DAPP\u5f00\u53d1\u63d0\u4f9bSDK\uff1a Java 9.\u90e8\u7f72\u548c\u8fd0\u7ef4\u5de5\u5177\u96c6\u6709\u54ea\u4e9b\u4f18\u70b9\uff1f \u76ee\u524d\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u4f01\u4e1a\u7ea7\u90e8\u7f72\u5de5\u5177\u96c6\uff0c\u6781\u5927\u7684\u63d0\u9ad8\u4e86\u7528\u6237\u7684\u6613\u7528\u6027\uff0c\u964d\u4f4e\u5b66\u4e60\u6210\u672c\u3002\u652f\u6301\u4e00\u952e\u542f\u52a8\u591a\u8282\u70b9\u8054\u76df\u94fe\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e30\u5bcc\u7684\u8fd0\u7ef4\u811a\u672c\uff0c\u6781\u5927\u7684\u964d\u4f4e\u4e86\u8054\u76df\u94fe\u8fd0\u7ef4\u96be\u5ea6\u3002 10.PlatONE\u4e2d\u8282\u70b9\u7c7b\u578b\u6709\u54ea\u4e9b\uff0c\u5bf9\u5e94\u7684\u529f\u80fd\u662f\u4ec0\u4e48\uff1f PlatONE\u4e2d\u7684\u8282\u70b9\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u7c7b\uff1a \u89c2\u5bdf\u8005\u8282\u70b9: \u53ea\u8d1f\u8d23\u540c\u6b65\u533a\u5757\uff0c\u4e0d\u53c2\u4e0e\u51fa\u5757\uff0c\u7cfb\u7edf\u4e2d\uff0c\u5c06\u4f1a\u4e00\u76f4\u5b58\u5728\u51e0\u4e2a\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\u3002\u7528\u4e8e\u7a33\u5b9a\u540c\u6b65\u533a\u5757\uff0c\u540c\u65f6\u4e5f\u7528\u4e8e\u88ab\u5176\u4ed6\u7684\u8282\u70b9\u6307\u5b9a\u4e3abootnodes \u8fdb\u884c\u8fde\u63a5\uff1b \u5171\u8bc6\u8282\u70b9: \u53c2\u4e0e\u51fa\u5757\uff0c\u4ee5\u53ca\u540c\u6b65\u533a\u5757\u3002 11.PlatONE\u7684\u6743\u9650\u7ba1\u7406\uff1f \u6839\u636e\u7cfb\u7edf\u4e2d\u7684\u4e0d\u540c\u5b9e\u4f53\u5bf9\u8c61\uff0cPlatONE\u5c06\u6743\u9650\u7ba1\u7406\u8fdb\u884c\u4e86\u6a21\u5757\u5316\u7684\u62c6\u5206\u3002\u9488\u5bf9\u7cfb\u7edf\u4e2d\u7528\u6237\u8d26\u6237\u3001\u8282\u70b9\u548c\u667a\u80fd\u5408\u7ea6\uff0c\u8fd9\u4e09\u7c7b\u5b9e\u4f53\u7684\u4e0d\u540c\u884c\u4e3a\uff0c\u5206\u522b\u8bbe\u8ba1\u4e86\u7528\u6237\u89d2\u8272\u7ba1\u7406\u6a21\u5757\u3001\u8282\u70b9\u7ba1\u7406\u6a21\u5757\u548c\u5408\u7ea6\u9632\u706b\u5899\u6a21\u5757\u6765\u8fdb\u884c\u6743\u9650\u7684\u63a7\u5236\u548c\u7ba1\u7406\u3002 \u89d2\u8272\u7ba1\u7406\uff1aPlatONE\u6839\u636e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u8bbe\u5b9a\u4e86\u4e0d\u540c\u7684\u7528\u6237\u89d2\u8272\uff0c\u5e76\u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u7684\u65b9\u5f0f\u5bf9\u7528\u6237\u7684\u89d2\u8272\u8fdb\u884c\u7ba1\u7406\u3002\u6839\u636e\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u7528\u6237\u5728\u7cfb\u7edf\u4e2d\u88ab\u8d4b\u4e88\u4e0d\u540c\u7684\u6743\u9650\u3002 \u8282\u70b9\u7ba1\u7406\uff1aPlatONE\u901a\u8fc7\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u5bf9\u8282\u70b9\u8fdb\u884c\u7ba1\u7406\uff0c\u5305\u62ec\u8282\u70b9\u662f\u5426\u80fd\u591f\u63a5\u5165\u7f51\u7edc\uff0c\u8282\u70b9\u662f\u5426\u80fd\u591f\u53c2\u4e0e\u5171\u8bc6\u4ee5\u53ca\u8282\u70b9\u4fe1\u606f\u7684\u7ef4\u62a4\u7b49\u529f\u80fd\u3002\u6839\u636e\u4e4b\u524d\u7528\u6237\u89d2\u8272\u7684\u8bbe\u5b9a\uff0c\u53ea\u6709chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e09\u7c7b\u7528\u6237\u624d\u53ef\u4ee5\u8bbe\u7f6e\u7cfb\u7edf\u5408\u7ea6\u4e2d\u7684\u8282\u70b9\u6570\u636e\uff0c\u5f53\u9700\u8981\u6dfb\u52a0\u8282\u70b9\u3001\u66f4\u65b0\u8282\u70b9\u72b6\u6001\u3001\u5220\u9664\u8282\u70b9\u65f6\u90fd\u9700\u8981\u8fd9\u4e09\u7c7b\u8d26\u6237\u6765\u8c03\u7528\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fnodeAdmin\u4ec5\u53ef\u4ee5\u7ba1\u7406\u81ea\u5df1\u52a0\u5165\u7684\u8282\u70b9\uff0cchainCreator\u548cchainAdmin\u53ef\u4ee5\u7ba1\u7406\u6240\u6709\u8282\u70b9\u3002 \u5408\u7ea6\u9632\u706b\u5899\uff1aPlatONE\u4e2d\u5408\u7ea6\u7684\u8c03\u7528\u6743\u9650\u7531\u5408\u7ea6\u9632\u706b\u5899\u63a7\u5236\uff0c\u53ea\u6709\u5408\u7ea6\u7684\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5408\u7ea6\u7684\u9632\u706b\u5899\u3002\u5408\u7ea6\u9632\u706b\u5899\u5177\u5907\u5408\u7ea6\u63a5\u53e3\u7ea7\u522b\u7684\u8bbf\u95ee\u63a7\u5236\u3002 12.\u5982\u4f55\u5c06\u5408\u7ea6\u7eb3\u5165CNS\u7ba1\u7406\uff1f \u5728\u90e8\u7f72\u5408\u7ea6\u65f6\uff0c\u8c03\u7528CNS\u5408\u7ea6\u63a5\u53e3\uff0c\u5c06\u5408\u7ea6name\u3001version\u3001address\u4fe1\u606f\u5199\u5165CNS\u8868\u4e2d\u3002 13.\u5728\u54ea\u4e9b\u65b9\u9762\u53ef\u4ee5\u4e3aPlatONE\u505a\u51fa\u8d21\u732e\uff1f PlatONE\u76ee\u524d\u8fd8\u5904\u4e8e\u5f00\u53d1\u521d\u671f\uff0c\u4e9f\u5f85\u8fdb\u4e00\u6b65\u7684\u5b8c\u5584\uff0c\u6240\u4ee5\u975e\u5e38\u5e0c\u671b\u5404\u65b9\u6709\u5fd7\u4eba\u58eb\u5171\u540c\u53c2\u4e0e\u5230PlatONE\u7684\u4e0d\u65ad\u4f18\u5316\u548c\u63d0\u5347\u8fc7\u7a0b\u4e2d\u6765\u3002\u5927\u5bb6\u53ef\u4ee5\u4ece\u5982\u4e0b\u51e0\u4e2a\u65b9\u9762\u53c2\u4e0ePlatONE\u7684\u5efa\u8bbe\uff1a \u7814\u53d1\u65b9\u9762\uff1a\u53c2\u4e0ePlatONE\u7684\u529f\u80fd\u8fed\u4ee3\u3001bug\u4fee\u590d\u3001\u89e3\u51b3\u65b9\u6848\u7b49\uff1b \u6587\u6863\u65b9\u9762\uff1a\u53c2\u4e0ePlatONE\u6280\u672f\u6587\u6863\u3001\u7ffb\u8bd1\u3001\u8f6f\u6587\u5ba3\u4f20\u3001UI\u6d77\u62a5\u8bbe\u8ba1\u7b49\uff1b \u6d3b\u52a8\u65b9\u9762\uff1a\u53c2\u4e0ePlatONE\u7684\u793e\u7fa4\u5efa\u8bbe\u3001\u6d3b\u52a8\u7ec4\u7ec7\u4e3e\u529e\u7b49\u3002 14.\u5982\u4f55\u7533\u8bf7\u6210\u4e3aPlatONE\u7684GitHub\u9879\u76ee\u7ec4\u6210\u5458\uff1f PlatONE\u6b22\u8fce\u793e\u533a\u6240\u6709\u4eba\u901a\u8fc7GitHub\u63d0\u4ea4Issues\u548cPull Request\u6765\u8d21\u732e\u65b9\u6848\u548c\u4ee3\u7801\uff0cPlatONE\u6838\u5fc3\u5f00\u53d1\u56e2\u961f\u4f1a\u6839\u636e\u8d21\u732e\u60c5\u51b5\u8fdb\u884c\u8bc4\u4f30\uff0c\u5e76\u5b9a\u5411\u9080\u8bf7\u793e\u533a\u7cbe\u82f1\u52a0\u5165\u9879\u76ee\u7ec4\u3002","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E7%AD%94/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E7%AD%94/#_1","text":"1.PlatONE\u7684\u5e94\u7528\u573a\u666f\u6709\u54ea\u4e9b\uff1f PlatONE\u662f\u4f01\u4e1a\u7ea7\u91d1\u878d\u533a\u5757\u94fe\u5e95\u5c42\u6280\u672f\u5e73\u53f0\uff0c\u76ee\u524d\u6d89\u53ca\u7684\u5e94\u7528\u573a\u666f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u652f\u4ed8\u6e05\u7b97\u3001AI\u548c\u7269\u8054\u7f51\u3001\u533b\u7597\u5065\u5eb7\u3001\u5f81\u4fe1\u7cfb\u7edf\u3001\u5e7f\u544a\u3001\u5bc6\u94a5\u7ba1\u7406\u7b49\u9886\u57df\u3002 2.PlatONE\u4f7f\u7528\u54ea\u79cd\u5171\u8bc6\u7b97\u6cd5\uff1f\u8fbe\u6210\u5171\u8bc6\u6240\u9700\u8981\u7684\u65f6\u95f4\u662f\u591a\u5c11\uff1f PlatONE\u53ef\u63d2\u4ef6\u5316\u652f\u6301\u4e0d\u540c\u7684\u5171\u8bc6\u7b97\u6cd5\uff0c\u76ee\u524d\u652f\u6301Concurrent BFT\u548cOptimized BFT\u5171\u8bc6\uff0c\u91c7\u7528VRF\u548c\u6982\u7387\u5206\u5e03\u65b9\u5f0f\u968f\u673a\u9009\u53d6\u5171\u8bc6\u8282\u70b9\uff0c\u5f88\u597d\u5730\u5e73\u8861\u4e86\u53bb\u4e2d\u5fc3\u5316\u548c\u53ef\u6269\u5c55\u6027\u95ee\u9898\u3002 Concurrent BFT\uff1a\u51fa\u5757\u548c\u533a\u5757\u9a8c\u8bc1\u5e76\u884c\u8fdb\u884c\uff0c\u5728\u4fdd\u8bc1BFT 1/3\u5bb9\u9519\u6027\u7684\u540c\u65f6\uff0c\u5927\u5927\u7684\u63d0\u9ad8\u4e86\u51fa\u5757\u7684\u901f\u7387\u3002\u5728\u6d4b\u8bd5\u7f51\u7edc\u4e2d\uff0c\u5404\u4e2a\u8282\u70b9\u8fbe\u6210\u5171\u8bc6\u5e76\u51fa\u5757\u7684\u65f6\u95f4\u4e3a1s\u3002 Optimized BFT\uff1a\u6dfb\u52a0\u89e3\u9501\u673a\u5236\uff0c\u89e3\u51b3\u5171\u8bc6\u6b7b\u9501\u95ee\u9898\uff0c\u652f\u6301\u8d85\u8fc7100\u4e2a\u5171\u8bc6\u8282\u70b9\u3002\u5728\u6d4b\u8bd5\u7f51\u7edc\u4e2d\uff0c\u5404\u4e2a\u8282\u70b9\u8fbe\u6210\u5171\u8bc6\u5e76\u51fa\u5757\u7684\u65f6\u95f4\u4e3a1s\u3002 3.\u4ece\u6280\u672f\u89d2\u5ea6\u6765\u8bb2PlatONE\u5177\u5907\u54ea\u4e9b\u4f18\u52bf\u548c\u9886\u5148\u6027\uff1f PlatONE\u5f15\u8fdb\u884c\u4e1a\u6700\u65b0\u6280\u672f\uff0c\u4e3a\u4f01\u4e1a\u7ea7\u7cfb\u7edf\u63d0\u4f9b\u7a33\u5b9a\u3001\u9ad8\u901f\u529f\u80fd\u5f3a\u5927\u7684\u5e73\u53f0\u3002\u6838\u5fc3\u6280\u672f\u4e3b\u8981\u6709\uff1a \u9690\u79c1\u548c\u4fdd\u5bc6\u673a\u5236\uff1a\u5f15\u5165\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\uff08MPC\uff09\u3001\u540c\u6001\u52a0\u5bc6\uff08HE\uff09\u3001\u56fd\u5bc6\u4ee5\u53ca\u5206\u5e03\u5f0f\u5bc6\u94a5\u7ba1\u7406\u7b49\u5148\u8fdb\u5bc6\u7801\u5b66\u7b97\u6cd5\uff0c\u5728\u4fdd\u62a4\u9690\u79c1\u7684\u524d\u63d0\u4e0b\u4fdd\u8bc1\u591a\u65b9\u5171\u4eab\u6570\u636e\u7684\u5b89\u5168\u6027\u3002 \u5171\u8bc6\u7b97\u6cd5\uff1a\u4f7f\u7528\u9ad8\u5ea6\u4f18\u5316\u7684BFT\u7c7b\u5171\u8bc6\u7b97\u6cd5\uff0c\u652f\u6301\u8d85\u8fc7100\u4e2a\u5171\u8bc6\u8282\u70b9\uff0c\u80fd\u591f\u9884\u9632\u62dc\u5360\u5ead\u884c\u4e3a\uff0c\u4fdd\u8bc1\u94fe\u7684\u5b89\u5168\uff0c\u5e76\u4e14\u80fd\u591f\u5feb\u901f\u8fbe\u5230\u5373\u65f6\u786e\u8ba4\u3002\u6b64\u5916\u6dfb\u52a0\u89e3\u9501\u673a\u5236\uff0c\u89e3\u51b3\u4e1a\u754c\u591a\u4e2a\u77e5\u540d\u9879\u76ee\u5b58\u5728\u7684\u5171\u8bc6\u6b7b\u9501\u95ee\u9898\u3002 \u8fd0\u884c\u7ba1\u7406\uff1a\u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u7684\u65b9\u5f0f\uff0c\u5b9e\u73b0\u7cfb\u7edf\u53c2\u6570\u52a8\u6001\u8c03\u6574\uff0cCNS\u7b49\u4e2a\u6027\u5316\u5b9a\u5236\u670d\u52a1\u3002 \u667a\u80fd\u5408\u7ea6\u865a\u62df\u673a\uff1a\u9664\u4e86\u652f\u6301\u539f\u6709\u7684EVM\uff0c\u540c\u662f\u4e5f\u652f\u6301WASM\uff08WebAssembly\uff09\uff0c\u7528\u6237\u90e8\u7f72\u94fe\u65f6\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4efb\u9009\u3002 4.PlatONE\u5982\u4f55\u642d\u5efa\u6d4b\u8bd5\u8282\u70b9? \u76ee\u524d\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u5957\u642d\u5efa\u8282\u70b9\u6307\u5357\uff1a + \u624b\u52a8\u642d\u5efa\u8282\u70b9\u6307\u5357\uff1a\u5177\u4f53\u8bf7\u53c2\u80031.4.1\u5c0f\u8282\uff1b + \u5feb\u901f\u642d\u5efa\u8282\u70b9\u6307\u5357\uff1a\u652f\u6301\u4e00\u952e\u90e8\u7f72\u548c\u542f\u52a8\uff0c\u5177\u4f53\u8bf7\u53c2\u80031.4.2\u5c0f\u8282\u3002 5.\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\uff08MPC\uff09\u6700\u591a\u80fd\u652f\u6301\u51e0\u65b9\u5171\u540c\u8fdb\u884c\u8ba1\u7b97\uff1f PlatONE\u540e\u7eed\u4f1a\u5148\u63a8\u51fa\u4e24\u65b9\u53c2\u4e0e\u7684\u5b89\u5168\u8ba1\u7b97\u7248\u672c\uff0c\u7136\u540e\u4f1a\u8fdb\u4e00\u6b65\u652f\u6301\u591a\u65b9\u8ba1\u7b97\uff0c\u656c\u8bf7\u5173\u6ce8\u3002\u7406\u8bba\u4e0a\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u652f\u6301\u7684\u53c2\u4e0e\u65b9\u6570\u91cf\u6ca1\u6709\u9650\u5236\u3002 6.PlatONE\u8282\u70b9\u7684\u90e8\u7f72\u5bf9\u786c\u4ef6\u548c\u8f6f\u4ef6\u73af\u5883\u6709\u4ec0\u4e48\u8981\u6c42\uff1f \u8fd0\u884cPlatONE\u8282\u70b9\u5bf9\u7b97\u529b\u6ca1\u6709\u7279\u522b\u7684\u8981\u6c42\uff0c\u4f46\u662f\u8bf7\u914d\u7f6e\u5c3d\u53ef\u80fd\u5927\u7684\u78c1\u76d8\u7a7a\u95f4\u4ee5\u9002\u5e94\u533a\u5757\u94fe\u6570\u636e\u672a\u6765\u4e0d\u65ad\u589e\u957f\u7684\u9700\u8981\u3002 \u8282\u70b9\u670d\u52a1\u5668\u6700\u5c0f\u914d\u7f6e\uff1a CPU: 2\u6838 \u5185\u5b58: 2G \u786c\u76d8: 100G PlatONE\u76ee\u524d\u4ec5\u53d1\u5e03\u4e86GO\u7248\u672c\uff0c\u8f6f\u4ef6\u9700\u6c42\u5982\u4e0b\uff1a \u64cd\u4f5c\u7cfb\u7edf\uff1aLinux Golang\uff1aGo 1.11+ Cmake\uff1a3.10+ gcc\uff1a7.3+ 7.PlatONE\u4e2d\u7684\u667a\u80fd\u5408\u7ea6\u548c\u6211\u4eec\u6700\u719f\u6089\u7684\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u8ddf\u4ee5\u592a\u574a\u53ea\u652f\u6301EVM\u4e0a\u8fd0\u884c\u7684\u4ee5Solidity\u4e3a\u4e3b\u8981\u5f00\u53d1\u8bed\u8a00\u7684\u667a\u80fd\u5408\u7ea6\u4e0d\u540c\uff0cPlatONE\u4e0a\u76ee\u524d\u5df2\u652f\u6301\u7684\u667a\u80fd\u5408\u7ea6\u5206\u4e3a\u4e09\u7c7b\uff1a Wasm\u5408\u7ea6 \u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210Wasm\u6267\u884c\u3002\u89e6\u53d1Wasm\u5408\u7ea6\u7684\u4ea4\u6613\u7531\u5171\u8bc6\u8282\u70b9\u6253\u5305\uff0c\u5168\u7f51\u8282\u70b9\u91cd\u590d\u6267\u884c\u9a8c\u8bc1\u3002Wasm\u5408\u7ea6\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u516c\u5171\u8d26\u672c\u4e2d\u3002 \u53ef\u9a8c\u8bc1\u5408\u7ea6 \u662fPlatONE\u7279\u6709\u7684\u667a\u80fd\u5408\u7ea6\uff0c\u5728\u5f00\u53d1\u548c\u53d1\u5e03\u4e0a\u8ddfWasm\u5408\u7ea6\u6ca1\u6709\u533a\u522b\uff0c\u6700\u7ec8\u4e5f\u662f\u7f16\u8bd1\u6210Wasm\u6267\u884c\u3002\u4f46\u53ef\u9a8c\u8bc1\u5408\u7ea6\u53ef\u4ee5\u901a\u8fc7\u72b6\u6001\u8f6c\u6362\u5728\u94fe\u4e0b\u7531\u8ba1\u7b97\u8282\u70b9\u5f02\u6b65\u6267\u884c\uff0c\u8ba1\u7b97\u5b8c\u6210\u540e\u5c06\u65b0\u7684\u72b6\u6001\u548c\u72b6\u6001\u8f6c\u6362\u8bc1\u660e\u63d0\u4ea4\u5230\u94fe\u4e0a\uff0c\u5168\u7f51\u8282\u70b9\u53ef\u5feb\u901f\u9a8c\u8bc1\u6b63\u786e\u6027\u5e76\u5c06\u65b0\u7684\u72b6\u6001\u66f4\u65b0\u5230\u516c\u5171\u8d26\u672c\u4e2d\u3002\u901a\u8fc7\u8fd9\u6837\u5c06\u4fe1\u4efb\u4f20\u9012\u5230\u94fe\u4e0b\u7684\u65b9\u5f0f\uff0c\u53ef\u9a8c\u8bc1\u5408\u7ea6\u53ef\u4ee5\u652f\u6301\u590d\u6742\u3001\u7e41\u91cd\u7684\u8ba1\u7b97\u903b\u8f91\u800c\u4e0d\u5f71\u54cd\u6574\u6761\u94fe\u7684\u6027\u80fd\u3002 \u9690\u79c1\u5408\u7ea6 \u540c\u6837\u652f\u6301\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\uff0c\u7f16\u8bd1\u6210llvm ir\u4e2d\u95f4\u8bed\u8a00\u6267\u884c\u3002\u9690\u79c1\u5408\u7ea6\u7684\u8f93\u5165\u6570\u636e\u4fdd\u5b58\u5728\u6570\u636e\u8282\u70b9\u672c\u5730\uff0c\u7531\u6570\u636e\u8282\u70b9\u5728\u94fe\u4e0b\u4ee5\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u65b9\u5f0f\u8fdb\u884c\u9690\u79c1\u8ba1\u7b97\uff0c\u5e76\u63d0\u4ea4\u8ba1\u7b97\u7ed3\u679c\u5230\u94fe\u4e0a\u3002 8.PlatONE\u91c7\u7528\u54ea\u79cd\u5f00\u53d1\u8bed\u8a00\uff1f PlatONE\u6240\u91c7\u7528\u7684\u5f00\u53d1\u8bed\u8a00\u5305\u62ec\uff1a \u5e95\u5c42\uff1aGolang \u5408\u7ea6\uff1aC++/Python/Go/Rust/Solidity/Js/Java\uff08Wasm\u652f\u6301\u7684\u8bed\u8a00\uff09 DAPP\u5f00\u53d1\u63d0\u4f9bSDK\uff1a Java 9.\u90e8\u7f72\u548c\u8fd0\u7ef4\u5de5\u5177\u96c6\u6709\u54ea\u4e9b\u4f18\u70b9\uff1f \u76ee\u524d\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u4f01\u4e1a\u7ea7\u90e8\u7f72\u5de5\u5177\u96c6\uff0c\u6781\u5927\u7684\u63d0\u9ad8\u4e86\u7528\u6237\u7684\u6613\u7528\u6027\uff0c\u964d\u4f4e\u5b66\u4e60\u6210\u672c\u3002\u652f\u6301\u4e00\u952e\u542f\u52a8\u591a\u8282\u70b9\u8054\u76df\u94fe\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e30\u5bcc\u7684\u8fd0\u7ef4\u811a\u672c\uff0c\u6781\u5927\u7684\u964d\u4f4e\u4e86\u8054\u76df\u94fe\u8fd0\u7ef4\u96be\u5ea6\u3002 10.PlatONE\u4e2d\u8282\u70b9\u7c7b\u578b\u6709\u54ea\u4e9b\uff0c\u5bf9\u5e94\u7684\u529f\u80fd\u662f\u4ec0\u4e48\uff1f PlatONE\u4e2d\u7684\u8282\u70b9\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u7c7b\uff1a \u89c2\u5bdf\u8005\u8282\u70b9: \u53ea\u8d1f\u8d23\u540c\u6b65\u533a\u5757\uff0c\u4e0d\u53c2\u4e0e\u51fa\u5757\uff0c\u7cfb\u7edf\u4e2d\uff0c\u5c06\u4f1a\u4e00\u76f4\u5b58\u5728\u51e0\u4e2a\u7a33\u5b9a\u7684\u89c2\u5bdf\u8005\u8282\u70b9\u3002\u7528\u4e8e\u7a33\u5b9a\u540c\u6b65\u533a\u5757\uff0c\u540c\u65f6\u4e5f\u7528\u4e8e\u88ab\u5176\u4ed6\u7684\u8282\u70b9\u6307\u5b9a\u4e3abootnodes \u8fdb\u884c\u8fde\u63a5\uff1b \u5171\u8bc6\u8282\u70b9: \u53c2\u4e0e\u51fa\u5757\uff0c\u4ee5\u53ca\u540c\u6b65\u533a\u5757\u3002 11.PlatONE\u7684\u6743\u9650\u7ba1\u7406\uff1f \u6839\u636e\u7cfb\u7edf\u4e2d\u7684\u4e0d\u540c\u5b9e\u4f53\u5bf9\u8c61\uff0cPlatONE\u5c06\u6743\u9650\u7ba1\u7406\u8fdb\u884c\u4e86\u6a21\u5757\u5316\u7684\u62c6\u5206\u3002\u9488\u5bf9\u7cfb\u7edf\u4e2d\u7528\u6237\u8d26\u6237\u3001\u8282\u70b9\u548c\u667a\u80fd\u5408\u7ea6\uff0c\u8fd9\u4e09\u7c7b\u5b9e\u4f53\u7684\u4e0d\u540c\u884c\u4e3a\uff0c\u5206\u522b\u8bbe\u8ba1\u4e86\u7528\u6237\u89d2\u8272\u7ba1\u7406\u6a21\u5757\u3001\u8282\u70b9\u7ba1\u7406\u6a21\u5757\u548c\u5408\u7ea6\u9632\u706b\u5899\u6a21\u5757\u6765\u8fdb\u884c\u6743\u9650\u7684\u63a7\u5236\u548c\u7ba1\u7406\u3002 \u89d2\u8272\u7ba1\u7406\uff1aPlatONE\u6839\u636e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u8bbe\u5b9a\u4e86\u4e0d\u540c\u7684\u7528\u6237\u89d2\u8272\uff0c\u5e76\u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u7684\u65b9\u5f0f\u5bf9\u7528\u6237\u7684\u89d2\u8272\u8fdb\u884c\u7ba1\u7406\u3002\u6839\u636e\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u7528\u6237\u5728\u7cfb\u7edf\u4e2d\u88ab\u8d4b\u4e88\u4e0d\u540c\u7684\u6743\u9650\u3002 \u8282\u70b9\u7ba1\u7406\uff1aPlatONE\u901a\u8fc7\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u5bf9\u8282\u70b9\u8fdb\u884c\u7ba1\u7406\uff0c\u5305\u62ec\u8282\u70b9\u662f\u5426\u80fd\u591f\u63a5\u5165\u7f51\u7edc\uff0c\u8282\u70b9\u662f\u5426\u80fd\u591f\u53c2\u4e0e\u5171\u8bc6\u4ee5\u53ca\u8282\u70b9\u4fe1\u606f\u7684\u7ef4\u62a4\u7b49\u529f\u80fd\u3002\u6839\u636e\u4e4b\u524d\u7528\u6237\u89d2\u8272\u7684\u8bbe\u5b9a\uff0c\u53ea\u6709chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e09\u7c7b\u7528\u6237\u624d\u53ef\u4ee5\u8bbe\u7f6e\u7cfb\u7edf\u5408\u7ea6\u4e2d\u7684\u8282\u70b9\u6570\u636e\uff0c\u5f53\u9700\u8981\u6dfb\u52a0\u8282\u70b9\u3001\u66f4\u65b0\u8282\u70b9\u72b6\u6001\u3001\u5220\u9664\u8282\u70b9\u65f6\u90fd\u9700\u8981\u8fd9\u4e09\u7c7b\u8d26\u6237\u6765\u8c03\u7528\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fnodeAdmin\u4ec5\u53ef\u4ee5\u7ba1\u7406\u81ea\u5df1\u52a0\u5165\u7684\u8282\u70b9\uff0cchainCreator\u548cchainAdmin\u53ef\u4ee5\u7ba1\u7406\u6240\u6709\u8282\u70b9\u3002 \u5408\u7ea6\u9632\u706b\u5899\uff1aPlatONE\u4e2d\u5408\u7ea6\u7684\u8c03\u7528\u6743\u9650\u7531\u5408\u7ea6\u9632\u706b\u5899\u63a7\u5236\uff0c\u53ea\u6709\u5408\u7ea6\u7684\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5408\u7ea6\u7684\u9632\u706b\u5899\u3002\u5408\u7ea6\u9632\u706b\u5899\u5177\u5907\u5408\u7ea6\u63a5\u53e3\u7ea7\u522b\u7684\u8bbf\u95ee\u63a7\u5236\u3002 12.\u5982\u4f55\u5c06\u5408\u7ea6\u7eb3\u5165CNS\u7ba1\u7406\uff1f \u5728\u90e8\u7f72\u5408\u7ea6\u65f6\uff0c\u8c03\u7528CNS\u5408\u7ea6\u63a5\u53e3\uff0c\u5c06\u5408\u7ea6name\u3001version\u3001address\u4fe1\u606f\u5199\u5165CNS\u8868\u4e2d\u3002 13.\u5728\u54ea\u4e9b\u65b9\u9762\u53ef\u4ee5\u4e3aPlatONE\u505a\u51fa\u8d21\u732e\uff1f PlatONE\u76ee\u524d\u8fd8\u5904\u4e8e\u5f00\u53d1\u521d\u671f\uff0c\u4e9f\u5f85\u8fdb\u4e00\u6b65\u7684\u5b8c\u5584\uff0c\u6240\u4ee5\u975e\u5e38\u5e0c\u671b\u5404\u65b9\u6709\u5fd7\u4eba\u58eb\u5171\u540c\u53c2\u4e0e\u5230PlatONE\u7684\u4e0d\u65ad\u4f18\u5316\u548c\u63d0\u5347\u8fc7\u7a0b\u4e2d\u6765\u3002\u5927\u5bb6\u53ef\u4ee5\u4ece\u5982\u4e0b\u51e0\u4e2a\u65b9\u9762\u53c2\u4e0ePlatONE\u7684\u5efa\u8bbe\uff1a \u7814\u53d1\u65b9\u9762\uff1a\u53c2\u4e0ePlatONE\u7684\u529f\u80fd\u8fed\u4ee3\u3001bug\u4fee\u590d\u3001\u89e3\u51b3\u65b9\u6848\u7b49\uff1b \u6587\u6863\u65b9\u9762\uff1a\u53c2\u4e0ePlatONE\u6280\u672f\u6587\u6863\u3001\u7ffb\u8bd1\u3001\u8f6f\u6587\u5ba3\u4f20\u3001UI\u6d77\u62a5\u8bbe\u8ba1\u7b49\uff1b \u6d3b\u52a8\u65b9\u9762\uff1a\u53c2\u4e0ePlatONE\u7684\u793e\u7fa4\u5efa\u8bbe\u3001\u6d3b\u52a8\u7ec4\u7ec7\u4e3e\u529e\u7b49\u3002 14.\u5982\u4f55\u7533\u8bf7\u6210\u4e3aPlatONE\u7684GitHub\u9879\u76ee\u7ec4\u6210\u5458\uff1f PlatONE\u6b22\u8fce\u793e\u533a\u6240\u6709\u4eba\u901a\u8fc7GitHub\u63d0\u4ea4Issues\u548cPull Request\u6765\u8d21\u732e\u65b9\u6848\u548c\u4ee3\u7801\uff0cPlatONE\u6838\u5fc3\u5f00\u53d1\u56e2\u961f\u4f1a\u6839\u636e\u8d21\u732e\u60c5\u51b5\u8fdb\u884c\u8bc4\u4f30\uff0c\u5e76\u5b9a\u5411\u9080\u8bf7\u793e\u533a\u7cbe\u82f1\u52a0\u5165\u9879\u76ee\u7ec4\u3002","title":"\u5e38\u89c1\u95ee\u9898\u89e3\u7b54"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/","text":"\u5b89\u88c5\u6307\u5357 \u672c\u6587\u6863\u63d0\u4f9bPlatONE\u5728Linux\u73af\u5883\u4e0b\u5b89\u88c5\u65b9\u5f0f,\u5728\u7f16\u8bd1\u5b89\u88c5PlatONE\u4e4b\u524d, \u9700\u786e\u4fdd\u7cfb\u7edf\u5df2\u7ecf\u5b89\u88c5\u4e86\u5982\u4e0b\u73af\u5883: gcc 7.3+ cmake 3.10+ go 1.11.4+ \u672c\u6587\u6863\u63d0\u4f9b2\u79cdPlatONE\u7684\u5b89\u88c5\u4e0e\u542f\u52a8\u65b9\u5f0f: 1. \u8be6\u7ec6\u5b89\u88c5\u4e0e\u542f\u52a8 \u6b64\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdPlatONE\u4ece\u6e90\u7801\u7f16\u8bd1\u5230\u90e8\u7f72\u542f\u52a8\u7684\u5177\u4f53\u7684\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u3002\u9700\u8981\u4e00\u6b65\u4e00\u6b65\u7684\u6309\u7167\u6587\u6863\u6267\u884c\u3002\u9488\u5bf9\u521a\u63a5\u89e6PlatONE\u65f6, \u53ef\u4ee5\u65b9\u4fbf\u4e86\u89e3PlatONE\u7f16\u8bd1\u542f\u52a8\u7684\u6574\u4f53\u8fc7\u7a0b\u3002 PlatONE\u8be6\u7ec6\u5b89\u88c5\u4e0e\u542f\u52a8 2. \u5feb\u901f\u5b89\u88c5\u4e0e\u542f\u52a8 \u6b64\u6587\u6863\u6574\u5408PlatONE\u542f\u52a8\u8fc7\u7a0b\u4e2d\u7684\u591a\u4e2a\u6b65\u9aa4\u5408\u6210\u4e86\u5355\u4e2a\u811a\u672c\u547d\u4ee4, \u7528\u6765\u5feb\u901f\u7f16\u8bd1\u548c\u542f\u52a8PlatONE\u3002 \u9488\u5bf9\u5bf9PlatONE\u6709\u4e00\u5b9a\u4e86\u89e3\u7684\u7528\u6237, \u6765\u5feb\u901f\u8fdb\u884c\u94fe\u7684\u642d\u5efa\u3002\u5e76\u5728\u8fd0\u7ef4\u65b9\u9762\u7ed9\u51fa\u4e86\u76f8\u5e94\u7684\u5efa\u8bae\u3002 PlatONE\u5feb\u901f\u5b89\u88c5\u4e0e\u542f\u52a8","title":"\u73af\u5883\u914d\u7f6e"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/#_1","text":"\u672c\u6587\u6863\u63d0\u4f9bPlatONE\u5728Linux\u73af\u5883\u4e0b\u5b89\u88c5\u65b9\u5f0f,\u5728\u7f16\u8bd1\u5b89\u88c5PlatONE\u4e4b\u524d, \u9700\u786e\u4fdd\u7cfb\u7edf\u5df2\u7ecf\u5b89\u88c5\u4e86\u5982\u4e0b\u73af\u5883: gcc 7.3+ cmake 3.10+ go 1.11.4+ \u672c\u6587\u6863\u63d0\u4f9b2\u79cdPlatONE\u7684\u5b89\u88c5\u4e0e\u542f\u52a8\u65b9\u5f0f:","title":"\u5b89\u88c5\u6307\u5357"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/#1","text":"\u6b64\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdPlatONE\u4ece\u6e90\u7801\u7f16\u8bd1\u5230\u90e8\u7f72\u542f\u52a8\u7684\u5177\u4f53\u7684\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u3002\u9700\u8981\u4e00\u6b65\u4e00\u6b65\u7684\u6309\u7167\u6587\u6863\u6267\u884c\u3002\u9488\u5bf9\u521a\u63a5\u89e6PlatONE\u65f6, \u53ef\u4ee5\u65b9\u4fbf\u4e86\u89e3PlatONE\u7f16\u8bd1\u542f\u52a8\u7684\u6574\u4f53\u8fc7\u7a0b\u3002 PlatONE\u8be6\u7ec6\u5b89\u88c5\u4e0e\u542f\u52a8","title":"1. \u8be6\u7ec6\u5b89\u88c5\u4e0e\u542f\u52a8"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/#2","text":"\u6b64\u6587\u6863\u6574\u5408PlatONE\u542f\u52a8\u8fc7\u7a0b\u4e2d\u7684\u591a\u4e2a\u6b65\u9aa4\u5408\u6210\u4e86\u5355\u4e2a\u811a\u672c\u547d\u4ee4, \u7528\u6765\u5feb\u901f\u7f16\u8bd1\u548c\u542f\u52a8PlatONE\u3002 \u9488\u5bf9\u5bf9PlatONE\u6709\u4e00\u5b9a\u4e86\u89e3\u7684\u7528\u6237, \u6765\u5feb\u901f\u8fdb\u884c\u94fe\u7684\u642d\u5efa\u3002\u5e76\u5728\u8fd0\u7ef4\u65b9\u9762\u7ed9\u51fa\u4e86\u76f8\u5e94\u7684\u5efa\u8bae\u3002 PlatONE\u5feb\u901f\u5b89\u88c5\u4e0e\u542f\u52a8","title":"2. \u5feb\u901f\u5b89\u88c5\u4e0e\u542f\u52a8"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/","text":"PlatONE\u5feb\u901f\u90e8\u7f72 1. PlatONE\u6e90\u7801\u4e0b\u8f7d\u53ca\u7f16\u8bd1 \u9996\u5148\u7528\u6237\u9700\u8981\u4ecegithub\u4e0b\u8f7dPlatONE\u6e90\u7801\u5e76\u7f16\u8bd1 # \u83b7\u53d6PlatONE\u6e90\u7801 git clone --recursive https://github.com/PlatONEnterprise/PlatONE-Go.git export WORKSPACE=${PWD}/PlatONE-Go/release/linux # \u7f16\u8bd1PlatONE cd PlatONE-Go; make all; cd .. \u5982\u679c\u7f16\u8bd1\u5931\u8d25\uff0c\u8bf7\u786e\u4fdd\u60a8\u6b63\u786e\u5b89\u88c5\u4e86\u6240\u9700\u7684\u73af\u5883\uff0c\u7136\u540e\u91cd\u65b0\u5c1d\u8bd5. 2. \u5355\u673a\u90e8\u7f72\uff08\u9002\u7528\u4e8e\u7b80\u5355\u6d4b\u8bd5\u73af\u5883\uff09 2.1 \u5feb\u901f\u90e8\u7f72\uff08\u9002\u7528\u4e8e\u7b80\u5355\u6d4b\u8bd5\u73af\u5883\uff09 \u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u5feb\u901f\u542f\u52a8\u4e00\u4e2a\u8282\u70b9\u6216\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e2d\u542f\u52a8\u56db\u4e2a\u8282\u70b9\u3002 2.1.1 \u5f00\u542f\u5355\u8282\u70b9 \u5feb\u901f\u542f\u52a8\u5355\u8282\u70b9\u533a\u5757\u94fe: ./platonectl.sh one 2.1.2 \u5f00\u542f\u56db\u8282\u70b9 \u5728\u4e00\u53f0\u673a\u5668\u4e0a\u5feb\u901f\u542f\u52a8\u56db\u8282\u70b9\u533a\u5757\u94fe: ./platonectl.sh four 2.2 \u5feb\u901f\u6f14\u793a 2.2.1 \u542f\u52a8\u5355\u8282\u70b9\u533a\u5757\u94fe # 1. \u751f\u6210\u63cf\u8ff0\u533a\u5757\u94fe\u4fe1\u606f\u7684genesis\u6587\u4ef6 cd ${WORKSPACE}/scripts ./platonectl.sh setupgen -n 0 --ip 127.0.0.1 --p2p_port 16791 --auto true # 2. \u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u8282\u70b9(node 0) ./platonectl.sh init -n 0 --ip 127.0.0.1 --rpc_port 6791 --p2p_port 16791 \\ --ws_port 26791 --auto \"true\" # 3. \u5f00\u542f\u8282\u70b9 (node 0) ./platonectl.sh start -n 0 # 4. \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6 ./platonectl.sh deploysys -n 0 --auto \"true\" 2.2.2 \u5c06\u5176\u4ed6\u8282\u70b9\u6dfb\u52a0\u5230\u94fe\u4e2d # 1. \u521d\u59cb\u5316node-1 ./platonectl.sh init -n 1 --ip 127.0.0.1 --rpc_port 6792 --p2p_port 16792 \\ --ws_port 26792 --auto \"true\" # 2. \u542f\u52a8node-1 ./platonectl.sh start -n 1 # 3. \u5c06\u8282\u70b9\u6dfb\u52a0\u5230\u5df2\u5b58\u5728\u7684\u533a\u5757\u94fe\u4e2d ./platonectl.sh addnode -n 1 # 4. \u5c06node-1\u66f4\u65b0\u4e3a\u5171\u8bc6\u8282\u70b9 ./platonectl.sh updatesys -n 1 2.3 \u94fe\u90e8\u7f72\u8be6\u7ec6 2.3.1 \u521b\u5efagenesis.json \u5f53\u60a8\u542f\u52a8\u533a\u5757\u94fe\u65f6\uff0c\u9996\u5148\u9700\u8981\u521b\u5efagenesis.json\u6587\u4ef6\u3002 cd ${WORKSPACE}/scripts ./platonectl.sh setupgen -n 0 --ip 127.0.0.1 --p2p_port 16791 --auto true auto=false: \u5c06\u7ed9\u51fa\u63d0\u793a\u8fdb\u884c\u9009\u62e9\u662f\u5426\u7f16\u8bd1\u7cfb\u7edf\u5408\u7ea6 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 ./platonectl.sh setupgen 2.3.2 \u521d\u59cb\u5316\u8282\u70b9 ./platonectl.sh init -n 0 --ip 127.0.0.1 --rpc_port 6791 --p2p_port 16791 \\ --ws_port 26791 --auto \"true\" \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 ./platonectl.sh init 2.3.3 \u542f\u52a8\u8282\u70b9 ./platonectl.sh start -n 0 \u5728\u542f\u52a8\u8282\u70b9\u65f6, \u4e5f\u53ef\u4ee5\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u5939\u7684\u8def\u5f84, \u65e5\u5fd7\u6587\u4ef6\u5206\u5757\u7684\u5927\u5c0f, \u6307\u5b9aplatone\u542f\u52a8\u65f6\u989d\u5916\u7684\u547d\u4ee4\u884c\u53c2\u6570\u7b49. (\u6ce8\u610f: \u8def\u5f84\u8fde\u63a5\u7b26'/' \u9700\u8981\u8fdb\u884c\u8f6c\u4e49, \u53c2\u6570option\u7684\u503c, \u5fc5\u987b\u52a0\u4e0a\u5f15\u53f7) ./platonectl.sh start -n 0 -d '.\\/logs\\/platone' -s 65535 -e '--verbosity 3 --debug' \u65e5\u5fd7\u6587\u4ef6\u5939\u4e2d\u5305\u542bwasm\u6267\u884c\u7684\u65e5\u5fd7\u4e0eplatone\u8fd0\u884c\u7684\u65e5\u5fd7. \u968f\u65f6\u95f4\u63a8\u79fb, \u65e5\u5fd7\u6587\u4ef6\u4f1a\u8d8a\u79ef\u8d8a\u591a, \u5efa\u8bae\u8fdb\u884c\u6302\u8f7d, \u6216\u8005\u8fdb\u884c\u5b9a\u671f\u5220\u9664\u7b49\u64cd\u4f5c\u3002 2.3.4 \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6 ./platonectl.sh deploysys -n 0 --auto true 2.3.5 \u6dfb\u52a0\u8282\u70b9 \u60a8\u53ef\u80fd\u5e0c\u671b\u5411PlatONE\u7f51\u7edc\u6dfb\u52a0\u4e00\u4e9b\u8282\u70b9\uff0c\u60a8\u5fc5\u987b\u9996\u5148\u521d\u59cb\u5316\u6b64\u65b0\u8282\u70b9\u3002 \u521d\u59cb\u5316\u65b0\u8282\u70b9(node 1): ./platonectl.sh init -n 1 --ip 127.0.0.1 --rpc_port 6792 --p2p_port 16792 \\ --ws_port 26792 --auto \"true\" \u589e\u52a0\u65b0\u8282\u70b9: ./platonectl.sh addnode -n 1 \u60a8\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u8fdc\u7a0b\u8282\u70b9: ./platonectl.sh addnode -n 10 --p2p_port 3333 --rpc_port 4444 --ip xxx.xxx.xxx.xxx --pubkey xxxxx 2.3.6 \u66f4\u65b0\u8282\u70b9 \u5c06\u8282\u70b9\u66f4\u65b0\u4e3a\u5171\u8bc6\u8282\u70b9\u3002 ./platonectl.sh updatesys -n 1 \u60a8\u8fd8\u53ef\u4ee5\u66f4\u65b0\u8282\u70b9\u72b6\u6001\uff1a ./platonectl.sh updatesys -n 1 -c '{\"status\":3}' 2.3.7 \u521b\u5efa\u8d26\u6237 \u4e3a\u8282\u70b9\u521b\u5efa\u5e10\u6237: ./platonectl.sh createacc -n 1 2.3.8 \u89e3\u9501\u5e10\u6237 \u89e3\u9501\u8282\u70b9\u5e10\u6237\u3002 \u5728\u89e3\u9501\u8282\u70b9\u5e10\u6237\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u542f\u52a8\u8282\u70b9\u3002 ./platonectl.sh unlock -n 1 2.3.9 \u8fde\u63a5\u5230console \u60a8\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a\u4ea4\u4e92\u5f0fJavaScript\u73af\u5883 : ./platonectl.sh console -n 0 2.3.10 \u83b7\u53d6\u6240\u6709\u8282\u70b9 \u60a8\u53ef\u4ee5\u4ece\u7cfb\u7edf\u5408\u7ea6\u4e2d\u83b7\u53d6\u6240\u6709\u8282\u70b9 ./platonectl.sh get 2.3.11 \u67e5\u770b\u8282\u70b9\u4fe1\u606f \u4ee5\u4e0b\u547d\u4ee4\u53ef\u7528\u4e8e\u83b7\u53d6\u8282\u70b9\u72b6\u6001\u548c\u4fe1\u606f: ./platonectl.sh status -n 0 console: disable -> node_id: 0 node info: node.address: f92f1c1469d1a8c38964c63d62d3167842ce70cd node.ip: 127.0.0.1 node.rpc_port: 6791 node.p2p_port: 16791 node.ws_port: 26791 node.pubkey: 9afcb45d2725059a5a6a7f379d6404b6c914b02dd3e7a33d29c87b3f28f8f63b78ffe2736a3cb52ae45bbf57471d438eac71ddcc0bdfbaa56d65e59d457159b2 2.3.12 \u505c\u6b62\u548c\u6e05\u9664 \u60a8\u53ef\u4ee5\u505c\u6b62\u8282\u70b9\u5e76\u6e05\u9664\u8282\u70b9\u6570\u636e\uff1a ./platonectl.sh stop -n 0 ./platonectl.sh clear -n 0 \u5b83\u8fd8\u53ef\u4ee5\u7b80\u5316\u5982\u4e0b:(\u6e05\u9664\u5305\u62ec\u6682\u505c\u529f\u80fd\uff09: ./platonectl.sh clear -n 0 3. \u591a\u673a\u90e8\u7f72\uff08\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883/\u591a\u673a\u6d4b\u8bd5\u73af\u5883\uff09 \u6848\u4f8b: A, B, C, D\u56db\u53f0\u4e3b\u673a (\u90e8\u7f72\u524d\u5148\u5220\u9664\u539f\u6709\u7684\u76f8\u5173\u6587\u4ef6\u6570\u636e) A: 172.26.10.96 B: 172.26.10.97 C: 172.26.10.98 D: 172.26.10.99 3.1 \u751f\u4ea7\u73af\u5883\u914d\u7f6e\u8bf4\u660e \u5728\u90e8\u7f72\u524d\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u673a\u5668\u9700\u8981\u505a\u4e00\u6b21\u65f6\u95f4\u540c\u6b65\u3002 \u65e5\u5fd7\u7b49\u7ea7\uff1a -e \u6307\u5b9a\u4e86 \u989d\u5916\u53c2\u6570 \uff0c\u9ed8\u8ba4 \u989d\u5916\u53c2\u6570 \u662f \u2014debug \u3002\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u53ef\u4ee5\u901a\u8fc7 -e \" \" \u8986\u76d6\u65e5\u5fd7\u7b49\u7ea7\uff0c \u5373\u53ef\u5f00\u542f \u975edebug \u6a21\u5f0f\u3002\u540c\u65f6 -e '--verbosity 2' \u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u65e5\u5fd7\u7b49\u7ea7\u3002 \u65e5\u5fd7\u4f4d\u7f6e\uff1a\u751f\u4ea7\u73af\u5883\u9700\u8981\u6307\u5b9a\u65e5\u5fd7\u5b58\u653e\u8def\u5f84\uff0c\u53c2\u8003 2.4\u8282 \u4e2d start \u7684\u53c2\u6570 -d \u6307\u5b9a\u65e5\u5fd7\u5b58\u653e\u4f4d\u7f6e \u65e5\u5fd7\u5206\u5757\uff1a\u9ed8\u8ba4\u5206\u5757\u5927\u5c0f\u4e3a64M\u3002\u5982\u9700\u8981\u6307\u5b9a \u53ef\u53c2\u8003 2.4\u8282 \u4e2d start \u7684\u53c2\u6570 \u2014logsize \u6307\u5b9a\u5206\u5757\u5927\u5c0f\u3002 \u901a\u8fc7 \u2014bootnodes \u6307\u5b9a\u540c\u6b65\u8282\u70b9\uff0c\u63a8\u8350\u4f7f\u7528genesis.json\u4e2d\u7684observeNoes\u6765\u8fde\u63a5\uff0c\u53ef\u5728 -e \" \" \u4e2d\u6307\u5b9a\uff08\u5982\u4e0b\u4f8b\u5b50\u6240\u793a\uff09\u3002 \u56e0\u6b64\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff1a 4.2 \u8282\u4e2d\u6d89\u53ca\u5230 start \u542f\u52a8\u6b65\u9aa4\u7684\u64cd\u4f5c\u6b65\u9aa4\uff1a ./platonectl.sh start -n x \u9700\u8981\u66ff\u6362\u6210\uff1a ./platonectl.sh start -n x -d \"\\/opt\\/logs\" -e \"--bootnodes enode://8ab91d36a58e03c7d5528ea9186474cf5bfbec46d24cd59cf5eef1b63b2f4120334ca2a6af9ae495fa1931cdfe684caa74c86ad77fcfa0f044f4da30f7a83a4e@127.0.0.1:16791\" \uff08\u5177\u4f53\u8def\u5f84\u9700\u8981\u89c6\u751f\u4ea7\u7684\u89c4\u5212\uff09 3.2 \u542f\u52a8 A\u4e2d: cd ${WORKSPACE}/scripts ./platonectl.sh clear -a ./platonectl.sh setupgen --ip 172.26.10.96 --auto true ./platonectl.sh init -n 0 --ip 172.26.10.96 --auto true ./platonectl.sh start -n 0 ./platonectl.sh deploysys --auto true ./platonectl.sh init -n 1 --ip 172.26.10.97 --auto true ./platonectl.sh init -n 2 --ip 172.26.10.98 --auto true ./platonectl.sh init -n 3 --ip 172.26.10.99 --auto true for n in $(seq 3); do ./platonectl.sh addnode -n ${n} done \u6b64\u65f6\u6240\u9700\u8981\u7684\u591a\u673a\u6570\u636e\u6587\u4ef6\u51c6\u5907\u9f50\u5168, \u62f7\u8d1d\u6570\u636e\u5230\u5176\u4ed6\u4e09\u53f0\u4e3b\u673a scp -r ${WORKSPACE}/../linux user@172.26.10.97:~/ scp -r ${WORKSPACE}/../linux user@172.26.10.98:~/ scp -r ${WORKSPACE}/../linux user@172.26.10.99:~/ B\u4e2d: cd ~/linux/scripts ./platonectl.sh start -n 1 C\u4e2d: cd ~/linux/scripts ./platonectl.sh start -n 2 D\u4e2d: cd ~/linux/scripts ./platonectl.sh start -n 3 3.3 \u66f4\u65b0\u8282\u70b9\u4e3a\u5171\u8bc6\u8282\u70b9 A\u4e2d: ./platonectl.sh updatesys -n 1 ./platonectl.sh updatesys -n 2 ./platonectl.sh updatesys -n 3 4 \u5907\u4efd \u8be5\u529f\u80fd\u652f\u6301\u8282\u70b9\u672a\u542f\u52a8\uff0c\u4ee5\u53cachaindb\u4e2d\u6570\u636e\u635f\u574f\u7684\u573a\u666f\u4e0b\uff0c\u901a\u8fc7\u7ebf\u4e0b\u4f20\u9012\u533a\u5757\u6570\u636e\u7684\u65b9\u5f0f\uff0c\u5c06\u67d0\u8282\u70b9\u843d\u540e\u7684\u533a\u5757\u6570\u636e\u8865\u9f50 4.1. export \u901a\u8fc7export\u529f\u80fd\uff0c\u5c06\u67d0\u8282\u70b9\u6307\u5b9a\u8303\u56f4\u5185\u7684\u7ecf\u8fc7RLP\u7f16\u7801\u540e\u7684\u533a\u5757\u6570\u636e\u5bfc\u51fa\u5230\u67d0\u4e2a\u6587\u4ef6\u4e2d ./platone --datadir <\u5f85\u5bfc\u51fa\u8282\u70b9\u7684chaindata\u8def\u5f84> export <\u8f93\u51fa\u6587\u4ef6\u540d> <\u5bfc\u51fa\u533a\u5757\u9ad8\u5ea6\u4e0b\u754c> <\u5bfc\u51fa\u533a\u5757\u9ad8\u5ea6\u4e0a\u754c> 4.2. import \u901a\u8fc7import\u529f\u80fd\uff0c\u5c067.1\u4e2d\u5bfc\u51fa\u7684\u533a\u5757\u6570\u636e\u5bfc\u5165\u6307\u5b9a\u8282\u70b9 ./platone --datadir <\u5f85\u5bfc\u5165\u8282\u70b9\u7684chaindata\u8def\u5f84> import <\u533a\u5757\u6587\u4ef6\u540d> 5. \u751f\u4ea7\u65e5\u5fd7\u6e05\u7406\u7b56\u7565\u53c2\u8003 \u6211\u4eec\u6a21\u62df\u4e86\u6b63\u5e38\u4ea4\u6613\u538b\u529b\u4e0b\u7684\u65e5\u5fd7\u91cf\uff1a\u5355\u8282\u70b9\u4e0a\uff0c24\u5c0f\u65f6\u4ea7\u51fa\u7ea6\u4e3a300M\u5927\u5c0f\u7684\u65e5\u5fd7\u3002 \u5047\u8bbe\u5728500G\u6570\u636e\u76d8\u7684\u89c4\u5212\u4e0b\uff0c\u6309\u716770%\u7684\u9608\u503c\u4fdd\u7559\uff0c\u53bb\u9664\u94feDB\u6570\u636e\uff08\u5efa\u8bae\u4fdd\u7559\u81f3\u5c11100GB\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u4fdd\u7559\u7ea627\u4e2a\u6708\u7684\u6570\u636e\u3002 \u4f46\u7531\u4e8e\u4ea4\u6613\u5cf0\u503c\u51fa\u73b0\u7684\u53ef\u80fd\u6027\uff0c\u5efa\u8bae\u540c\u65f6\u5b9e\u65bd\u7a7a\u95f4\u5927\u5c0f\u9608\u503c\u7684\u6e05\u7406\u7b56\u7565\uff0c\u5373\u5f53\u65e5\u5fd7\u603b\u91cf\u8fbe\u5230500GB*70%-100GB =250GB \u65f6\uff0c\u5b9e\u65bd\u5bf9\u6700\u65e9\u7684\u4e00\u4e2a\u6708\u6570\u636e\u7684\u6e05\u7406\u3002 \u603b\u7ed3\uff1a \u65f6\u95f4\u7ef4\u5ea6\u548c\u7a7a\u95f4\u7ef4\u5ea6\u7684\u65e5\u5fd7\u6e05\u7406\u7b56\u7565\u540c\u65f6\u5b9e\u65bd\u3002 6. \u8fd0\u884c\u72b6\u6001\u68c0\u67e5&\u9519\u8bef\u6392\u67e5 \u5728\u5c06\u94fe\u4ea4\u4ed8\u7ed9\u4e1a\u52a1\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u7ef4\u5ea6\u9a8c\u8bc1\u94fe\u7684\u8fd0\u884c\u6b63\u786e\u6027\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u94fe\u8fd0\u884c\u72b6\u6001\u68c0\u67e5\uff1a \u94fe\u8fd0\u884c\u65e5\u5fd7\uff0c\u89c2\u5bdf\u662f\u5426\u6b63\u5e38\u51fa\u5757\u3002\uff08\u6b63\u5e38\u51fa\u5757\u95f4\u9694\u57281\uff5e3\u79d2\u4e4b\u95f4\uff09 \u7cfb\u7edf\u5408\u7ea6\u90e8\u7f72\u60c5\u51b5\u68c0\u67e5\uff1a \u7cfb\u7edf\u5408\u7ea6\u7684\u90e8\u7f72\u65e5\u5fd7\u5728 wasm_log\u6587\u4ef6\u5939\u4e2d\uff0c\u53ef\u4ee5\u76d1\u63a7\u65e5\u5fd7\u4e2d\u662f\u5426\u51fa\u73b0\u4e86 error \u5173\u952e\u8bcd\uff0c\u6392\u67e5\u5408\u7ea6\u662f\u5426\u6b63\u5e38\u90e8\u7f72\u3002 \u901a\u8fc7 ./platonectl.sh get \u547d\u4ee4\uff0c\u786e\u8ba4\u6240\u6709\u8282\u70b9\u5df2\u7ecf\u88ab\u8bb0\u5f55\u5230\u4e86\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002 \u76d1\u63a7\u94fe\u8fd0\u884c\u8fc7\u7a0b\u7684 error \u6216\u8005 warning \u5173\u952e\u8bcd\u3002 \uff08\u90e8\u5206\u548c\u8282\u70b9\u77ac\u65f6\u8054\u901a\u6027\u76f8\u5173\u7684\uff0c\u5982\u8282\u70b9\u4e92ping\u5fc3\u8df3\u5305\u5bfc\u81f4\u7684\u62a5\u9519\u4fe1\u606f\u53ef\u5ffd\u7565\u3002\uff09","title":"PlatONE\u5feb\u901f\u90e8\u7f72"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#platone","text":"","title":"PlatONE\u5feb\u901f\u90e8\u7f72"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#1-platone","text":"\u9996\u5148\u7528\u6237\u9700\u8981\u4ecegithub\u4e0b\u8f7dPlatONE\u6e90\u7801\u5e76\u7f16\u8bd1 # \u83b7\u53d6PlatONE\u6e90\u7801 git clone --recursive https://github.com/PlatONEnterprise/PlatONE-Go.git export WORKSPACE=${PWD}/PlatONE-Go/release/linux # \u7f16\u8bd1PlatONE cd PlatONE-Go; make all; cd .. \u5982\u679c\u7f16\u8bd1\u5931\u8d25\uff0c\u8bf7\u786e\u4fdd\u60a8\u6b63\u786e\u5b89\u88c5\u4e86\u6240\u9700\u7684\u73af\u5883\uff0c\u7136\u540e\u91cd\u65b0\u5c1d\u8bd5.","title":"1. PlatONE\u6e90\u7801\u4e0b\u8f7d\u53ca\u7f16\u8bd1"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#2","text":"","title":"2. \u5355\u673a\u90e8\u7f72\uff08\u9002\u7528\u4e8e\u7b80\u5355\u6d4b\u8bd5\u73af\u5883\uff09"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#21","text":"\u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u5feb\u901f\u542f\u52a8\u4e00\u4e2a\u8282\u70b9\u6216\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e2d\u542f\u52a8\u56db\u4e2a\u8282\u70b9\u3002","title":"2.1 \u5feb\u901f\u90e8\u7f72\uff08\u9002\u7528\u4e8e\u7b80\u5355\u6d4b\u8bd5\u73af\u5883\uff09"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#211","text":"\u5feb\u901f\u542f\u52a8\u5355\u8282\u70b9\u533a\u5757\u94fe: ./platonectl.sh one","title":"2.1.1 \u5f00\u542f\u5355\u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#212","text":"\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u5feb\u901f\u542f\u52a8\u56db\u8282\u70b9\u533a\u5757\u94fe: ./platonectl.sh four","title":"2.1.2 \u5f00\u542f\u56db\u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#22","text":"","title":"2.2 \u5feb\u901f\u6f14\u793a"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#221","text":"# 1. \u751f\u6210\u63cf\u8ff0\u533a\u5757\u94fe\u4fe1\u606f\u7684genesis\u6587\u4ef6 cd ${WORKSPACE}/scripts ./platonectl.sh setupgen -n 0 --ip 127.0.0.1 --p2p_port 16791 --auto true # 2. \u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u8282\u70b9(node 0) ./platonectl.sh init -n 0 --ip 127.0.0.1 --rpc_port 6791 --p2p_port 16791 \\ --ws_port 26791 --auto \"true\" # 3. \u5f00\u542f\u8282\u70b9 (node 0) ./platonectl.sh start -n 0 # 4. \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6 ./platonectl.sh deploysys -n 0 --auto \"true\"","title":"2.2.1 \u542f\u52a8\u5355\u8282\u70b9\u533a\u5757\u94fe"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#222","text":"# 1. \u521d\u59cb\u5316node-1 ./platonectl.sh init -n 1 --ip 127.0.0.1 --rpc_port 6792 --p2p_port 16792 \\ --ws_port 26792 --auto \"true\" # 2. \u542f\u52a8node-1 ./platonectl.sh start -n 1 # 3. \u5c06\u8282\u70b9\u6dfb\u52a0\u5230\u5df2\u5b58\u5728\u7684\u533a\u5757\u94fe\u4e2d ./platonectl.sh addnode -n 1 # 4. \u5c06node-1\u66f4\u65b0\u4e3a\u5171\u8bc6\u8282\u70b9 ./platonectl.sh updatesys -n 1","title":"2.2.2 \u5c06\u5176\u4ed6\u8282\u70b9\u6dfb\u52a0\u5230\u94fe\u4e2d"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#23","text":"","title":"2.3 \u94fe\u90e8\u7f72\u8be6\u7ec6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#231-genesisjson","text":"\u5f53\u60a8\u542f\u52a8\u533a\u5757\u94fe\u65f6\uff0c\u9996\u5148\u9700\u8981\u521b\u5efagenesis.json\u6587\u4ef6\u3002 cd ${WORKSPACE}/scripts ./platonectl.sh setupgen -n 0 --ip 127.0.0.1 --p2p_port 16791 --auto true auto=false: \u5c06\u7ed9\u51fa\u63d0\u793a\u8fdb\u884c\u9009\u62e9\u662f\u5426\u7f16\u8bd1\u7cfb\u7edf\u5408\u7ea6 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 ./platonectl.sh setupgen","title":"2.3.1 \u521b\u5efagenesis.json"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#232","text":"./platonectl.sh init -n 0 --ip 127.0.0.1 --rpc_port 6791 --p2p_port 16791 \\ --ws_port 26791 --auto \"true\" \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 ./platonectl.sh init","title":"2.3.2 \u521d\u59cb\u5316\u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#233","text":"./platonectl.sh start -n 0 \u5728\u542f\u52a8\u8282\u70b9\u65f6, \u4e5f\u53ef\u4ee5\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u5939\u7684\u8def\u5f84, \u65e5\u5fd7\u6587\u4ef6\u5206\u5757\u7684\u5927\u5c0f, \u6307\u5b9aplatone\u542f\u52a8\u65f6\u989d\u5916\u7684\u547d\u4ee4\u884c\u53c2\u6570\u7b49. (\u6ce8\u610f: \u8def\u5f84\u8fde\u63a5\u7b26'/' \u9700\u8981\u8fdb\u884c\u8f6c\u4e49, \u53c2\u6570option\u7684\u503c, \u5fc5\u987b\u52a0\u4e0a\u5f15\u53f7) ./platonectl.sh start -n 0 -d '.\\/logs\\/platone' -s 65535 -e '--verbosity 3 --debug' \u65e5\u5fd7\u6587\u4ef6\u5939\u4e2d\u5305\u542bwasm\u6267\u884c\u7684\u65e5\u5fd7\u4e0eplatone\u8fd0\u884c\u7684\u65e5\u5fd7. \u968f\u65f6\u95f4\u63a8\u79fb, \u65e5\u5fd7\u6587\u4ef6\u4f1a\u8d8a\u79ef\u8d8a\u591a, \u5efa\u8bae\u8fdb\u884c\u6302\u8f7d, \u6216\u8005\u8fdb\u884c\u5b9a\u671f\u5220\u9664\u7b49\u64cd\u4f5c\u3002","title":"2.3.3 \u542f\u52a8\u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#234","text":"./platonectl.sh deploysys -n 0 --auto true","title":"2.3.4 \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#235","text":"\u60a8\u53ef\u80fd\u5e0c\u671b\u5411PlatONE\u7f51\u7edc\u6dfb\u52a0\u4e00\u4e9b\u8282\u70b9\uff0c\u60a8\u5fc5\u987b\u9996\u5148\u521d\u59cb\u5316\u6b64\u65b0\u8282\u70b9\u3002 \u521d\u59cb\u5316\u65b0\u8282\u70b9(node 1): ./platonectl.sh init -n 1 --ip 127.0.0.1 --rpc_port 6792 --p2p_port 16792 \\ --ws_port 26792 --auto \"true\" \u589e\u52a0\u65b0\u8282\u70b9: ./platonectl.sh addnode -n 1 \u60a8\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u8fdc\u7a0b\u8282\u70b9: ./platonectl.sh addnode -n 10 --p2p_port 3333 --rpc_port 4444 --ip xxx.xxx.xxx.xxx --pubkey xxxxx","title":"2.3.5 \u6dfb\u52a0\u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#236","text":"\u5c06\u8282\u70b9\u66f4\u65b0\u4e3a\u5171\u8bc6\u8282\u70b9\u3002 ./platonectl.sh updatesys -n 1 \u60a8\u8fd8\u53ef\u4ee5\u66f4\u65b0\u8282\u70b9\u72b6\u6001\uff1a ./platonectl.sh updatesys -n 1 -c '{\"status\":3}'","title":"2.3.6 \u66f4\u65b0\u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#237","text":"\u4e3a\u8282\u70b9\u521b\u5efa\u5e10\u6237: ./platonectl.sh createacc -n 1","title":"2.3.7 \u521b\u5efa\u8d26\u6237"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#238","text":"\u89e3\u9501\u8282\u70b9\u5e10\u6237\u3002 \u5728\u89e3\u9501\u8282\u70b9\u5e10\u6237\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u542f\u52a8\u8282\u70b9\u3002 ./platonectl.sh unlock -n 1","title":"2.3.8 \u89e3\u9501\u5e10\u6237"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#239-console","text":"\u60a8\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a\u4ea4\u4e92\u5f0fJavaScript\u73af\u5883 : ./platonectl.sh console -n 0","title":"2.3.9 \u8fde\u63a5\u5230console"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#2310","text":"\u60a8\u53ef\u4ee5\u4ece\u7cfb\u7edf\u5408\u7ea6\u4e2d\u83b7\u53d6\u6240\u6709\u8282\u70b9 ./platonectl.sh get","title":"2.3.10 \u83b7\u53d6\u6240\u6709\u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#2311","text":"\u4ee5\u4e0b\u547d\u4ee4\u53ef\u7528\u4e8e\u83b7\u53d6\u8282\u70b9\u72b6\u6001\u548c\u4fe1\u606f: ./platonectl.sh status -n 0 console: disable -> node_id: 0 node info: node.address: f92f1c1469d1a8c38964c63d62d3167842ce70cd node.ip: 127.0.0.1 node.rpc_port: 6791 node.p2p_port: 16791 node.ws_port: 26791 node.pubkey: 9afcb45d2725059a5a6a7f379d6404b6c914b02dd3e7a33d29c87b3f28f8f63b78ffe2736a3cb52ae45bbf57471d438eac71ddcc0bdfbaa56d65e59d457159b2","title":"2.3.11 \u67e5\u770b\u8282\u70b9\u4fe1\u606f"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#2312","text":"\u60a8\u53ef\u4ee5\u505c\u6b62\u8282\u70b9\u5e76\u6e05\u9664\u8282\u70b9\u6570\u636e\uff1a ./platonectl.sh stop -n 0 ./platonectl.sh clear -n 0 \u5b83\u8fd8\u53ef\u4ee5\u7b80\u5316\u5982\u4e0b:(\u6e05\u9664\u5305\u62ec\u6682\u505c\u529f\u80fd\uff09: ./platonectl.sh clear -n 0","title":"2.3.12 \u505c\u6b62\u548c\u6e05\u9664"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#3","text":"\u6848\u4f8b: A, B, C, D\u56db\u53f0\u4e3b\u673a (\u90e8\u7f72\u524d\u5148\u5220\u9664\u539f\u6709\u7684\u76f8\u5173\u6587\u4ef6\u6570\u636e) A: 172.26.10.96 B: 172.26.10.97 C: 172.26.10.98 D: 172.26.10.99","title":"3. \u591a\u673a\u90e8\u7f72\uff08\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883/\u591a\u673a\u6d4b\u8bd5\u73af\u5883\uff09"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#31","text":"\u5728\u90e8\u7f72\u524d\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u673a\u5668\u9700\u8981\u505a\u4e00\u6b21\u65f6\u95f4\u540c\u6b65\u3002 \u65e5\u5fd7\u7b49\u7ea7\uff1a -e \u6307\u5b9a\u4e86 \u989d\u5916\u53c2\u6570 \uff0c\u9ed8\u8ba4 \u989d\u5916\u53c2\u6570 \u662f \u2014debug \u3002\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u53ef\u4ee5\u901a\u8fc7 -e \" \" \u8986\u76d6\u65e5\u5fd7\u7b49\u7ea7\uff0c \u5373\u53ef\u5f00\u542f \u975edebug \u6a21\u5f0f\u3002\u540c\u65f6 -e '--verbosity 2' \u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u65e5\u5fd7\u7b49\u7ea7\u3002 \u65e5\u5fd7\u4f4d\u7f6e\uff1a\u751f\u4ea7\u73af\u5883\u9700\u8981\u6307\u5b9a\u65e5\u5fd7\u5b58\u653e\u8def\u5f84\uff0c\u53c2\u8003 2.4\u8282 \u4e2d start \u7684\u53c2\u6570 -d \u6307\u5b9a\u65e5\u5fd7\u5b58\u653e\u4f4d\u7f6e \u65e5\u5fd7\u5206\u5757\uff1a\u9ed8\u8ba4\u5206\u5757\u5927\u5c0f\u4e3a64M\u3002\u5982\u9700\u8981\u6307\u5b9a \u53ef\u53c2\u8003 2.4\u8282 \u4e2d start \u7684\u53c2\u6570 \u2014logsize \u6307\u5b9a\u5206\u5757\u5927\u5c0f\u3002 \u901a\u8fc7 \u2014bootnodes \u6307\u5b9a\u540c\u6b65\u8282\u70b9\uff0c\u63a8\u8350\u4f7f\u7528genesis.json\u4e2d\u7684observeNoes\u6765\u8fde\u63a5\uff0c\u53ef\u5728 -e \" \" \u4e2d\u6307\u5b9a\uff08\u5982\u4e0b\u4f8b\u5b50\u6240\u793a\uff09\u3002 \u56e0\u6b64\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff1a 4.2 \u8282\u4e2d\u6d89\u53ca\u5230 start \u542f\u52a8\u6b65\u9aa4\u7684\u64cd\u4f5c\u6b65\u9aa4\uff1a ./platonectl.sh start -n x \u9700\u8981\u66ff\u6362\u6210\uff1a ./platonectl.sh start -n x -d \"\\/opt\\/logs\" -e \"--bootnodes enode://8ab91d36a58e03c7d5528ea9186474cf5bfbec46d24cd59cf5eef1b63b2f4120334ca2a6af9ae495fa1931cdfe684caa74c86ad77fcfa0f044f4da30f7a83a4e@127.0.0.1:16791\" \uff08\u5177\u4f53\u8def\u5f84\u9700\u8981\u89c6\u751f\u4ea7\u7684\u89c4\u5212\uff09","title":"3.1 \u751f\u4ea7\u73af\u5883\u914d\u7f6e\u8bf4\u660e"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#32","text":"A\u4e2d: cd ${WORKSPACE}/scripts ./platonectl.sh clear -a ./platonectl.sh setupgen --ip 172.26.10.96 --auto true ./platonectl.sh init -n 0 --ip 172.26.10.96 --auto true ./platonectl.sh start -n 0 ./platonectl.sh deploysys --auto true ./platonectl.sh init -n 1 --ip 172.26.10.97 --auto true ./platonectl.sh init -n 2 --ip 172.26.10.98 --auto true ./platonectl.sh init -n 3 --ip 172.26.10.99 --auto true for n in $(seq 3); do ./platonectl.sh addnode -n ${n} done \u6b64\u65f6\u6240\u9700\u8981\u7684\u591a\u673a\u6570\u636e\u6587\u4ef6\u51c6\u5907\u9f50\u5168, \u62f7\u8d1d\u6570\u636e\u5230\u5176\u4ed6\u4e09\u53f0\u4e3b\u673a scp -r ${WORKSPACE}/../linux user@172.26.10.97:~/ scp -r ${WORKSPACE}/../linux user@172.26.10.98:~/ scp -r ${WORKSPACE}/../linux user@172.26.10.99:~/ B\u4e2d: cd ~/linux/scripts ./platonectl.sh start -n 1 C\u4e2d: cd ~/linux/scripts ./platonectl.sh start -n 2 D\u4e2d: cd ~/linux/scripts ./platonectl.sh start -n 3","title":"3.2 \u542f\u52a8"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#33","text":"A\u4e2d: ./platonectl.sh updatesys -n 1 ./platonectl.sh updatesys -n 2 ./platonectl.sh updatesys -n 3","title":"3.3 \u66f4\u65b0\u8282\u70b9\u4e3a\u5171\u8bc6\u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#4","text":"\u8be5\u529f\u80fd\u652f\u6301\u8282\u70b9\u672a\u542f\u52a8\uff0c\u4ee5\u53cachaindb\u4e2d\u6570\u636e\u635f\u574f\u7684\u573a\u666f\u4e0b\uff0c\u901a\u8fc7\u7ebf\u4e0b\u4f20\u9012\u533a\u5757\u6570\u636e\u7684\u65b9\u5f0f\uff0c\u5c06\u67d0\u8282\u70b9\u843d\u540e\u7684\u533a\u5757\u6570\u636e\u8865\u9f50","title":"4 \u5907\u4efd"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#41-export","text":"\u901a\u8fc7export\u529f\u80fd\uff0c\u5c06\u67d0\u8282\u70b9\u6307\u5b9a\u8303\u56f4\u5185\u7684\u7ecf\u8fc7RLP\u7f16\u7801\u540e\u7684\u533a\u5757\u6570\u636e\u5bfc\u51fa\u5230\u67d0\u4e2a\u6587\u4ef6\u4e2d ./platone --datadir <\u5f85\u5bfc\u51fa\u8282\u70b9\u7684chaindata\u8def\u5f84> export <\u8f93\u51fa\u6587\u4ef6\u540d> <\u5bfc\u51fa\u533a\u5757\u9ad8\u5ea6\u4e0b\u754c> <\u5bfc\u51fa\u533a\u5757\u9ad8\u5ea6\u4e0a\u754c>","title":"4.1. export"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#42-import","text":"\u901a\u8fc7import\u529f\u80fd\uff0c\u5c067.1\u4e2d\u5bfc\u51fa\u7684\u533a\u5757\u6570\u636e\u5bfc\u5165\u6307\u5b9a\u8282\u70b9 ./platone --datadir <\u5f85\u5bfc\u5165\u8282\u70b9\u7684chaindata\u8def\u5f84> import <\u533a\u5757\u6587\u4ef6\u540d>","title":"4.2. import"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#5","text":"\u6211\u4eec\u6a21\u62df\u4e86\u6b63\u5e38\u4ea4\u6613\u538b\u529b\u4e0b\u7684\u65e5\u5fd7\u91cf\uff1a\u5355\u8282\u70b9\u4e0a\uff0c24\u5c0f\u65f6\u4ea7\u51fa\u7ea6\u4e3a300M\u5927\u5c0f\u7684\u65e5\u5fd7\u3002 \u5047\u8bbe\u5728500G\u6570\u636e\u76d8\u7684\u89c4\u5212\u4e0b\uff0c\u6309\u716770%\u7684\u9608\u503c\u4fdd\u7559\uff0c\u53bb\u9664\u94feDB\u6570\u636e\uff08\u5efa\u8bae\u4fdd\u7559\u81f3\u5c11100GB\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u4fdd\u7559\u7ea627\u4e2a\u6708\u7684\u6570\u636e\u3002 \u4f46\u7531\u4e8e\u4ea4\u6613\u5cf0\u503c\u51fa\u73b0\u7684\u53ef\u80fd\u6027\uff0c\u5efa\u8bae\u540c\u65f6\u5b9e\u65bd\u7a7a\u95f4\u5927\u5c0f\u9608\u503c\u7684\u6e05\u7406\u7b56\u7565\uff0c\u5373\u5f53\u65e5\u5fd7\u603b\u91cf\u8fbe\u5230500GB*70%-100GB =250GB \u65f6\uff0c\u5b9e\u65bd\u5bf9\u6700\u65e9\u7684\u4e00\u4e2a\u6708\u6570\u636e\u7684\u6e05\u7406\u3002 \u603b\u7ed3\uff1a \u65f6\u95f4\u7ef4\u5ea6\u548c\u7a7a\u95f4\u7ef4\u5ea6\u7684\u65e5\u5fd7\u6e05\u7406\u7b56\u7565\u540c\u65f6\u5b9e\u65bd\u3002","title":"5. \u751f\u4ea7\u65e5\u5fd7\u6e05\u7406\u7b56\u7565\u53c2\u8003"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#6","text":"\u5728\u5c06\u94fe\u4ea4\u4ed8\u7ed9\u4e1a\u52a1\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u7ef4\u5ea6\u9a8c\u8bc1\u94fe\u7684\u8fd0\u884c\u6b63\u786e\u6027\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u94fe\u8fd0\u884c\u72b6\u6001\u68c0\u67e5\uff1a \u94fe\u8fd0\u884c\u65e5\u5fd7\uff0c\u89c2\u5bdf\u662f\u5426\u6b63\u5e38\u51fa\u5757\u3002\uff08\u6b63\u5e38\u51fa\u5757\u95f4\u9694\u57281\uff5e3\u79d2\u4e4b\u95f4\uff09 \u7cfb\u7edf\u5408\u7ea6\u90e8\u7f72\u60c5\u51b5\u68c0\u67e5\uff1a \u7cfb\u7edf\u5408\u7ea6\u7684\u90e8\u7f72\u65e5\u5fd7\u5728 wasm_log\u6587\u4ef6\u5939\u4e2d\uff0c\u53ef\u4ee5\u76d1\u63a7\u65e5\u5fd7\u4e2d\u662f\u5426\u51fa\u73b0\u4e86 error \u5173\u952e\u8bcd\uff0c\u6392\u67e5\u5408\u7ea6\u662f\u5426\u6b63\u5e38\u90e8\u7f72\u3002 \u901a\u8fc7 ./platonectl.sh get \u547d\u4ee4\uff0c\u786e\u8ba4\u6240\u6709\u8282\u70b9\u5df2\u7ecf\u88ab\u8bb0\u5f55\u5230\u4e86\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002 \u76d1\u63a7\u94fe\u8fd0\u884c\u8fc7\u7a0b\u7684 error \u6216\u8005 warning \u5173\u952e\u8bcd\u3002 \uff08\u90e8\u5206\u548c\u8282\u70b9\u77ac\u65f6\u8054\u901a\u6027\u76f8\u5173\u7684\uff0c\u5982\u8282\u70b9\u4e92ping\u5fc3\u8df3\u5305\u5bfc\u81f4\u7684\u62a5\u9519\u4fe1\u606f\u53ef\u5ffd\u7565\u3002\uff09","title":"6. \u8fd0\u884c\u72b6\u6001\u68c0\u67e5&amp;\u9519\u8bef\u6392\u67e5"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/","text":"PlatONE\u7f16\u8bd1\u548c\u542f\u52a8 1. \u51c6\u5907\u5de5\u4f5c PlatONE git\u7684\u4ed3\u5e93\u5730\u5740\u4e3a: \u547d\u4ee4\u884c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4, \u6216\u8005\u8bbe\u7f6e\u4e3a\u73af\u5883\u53d8\u91cf\u3002 REPO_ADDR_HTTP=\"https://172.16.211.192/PlatONE/src/node/PlatONE-Go.git\" REPO_ADDR_GIT=\"git@172.16.211.192:PlatONE/src/node/PlatONE-Go.git\" 1.1. gcc\u7248\u672c \u5207\u6362gcc\u7248\u672c\u5230 7.3.1\uff0c\u5efa\u8bae\u76f4\u63a5\u8bbe\u7f6e\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u3002 $ vi ~/.bashrc source scl_source enable devtoolset-7 \u4f7f\u7528vi\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5728\u6587\u4ef6\u6700\u540e\u4e00\u884c\u52a0\u4e0asource scl_source enable devtoolset-7\uff0c\u4fdd\u5b58\u5e76\u9000\u51fa\u5373\u53ef\u3002 1.2. git\u76f8\u5173 \u5173\u95edSSL\u68c0\u67e5\uff1a git clone \u65f6\u63d0\u793aPeer's certificate issuer has been marked as not trusted by the user; \u89e3\u51b3\u65b9\u6848\uff1a\u5728/etc/profile\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c\u52a0\u5165export GIT_SSL_NO_VERIFY=1\uff0c\u518dsource\u4e00\u4e0b\u5373\u53ef $sudo vi /etc/profile ... export GIT_SSL_NO_VERIFY=1 $ source /etc/profile 2. PlatONE\u7f16\u8bd1\u548c\u90e8\u7f72 \u4e0b\u8f7d\u6e90\u7801\uff1a git clone\u65f6\u53ef\u4ee5\u4f7f\u7528\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u79cd\u662fhttps\u534f\u8bae\uff0c\u4e00\u79cd\u662fgit\u534f\u8bae\u3002 \u7b2c\u4e00\u79cd\u65b9\u5f0f\uff1a \u4f7f\u7528https\u534f\u8bae\uff0c\u9700\u8981\u8f93\u5165\u4e3b\u673a\u5f53\u524d\u8d26\u6237\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801 git clone --recursive ${REPO_ADDR_HTTP} \u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff1a\u4f7f\u7528git\u534f\u8bae git clone --recursive ${REPO_ADDR_GIT} \u7f16\u8bd1\uff1a cd PlatONE-Go; make all 3. PlatONE\u8282\u70b9\u521d\u59cb\u5316\u548c\u8fd0\u884c 3.1. PlatONE\u8282\u70b9\u521d\u59cb\u5316 3.1.1. \u751f\u6210 account \u548c key pair 1) \u914d\u7f6e\u73af\u5883\u53d8\u91cf, \u8fdb\u5165PlatONE-Go/build/bin ``` console export PATH=${PATH}:${PWD} ``` 2) \u751f\u6210\u65b0\u7684 \u7528\u6237\u8d26\u6237 \uff0c\u9700\u8981\u7528\u6237\u8bbe\u7f6e\u5bc6\u7801\u7528\u4e8e\u89e3\u9501\u7528\u6237\u8d26\u6237\uff0c\u5728\u793a\u4f8b\u4e2d\u5bc6\u7801\u8bbe\u4e3a\u201c0\u201d\u3002 ```console $ ./platone --datadir ./data account new INFO [01-09|17:25:14.269] Maximum peer count ETH=50 LES=0 total=50 Your new account is locked with a password. Please give a password. Do not forget this password. Passphrase: Repeat passphrase: Address: {60208c048e7eb8e38b0fac40406b819ce95aa7af} ``` 3) \u67e5\u770b\u8d26\u6237 ```console $ ll data/keystore/ -rw------- 1 wxuser wxuser 491 Jan 9 17:25 UTC--2019-01-09T09-25-28.487164507Z--60208c048e7eb8e38b0fac40406b819ce95aa7af ``` 4) \u751f\u6210 \u8282\u70b9 \u5bc6\u94a5\u5bf9\uff0c\u9700\u8981\u8fdb\u5165\u76ee\u5f55PlatONE-Go/build/bin ```console $ ./ethkey genkeypair Address : 0xC71433b47f1b0053f935AEf64758153B24cE7445 PrivateKey: b428720a89d003a1b393c642e6e32713dd6a6f82fe4098b9e3a90eb38e23b6bb PublicKey : 68bb049008c7226de3188b6376127354507e1b1e553a2a8b988bb99b33c4d995e426596fc70ce12f7744100bc69c5f0bce748bc298bf8f0d0de1f5929850b5f4 ``` \u8f93\u51fa\u8bf4\u660e\uff1a * Address: \u8282\u70b9\u5730\u5740\u3002 * PrivateKey: \u8282\u70b9\u79c1\u94a5\u3002 * PublicKey: \u8282\u70b9\u516c\u94a5\u3002 5) \u5c06\u8282\u70b9\u79c1\u94a5\u5b58\u50a8\u5728 ./data/platone/nodekey\u4e2d\uff0c\u79c1\u94a5\u662f\u4e0a\u4e00\u6b65\u751f\u6210\u7684PrivateKey\u3002 ```console $ mkdir -p ./data/platone $ echo \"b428720a89d003a1b393c642e6e32713dd6a6f82fe4098b9e3a90eb38e23b6bb\" > ./data/platone/nodekey $ cat ./data/platone/nodekey $ sudo updatedb $ locate nodekey /home/wxuser/work/golang/src/github.com/PlatONEnetwork/PlatONE-Go/build/bin/data/platone/nodekey ``` 3.1.2. \u751f\u6210\u7cfb\u7edf\u7ba1\u7406\u5408\u7ea6cnsManager\u5b57\u8282\u7801\u6587\u4ef6 1) \u8fdb\u5165PlatONE-Go/cmd/SysContracts\u76ee\u5f55\uff0c\u6267\u884c\u811a\u672c\u751f\u6210makefile\u6587\u4ef6\u3002 ```bash ./script/autoproject.sh . ``` 2) \u8fdb\u5165PlatONE-Go/cmd/SysContracts/build\u76ee\u5f55\uff0c\u7f16\u8bd1\u5408\u7ea6\u751f\u6210wasm\u6587\u4ef6\u3002 ```bash make ``` \u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u540e\uff0cbuild\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210systemContract\uff0c\u8be5\u6587\u4ef6\u5b58\u653e\u7f16\u8bd1\u540e\u7684\u6587\u4ef6\u3002 3) \u8fdb\u5165PlatONE-Go/cmd/SysContracts/build/systemContract/cnsProxy\u76ee\u5f55\uff0c\u6267\u884cctool\uff0c\u83b7\u53d6\u5b57\u8282\u7801\u3002 ```bash ctool codegen --abi cnsProxy.cpp.abi.json --code cnsProxy.wasm ``` \u8be5\u5b57\u8282\u7801\u5c06\u653e\u5165\u540e\u7eed 3.1.3 \u7684genesis.json\u914d\u7f6e\u6587\u4ef6\u5f53\u4e2d\u3002 3.1.3. \u914d\u7f6e\u521d\u59cb\u5316\u6587\u4ef6 \u751f\u6210genesis.json\u6587\u4ef6\uff1a validatorNodes,observeNodes\u4e2denode\u683c\u5f0f\u4e3a\u2018enode://publicKey@ip:p2p_port\u2019, \u9700\u628a\u57283.1.1\u4e2d\u7684 4) \u5c0f\u8282\u4e2d\u751f\u6210\u7684\u8282\u70b9publicKey\u66ff\u6362\u6b64enode\u4e2dpublicKey\u3002ip\u548cp2p_port\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u81ea\u5b9a\u4e49\u3002 alloc\uff1a\u4e3a\u7528\u6237\u8d26\u6237\u5730\u5740\u5206\u914d\u91d1\u989d\u3002\u7528\u6237\u8d26\u6237\u5730\u5740\u57283.1.1\u7ae0\u7684\u7b2c 2) \u5c0f\u7ed3\u751f\u6210 0x0000000000000000000000000000000000000011\u4e3a\u7cfb\u7edf\u7ba1\u7406\u5408\u7ea6, \u6b64\u4e3a\u56fa\u5b9a\u5730\u5740\u3002 code\uff1a\u4e3a\u4e0a\u8282\u4e2d\u6240\u83b7\u53d6\u7684cnsProxy\u5408\u7ea6\u7684\u5b57\u8282\u7801\u3002 $ vi genesis.json { \"config\": { \"chainId\": 300, \"homesteadBlock\": 1, \"eip150Block\": 2, \"eip150Hash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\", \"eip155Block\": 3, \"eip158Block\": 3, \"byzantiumBlock\": 4, \"istanbul\": { \"timeout\": 2000, \"period\": 1, \"policy\": 0, \"epoch\": 1000000, \"initialNodes\": [], \"validatorNodes\": [\"enode://68bb049008c7226de3188b6376127354507e1b1e553a2a8b988bb99b33c4d995e426596fc70ce12f7744100bc69c5f0bce748bc298bf8f0d0de1f5929850b5f4@127.0.0.1:16789\"], \"observeNodes\": [\"enode://68bb049008c7226de3188b6376127354507e1b1e553a2a8b988bb99b33c4d995e426596fc70ce12f7744100bc69c5f0bce748bc298bf8f0d0de1f5929850b5f4@127.0.0.1:16789\"] } }, \"nonce\": \"0x0\", \"timestamp\": \"0x5c074288\", \"extraData\": \"0x00000000000000000000000000000000000000000000000000000000000000007a9ff113afc63a33d11de571a679f914983a085d1e08972dcb449a02319c1661b931b1962bce02dfc6583885512702952b57bba0e307d4ad66668c5fc48a45dfeed85a7e41f0bdee047063066eae02910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"gasLimit\": \"0x47b77760\", \"difficulty\": \"0x40000\", \"mixHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\", \"coinbase\": \"0x60208c048e7eb8e38b0fac40406b819ce95aa7af\", \"alloc\": { \"0x60208c048e7eb8e38b0fac40406b819ce95aa7af\": { \"balance\": \"99999999900000000000\" }, \"0x0000000000000000000000000000000000000011\": { \"balance\": \"99900000000000000000\", \"code\": \"cnsProxy\u5b57\u8282\u7801\" } }, \"number\": \"0x0\", \"gasUsed\": \"0x0\", \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\" } 3.1.4. \u521d\u59cb\u5316platone $ platone --datadir ./data init genesis.json INFO [01-09|17:31:58.832] Maximum peer count ETH=50 LES=0 total=50 INFO [01-09|17:31:58.833] Allocated cache and file handles database=/home/wxuser/manual-Platon/build/bin/data/platon/chaindata cache=16 handles=16 INFO [01-09|17:31:58.839] Writing custom genesis block INFO [01-09|17:31:58.840] Persisted trie from memory database nodes=1 size=150.00B time=34.546\u00b5s gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B INFO [01-09|17:31:58.840] Successfully wrote genesis state database=chaindata hash=4fe06b\u2026382a26 INFO [01-09|17:31:58.840] Allocated cache and file handles database=/home/wxuser/manual-Platon/build/bin/data/platon/lightchaindata cache=16 handles=16 INFO [01-09|17:31:58.848] Writing custom genesis block INFO [01-09|17:31:58.848] Persisted trie from memory database nodes=1 size=150.00B time=238.177\u00b5s gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B INFO [01-09|17:31:58.848] Successfully wrote genesis state database=lightchaindata hash=4fe06b\u2026382a26 $ ll -R data/ data/: total 0 drwx------ 2 wxuser wxuser 91 Jan 9 17:25 keystore drwxr-xr-x 4 wxuser wxuser 45 Jan 9 17:31 platon data/keystore: total 4 -rw------- 1 wxuser wxuser 491 Jan 9 17:25 UTC--2019-01-09T09-25-28.487164507Z--60208c048e7eb8e38b0fac40406b819ce95aa7af data/platon: total 0 drwxr-xr-x 2 wxuser wxuser 85 Jan 9 17:31 chaindata drwxr-xr-x 2 wxuser wxuser 85 Jan 9 17:31 lightchaindata data/platon/chaindata: total 16 -rw-r--r-- 1 wxuser wxuser 1802 Jan 9 17:31 000001.log -rw-r--r-- 1 wxuser wxuser 16 Jan 9 17:31 CURRENT -rw-r--r-- 1 wxuser wxuser 0 Jan 9 17:31 LOCK -rw-r--r-- 1 wxuser wxuser 358 Jan 9 17:31 LOG -rw-r--r-- 1 wxuser wxuser 54 Jan 9 17:31 MANIFEST-000000 data/platon/lightchaindata: total 16 -rw-r--r-- 1 wxuser wxuser 1802 Jan 9 17:31 000001.log -rw-r--r-- 1 wxuser wxuser 16 Jan 9 17:31 CURRENT -rw-r--r-- 1 wxuser wxuser 0 Jan 9 17:31 LOCK -rw-r--r-- 1 wxuser wxuser 358 Jan 9 17:31 LOG -rw-r--r-- 1 wxuser wxuser 54 Jan 9 17:31 MANIFEST-000000 3.2. \u542f\u52a8 platone \u8282\u70b9 $ platone --identity \"platone\" --datadir ./data --port 16789 --rpcaddr 0.0.0.0 --rpcport 6789 --rpcapi \"db,eth,net,web3,admin,personal\" --rpc --nodiscover --nodekey \"./data/platone/nodekey\" --verbosity 4 --wasmlog ./wasm.log --bootnodes \"enode://68bb049008c7226de3188b6376127354507e1b1e553a2a8b988bb99b33c4d995e426596fc70ce12f7744100bc69c5f0bce748bc298bf8f0d0de1f5929850b5f4@127.0.0.1:16789\" (\u6ce8\uff1a--verbosity 4 \u4f1a\u5c06wasm log\u6253\u51fa\u6765\uff0c --wasmlog \u6307\u5b9a\u5c06log\u8f93\u51fa\u5230\u54ea\u4e2a\u6587\u4ef6, --bootnodes\u9700\u8981\u6307\u5b9agenesis.json\u4e2dobserveNodes\u5b57\u6bb5\u4e2d\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2aenode\u8282\u70b9) INFO [01-09|17:42:01.165] Maximum peer count ETH=50 LES=0 total=50 INFO [01-09|17:42:01.166] Starting peer-to-peer node instance=Geth/node1/v1.8.16-stable-7ee6fe39/linux-amd64/go1.11.4 INFO [01-09|17:42:01.166] Allocated cache and file handles database=/home/wxuser/manual-Platon/build/bin/data/platon/chaindata cache=768 handles=512 INFO [01-09|17:42:01.183] Initialised chain configuration config=\"{ChainID: 300 Homestead: 1 DAO: <nil> DAOSupport: false EIP150: 2 EIP155: 3 EIP158: 3 Byzantium: 4 Constantinople: <nil> Engine: &{0 0 0 0 0 [{127.0.0.1 16789 16789 68bb049008c7226de3188b6376127354507e1b1e553a2a8b988bb99b33c4d995e426596fc70ce12f7744100bc69c5f0bce748bc298bf8f0d0de1f5929850b5f4 [149 178 250 27 246 47 49 86 100 108 50 3 199 20 51 180 127 27 0 83 249 53 174 246 71 88 21 59 36 206 116 69] {0 0 <nil>}}] 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 <nil>}}\" INFO [01-09|17:42:01.183] Initialising Ethereum protocol versions=\"[63 62]\" network=300 INFO [01-09|17:42:01.184] Loaded most recent local header number=0 hash=4fe06b\u2026382a26 age=1mo5d6h INFO [01-09|17:42:01.184] Loaded most recent local full block number=0 hash=4fe06b\u2026382a26 age=1mo5d6h INFO [01-09|17:42:01.184] Loaded most recent local fast block number=0 hash=4fe06b\u2026382a26 age=1mo5d6h INFO [01-09|17:42:01.184] Read the StateDB instance from the cache map sealHash=bbbae7\u202630dbfb INFO [01-09|17:42:01.184] Loaded local transaction journal transactions=0 dropped=0 INFO [01-09|17:42:01.185] Regenerated local transaction journal transactions=0 accounts=0 INFO [01-09|17:42:01.185] Loaded local mpc transaction journal mpc transactions=0 dropped=0 INFO [01-09|17:42:01.185] Init mpc processor success osType=linux icepath= httpEndpoint=http://127.0.0.1:6789 INFO [01-09|17:42:01.185] commitDuration commitDuration=950.000 INFO [01-09|17:42:01.185] Set the block time at the end of the last round of consensus startTimeOfEpoch=1543979656 INFO [01-09|17:42:01.185] Starting P2P networking INFO [01-09|17:42:03.298] UDP listener up self=enode://aa18a88c1463c1f1026c6cb0b781027d898d19ed9c11b10ad7a3a9ee2d0c09ab607d9b24bc4580bd816c0194215461cd88bf65955e0d87cf69e0157d464c582b@[::]:16789 INFO [01-09|17:42:03.299] Transaction pool price threshold updated price=1000000000 INFO [01-09|17:42:03.300] IPC endpoint opened url=/home/wxuser/manual-Platon/build/bin/data/platon.ipc INFO [01-09|17:42:03.300] RLPx listener up self=enode://aa18a88c1463c1f1026c6cb0b781027d898d19ed9c11b10ad7a3a9ee2d0c09ab607d9b24bc4580bd816c0194215461cd88bf65955e0d87cf69e0157d464c582b@[::]:16789 INFO [01-09|17:42:03.300] HTTP endpoint opened url=http://0.0.0.0:6789 cors= vhosts=localhost INFO [01-09|17:42:03.300] Transaction pool price threshold updated price=1000000000 3.2.1. platone \u4e0elog\u76f8\u5173\u7684\u542f\u52a8\u53c2\u6570 \u542f\u52a8platone\u65f6, \u6307\u5b9a --moduleLogParams \u53c2\u6570\u53ef\u4ee5\u628aplatone\u7684log\u5206\u5757\u5199\u5165\u6587\u4ef6\u3002 --moduleLogParams '{\"platone_log\": [\"/\"], \"__dir__\": [\"../../logs\"], \"__size__\": [\"67108864\"]}' \u53c2\u6570\u8bf4\u660e: platone_log : \u6307\u5b9a\u8f93\u51faplatone\u4e2d\u54ea\u4e2a\u6a21\u5757\u7684\u65e5\u5fd7\u3002 \u5982 \"platone_log\": [\"/consensus\", \"/p2p\"] , \u5219\u53ea\u8f93\u51faconsensus\u6a21\u5757\u548cp2p\u6a21\u5757\u4e2d\u6253\u5370\u7684\u65e5\u5fd7\u3002 \"platone_log\": [\"/\"] \u5219\u8868\u793a\u8f93\u51fa\u6240\u6709\u6a21\u5757\u7684\u65e5\u5fd7\u3002 __dir__ : \u6307\u5b9a\u7684log\u8f93\u51fa\u7684\u76ee\u5f55\u4f4d\u7f6e\u3002 __size__ : \u6307\u5b9alog\u5199\u5165\u6587\u4ef6\u7684\u5206\u5757\u5927\u5c0f\u3002 \u968f\u65f6\u95f4\u63a8\u79fb, \u65e5\u5fd7\u6587\u4ef6\u4f1a\u8d8a\u79ef\u8d8a\u591a, \u5efa\u8bae\u8fdb\u884c\u6302\u8f7d, \u6216\u8005\u8fdb\u884c\u5b9a\u671f\u5220\u9664\u7b49\u64cd\u4f5c\u3002 \u66f4\u591a\u7684platone\u542f\u52a8\u53c2\u6570, \u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4, \u8fdb\u884c\u67e5\u770b\u3002 platone -h 3.3. \u91cd\u65b0\u521d\u59cb\u5316platone\u8282\u70b9 \u786e\u4fddplatone\u8fdb\u7a0b\u5df2\u7ecf\u88ab\u6740\u6b7b\uff0c\u518d\u5220\u9664data\u76ee\u5f55\u3002 $ cd build/bin $ rm -rf data/platone \u7136\u540e\u53ef\u4ee5\u518d\u91cd\u65b0\u521d\u59cb\u5316\u3002 4. \u7cfb\u7edf\u5408\u7ea6\u90e8\u7f72 4.1 \u751f\u6210ctool.json \u8fdb\u5165 PlatONE-Go/cmd/SysContracts/build/systemContract \u76ee\u5f55, \u786e\u4fdd\u6b64\u65f6platone\u5df2\u542f\u52a8\u3002 \u4f7f\u7528vi\u521b\u5efactool.json\u6587\u4ef6\uff0c \u5199\u4e0b\u5982\u4e0b\u5185\u5bb9\u3002\u6839\u636e\u6b64\u65f6\u542f\u52a8\u7684\u8282\u70b9\u7684\u60c5\u51b5, \u66ff\u6362\u5982\u4e0b\u6a21\u677f\u4e2d\u7684NODE-IP\u3001RPC-PORT\u3001DEFAULT-ACCOUNT\u3002 $ vi ctool.json { \"url\":\"http://NODE-IP:RPC-PORT\", \"gas\":\"0x0\", \"gasPrice\":\"0x0\", \"from\":\"0xDEFAULT-ACCOUNT\" } NODE-IP: \u8282\u70b9\u542f\u52a8\u65f6\u8bbe\u7f6e\u7684ip\u9009\u9879\u3002 RPC-PORT\uff1a\u8282\u70b9\u542f\u52a8\u662f\u8bbe\u7f6e\u7684rpc_port \u7aef\u53e3\u3002 DEFAULT-ACCOUNT\uff1a\u57283.1.1\u7b2c2\u5c0f\u8282\u521b\u5efa\u7684\u7528\u6237\u8d26\u53f7\u3002 4.2 \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6 \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6\u524d\u9700\u8981unlock\u90e8\u7f72\u5408\u7ea6\u7684\u8d26\u6237\u5730\u5740\uff0c\u9996\u5148\u8fdb\u5165\u5230console,\u89e3\u9501\u7528\u6237\u8d26\u6237\u3002 $ platone attach http://NODE-IP:RPC-PORT Welcome to the PlatONE JavaScript console! instance: PlatONEnetwork/platone/v0.2.0-stable-56ea60ae/linux-amd64/go1.11.4 coinbase: 0x0fbd63b374002cb15aca95202fe10b63bda3fdcb at block: 4012 (Tue, 27 Aug 2019 10:54:40 CST) datadir: /home/wxuser/wywforfun/PlatONE-Go/build/bin/data modules: admin:1.0 eth:1.0 net:1.0 personal:1.0 rpc:1.0 web3:1.0 > \u7136\u540e\u89e3\u9501\u7528\u6237\u8d26\u6237\uff0c \u9700\u8f93\u5165\u8d26\u53f7\u5bf9\u5e94\u7684\u5bc6\u7801\u3002 >personal.unlockAccount(\"DEFAULT-ACCOUNT\") Unlock account DEFAULT-ACCOUNT Passphrase: true \u7136\u540e\u53ef\u4ee5\u9000\u51faconsole\u8fdb\u884c\u5408\u7ea6\u90e8\u7f72 NODE-IP\uff0cRPC-PORT\uff0cDEFAULT-ACCOUNT \u7684\u503c\uff0c\u9700\u8981\u548c4.1\u7ae0\u4e2dctool.json\u4e2d\u8bbe\u7f6e\u7684\u503c\u4e00\u81f4\u3002 \u8fdb\u5165 PlatONE-Go/cmd/SysContracts/build/systemContract \u76ee\u5f55 # \u90e8\u7f72cnsManager\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code cnsManager/cnsManager.wasm --abi cnsManager/cnsManager.cpp.abi.json # \u90e8\u7f72paramManager\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code paramManager/paramManager.wasm --abi paramManager/paramManager.cpp.abi.json # \u90e8\u7f72userManager\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code userManager/userManager.wasm --abi userManager/userManager.cpp.abi.json # \u90e8\u7f72userRegister\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code userRegister/userRegister.wasm --abi userRegister/userRegister.cpp.abi.json # \u90e8\u7f72roleManager\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code roleManager/roleManager.wasm --abi roleManager/roleManager.cpp.abi.json # \u90e8\u7f72roleRegister\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code roleRegister/roleRegister.wasm --abi roleRegister/roleRegister.cpp.abi.json # \u90e8\u7f72nodeManager\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code nodeManager/nodeManager.wasm --abi nodeManager/nodeManager.cpp.abi.json # \u90e8\u7f72nodeRegister\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code nodeRegister/nodeRegister.wasm --abi nodeRegister/nodeRegister.cpp.abi.json","title":"PlatONE\u7f16\u8bd1\u548c\u542f\u52a8"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#platone","text":"","title":"PlatONE\u7f16\u8bd1\u548c\u542f\u52a8"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#1","text":"PlatONE git\u7684\u4ed3\u5e93\u5730\u5740\u4e3a: \u547d\u4ee4\u884c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4, \u6216\u8005\u8bbe\u7f6e\u4e3a\u73af\u5883\u53d8\u91cf\u3002 REPO_ADDR_HTTP=\"https://172.16.211.192/PlatONE/src/node/PlatONE-Go.git\" REPO_ADDR_GIT=\"git@172.16.211.192:PlatONE/src/node/PlatONE-Go.git\"","title":"1. \u51c6\u5907\u5de5\u4f5c"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#11-gcc","text":"\u5207\u6362gcc\u7248\u672c\u5230 7.3.1\uff0c\u5efa\u8bae\u76f4\u63a5\u8bbe\u7f6e\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u3002 $ vi ~/.bashrc source scl_source enable devtoolset-7 \u4f7f\u7528vi\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5728\u6587\u4ef6\u6700\u540e\u4e00\u884c\u52a0\u4e0asource scl_source enable devtoolset-7\uff0c\u4fdd\u5b58\u5e76\u9000\u51fa\u5373\u53ef\u3002","title":"1.1. gcc\u7248\u672c"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#12-git","text":"\u5173\u95edSSL\u68c0\u67e5\uff1a git clone \u65f6\u63d0\u793aPeer's certificate issuer has been marked as not trusted by the user; \u89e3\u51b3\u65b9\u6848\uff1a\u5728/etc/profile\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c\u52a0\u5165export GIT_SSL_NO_VERIFY=1\uff0c\u518dsource\u4e00\u4e0b\u5373\u53ef $sudo vi /etc/profile ... export GIT_SSL_NO_VERIFY=1 $ source /etc/profile","title":"1.2. git\u76f8\u5173"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#2-platone","text":"\u4e0b\u8f7d\u6e90\u7801\uff1a git clone\u65f6\u53ef\u4ee5\u4f7f\u7528\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u79cd\u662fhttps\u534f\u8bae\uff0c\u4e00\u79cd\u662fgit\u534f\u8bae\u3002 \u7b2c\u4e00\u79cd\u65b9\u5f0f\uff1a \u4f7f\u7528https\u534f\u8bae\uff0c\u9700\u8981\u8f93\u5165\u4e3b\u673a\u5f53\u524d\u8d26\u6237\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801 git clone --recursive ${REPO_ADDR_HTTP} \u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff1a\u4f7f\u7528git\u534f\u8bae git clone --recursive ${REPO_ADDR_GIT} \u7f16\u8bd1\uff1a cd PlatONE-Go; make all","title":"2. PlatONE\u7f16\u8bd1\u548c\u90e8\u7f72"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#3-platone","text":"","title":"3. PlatONE\u8282\u70b9\u521d\u59cb\u5316\u548c\u8fd0\u884c"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#31-platone","text":"","title":"3.1. PlatONE\u8282\u70b9\u521d\u59cb\u5316"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#311-account-key-pair","text":"1) \u914d\u7f6e\u73af\u5883\u53d8\u91cf, \u8fdb\u5165PlatONE-Go/build/bin ``` console export PATH=${PATH}:${PWD} ``` 2) \u751f\u6210\u65b0\u7684 \u7528\u6237\u8d26\u6237 \uff0c\u9700\u8981\u7528\u6237\u8bbe\u7f6e\u5bc6\u7801\u7528\u4e8e\u89e3\u9501\u7528\u6237\u8d26\u6237\uff0c\u5728\u793a\u4f8b\u4e2d\u5bc6\u7801\u8bbe\u4e3a\u201c0\u201d\u3002 ```console $ ./platone --datadir ./data account new INFO [01-09|17:25:14.269] Maximum peer count ETH=50 LES=0 total=50 Your new account is locked with a password. Please give a password. Do not forget this password. Passphrase: Repeat passphrase: Address: {60208c048e7eb8e38b0fac40406b819ce95aa7af} ``` 3) \u67e5\u770b\u8d26\u6237 ```console $ ll data/keystore/ -rw------- 1 wxuser wxuser 491 Jan 9 17:25 UTC--2019-01-09T09-25-28.487164507Z--60208c048e7eb8e38b0fac40406b819ce95aa7af ``` 4) \u751f\u6210 \u8282\u70b9 \u5bc6\u94a5\u5bf9\uff0c\u9700\u8981\u8fdb\u5165\u76ee\u5f55PlatONE-Go/build/bin ```console $ ./ethkey genkeypair Address : 0xC71433b47f1b0053f935AEf64758153B24cE7445 PrivateKey: b428720a89d003a1b393c642e6e32713dd6a6f82fe4098b9e3a90eb38e23b6bb PublicKey : 68bb049008c7226de3188b6376127354507e1b1e553a2a8b988bb99b33c4d995e426596fc70ce12f7744100bc69c5f0bce748bc298bf8f0d0de1f5929850b5f4 ``` \u8f93\u51fa\u8bf4\u660e\uff1a * Address: \u8282\u70b9\u5730\u5740\u3002 * PrivateKey: \u8282\u70b9\u79c1\u94a5\u3002 * PublicKey: \u8282\u70b9\u516c\u94a5\u3002 5) \u5c06\u8282\u70b9\u79c1\u94a5\u5b58\u50a8\u5728 ./data/platone/nodekey\u4e2d\uff0c\u79c1\u94a5\u662f\u4e0a\u4e00\u6b65\u751f\u6210\u7684PrivateKey\u3002 ```console $ mkdir -p ./data/platone $ echo \"b428720a89d003a1b393c642e6e32713dd6a6f82fe4098b9e3a90eb38e23b6bb\" > ./data/platone/nodekey $ cat ./data/platone/nodekey $ sudo updatedb $ locate nodekey /home/wxuser/work/golang/src/github.com/PlatONEnetwork/PlatONE-Go/build/bin/data/platone/nodekey ```","title":"3.1.1. \u751f\u6210 account \u548c key pair"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#312-cnsmanager","text":"1) \u8fdb\u5165PlatONE-Go/cmd/SysContracts\u76ee\u5f55\uff0c\u6267\u884c\u811a\u672c\u751f\u6210makefile\u6587\u4ef6\u3002 ```bash ./script/autoproject.sh . ``` 2) \u8fdb\u5165PlatONE-Go/cmd/SysContracts/build\u76ee\u5f55\uff0c\u7f16\u8bd1\u5408\u7ea6\u751f\u6210wasm\u6587\u4ef6\u3002 ```bash make ``` \u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u540e\uff0cbuild\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210systemContract\uff0c\u8be5\u6587\u4ef6\u5b58\u653e\u7f16\u8bd1\u540e\u7684\u6587\u4ef6\u3002 3) \u8fdb\u5165PlatONE-Go/cmd/SysContracts/build/systemContract/cnsProxy\u76ee\u5f55\uff0c\u6267\u884cctool\uff0c\u83b7\u53d6\u5b57\u8282\u7801\u3002 ```bash ctool codegen --abi cnsProxy.cpp.abi.json --code cnsProxy.wasm ``` \u8be5\u5b57\u8282\u7801\u5c06\u653e\u5165\u540e\u7eed 3.1.3 \u7684genesis.json\u914d\u7f6e\u6587\u4ef6\u5f53\u4e2d\u3002","title":"3.1.2. \u751f\u6210\u7cfb\u7edf\u7ba1\u7406\u5408\u7ea6cnsManager\u5b57\u8282\u7801\u6587\u4ef6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#313","text":"\u751f\u6210genesis.json\u6587\u4ef6\uff1a validatorNodes,observeNodes\u4e2denode\u683c\u5f0f\u4e3a\u2018enode://publicKey@ip:p2p_port\u2019, \u9700\u628a\u57283.1.1\u4e2d\u7684 4) \u5c0f\u8282\u4e2d\u751f\u6210\u7684\u8282\u70b9publicKey\u66ff\u6362\u6b64enode\u4e2dpublicKey\u3002ip\u548cp2p_port\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u81ea\u5b9a\u4e49\u3002 alloc\uff1a\u4e3a\u7528\u6237\u8d26\u6237\u5730\u5740\u5206\u914d\u91d1\u989d\u3002\u7528\u6237\u8d26\u6237\u5730\u5740\u57283.1.1\u7ae0\u7684\u7b2c 2) \u5c0f\u7ed3\u751f\u6210 0x0000000000000000000000000000000000000011\u4e3a\u7cfb\u7edf\u7ba1\u7406\u5408\u7ea6, \u6b64\u4e3a\u56fa\u5b9a\u5730\u5740\u3002 code\uff1a\u4e3a\u4e0a\u8282\u4e2d\u6240\u83b7\u53d6\u7684cnsProxy\u5408\u7ea6\u7684\u5b57\u8282\u7801\u3002 $ vi genesis.json { \"config\": { \"chainId\": 300, \"homesteadBlock\": 1, \"eip150Block\": 2, \"eip150Hash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\", \"eip155Block\": 3, \"eip158Block\": 3, \"byzantiumBlock\": 4, \"istanbul\": { \"timeout\": 2000, \"period\": 1, \"policy\": 0, \"epoch\": 1000000, \"initialNodes\": [], \"validatorNodes\": [\"enode://68bb049008c7226de3188b6376127354507e1b1e553a2a8b988bb99b33c4d995e426596fc70ce12f7744100bc69c5f0bce748bc298bf8f0d0de1f5929850b5f4@127.0.0.1:16789\"], \"observeNodes\": [\"enode://68bb049008c7226de3188b6376127354507e1b1e553a2a8b988bb99b33c4d995e426596fc70ce12f7744100bc69c5f0bce748bc298bf8f0d0de1f5929850b5f4@127.0.0.1:16789\"] } }, \"nonce\": \"0x0\", \"timestamp\": \"0x5c074288\", \"extraData\": \"0x00000000000000000000000000000000000000000000000000000000000000007a9ff113afc63a33d11de571a679f914983a085d1e08972dcb449a02319c1661b931b1962bce02dfc6583885512702952b57bba0e307d4ad66668c5fc48a45dfeed85a7e41f0bdee047063066eae02910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"gasLimit\": \"0x47b77760\", \"difficulty\": \"0x40000\", \"mixHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\", \"coinbase\": \"0x60208c048e7eb8e38b0fac40406b819ce95aa7af\", \"alloc\": { \"0x60208c048e7eb8e38b0fac40406b819ce95aa7af\": { \"balance\": \"99999999900000000000\" }, \"0x0000000000000000000000000000000000000011\": { \"balance\": \"99900000000000000000\", \"code\": \"cnsProxy\u5b57\u8282\u7801\" } }, \"number\": \"0x0\", \"gasUsed\": \"0x0\", \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\" }","title":"3.1.3. \u914d\u7f6e\u521d\u59cb\u5316\u6587\u4ef6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#314-platone","text":"$ platone --datadir ./data init genesis.json INFO [01-09|17:31:58.832] Maximum peer count ETH=50 LES=0 total=50 INFO [01-09|17:31:58.833] Allocated cache and file handles database=/home/wxuser/manual-Platon/build/bin/data/platon/chaindata cache=16 handles=16 INFO [01-09|17:31:58.839] Writing custom genesis block INFO [01-09|17:31:58.840] Persisted trie from memory database nodes=1 size=150.00B time=34.546\u00b5s gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B INFO [01-09|17:31:58.840] Successfully wrote genesis state database=chaindata hash=4fe06b\u2026382a26 INFO [01-09|17:31:58.840] Allocated cache and file handles database=/home/wxuser/manual-Platon/build/bin/data/platon/lightchaindata cache=16 handles=16 INFO [01-09|17:31:58.848] Writing custom genesis block INFO [01-09|17:31:58.848] Persisted trie from memory database nodes=1 size=150.00B time=238.177\u00b5s gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B INFO [01-09|17:31:58.848] Successfully wrote genesis state database=lightchaindata hash=4fe06b\u2026382a26 $ ll -R data/ data/: total 0 drwx------ 2 wxuser wxuser 91 Jan 9 17:25 keystore drwxr-xr-x 4 wxuser wxuser 45 Jan 9 17:31 platon data/keystore: total 4 -rw------- 1 wxuser wxuser 491 Jan 9 17:25 UTC--2019-01-09T09-25-28.487164507Z--60208c048e7eb8e38b0fac40406b819ce95aa7af data/platon: total 0 drwxr-xr-x 2 wxuser wxuser 85 Jan 9 17:31 chaindata drwxr-xr-x 2 wxuser wxuser 85 Jan 9 17:31 lightchaindata data/platon/chaindata: total 16 -rw-r--r-- 1 wxuser wxuser 1802 Jan 9 17:31 000001.log -rw-r--r-- 1 wxuser wxuser 16 Jan 9 17:31 CURRENT -rw-r--r-- 1 wxuser wxuser 0 Jan 9 17:31 LOCK -rw-r--r-- 1 wxuser wxuser 358 Jan 9 17:31 LOG -rw-r--r-- 1 wxuser wxuser 54 Jan 9 17:31 MANIFEST-000000 data/platon/lightchaindata: total 16 -rw-r--r-- 1 wxuser wxuser 1802 Jan 9 17:31 000001.log -rw-r--r-- 1 wxuser wxuser 16 Jan 9 17:31 CURRENT -rw-r--r-- 1 wxuser wxuser 0 Jan 9 17:31 LOCK -rw-r--r-- 1 wxuser wxuser 358 Jan 9 17:31 LOG -rw-r--r-- 1 wxuser wxuser 54 Jan 9 17:31 MANIFEST-000000","title":"3.1.4. \u521d\u59cb\u5316platone"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#32-platone","text":"$ platone --identity \"platone\" --datadir ./data --port 16789 --rpcaddr 0.0.0.0 --rpcport 6789 --rpcapi \"db,eth,net,web3,admin,personal\" --rpc --nodiscover --nodekey \"./data/platone/nodekey\" --verbosity 4 --wasmlog ./wasm.log --bootnodes \"enode://68bb049008c7226de3188b6376127354507e1b1e553a2a8b988bb99b33c4d995e426596fc70ce12f7744100bc69c5f0bce748bc298bf8f0d0de1f5929850b5f4@127.0.0.1:16789\" (\u6ce8\uff1a--verbosity 4 \u4f1a\u5c06wasm log\u6253\u51fa\u6765\uff0c --wasmlog \u6307\u5b9a\u5c06log\u8f93\u51fa\u5230\u54ea\u4e2a\u6587\u4ef6, --bootnodes\u9700\u8981\u6307\u5b9agenesis.json\u4e2dobserveNodes\u5b57\u6bb5\u4e2d\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2aenode\u8282\u70b9) INFO [01-09|17:42:01.165] Maximum peer count ETH=50 LES=0 total=50 INFO [01-09|17:42:01.166] Starting peer-to-peer node instance=Geth/node1/v1.8.16-stable-7ee6fe39/linux-amd64/go1.11.4 INFO [01-09|17:42:01.166] Allocated cache and file handles database=/home/wxuser/manual-Platon/build/bin/data/platon/chaindata cache=768 handles=512 INFO [01-09|17:42:01.183] Initialised chain configuration config=\"{ChainID: 300 Homestead: 1 DAO: <nil> DAOSupport: false EIP150: 2 EIP155: 3 EIP158: 3 Byzantium: 4 Constantinople: <nil> Engine: &{0 0 0 0 0 [{127.0.0.1 16789 16789 68bb049008c7226de3188b6376127354507e1b1e553a2a8b988bb99b33c4d995e426596fc70ce12f7744100bc69c5f0bce748bc298bf8f0d0de1f5929850b5f4 [149 178 250 27 246 47 49 86 100 108 50 3 199 20 51 180 127 27 0 83 249 53 174 246 71 88 21 59 36 206 116 69] {0 0 <nil>}}] 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 <nil>}}\" INFO [01-09|17:42:01.183] Initialising Ethereum protocol versions=\"[63 62]\" network=300 INFO [01-09|17:42:01.184] Loaded most recent local header number=0 hash=4fe06b\u2026382a26 age=1mo5d6h INFO [01-09|17:42:01.184] Loaded most recent local full block number=0 hash=4fe06b\u2026382a26 age=1mo5d6h INFO [01-09|17:42:01.184] Loaded most recent local fast block number=0 hash=4fe06b\u2026382a26 age=1mo5d6h INFO [01-09|17:42:01.184] Read the StateDB instance from the cache map sealHash=bbbae7\u202630dbfb INFO [01-09|17:42:01.184] Loaded local transaction journal transactions=0 dropped=0 INFO [01-09|17:42:01.185] Regenerated local transaction journal transactions=0 accounts=0 INFO [01-09|17:42:01.185] Loaded local mpc transaction journal mpc transactions=0 dropped=0 INFO [01-09|17:42:01.185] Init mpc processor success osType=linux icepath= httpEndpoint=http://127.0.0.1:6789 INFO [01-09|17:42:01.185] commitDuration commitDuration=950.000 INFO [01-09|17:42:01.185] Set the block time at the end of the last round of consensus startTimeOfEpoch=1543979656 INFO [01-09|17:42:01.185] Starting P2P networking INFO [01-09|17:42:03.298] UDP listener up self=enode://aa18a88c1463c1f1026c6cb0b781027d898d19ed9c11b10ad7a3a9ee2d0c09ab607d9b24bc4580bd816c0194215461cd88bf65955e0d87cf69e0157d464c582b@[::]:16789 INFO [01-09|17:42:03.299] Transaction pool price threshold updated price=1000000000 INFO [01-09|17:42:03.300] IPC endpoint opened url=/home/wxuser/manual-Platon/build/bin/data/platon.ipc INFO [01-09|17:42:03.300] RLPx listener up self=enode://aa18a88c1463c1f1026c6cb0b781027d898d19ed9c11b10ad7a3a9ee2d0c09ab607d9b24bc4580bd816c0194215461cd88bf65955e0d87cf69e0157d464c582b@[::]:16789 INFO [01-09|17:42:03.300] HTTP endpoint opened url=http://0.0.0.0:6789 cors= vhosts=localhost INFO [01-09|17:42:03.300] Transaction pool price threshold updated price=1000000000","title":"3.2. \u542f\u52a8 platone \u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#321-platone-log","text":"\u542f\u52a8platone\u65f6, \u6307\u5b9a --moduleLogParams \u53c2\u6570\u53ef\u4ee5\u628aplatone\u7684log\u5206\u5757\u5199\u5165\u6587\u4ef6\u3002 --moduleLogParams '{\"platone_log\": [\"/\"], \"__dir__\": [\"../../logs\"], \"__size__\": [\"67108864\"]}' \u53c2\u6570\u8bf4\u660e: platone_log : \u6307\u5b9a\u8f93\u51faplatone\u4e2d\u54ea\u4e2a\u6a21\u5757\u7684\u65e5\u5fd7\u3002 \u5982 \"platone_log\": [\"/consensus\", \"/p2p\"] , \u5219\u53ea\u8f93\u51faconsensus\u6a21\u5757\u548cp2p\u6a21\u5757\u4e2d\u6253\u5370\u7684\u65e5\u5fd7\u3002 \"platone_log\": [\"/\"] \u5219\u8868\u793a\u8f93\u51fa\u6240\u6709\u6a21\u5757\u7684\u65e5\u5fd7\u3002 __dir__ : \u6307\u5b9a\u7684log\u8f93\u51fa\u7684\u76ee\u5f55\u4f4d\u7f6e\u3002 __size__ : \u6307\u5b9alog\u5199\u5165\u6587\u4ef6\u7684\u5206\u5757\u5927\u5c0f\u3002 \u968f\u65f6\u95f4\u63a8\u79fb, \u65e5\u5fd7\u6587\u4ef6\u4f1a\u8d8a\u79ef\u8d8a\u591a, \u5efa\u8bae\u8fdb\u884c\u6302\u8f7d, \u6216\u8005\u8fdb\u884c\u5b9a\u671f\u5220\u9664\u7b49\u64cd\u4f5c\u3002 \u66f4\u591a\u7684platone\u542f\u52a8\u53c2\u6570, \u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4, \u8fdb\u884c\u67e5\u770b\u3002 platone -h","title":"3.2.1. platone \u4e0elog\u76f8\u5173\u7684\u542f\u52a8\u53c2\u6570"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#33-platone","text":"\u786e\u4fddplatone\u8fdb\u7a0b\u5df2\u7ecf\u88ab\u6740\u6b7b\uff0c\u518d\u5220\u9664data\u76ee\u5f55\u3002 $ cd build/bin $ rm -rf data/platone \u7136\u540e\u53ef\u4ee5\u518d\u91cd\u65b0\u521d\u59cb\u5316\u3002","title":"3.3. \u91cd\u65b0\u521d\u59cb\u5316platone\u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#4","text":"","title":"4. \u7cfb\u7edf\u5408\u7ea6\u90e8\u7f72"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#41-ctooljson","text":"\u8fdb\u5165 PlatONE-Go/cmd/SysContracts/build/systemContract \u76ee\u5f55, \u786e\u4fdd\u6b64\u65f6platone\u5df2\u542f\u52a8\u3002 \u4f7f\u7528vi\u521b\u5efactool.json\u6587\u4ef6\uff0c \u5199\u4e0b\u5982\u4e0b\u5185\u5bb9\u3002\u6839\u636e\u6b64\u65f6\u542f\u52a8\u7684\u8282\u70b9\u7684\u60c5\u51b5, \u66ff\u6362\u5982\u4e0b\u6a21\u677f\u4e2d\u7684NODE-IP\u3001RPC-PORT\u3001DEFAULT-ACCOUNT\u3002 $ vi ctool.json { \"url\":\"http://NODE-IP:RPC-PORT\", \"gas\":\"0x0\", \"gasPrice\":\"0x0\", \"from\":\"0xDEFAULT-ACCOUNT\" } NODE-IP: \u8282\u70b9\u542f\u52a8\u65f6\u8bbe\u7f6e\u7684ip\u9009\u9879\u3002 RPC-PORT\uff1a\u8282\u70b9\u542f\u52a8\u662f\u8bbe\u7f6e\u7684rpc_port \u7aef\u53e3\u3002 DEFAULT-ACCOUNT\uff1a\u57283.1.1\u7b2c2\u5c0f\u8282\u521b\u5efa\u7684\u7528\u6237\u8d26\u53f7\u3002","title":"4.1 \u751f\u6210ctool.json"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/PlatONE%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/Installation/%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8/#42","text":"\u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6\u524d\u9700\u8981unlock\u90e8\u7f72\u5408\u7ea6\u7684\u8d26\u6237\u5730\u5740\uff0c\u9996\u5148\u8fdb\u5165\u5230console,\u89e3\u9501\u7528\u6237\u8d26\u6237\u3002 $ platone attach http://NODE-IP:RPC-PORT Welcome to the PlatONE JavaScript console! instance: PlatONEnetwork/platone/v0.2.0-stable-56ea60ae/linux-amd64/go1.11.4 coinbase: 0x0fbd63b374002cb15aca95202fe10b63bda3fdcb at block: 4012 (Tue, 27 Aug 2019 10:54:40 CST) datadir: /home/wxuser/wywforfun/PlatONE-Go/build/bin/data modules: admin:1.0 eth:1.0 net:1.0 personal:1.0 rpc:1.0 web3:1.0 > \u7136\u540e\u89e3\u9501\u7528\u6237\u8d26\u6237\uff0c \u9700\u8f93\u5165\u8d26\u53f7\u5bf9\u5e94\u7684\u5bc6\u7801\u3002 >personal.unlockAccount(\"DEFAULT-ACCOUNT\") Unlock account DEFAULT-ACCOUNT Passphrase: true \u7136\u540e\u53ef\u4ee5\u9000\u51faconsole\u8fdb\u884c\u5408\u7ea6\u90e8\u7f72 NODE-IP\uff0cRPC-PORT\uff0cDEFAULT-ACCOUNT \u7684\u503c\uff0c\u9700\u8981\u548c4.1\u7ae0\u4e2dctool.json\u4e2d\u8bbe\u7f6e\u7684\u503c\u4e00\u81f4\u3002 \u8fdb\u5165 PlatONE-Go/cmd/SysContracts/build/systemContract \u76ee\u5f55 # \u90e8\u7f72cnsManager\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code cnsManager/cnsManager.wasm --abi cnsManager/cnsManager.cpp.abi.json # \u90e8\u7f72paramManager\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code paramManager/paramManager.wasm --abi paramManager/paramManager.cpp.abi.json # \u90e8\u7f72userManager\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code userManager/userManager.wasm --abi userManager/userManager.cpp.abi.json # \u90e8\u7f72userRegister\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code userRegister/userRegister.wasm --abi userRegister/userRegister.cpp.abi.json # \u90e8\u7f72roleManager\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code roleManager/roleManager.wasm --abi roleManager/roleManager.cpp.abi.json # \u90e8\u7f72roleRegister\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code roleRegister/roleRegister.wasm --abi roleRegister/roleRegister.cpp.abi.json # \u90e8\u7f72nodeManager\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code nodeManager/nodeManager.wasm --abi nodeManager/nodeManager.cpp.abi.json # \u90e8\u7f72nodeRegister\u7cfb\u7edf\u5408\u7ea6 ctool deploy --config ctool.json --code nodeRegister/nodeRegister.wasm --abi nodeRegister/nodeRegister.cpp.abi.json","title":"4.2 \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/","text":"platone-CDT (Contract Development Toolkit) platone-CDT \u662fWebAssembly(WASM)\u5de5\u5177\u94fe\u548c platone \u5e73\u53f0\u667a\u80fd\u5408\u7ea6\u5f00\u53d1\u5de5\u5177\u96c6. \u7f16\u8bd1 \u7f16\u8bd1\u8981\u6c42 GCC 7.4+ \u6216 Clang 7.0+ CMake 3.17+ Git Python Ubuntu \u4ee5\u4e0b\u7f16\u8bd1\u6b65\u9aa4\u5728ubuntu 18.04\u4e0b\u64cd\u4f5c. \u5b89\u88c5\u4f9d\u8d56 sudo apt install build-essential cmake libz-dev libtinfo-dev \u83b7\u53d6\u6e90\u7801 git clone https://172.16.211.192/PlatONE/src/node/PlatONE-CDT.git \u6267\u884c\u7f16\u8bd1 cd platone-CDT mkdir build && cd build cmake .. make && make install Windows Windows\u4e0b\u7f16\u8bd1\u9700\u8981\u5148\u5b89\u88c5 MinGW-W64 GCC-8.1.0 , \u4e14\u5b89\u88c5\u8def\u5f84\u4e0d\u80fd\u542b\u6709\u7a7a\u683c(\u5373: \u4e0d\u80fd\u5b89\u88c5\u5728\"Program Files\"\u6216\"Program Files(x86)\u76ee\u5f55\"), \u5426\u5219\u7f16\u8bd1\u5931\u8d25. \u83b7\u53d6\u6e90\u7801 git clone https://172.16.211.192/PlatONE/src/node/PlatONE-CDT.git \u6267\u884c\u7f16\u8bd1 cd platone-CDT mkdir build && cd build cmake -G \"MinGW Makefiles\" .. -DCMAKE_INSTALL_PREFIX=\"C:/platone.cdt\" -DCMAKE_MAKE_PROGRAM=mingw32-make mingw32-make && mingw32-make install \u4f7f\u7528 \u5728\u4f7f\u7528platone-CDT\u4e4b\u524d\u5fc5\u987b\u5c06platone-CDT\u7f16\u8bd1\u751f\u6210\u7684\u6267\u884c\u6587\u4ef6\u8def\u5f84\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\u4e2d. \u5355\u6587\u4ef6\u9879\u76ee \u521d\u59cb\u5316\u9879\u76ee platone-init -project=example -bare \u7f16\u8bd1WASM\u6587\u4ef6 cd example platone-cpp -o example.wasm example.cpp -abigen CMake\u9879\u76ee \u521d\u59cb\u5316\u9879\u76ee platone-init -project=cmake_example \u7f16\u8bd1 Linux cd cmake_example/build cmake .. Windows> \u7f16\u8bd1\u4f9d\u8d56: >+ MinGW-W64 GCC-8.1.0 >+ CMake 3.5 or higher cd cmake_example/build cmake .. -G \"MinGW Makefiles\" -Dplatone_CDT_ROOT=<cdt_install_dir> Trouble shotting platone-init: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by platone-init) platone-init: /lib64/libstdc++.so.6: version `CXXABI_1.3.9' not found (required by platone-init) platone-init: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by platone-init) gcc&g++\u7248\u672c\u592a\u4f4e\u5bfc\u81f4\uff0c\u8bf7\u5347\u7ea7\u7248\u672c License GNU General Public License v3.0, see LICENSE .","title":"cdt\u5f00\u53d1\u5de5\u5177"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/#platone-cdt-contract-development-toolkit","text":"platone-CDT \u662fWebAssembly(WASM)\u5de5\u5177\u94fe\u548c platone \u5e73\u53f0\u667a\u80fd\u5408\u7ea6\u5f00\u53d1\u5de5\u5177\u96c6.","title":"platone-CDT (Contract Development Toolkit)"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/#_1","text":"","title":"\u7f16\u8bd1"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/#_2","text":"GCC 7.4+ \u6216 Clang 7.0+ CMake 3.17+ Git Python","title":"\u7f16\u8bd1\u8981\u6c42"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/#ubuntu","text":"\u4ee5\u4e0b\u7f16\u8bd1\u6b65\u9aa4\u5728ubuntu 18.04\u4e0b\u64cd\u4f5c. \u5b89\u88c5\u4f9d\u8d56 sudo apt install build-essential cmake libz-dev libtinfo-dev \u83b7\u53d6\u6e90\u7801 git clone https://172.16.211.192/PlatONE/src/node/PlatONE-CDT.git \u6267\u884c\u7f16\u8bd1 cd platone-CDT mkdir build && cd build cmake .. make && make install","title":"Ubuntu"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/#windows","text":"Windows\u4e0b\u7f16\u8bd1\u9700\u8981\u5148\u5b89\u88c5 MinGW-W64 GCC-8.1.0 , \u4e14\u5b89\u88c5\u8def\u5f84\u4e0d\u80fd\u542b\u6709\u7a7a\u683c(\u5373: \u4e0d\u80fd\u5b89\u88c5\u5728\"Program Files\"\u6216\"Program Files(x86)\u76ee\u5f55\"), \u5426\u5219\u7f16\u8bd1\u5931\u8d25. \u83b7\u53d6\u6e90\u7801 git clone https://172.16.211.192/PlatONE/src/node/PlatONE-CDT.git \u6267\u884c\u7f16\u8bd1 cd platone-CDT mkdir build && cd build cmake -G \"MinGW Makefiles\" .. -DCMAKE_INSTALL_PREFIX=\"C:/platone.cdt\" -DCMAKE_MAKE_PROGRAM=mingw32-make mingw32-make && mingw32-make install","title":"Windows"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/#_3","text":"\u5728\u4f7f\u7528platone-CDT\u4e4b\u524d\u5fc5\u987b\u5c06platone-CDT\u7f16\u8bd1\u751f\u6210\u7684\u6267\u884c\u6587\u4ef6\u8def\u5f84\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\u4e2d.","title":"\u4f7f\u7528"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/#_4","text":"\u521d\u59cb\u5316\u9879\u76ee platone-init -project=example -bare \u7f16\u8bd1WASM\u6587\u4ef6 cd example platone-cpp -o example.wasm example.cpp -abigen","title":"\u5355\u6587\u4ef6\u9879\u76ee"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/#cmake","text":"\u521d\u59cb\u5316\u9879\u76ee platone-init -project=cmake_example \u7f16\u8bd1 Linux cd cmake_example/build cmake .. Windows> \u7f16\u8bd1\u4f9d\u8d56: >+ MinGW-W64 GCC-8.1.0 >+ CMake 3.5 or higher cd cmake_example/build cmake .. -G \"MinGW Makefiles\" -Dplatone_CDT_ROOT=<cdt_install_dir>","title":"CMake\u9879\u76ee"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/#trouble-shotting","text":"platone-init: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by platone-init) platone-init: /lib64/libstdc++.so.6: version `CXXABI_1.3.9' not found (required by platone-init) platone-init: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by platone-init) gcc&g++\u7248\u672c\u592a\u4f4e\u5bfc\u81f4\uff0c\u8bf7\u5347\u7ea7\u7248\u672c","title":"Trouble shotting"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cdt%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/#license","text":"GNU General Public License v3.0, see LICENSE .","title":"License"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/","text":"\u672c\u6587\u6863\u901a\u8fc7\u4e00\u7cfb\u5217\u4ee3\u7801\u793a\u4f8b\u8bb2\u89e3\u5408\u7ea6\u7684\u5404\u4e2a\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5b66\u4e60\u8fd9\u4e9b\u4f8b\u5b50\u6765\u6df1\u5165\u7406\u89e3\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u5e94\u7528\u5408\u7ea6\u3002 Contract\u7c7b Contract\u7c7b\u662f\u6709bcwasm\u5e93\u63d0\u4f9b\u7684\u5408\u7ea6\u57fa\u7c7b\uff0c\u7528\u6237\u5f00\u53d1\u7684\u5408\u7ea6\u5fc5\u987b\u6d3e\u751f\u4e8e\u8be5\u7c7b\u3002Contract\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a init() \u865a\u51fd\u6570\uff0c\u7528\u6237\u5408\u7ea6\u9700\u8981\u5b9e\u73b0\u8be5 init() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u5408\u7ea6\u9996\u6b21\u53d1\u5e03\u65f6\u6267\u884c\uff0c\u4ec5\u8c03\u7528\u4e00\u6b21\uff0c\u8be5\u65b9\u6cd5\u4f5c\u7528\u7c7b\u4f3c\u4e8esolidity\u5408\u7ea6\u4e2d\u7684\u6784\u9020\u51fd\u6570\u3002 \u6ce8\u610f\uff1a init() \u65b9\u6cd5\u5fc5\u987b\u5b9e\u73b0\u4e3a public \u7c7b\u578b\uff0c\u8fd9\u6837\u5408\u7ea6\u5728\u90e8\u7f72\u65f6\u624d\u80fd\u591f\u8c03\u7528\u8be5\u51fd\u6570\u6765\u521d\u59cb\u5316\u5408\u7ea6\u6570\u636e\u3002 #include <bcwasm/bcwasm.hpp> namespace my_namespcase { class my_contract : public bcwasm::Contract { public: my_contract(){} /// \u5b9e\u73b0\u7236\u7c7b: bcwasm::Contract \u7684\u865a\u51fd\u6570 /// \u8be5\u51fd\u6570\u5728\u5408\u7ea6\u9996\u6b21\u53d1\u5e03\u65f6\u6267\u884c\uff0c\u4ec5\u8c03\u7528\u4e00\u6b21 void init() { /* \u505a\u4e00\u4e9b\u521d\u59cb\u5316\u64cd\u4f5c */ } }; } \u5408\u7ea6\u5916\u90e8\u65b9\u6cd5 \u5408\u7ea6\u5916\u90e8\u65b9\u6cd5\u6307\u7684\u662f\u5408\u7ea6\u53ef\u4ee5\u5728\u5916\u90e8\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u529f\u80fd\u7c7b\u4f3c\u4e0esolidity\u5408\u7ea6\u4e2d\u7684 public \u7c7b\u578b\u65b9\u6cd5,\u5728bcwasm\u5e93\u4e2d\u662f\u901a\u8fc7 BCWASM_ABI \u5b8f\u6765\u5b9a\u4e49\u5916\u90e8\u65b9\u6cd5\u3002\u901a\u8fc7 BCWASM_ABI \u58f0\u660e\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u5408\u7ea6\u5916\u90e8\u901a\u8fc7rpc\u6d88\u606f\u8c03\u7528\u3001\u4e5f\u53ef\u4ee5\u88ab\u5176\u4ed6\u5408\u7ea6\u8c03\u7528\u3002 #include <bcwasm/bcwasm.hpp> namespace my_namespcase { class my_contract : public bcwasm::Contract { public: my_contract(){} /// \u5b9e\u73b0\u7236\u7c7b: bcwasm::Contract \u7684\u865a\u51fd\u6570 /// \u8be5\u51fd\u6570\u5728\u5408\u7ea6\u9996\u6b21\u53d1\u5e03\u65f6\u6267\u884c\uff0c\u4ec5\u8c03\u7528\u4e00\u6b21 void init() { /* \u505a\u4e00\u4e9b\u521d\u59cb\u5316\u64cd\u4f5c */ } void setData(char * data){ /* \u4fee\u6539\u5408\u7ea6\u6570\u636e */ } }; } // \u5916\u90e8\u65b9\u6cd5 BCWASM_ABI(my_namespcase::my_contract:setData) \u94fe\u4e0a\u5b58\u50a8\u63a5\u53e3 Wasm\u5408\u7ea6\u5185\u7f6e\u5e93\u4e3a\u6570\u636e\u7684\u6301\u4e45\u5316\u63d0\u4f9b\u4e86 setState() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 bcwasm::setState() \u51fd\u6570\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\uff0c\u76f8\u5e94\u5730\u67e5\u8be2\u8c03\u7528 bcwasm::getState() \u3002 \u4e0b\u65b9\u7684\u793a\u4f8b\u5408\u7ea6\u4e2d\uff0c\u6709\u4e24\u4e2a\u63a5\u53e3\u4f9b\u5916\u90e8\u8c03\u7528 setData(char* data) \u548c getData() \u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5206\u522b\u8c03\u7528\u4e86 bcwasm::setState() \u3001 bcwasm::getState() \uff0c\u4ee5\u5b9e\u73b0\u6570\u636e\u7684\u4e0a\u94fe\u6301\u4e45\u5316\u548c\u67e5\u8be2\u3002 #include <bcwasm/bcwasm.hpp> namespace my_namespcase { class my_contract : public bcwasm::Contract { public: void init(){} void setData(char * data){ std::string m_data(data); bcwasm::setState(\"DataKey\", m_data); } const char* getData() const{ std::string m_data; bcwasm::getState(\"DataKey\", m_data); return m_data.c_str(); } }; } // \u5916\u90e8\u65b9\u6cd5 BCWASM_ABI(my_namespcase::my_contract, setData) BCWASM_ABI(my_namespcase::my_contract, getData) Const\u65b9\u6cd5 \u5408\u7ea6\u4e2d\u7684 const \u7c7b\u578b\u65b9\u6cd5\u63d0\u4f9b\u5bf9\u5408\u7ea6\u72b6\u6001\u7684\u53ea\u8bfb\u64cd\u4f5c\uff0c\u8be5\u7c7b\u578b\u58f0\u660e\u7684\u51fd\u6570\u4e0d\u80fd\u591f\u4fee\u6539\u5408\u7ea6\u6570\u636e\uff0c\u4e00\u822c\u7528\u6765\u67e5\u8be2\u5408\u7ea6\u7684\u94fe\u4e0a\u6570\u636e\u3002\u4e0b\u65b9\u4ee3\u7801\u4e2d\uff0c getData() \u5373\u4e3aconst\u65b9\u6cd5\uff0c\u7528\u4e8e\u67e5\u8be2\u6570\u636e\u3002 const char* getData() const{ std::string m_data; bcwasm::getState(\"DataKey\", m_data); // \u8bfb\u53d6\u5408\u7ea6\u6570\u636e\u5e76\u8fd4\u56de return m_data.c_str(); } Struct\u3001Map Struct \u7ed3\u6784\u4f53 \u7ed3\u6784\u4f53\u8bed\u6cd5\u89c4\u5219\u4e0eC++\u4e00\u81f4\uff0c\u4f46\u662f\u5982\u679c\u7528\u4e8e\u9700\u8981\u5c06\u7ed3\u6784\u6570\u636e\u4e0a\u94fe\u6301\u4e45\u5316\uff0c\u5219\u9700\u8981\u5728\u7ed3\u6784\u4f53\u4e2d\u4f7f\u7528 BCWASM_SERIALIZE \u5b8f\uff0c\u8be5\u5b8f\u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b\u63d0\u4f9b\u4e86\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u65b9\u5f0f\u3002 \u4e0b\u65b9\u7684\u5408\u7ea6\u793a\u4f8b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Student_t \u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u5e76\u901a\u8fc7\u5408\u7ea6\u63a5\u53e3 setData() \u5c06\u6570\u636e\u6301\u4e45\u5316\u5230\u94fe\u4e0a\uff0c\u7136\u540e\u53ef\u4ee5\u901a\u8fc7 getData() \u65b9\u6cd5\u67e5\u8be2\u6570\u636e\u3002 #include <bcwasm/bcwasm.hpp> namespace my_namespcase { struct Student_t { std::string name; // \u59d3\u540d int64_t age; // \u5e74\u9f84 BCWASM_SERIALIZE(Student_t, (name)(age)); }; class my_contract : public bcwasm::Contract { public: void init(){} void setData(char * name, int64_t age){ Student_t stu; stu.name = std::string (name); stu.age = age; bcwasm::setState(\"DataKey\", stu); } const char* getData() const{ Student_t stu; bcwasm::getState(\"DataKey\", stu); std::stringstream ret; ret << \"stu.name: \" << stu.name << \", stu.age: \" << stu.age; // \u8bfb\u53d6\u5408\u7ea6\u6570\u636e\u5e76\u8fd4\u56de return ret.str().c_str(); } }; } // \u5916\u90e8\u65b9\u6cd5 BCWASM_ABI(my_namespcase::my_contract, setData) BCWASM_ABI(my_namespcase::my_contract, getData) Map bcwasm\u4e2d\u63d0\u4f9b\u4e86map\u7c7b\u578b\u7684\u5c01\u88c5\uff0c\u5b9a\u4e49map\u7ed3\u6784\u65f6\uff0c\u9700\u8981\u6307\u5b9amap\u7684\u540d\u79f0\u3001key\u7684\u7c7b\u578b\u3001value\u7684\u7c7b\u578b\u3002 char mapName[] = \"students\"; bcwasm::db::Map<mapName, std::string, Student_t> students; map\u7ed3\u6784\u652f\u6301\u5982\u4e0b\u7684\u51e0\u79cdapi\uff1a find(key) : \u6839\u636ekey\u67e5\u627evalue insert(key, value) : \u5f53map\u4e2d\u8fd8\u6ca1\u6709\u4ee5key\u4e3a\u7d22\u5f15\u7684\u5185\u5bb9\u65f6\uff0c\u63d2\u5165\u4ee5key\u4e3a\u7d22\u5f15\u7684value update(key, value) \uff1a \u5f53map\u4e2d\u5df2\u7ecf\u5b58\u5728\u4ee5key\u4e3a\u7d22\u5f15\u7684\u5185\u5bb9\u65f6\uff0c\u66f4\u65b0key\u5bf9\u5e94\u7684value \u4e0b\u65b9\u7684\u793a\u4f8b\u5408\u7ea6\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2amap\u7528\u4e8e\u4fdd\u5b58\u5b66\u751f\u7684\u59d3\u540d\u3001\u5e74\u9f84\u4fe1\u606f\uff0c\u4ee5\u5b66\u751f\u59d3\u540d\u4e3akey\u4f5c\u4e3a\u7d22\u5f15\uff0c\u5176\u4e2d setData \u65b9\u6cd5\u8f93\u5165\u5b66\u751f\u7684\u59d3\u540d\u3001\u5e74\u9f84\uff0c getData \u65b9\u6cd5\u6839\u636e\u59d3\u540d\u67e5\u8be2\u5b66\u751f\u7684\u5e74\u9f84\u3002 #include <bcwasm/bcwasm.hpp> namespace my_namespcase { struct Student_t { std::string name; // \u59d3\u540d int64_t age; // \u5e74\u9f84 BCWASM_SERIALIZE(Student_t, (name)(age)); }; // \u5b9a\u4e49\u4e00\u4e2amap\uff0c\u4fdd\u5b58\u5b66\u751f\u59d3\u540d\u3001\u5e74\u9f84\u4fe1\u606f\uff0c\u4ee5\u5b66\u751f\u59d3\u540d\u4e3akey\u4f5c\u4e3a\u7d22\u5f15 char mapName[] = \"students\"; bcwasm::db::Map<mapName, std::string, Student_t> students; class my_contract : public bcwasm::Contract { public: void init(){} void setData(char * name, int64_t age){ Student_t stu; stu.name = std::string (name); stu.age = age; Student_t *stu_p = students.find(std::string(name)); if (stu_p == nullptr){ students.insert(stu.name, stu); } else{ students.update(stu.name, stu); } } const char* getData(char* name) const{ Student_t *stu = students.find(std::string(name)); if (stu == nullptr){ return (std::string(\"no such student\")).c_str(); }else{ std::stringstream ret; ret << \"stu.name: \" << stu->name << \", stu.age: \" << stu->age; return ret.str().c_str(); } } }; } // \u5916\u90e8\u65b9\u6cd5 BCWASM_ABI(my_namespcase::my_contract, setData) BCWASM_ABI(my_namespcase::my_contract, getData) Event Event\u5141\u8bb8\u6211\u4eec\u65b9\u4fbf\u5730\u4f7f\u7528PlatONE\u7684\u65e5\u5fd7\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4eec\u53ef\u4ee5\u5728dapp\u4e2d\u76d1\u542cEvent\uff0c\u5f53\u5408\u7ea6\u4e2d\u4ea7\u751fEvent\u65f6\uff0c\u4f1a\u4f7f\u76f8\u5173\u53c2\u6570\u88ab\u5b58\u50a8\u5230\u4ea4\u6613\u7684Log\u4e2d\u3002\u8fd9\u4e9bLog\u4e0e\u5730\u5740\u76f8\u5173\u8054\uff0c\u88ab\u5199\u5165\u533a\u5757\u94fe\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6613Receipt\u67e5\u8be2\u67d0\u4e2a\u4ea4\u6613\u6240\u4ea7\u751f\u7684Event\u3002 \u5b8f BCWASM_EVENT \u548c BCWASM_EMIT_EVENT \u63d0\u4f9b\u4e86\u5bf9\u5408\u7ea6Event\u7684\u76f4\u63a5\u652f\u6301\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a /// \u5b9a\u4e49Event. /// BCWASM_EVENT(eventName,arguments...) BCWASM_EVENT(setData,const char *,const int64_t) /// \u89e6\u53d1Event BCWASM_EMIT_EVENT(setData,name,age); \u6211\u4eec\u5728\u793a\u4f8b\u5408\u7ea6\u4e2d\u52a0\u5165Event\u4e8b\u4ef6\uff0c\u6bcf\u6b21\u8c03\u7528 setData() \u65f6\uff0c\u89e6\u53d1Event\u4e8b\u4ef6\uff0c\u793a\u4f8b\u5408\u7ea6\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a #include <bcwasm/bcwasm.hpp> namespace my_namespcase { struct Student_t { std::string name; // \u59d3\u540d int64_t age; // \u5e74\u9f84 BCWASM_SERIALIZE(Student_t, (name)(age)); }; // \u5b9a\u4e49\u4e00\u4e2amap\uff0c\u4fdd\u5b58\u5b66\u751f\u59d3\u540d\u3001\u5e74\u9f84\u4fe1\u606f\uff0c\u4ee5\u5b66\u751f\u59d3\u540d\u4e3akey\u4f5c\u4e3a\u7d22\u5f15 char mapName[] = \"students\"; bcwasm::db::Map<mapName, std::string, Student_t> students; class my_contract : public bcwasm::Contract { public: void init(){} // \u5b9a\u4e49Event BCWASM_EVENT(setData,const char*,int64_t) void setData(char * name, int64_t age){ Student_t stu; stu.name = std::string(name); stu.age = age; Student_t *stu_p = students.find(std::string(name)); if (stu_p == nullptr){ students.insert(stu.name, stu); } else{ students.update(stu.name, stu); } /// \u89e6\u53d1Event BCWASM_EMIT_EVENT(setData,name,age); } const char* getData(char * name) const{ Student_t *stu = students.find(std::string(name)); if (stu == nullptr){ return (std::string(\"no such student\")).c_str(); }else{ std::stringstream ret; ret << \"stu.name: \" << stu->name << \", stu.age: \" << stu->age; return ret.str().c_str(); } } }; } // \u5916\u90e8\u65b9\u6cd5 BCWASM_ABI(my_namespcase::my_contract, setData) BCWASM_ABI(my_namespcase::my_contract, getData) \u52a0\u5165Event\u540e\u6211\u4eec\u518d\u6b21\u8c03\u7528 setData \u5408\u7ea6\uff0c\u7136\u540e\u67e5\u8be2\u4ea4\u6613\u7684Receipt\uff0c\u5982\u4e0b\u6240\u793a\u3002 { blockHash: \"0xd3324a86bb4c2a9f99592ea16c02bddae6ced421c0170a07f781fb9dfa7b1d8c\", blockNumber: 77, contractAddress: null, cumulativeGasUsed: 449872, from: \"0x61eaf416482341e706ff048f20491cf280bc29d6\", gasUsed: 449872, logs: [{ address: \"0x07894a9f9edffe4b73eb8928f76ee2993039e4d7\", blockHash: \"0xd3324a86bb4c2a9f99592ea16c02bddae6ced421c0170a07f781fb9dfa7b1d8c\", blockNumber: 77, data: \"0xc785676578696e1c\", logIndex: 0, removed: false, topics: [\"0xd20950ab1def1a5df286475bfce09dc88d9dcba71bab52f01965650b43a7ca8e\"], transactionHash: \"0xa4735b9dbf93f0f8d7831f893270ff8a42244141455ed308fd985b90ee9bc3f5\", transactionIndex: 0 }], logsBloom: \"0xstatus: \"0x1\", to: \"0x07894a9f9edffe4b73eb8928f76ee2993039e4d7\", transactionHash: \"0xa4735b9dbf93f0f8d7831f893270ff8a42244141455ed308fd985b90ee9bc3f5\", transactionIndex: 0 } \u5728Receipt\u7684logs\u5b57\u6bb5\u4e2d\u662f\u6211\u4eec\u901a\u8fc7Event\u4ea7\u751f\u7684\u6570\u636e\uff0c\u5176\u4e2d\u4e3b\u8981\u5b57\u6bb5\u7684\u542b\u4e49\u4e3a\uff1a address: \u4ea7\u751f\u8be5Event\u7684\u5408\u7ea6\u5730\u5740 blockHash: \u4ea7\u751f\u8be5Event\u7684\u4ea4\u6613\u6240\u5728\u533a\u5757\u54c8\u5e0c blockNumber: \u4ea7\u751f\u8be5Event\u7684\u4ea4\u6613\u6240\u5728\u533a\u5757\u53f7 data: Event\u53c2\u6570\u7684Rlp\u7f16\u7801\uff0c\u5728\u4e0a\u9762\u5408\u7ea6\u793a\u4f8b\u4e2d\u4e3a[name,age]\u7684RLP\u7f16\u7801 topics: Event\u540d\u79f0\u7684\u54c8\u5e0c\u503c\uff0c\u5728\u4e0a\u9762\u5408\u7ea6\u793a\u4f8b\u4e3a\u5b57\u7b26\u4e32 \"setData\" \u7684\u54c8\u5e0c\u503c \u8de8\u5408\u7ea6\u8c03\u7528 bcwasm\u5e93\u63d0\u4f9b\u4e86\u7c7b DeployedContract \u7528\u4e8e\u8de8\u5408\u7ea6\u8c03\u7528\uff0c\u5f53\u9700\u8981\u5728\u5408\u7ea6\u4e2d\u8c03\u7528\u5176\u4ed6\u5408\u7ea6\u65f6\uff0c\u9996\u5148\u4f7f\u7528\u76ee\u6807\u5408\u7ea6\u5730\u5740\u521d\u59cb\u5316\u4e00\u4e2a DeployedContract \u793a\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\uff1a // \u8c03\u7528\u76ee\u7684\u5730\u5740\uff1a \"0x07894a9f9edffe4b73eb8928f76ee2993039e4d7\" // \u8c03\u7528\u7684\u65b9\u6cd5\uff1a setData(name,age) bcwasm::DeployedContract regManagerContract(\"0x07894a9f9edffe4b73eb8928f76ee2993039e4d7\"); char name[]= \"name\"; int64_t age = 18; regManagerContract.call(\"setData\", name, age); DeployedContract \u63d0\u4f9b\u5982\u4e0b\u51e0\u79cd\u8c03\u7528\u65b9\u5f0f\uff1a // \u65e0\u9700\u8fd4\u56de\u503c\u8c03\u7528 void call(\"funcName\", arguments...); void delegateCall(\"funcName\", arguments...); // string\u7c7b\u578b\u8fd4\u56de\u503c std::string callString(\"funcName\", arguments...) std::string delegateCallString(\"funcName\", arguments...) // Int64\u7c7b\u578b\u8fd4\u56de\u503c int64_t callInt64(\"funcName\", arguments...) int64_t delegateCallInt64(\"funcName\", arguments...) call() \u4e0e delegateCall() \u90fd\u53ef\u4ee5\u7528\u4e8e\u8c03\u7528\u5408\u7ea6\uff0c\u4f46\u662f\u5728\u88ab\u8c03\u76ee\u6807\u5408\u7ea6\u7684\u89c6\u89d2\u6765\u770b\u662f\u6709\u533a\u522b\u7684\uff0c\u4f7f\u7528 call() \u65f6\u88ab\u8c03\u5408\u7ea6\u770b\u5230\u7684\u8c03\u7528\u8005 caller \u662f\u53d1\u8d77\u8be5\u8c03\u7528\u7684\u5408\u7ea6\uff0c\u800c\u5f53\u4f7f\u7528 delegateCall() \u65f6\uff0c\u53d1\u8d77\u8c03\u7528\u7684\u5408\u7ea6\u76f4\u63a5\u5c06\u81ea\u8eab\u7684 caller \u4f20\u9012\u7ed9\u76ee\u6807\u5408\u7ea6\u3002\u6bd4\u5982\u5728\u5982\u4e0b\u7684\u4e24\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0cContractB\u770b\u5230\u7684 caller \u662fContractA\u7684\u5730\u5740\uff1b\u800c\u5728\u7b2c\u4e8c\u4e2d\u60c5\u51b5\u4e2d\uff0cContractB\u770b\u5230\u7684 caller \u662fuser\u7684\u5730\u5740\u3002 1. user ----> ContractA --call()--> ContractB 2. user ----> ContractA --delegateCall()--> ContractB \u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\u6ce8\u518ccns\u5408\u7ea6 PlatONE\u5728\u7cfb\u7edf\u5408\u7ea6\u4e2d\u63d0\u4f9b\u4e86CNS\u670d\u52a1\u529f\u80fd\uff0c\u53ef\u4ee5\u5c06\u5408\u7ea6\u6ce8\u518c\u81f3\u7cfb\u7edf\u5408\u7ea6\u4e2d\uff0c\u4ee5\u5b9e\u73b0\u4f7f\u7528\u5408\u7ea6\u540d\u79f0\u7248\u672c\u8c03\u7528\u5408\u7ea6\u800c\u65e0\u9700\u4f7f\u7528\u5730\u5740\u3002\u53ef\u4ee5\u5728\u5408\u7ea6\u7684\u521d\u59cb\u5316\u65b9\u6cd5 init() \u4e2d\u76f4\u63a5\u5c06\u5408\u7ea6\u6ce8\u518c\u5230\u7cfb\u7edf\u5408\u7ea6\u4e2d\uff0c\u4ee5\u4fbf\u4f7f\u7528CNS\u5408\u7ea6\u7684\u4fbf\u6377\u529f\u80fd\u3002 \u901a\u8fc7\u5728 init() \u65b9\u6cd5\u4e2d\u8c03\u7528cnsManager\u5408\u7ea6\u7684 cnsRegisterFromInit(name,version) \u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\uff0c\u9700\u8981\u6ce8\u610f\u5408\u7ea6\u7248\u672c\u5fc5\u987b\u662f \"x.x.x.x\" \u7684\u683c\u5f0f\u3002 void init() { DeployedContract reg(\"0x0000000000000000000000000000000000000011\"); reg.call(\"cnsRegisterFromInit\", \"name\", \"1.0.0.0\"); } hash() bcwasm\u5e93\u63d0\u4f9b\u4e86\u4e0e\u4ee5\u592a\u574a\u4e00\u81f4\u7684\u54c8\u5e0c\u65b9\u6cd5 sha3() \uff0c\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\u6240\u793a\uff1a std::string msg = \"hello\"; bcwasm::h256 hash = bcwasm::sha3(msg); ecrecover() ecrecover() \u51fd\u6570\u63d0\u4f9b\u4e86\u6839\u636e\u539f\u6587\u54c8\u5e0c\u548c\u7b7e\u540d\u6062\u590d\u51fa\u7b7e\u540d\u4eba\u5730\u5740\u7684\u529f\u80fd\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a // \u9488\u5bf9\u5b57\u7b26\u4e32\"hello\"\u7684\u7b7e\u540d std::string sig = \"4949eb47832d8a90c8c94b57de49d11b031fcd6d6dcb18c198103d2d431e2edf07be6c3056fe054ad6d1f62a24a509426a1c76687708ab684ad609ae879399fa00\"; // \u7b7e\u540d\u539f\u6587 std::string msg = \"hello\"; // \u9996\u5148\u6c42\u51fa\u7b7e\u540d\u539f\u6587\u7684\u54c8\u5e0c bcwasm::h256 hash = bcwasm::sha3(msg); // \u901a\u8fc7ecrecover\u6062\u590d\u51fa\u7b7e\u540d\u4eba\u5730\u5740 bcwasm::h160 addr = bcwasm::ecrecover(hash.data(), bcwasm::fromHex(sig).data()); caller()\u3001origin()\u548caddress() caller()\uff1a\u8fd4\u56decaller\u4fe1\u606f\uff0c\u5047\u5982\u5408\u7ea6A\u901a\u8fc7call()\u65b9\u6cd5\u8c03\u7528\u5408\u7ea6B\uff0c\u90a3\u4e48caller\u5c31\u662f\u5408\u7ea6A\u7684\u5730\u5740 origin()\uff1a\u8fd4\u56de\u8c03\u7528\u53d1\u8d77\u4eba\u7684\u5730\u5740\uff0c\u4e0d\u7ba1\u5408\u7ea6\u95f4\u7684\u8c03\u7528\u60c5\u51b5\u5982\u4f55\uff0c\u8be5\u51fd\u6570\u59cb\u7ec8\u8fd4\u56de\u6700\u521d\u4ea4\u6613\u53d1\u9001\u8005\u7684\u5730\u5740 address()\uff1a\u8fd4\u56de\u5f53\u524d\u5408\u7ea6\u7684\u5730\u5740 \u5176\u4ed6\u6ce8\u610f\u4e8b\u9879 \u5f53\u524d\u5408\u7ea6\u5bf9\u5916\u63a5\u53e3\u4ec5\u652f\u6301\u4ee5\u4e0b\u6570\u636e\u7c7b\u578b\uff1a char/char* /const char*/char[] unsigned __int128/__int128/uint128_t unsigned long long/uint64_t unsigned long/uint32_t unsigned short/uint16_t unsigned char/uint8_t long long/int64_t long/int32_t/int short/int16_t char/int8_t void platone\u5408\u7ea6\u5e93\u5bf9u32\u548c\u5b9a\u957f\u6570\u7ec4bytesN\u672a\u5b9a\u4e49\uff0c\u76ee\u524d\u53ef\u4ee5\u5206\u522b\u7528uint32_t\u548cchar[]\u6570\u7ec4\u4ee3\u66ff\u3002 \u5728\u5b9e\u73b0\u5408\u7ea6\u5bf9\u5916\u63a5\u53e3\u7684\u67e5\u8be2\u65b9\u6cd5\u662f\u65f6\uff0c\u82e5\u51fd\u6570\u8fd4\u56de\u7684\u662f\u5b57\u7b26\u4e32\uff08\u6bd4\u5982\u901a\u8fc7\u8c03\u7528string\u7684c_str()\u65b9\u6cd5\uff09\uff0c\u9700\u8981\u5728\u8be5\u51fd\u6570\u5185\u90e8\u65b0\u7533\u8bf7\uff08malloc\uff09\u4e00\u6bb5\u5185\u5b58\uff0c\u5e76\u5c06\u8be5\u5b57\u7b26\u4e32copy\u5230\u8fd9\u6bb5\u65b0\u7684\u5185\u5b58\uff0c\u7531\u4e8e\u8be5\u5185\u5b58\u662f\u7531BCWasm\u865a\u62df\u673a\u7edf\u4e00\u7ba1\u7406\uff0c\u6545\u4e0d\u5b58\u5728\u5185\u5b58\u6cc4\u9732\u95ee\u9898\u3002\u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 RETURN_CHARARRAY \u5b8f\u5b9e\u73b0\uff0c\u8be5\u5b8f\u5b9a\u4e49\u5982\u4e0b #define RETURN_CHARARRAY(src\uff0csize) \\ do \\ { \\ char *buf = (char *)malloc(size); \\ memset(buf\uff0c0\uff0csize); \\ strcpy(buf\uff0csrc); \\ return buf; \\ } \\ while(0) wasm\u5408\u7ea6\u5185\u7f6e\u5e93\u4e2d\u7684u256\u7c7b\u578b\u8f6c\u6362\u5b57\u7b26\u4e32\u7c7b\u578b\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u8c03\u7528\uff1a u256value.convert_to<std::string>()","title":"cpp\u5408\u7ea6\u5f00\u53d1"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#contract","text":"Contract\u7c7b\u662f\u6709bcwasm\u5e93\u63d0\u4f9b\u7684\u5408\u7ea6\u57fa\u7c7b\uff0c\u7528\u6237\u5f00\u53d1\u7684\u5408\u7ea6\u5fc5\u987b\u6d3e\u751f\u4e8e\u8be5\u7c7b\u3002Contract\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a init() \u865a\u51fd\u6570\uff0c\u7528\u6237\u5408\u7ea6\u9700\u8981\u5b9e\u73b0\u8be5 init() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u5408\u7ea6\u9996\u6b21\u53d1\u5e03\u65f6\u6267\u884c\uff0c\u4ec5\u8c03\u7528\u4e00\u6b21\uff0c\u8be5\u65b9\u6cd5\u4f5c\u7528\u7c7b\u4f3c\u4e8esolidity\u5408\u7ea6\u4e2d\u7684\u6784\u9020\u51fd\u6570\u3002 \u6ce8\u610f\uff1a init() \u65b9\u6cd5\u5fc5\u987b\u5b9e\u73b0\u4e3a public \u7c7b\u578b\uff0c\u8fd9\u6837\u5408\u7ea6\u5728\u90e8\u7f72\u65f6\u624d\u80fd\u591f\u8c03\u7528\u8be5\u51fd\u6570\u6765\u521d\u59cb\u5316\u5408\u7ea6\u6570\u636e\u3002 #include <bcwasm/bcwasm.hpp> namespace my_namespcase { class my_contract : public bcwasm::Contract { public: my_contract(){} /// \u5b9e\u73b0\u7236\u7c7b: bcwasm::Contract \u7684\u865a\u51fd\u6570 /// \u8be5\u51fd\u6570\u5728\u5408\u7ea6\u9996\u6b21\u53d1\u5e03\u65f6\u6267\u884c\uff0c\u4ec5\u8c03\u7528\u4e00\u6b21 void init() { /* \u505a\u4e00\u4e9b\u521d\u59cb\u5316\u64cd\u4f5c */ } }; }","title":"Contract\u7c7b"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#_1","text":"\u5408\u7ea6\u5916\u90e8\u65b9\u6cd5\u6307\u7684\u662f\u5408\u7ea6\u53ef\u4ee5\u5728\u5916\u90e8\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u529f\u80fd\u7c7b\u4f3c\u4e0esolidity\u5408\u7ea6\u4e2d\u7684 public \u7c7b\u578b\u65b9\u6cd5,\u5728bcwasm\u5e93\u4e2d\u662f\u901a\u8fc7 BCWASM_ABI \u5b8f\u6765\u5b9a\u4e49\u5916\u90e8\u65b9\u6cd5\u3002\u901a\u8fc7 BCWASM_ABI \u58f0\u660e\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u5408\u7ea6\u5916\u90e8\u901a\u8fc7rpc\u6d88\u606f\u8c03\u7528\u3001\u4e5f\u53ef\u4ee5\u88ab\u5176\u4ed6\u5408\u7ea6\u8c03\u7528\u3002 #include <bcwasm/bcwasm.hpp> namespace my_namespcase { class my_contract : public bcwasm::Contract { public: my_contract(){} /// \u5b9e\u73b0\u7236\u7c7b: bcwasm::Contract \u7684\u865a\u51fd\u6570 /// \u8be5\u51fd\u6570\u5728\u5408\u7ea6\u9996\u6b21\u53d1\u5e03\u65f6\u6267\u884c\uff0c\u4ec5\u8c03\u7528\u4e00\u6b21 void init() { /* \u505a\u4e00\u4e9b\u521d\u59cb\u5316\u64cd\u4f5c */ } void setData(char * data){ /* \u4fee\u6539\u5408\u7ea6\u6570\u636e */ } }; } // \u5916\u90e8\u65b9\u6cd5 BCWASM_ABI(my_namespcase::my_contract:setData)","title":"\u5408\u7ea6\u5916\u90e8\u65b9\u6cd5"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#_2","text":"Wasm\u5408\u7ea6\u5185\u7f6e\u5e93\u4e3a\u6570\u636e\u7684\u6301\u4e45\u5316\u63d0\u4f9b\u4e86 setState() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 bcwasm::setState() \u51fd\u6570\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\uff0c\u76f8\u5e94\u5730\u67e5\u8be2\u8c03\u7528 bcwasm::getState() \u3002 \u4e0b\u65b9\u7684\u793a\u4f8b\u5408\u7ea6\u4e2d\uff0c\u6709\u4e24\u4e2a\u63a5\u53e3\u4f9b\u5916\u90e8\u8c03\u7528 setData(char* data) \u548c getData() \u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5206\u522b\u8c03\u7528\u4e86 bcwasm::setState() \u3001 bcwasm::getState() \uff0c\u4ee5\u5b9e\u73b0\u6570\u636e\u7684\u4e0a\u94fe\u6301\u4e45\u5316\u548c\u67e5\u8be2\u3002 #include <bcwasm/bcwasm.hpp> namespace my_namespcase { class my_contract : public bcwasm::Contract { public: void init(){} void setData(char * data){ std::string m_data(data); bcwasm::setState(\"DataKey\", m_data); } const char* getData() const{ std::string m_data; bcwasm::getState(\"DataKey\", m_data); return m_data.c_str(); } }; } // \u5916\u90e8\u65b9\u6cd5 BCWASM_ABI(my_namespcase::my_contract, setData) BCWASM_ABI(my_namespcase::my_contract, getData)","title":"\u94fe\u4e0a\u5b58\u50a8\u63a5\u53e3"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#const","text":"\u5408\u7ea6\u4e2d\u7684 const \u7c7b\u578b\u65b9\u6cd5\u63d0\u4f9b\u5bf9\u5408\u7ea6\u72b6\u6001\u7684\u53ea\u8bfb\u64cd\u4f5c\uff0c\u8be5\u7c7b\u578b\u58f0\u660e\u7684\u51fd\u6570\u4e0d\u80fd\u591f\u4fee\u6539\u5408\u7ea6\u6570\u636e\uff0c\u4e00\u822c\u7528\u6765\u67e5\u8be2\u5408\u7ea6\u7684\u94fe\u4e0a\u6570\u636e\u3002\u4e0b\u65b9\u4ee3\u7801\u4e2d\uff0c getData() \u5373\u4e3aconst\u65b9\u6cd5\uff0c\u7528\u4e8e\u67e5\u8be2\u6570\u636e\u3002 const char* getData() const{ std::string m_data; bcwasm::getState(\"DataKey\", m_data); // \u8bfb\u53d6\u5408\u7ea6\u6570\u636e\u5e76\u8fd4\u56de return m_data.c_str(); }","title":"Const\u65b9\u6cd5"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#structmap","text":"","title":"Struct\u3001Map"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#struct","text":"\u7ed3\u6784\u4f53\u8bed\u6cd5\u89c4\u5219\u4e0eC++\u4e00\u81f4\uff0c\u4f46\u662f\u5982\u679c\u7528\u4e8e\u9700\u8981\u5c06\u7ed3\u6784\u6570\u636e\u4e0a\u94fe\u6301\u4e45\u5316\uff0c\u5219\u9700\u8981\u5728\u7ed3\u6784\u4f53\u4e2d\u4f7f\u7528 BCWASM_SERIALIZE \u5b8f\uff0c\u8be5\u5b8f\u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b\u63d0\u4f9b\u4e86\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u65b9\u5f0f\u3002 \u4e0b\u65b9\u7684\u5408\u7ea6\u793a\u4f8b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Student_t \u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u5e76\u901a\u8fc7\u5408\u7ea6\u63a5\u53e3 setData() \u5c06\u6570\u636e\u6301\u4e45\u5316\u5230\u94fe\u4e0a\uff0c\u7136\u540e\u53ef\u4ee5\u901a\u8fc7 getData() \u65b9\u6cd5\u67e5\u8be2\u6570\u636e\u3002 #include <bcwasm/bcwasm.hpp> namespace my_namespcase { struct Student_t { std::string name; // \u59d3\u540d int64_t age; // \u5e74\u9f84 BCWASM_SERIALIZE(Student_t, (name)(age)); }; class my_contract : public bcwasm::Contract { public: void init(){} void setData(char * name, int64_t age){ Student_t stu; stu.name = std::string (name); stu.age = age; bcwasm::setState(\"DataKey\", stu); } const char* getData() const{ Student_t stu; bcwasm::getState(\"DataKey\", stu); std::stringstream ret; ret << \"stu.name: \" << stu.name << \", stu.age: \" << stu.age; // \u8bfb\u53d6\u5408\u7ea6\u6570\u636e\u5e76\u8fd4\u56de return ret.str().c_str(); } }; } // \u5916\u90e8\u65b9\u6cd5 BCWASM_ABI(my_namespcase::my_contract, setData) BCWASM_ABI(my_namespcase::my_contract, getData)","title":"Struct \u7ed3\u6784\u4f53"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#map","text":"bcwasm\u4e2d\u63d0\u4f9b\u4e86map\u7c7b\u578b\u7684\u5c01\u88c5\uff0c\u5b9a\u4e49map\u7ed3\u6784\u65f6\uff0c\u9700\u8981\u6307\u5b9amap\u7684\u540d\u79f0\u3001key\u7684\u7c7b\u578b\u3001value\u7684\u7c7b\u578b\u3002 char mapName[] = \"students\"; bcwasm::db::Map<mapName, std::string, Student_t> students; map\u7ed3\u6784\u652f\u6301\u5982\u4e0b\u7684\u51e0\u79cdapi\uff1a find(key) : \u6839\u636ekey\u67e5\u627evalue insert(key, value) : \u5f53map\u4e2d\u8fd8\u6ca1\u6709\u4ee5key\u4e3a\u7d22\u5f15\u7684\u5185\u5bb9\u65f6\uff0c\u63d2\u5165\u4ee5key\u4e3a\u7d22\u5f15\u7684value update(key, value) \uff1a \u5f53map\u4e2d\u5df2\u7ecf\u5b58\u5728\u4ee5key\u4e3a\u7d22\u5f15\u7684\u5185\u5bb9\u65f6\uff0c\u66f4\u65b0key\u5bf9\u5e94\u7684value \u4e0b\u65b9\u7684\u793a\u4f8b\u5408\u7ea6\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2amap\u7528\u4e8e\u4fdd\u5b58\u5b66\u751f\u7684\u59d3\u540d\u3001\u5e74\u9f84\u4fe1\u606f\uff0c\u4ee5\u5b66\u751f\u59d3\u540d\u4e3akey\u4f5c\u4e3a\u7d22\u5f15\uff0c\u5176\u4e2d setData \u65b9\u6cd5\u8f93\u5165\u5b66\u751f\u7684\u59d3\u540d\u3001\u5e74\u9f84\uff0c getData \u65b9\u6cd5\u6839\u636e\u59d3\u540d\u67e5\u8be2\u5b66\u751f\u7684\u5e74\u9f84\u3002 #include <bcwasm/bcwasm.hpp> namespace my_namespcase { struct Student_t { std::string name; // \u59d3\u540d int64_t age; // \u5e74\u9f84 BCWASM_SERIALIZE(Student_t, (name)(age)); }; // \u5b9a\u4e49\u4e00\u4e2amap\uff0c\u4fdd\u5b58\u5b66\u751f\u59d3\u540d\u3001\u5e74\u9f84\u4fe1\u606f\uff0c\u4ee5\u5b66\u751f\u59d3\u540d\u4e3akey\u4f5c\u4e3a\u7d22\u5f15 char mapName[] = \"students\"; bcwasm::db::Map<mapName, std::string, Student_t> students; class my_contract : public bcwasm::Contract { public: void init(){} void setData(char * name, int64_t age){ Student_t stu; stu.name = std::string (name); stu.age = age; Student_t *stu_p = students.find(std::string(name)); if (stu_p == nullptr){ students.insert(stu.name, stu); } else{ students.update(stu.name, stu); } } const char* getData(char* name) const{ Student_t *stu = students.find(std::string(name)); if (stu == nullptr){ return (std::string(\"no such student\")).c_str(); }else{ std::stringstream ret; ret << \"stu.name: \" << stu->name << \", stu.age: \" << stu->age; return ret.str().c_str(); } } }; } // \u5916\u90e8\u65b9\u6cd5 BCWASM_ABI(my_namespcase::my_contract, setData) BCWASM_ABI(my_namespcase::my_contract, getData)","title":"Map"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#event","text":"Event\u5141\u8bb8\u6211\u4eec\u65b9\u4fbf\u5730\u4f7f\u7528PlatONE\u7684\u65e5\u5fd7\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4eec\u53ef\u4ee5\u5728dapp\u4e2d\u76d1\u542cEvent\uff0c\u5f53\u5408\u7ea6\u4e2d\u4ea7\u751fEvent\u65f6\uff0c\u4f1a\u4f7f\u76f8\u5173\u53c2\u6570\u88ab\u5b58\u50a8\u5230\u4ea4\u6613\u7684Log\u4e2d\u3002\u8fd9\u4e9bLog\u4e0e\u5730\u5740\u76f8\u5173\u8054\uff0c\u88ab\u5199\u5165\u533a\u5757\u94fe\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6613Receipt\u67e5\u8be2\u67d0\u4e2a\u4ea4\u6613\u6240\u4ea7\u751f\u7684Event\u3002 \u5b8f BCWASM_EVENT \u548c BCWASM_EMIT_EVENT \u63d0\u4f9b\u4e86\u5bf9\u5408\u7ea6Event\u7684\u76f4\u63a5\u652f\u6301\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a /// \u5b9a\u4e49Event. /// BCWASM_EVENT(eventName,arguments...) BCWASM_EVENT(setData,const char *,const int64_t) /// \u89e6\u53d1Event BCWASM_EMIT_EVENT(setData,name,age); \u6211\u4eec\u5728\u793a\u4f8b\u5408\u7ea6\u4e2d\u52a0\u5165Event\u4e8b\u4ef6\uff0c\u6bcf\u6b21\u8c03\u7528 setData() \u65f6\uff0c\u89e6\u53d1Event\u4e8b\u4ef6\uff0c\u793a\u4f8b\u5408\u7ea6\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a #include <bcwasm/bcwasm.hpp> namespace my_namespcase { struct Student_t { std::string name; // \u59d3\u540d int64_t age; // \u5e74\u9f84 BCWASM_SERIALIZE(Student_t, (name)(age)); }; // \u5b9a\u4e49\u4e00\u4e2amap\uff0c\u4fdd\u5b58\u5b66\u751f\u59d3\u540d\u3001\u5e74\u9f84\u4fe1\u606f\uff0c\u4ee5\u5b66\u751f\u59d3\u540d\u4e3akey\u4f5c\u4e3a\u7d22\u5f15 char mapName[] = \"students\"; bcwasm::db::Map<mapName, std::string, Student_t> students; class my_contract : public bcwasm::Contract { public: void init(){} // \u5b9a\u4e49Event BCWASM_EVENT(setData,const char*,int64_t) void setData(char * name, int64_t age){ Student_t stu; stu.name = std::string(name); stu.age = age; Student_t *stu_p = students.find(std::string(name)); if (stu_p == nullptr){ students.insert(stu.name, stu); } else{ students.update(stu.name, stu); } /// \u89e6\u53d1Event BCWASM_EMIT_EVENT(setData,name,age); } const char* getData(char * name) const{ Student_t *stu = students.find(std::string(name)); if (stu == nullptr){ return (std::string(\"no such student\")).c_str(); }else{ std::stringstream ret; ret << \"stu.name: \" << stu->name << \", stu.age: \" << stu->age; return ret.str().c_str(); } } }; } // \u5916\u90e8\u65b9\u6cd5 BCWASM_ABI(my_namespcase::my_contract, setData) BCWASM_ABI(my_namespcase::my_contract, getData) \u52a0\u5165Event\u540e\u6211\u4eec\u518d\u6b21\u8c03\u7528 setData \u5408\u7ea6\uff0c\u7136\u540e\u67e5\u8be2\u4ea4\u6613\u7684Receipt\uff0c\u5982\u4e0b\u6240\u793a\u3002 { blockHash: \"0xd3324a86bb4c2a9f99592ea16c02bddae6ced421c0170a07f781fb9dfa7b1d8c\", blockNumber: 77, contractAddress: null, cumulativeGasUsed: 449872, from: \"0x61eaf416482341e706ff048f20491cf280bc29d6\", gasUsed: 449872, logs: [{ address: \"0x07894a9f9edffe4b73eb8928f76ee2993039e4d7\", blockHash: \"0xd3324a86bb4c2a9f99592ea16c02bddae6ced421c0170a07f781fb9dfa7b1d8c\", blockNumber: 77, data: \"0xc785676578696e1c\", logIndex: 0, removed: false, topics: [\"0xd20950ab1def1a5df286475bfce09dc88d9dcba71bab52f01965650b43a7ca8e\"], transactionHash: \"0xa4735b9dbf93f0f8d7831f893270ff8a42244141455ed308fd985b90ee9bc3f5\", transactionIndex: 0 }], logsBloom: \"0xstatus: \"0x1\", to: \"0x07894a9f9edffe4b73eb8928f76ee2993039e4d7\", transactionHash: \"0xa4735b9dbf93f0f8d7831f893270ff8a42244141455ed308fd985b90ee9bc3f5\", transactionIndex: 0 } \u5728Receipt\u7684logs\u5b57\u6bb5\u4e2d\u662f\u6211\u4eec\u901a\u8fc7Event\u4ea7\u751f\u7684\u6570\u636e\uff0c\u5176\u4e2d\u4e3b\u8981\u5b57\u6bb5\u7684\u542b\u4e49\u4e3a\uff1a address: \u4ea7\u751f\u8be5Event\u7684\u5408\u7ea6\u5730\u5740 blockHash: \u4ea7\u751f\u8be5Event\u7684\u4ea4\u6613\u6240\u5728\u533a\u5757\u54c8\u5e0c blockNumber: \u4ea7\u751f\u8be5Event\u7684\u4ea4\u6613\u6240\u5728\u533a\u5757\u53f7 data: Event\u53c2\u6570\u7684Rlp\u7f16\u7801\uff0c\u5728\u4e0a\u9762\u5408\u7ea6\u793a\u4f8b\u4e2d\u4e3a[name,age]\u7684RLP\u7f16\u7801 topics: Event\u540d\u79f0\u7684\u54c8\u5e0c\u503c\uff0c\u5728\u4e0a\u9762\u5408\u7ea6\u793a\u4f8b\u4e3a\u5b57\u7b26\u4e32 \"setData\" \u7684\u54c8\u5e0c\u503c","title":"Event"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#_3","text":"bcwasm\u5e93\u63d0\u4f9b\u4e86\u7c7b DeployedContract \u7528\u4e8e\u8de8\u5408\u7ea6\u8c03\u7528\uff0c\u5f53\u9700\u8981\u5728\u5408\u7ea6\u4e2d\u8c03\u7528\u5176\u4ed6\u5408\u7ea6\u65f6\uff0c\u9996\u5148\u4f7f\u7528\u76ee\u6807\u5408\u7ea6\u5730\u5740\u521d\u59cb\u5316\u4e00\u4e2a DeployedContract \u793a\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\uff1a // \u8c03\u7528\u76ee\u7684\u5730\u5740\uff1a \"0x07894a9f9edffe4b73eb8928f76ee2993039e4d7\" // \u8c03\u7528\u7684\u65b9\u6cd5\uff1a setData(name,age) bcwasm::DeployedContract regManagerContract(\"0x07894a9f9edffe4b73eb8928f76ee2993039e4d7\"); char name[]= \"name\"; int64_t age = 18; regManagerContract.call(\"setData\", name, age); DeployedContract \u63d0\u4f9b\u5982\u4e0b\u51e0\u79cd\u8c03\u7528\u65b9\u5f0f\uff1a // \u65e0\u9700\u8fd4\u56de\u503c\u8c03\u7528 void call(\"funcName\", arguments...); void delegateCall(\"funcName\", arguments...); // string\u7c7b\u578b\u8fd4\u56de\u503c std::string callString(\"funcName\", arguments...) std::string delegateCallString(\"funcName\", arguments...) // Int64\u7c7b\u578b\u8fd4\u56de\u503c int64_t callInt64(\"funcName\", arguments...) int64_t delegateCallInt64(\"funcName\", arguments...) call() \u4e0e delegateCall() \u90fd\u53ef\u4ee5\u7528\u4e8e\u8c03\u7528\u5408\u7ea6\uff0c\u4f46\u662f\u5728\u88ab\u8c03\u76ee\u6807\u5408\u7ea6\u7684\u89c6\u89d2\u6765\u770b\u662f\u6709\u533a\u522b\u7684\uff0c\u4f7f\u7528 call() \u65f6\u88ab\u8c03\u5408\u7ea6\u770b\u5230\u7684\u8c03\u7528\u8005 caller \u662f\u53d1\u8d77\u8be5\u8c03\u7528\u7684\u5408\u7ea6\uff0c\u800c\u5f53\u4f7f\u7528 delegateCall() \u65f6\uff0c\u53d1\u8d77\u8c03\u7528\u7684\u5408\u7ea6\u76f4\u63a5\u5c06\u81ea\u8eab\u7684 caller \u4f20\u9012\u7ed9\u76ee\u6807\u5408\u7ea6\u3002\u6bd4\u5982\u5728\u5982\u4e0b\u7684\u4e24\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0cContractB\u770b\u5230\u7684 caller \u662fContractA\u7684\u5730\u5740\uff1b\u800c\u5728\u7b2c\u4e8c\u4e2d\u60c5\u51b5\u4e2d\uff0cContractB\u770b\u5230\u7684 caller \u662fuser\u7684\u5730\u5740\u3002 1. user ----> ContractA --call()--> ContractB 2. user ----> ContractA --delegateCall()--> ContractB","title":"\u8de8\u5408\u7ea6\u8c03\u7528"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#cns","text":"PlatONE\u5728\u7cfb\u7edf\u5408\u7ea6\u4e2d\u63d0\u4f9b\u4e86CNS\u670d\u52a1\u529f\u80fd\uff0c\u53ef\u4ee5\u5c06\u5408\u7ea6\u6ce8\u518c\u81f3\u7cfb\u7edf\u5408\u7ea6\u4e2d\uff0c\u4ee5\u5b9e\u73b0\u4f7f\u7528\u5408\u7ea6\u540d\u79f0\u7248\u672c\u8c03\u7528\u5408\u7ea6\u800c\u65e0\u9700\u4f7f\u7528\u5730\u5740\u3002\u53ef\u4ee5\u5728\u5408\u7ea6\u7684\u521d\u59cb\u5316\u65b9\u6cd5 init() \u4e2d\u76f4\u63a5\u5c06\u5408\u7ea6\u6ce8\u518c\u5230\u7cfb\u7edf\u5408\u7ea6\u4e2d\uff0c\u4ee5\u4fbf\u4f7f\u7528CNS\u5408\u7ea6\u7684\u4fbf\u6377\u529f\u80fd\u3002 \u901a\u8fc7\u5728 init() \u65b9\u6cd5\u4e2d\u8c03\u7528cnsManager\u5408\u7ea6\u7684 cnsRegisterFromInit(name,version) \u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\uff0c\u9700\u8981\u6ce8\u610f\u5408\u7ea6\u7248\u672c\u5fc5\u987b\u662f \"x.x.x.x\" \u7684\u683c\u5f0f\u3002 void init() { DeployedContract reg(\"0x0000000000000000000000000000000000000011\"); reg.call(\"cnsRegisterFromInit\", \"name\", \"1.0.0.0\"); }","title":"\u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\u6ce8\u518ccns\u5408\u7ea6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#hash","text":"bcwasm\u5e93\u63d0\u4f9b\u4e86\u4e0e\u4ee5\u592a\u574a\u4e00\u81f4\u7684\u54c8\u5e0c\u65b9\u6cd5 sha3() \uff0c\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\u6240\u793a\uff1a std::string msg = \"hello\"; bcwasm::h256 hash = bcwasm::sha3(msg);","title":"hash()"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#ecrecover","text":"ecrecover() \u51fd\u6570\u63d0\u4f9b\u4e86\u6839\u636e\u539f\u6587\u54c8\u5e0c\u548c\u7b7e\u540d\u6062\u590d\u51fa\u7b7e\u540d\u4eba\u5730\u5740\u7684\u529f\u80fd\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a // \u9488\u5bf9\u5b57\u7b26\u4e32\"hello\"\u7684\u7b7e\u540d std::string sig = \"4949eb47832d8a90c8c94b57de49d11b031fcd6d6dcb18c198103d2d431e2edf07be6c3056fe054ad6d1f62a24a509426a1c76687708ab684ad609ae879399fa00\"; // \u7b7e\u540d\u539f\u6587 std::string msg = \"hello\"; // \u9996\u5148\u6c42\u51fa\u7b7e\u540d\u539f\u6587\u7684\u54c8\u5e0c bcwasm::h256 hash = bcwasm::sha3(msg); // \u901a\u8fc7ecrecover\u6062\u590d\u51fa\u7b7e\u540d\u4eba\u5730\u5740 bcwasm::h160 addr = bcwasm::ecrecover(hash.data(), bcwasm::fromHex(sig).data());","title":"ecrecover()"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#calleroriginaddress","text":"caller()\uff1a\u8fd4\u56decaller\u4fe1\u606f\uff0c\u5047\u5982\u5408\u7ea6A\u901a\u8fc7call()\u65b9\u6cd5\u8c03\u7528\u5408\u7ea6B\uff0c\u90a3\u4e48caller\u5c31\u662f\u5408\u7ea6A\u7684\u5730\u5740 origin()\uff1a\u8fd4\u56de\u8c03\u7528\u53d1\u8d77\u4eba\u7684\u5730\u5740\uff0c\u4e0d\u7ba1\u5408\u7ea6\u95f4\u7684\u8c03\u7528\u60c5\u51b5\u5982\u4f55\uff0c\u8be5\u51fd\u6570\u59cb\u7ec8\u8fd4\u56de\u6700\u521d\u4ea4\u6613\u53d1\u9001\u8005\u7684\u5730\u5740 address()\uff1a\u8fd4\u56de\u5f53\u524d\u5408\u7ea6\u7684\u5730\u5740","title":"caller()\u3001origin()\u548caddress()"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-cpp%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/#_4","text":"\u5f53\u524d\u5408\u7ea6\u5bf9\u5916\u63a5\u53e3\u4ec5\u652f\u6301\u4ee5\u4e0b\u6570\u636e\u7c7b\u578b\uff1a char/char* /const char*/char[] unsigned __int128/__int128/uint128_t unsigned long long/uint64_t unsigned long/uint32_t unsigned short/uint16_t unsigned char/uint8_t long long/int64_t long/int32_t/int short/int16_t char/int8_t void platone\u5408\u7ea6\u5e93\u5bf9u32\u548c\u5b9a\u957f\u6570\u7ec4bytesN\u672a\u5b9a\u4e49\uff0c\u76ee\u524d\u53ef\u4ee5\u5206\u522b\u7528uint32_t\u548cchar[]\u6570\u7ec4\u4ee3\u66ff\u3002 \u5728\u5b9e\u73b0\u5408\u7ea6\u5bf9\u5916\u63a5\u53e3\u7684\u67e5\u8be2\u65b9\u6cd5\u662f\u65f6\uff0c\u82e5\u51fd\u6570\u8fd4\u56de\u7684\u662f\u5b57\u7b26\u4e32\uff08\u6bd4\u5982\u901a\u8fc7\u8c03\u7528string\u7684c_str()\u65b9\u6cd5\uff09\uff0c\u9700\u8981\u5728\u8be5\u51fd\u6570\u5185\u90e8\u65b0\u7533\u8bf7\uff08malloc\uff09\u4e00\u6bb5\u5185\u5b58\uff0c\u5e76\u5c06\u8be5\u5b57\u7b26\u4e32copy\u5230\u8fd9\u6bb5\u65b0\u7684\u5185\u5b58\uff0c\u7531\u4e8e\u8be5\u5185\u5b58\u662f\u7531BCWasm\u865a\u62df\u673a\u7edf\u4e00\u7ba1\u7406\uff0c\u6545\u4e0d\u5b58\u5728\u5185\u5b58\u6cc4\u9732\u95ee\u9898\u3002\u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 RETURN_CHARARRAY \u5b8f\u5b9e\u73b0\uff0c\u8be5\u5b8f\u5b9a\u4e49\u5982\u4e0b #define RETURN_CHARARRAY(src\uff0csize) \\ do \\ { \\ char *buf = (char *)malloc(size); \\ memset(buf\uff0c0\uff0csize); \\ strcpy(buf\uff0csrc); \\ return buf; \\ } \\ while(0) wasm\u5408\u7ea6\u5185\u7f6e\u5e93\u4e2d\u7684u256\u7c7b\u578b\u8f6c\u6362\u5b57\u7b26\u4e32\u7c7b\u578b\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u8c03\u7528\uff1a u256value.convert_to<std::string>()","title":"\u5176\u4ed6\u6ce8\u610f\u4e8b\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-rust%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/","text":"[TODO]","title":"\u5408\u7ea6\u5f00\u53d1 rust\u5408\u7ea6\u5f00\u53d1"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-solidity%E5%BC%80%E5%8F%91/","text":"[TODO]","title":"solidity\u5408\u7ea6\u5f00\u53d1"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/","text":"\u8be5\u6587\u6863\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9: * Wasm\u5408\u7ea6\u5f00\u53d1\u73af\u5883\u914d\u7f6e\u6559\u7a0b; * Wasm\u5408\u7ea6\u7f16\u8bd1; * Wasm\u5408\u7ea6\u90e8\u7f72\u53ca\u8c03\u7528; \u65b9\u4fbf\u7528\u6237\u5bf9Wasm\u5408\u7ea6\u8fdb\u884c\u521d\u6b65\u7684\u4e86\u89e3\uff0c\u5e76\u5feb\u901f\u638c\u63e1Wasm\u5408\u7ea6\u5f00\u53d1\u6280\u5de7. 1. \u914d\u7f6eWasm\u5408\u7ea6\u5f00\u53d1\u73af\u5883 \u83b7\u53d6\u6700\u65b0\u7a33\u5b9a\u7248\u7684WASM\u5408\u7ea6\u53d1\u5e03\u5305\uff0c\u5e76\u8fdb\u884c\u89e3\u538b\u3002 wget https://github.com/PlatONEnterprise/PlatONE-Go/releases/download/v0.9.0/BCWasm_linux_release.v0.9.0.tar.gz # \u8fdb\u5165BCWasm\u76ee\u5f55\uff0c\u7136\u540e\u5b9a\u4e49\u8def\u5f84\uff1a cd BCWasm export CONTRACTSSPACE=${PWD} \u5728 ${CONTRACTSSPACE} \u76ee\u5f55\u4e0b\u5305\u542b\u4e86\u5408\u7ea6\u7f16\u8bd1\u6240\u9700\u7684\u6750\u6599\uff0c\u5408\u7ea6\u6e90\u7801\u76ee\u5f55\u4e3a ${CONTRACTSSPACE}/appContract \u83b7\u53d6PlatONE\u6700\u65b0\u7a33\u5b9a\u7248\u7684\u53d1\u5e03\u5305\uff0c\u5e76\u8fdb\u884c\u89e3\u538b\u3002\u8fdb\u5165\u89e3\u538b\u83b7\u5f97\u7684PlatONE_linux\u76ee\u5f55\uff0c\u7136\u540e\u5b9a\u4e49\u8def\u5f84\uff1a wget https://github.com/PlatONEnterprise/PlatONE-Go/releases/download/v0.9.0/PlatONE_linux_v0.9.0.tar.gz tar -xzvf PlatONE_linux_v0.9.0.tar.gz cd PlatONE_linux export BIN_PATH=${PWD}/bin \u26a0 \u8bf7\u786e\u4fdd ${BIN_PATH}\u8bbe\u7f6e\u5728\u5f53\u524d\u7684\u5de5\u4f5cShell\uff0c\u4ee5\u8ba9\u8be5\u73af\u5883\u53d8\u91cf\u751f\u6548\u3002 2. \u6784\u5efa\u9879\u76ee\u53ca\u7f16\u8bd1\u5408\u7ea6 cd ${CONTRACTSSPACE} # 1. \u6784\u5efa\u7528\u6237\u5408\u7ea6 ./script/autoprojectForApp.sh . my_contract # 2. \u6784\u5efa\u5de5\u7a0b ./script/autoprojectForApp.sh . # 3. \u7f16\u8bd1\u5408\u7ea6 cd build make my_contract 2.1. \u6784\u5efa\u9879\u76ee \u7b2c\u4e00\u6b65\u65f6\uff0c\u4f1a\u5728 ${CONTRACTSSPACE}/appContract \u4e0b\u6784\u5efa\u65b0\u7684\u5408\u7ea6\u76ee\u5f55 my_contract \u3002 \u7b2c\u4e8c\u6b65\u65f6\uff0c\u4f1a\u5728 ${CONTRACTSSPACE} \u4e0b\u521b\u5efa build \uff0c\u5e76\u7f16\u8bd1\u5408\u7ea6\u3002 \u6b64\u65f6\uff0c build \u76ee\u5f55\u4e0b\u7684\u7ed3\u6784\u5982\u4e0b\u6240\u793a \u251c\u2500\u2500 appContract \u2502 \u251c\u2500\u2500 appDemo \u2502 \u2502 \u251c\u2500\u2500 appDemo.bc \u2502 \u2502 \u251c\u2500\u2500 appDemo.cpp.abi.json ## \u5408\u7ea6\u7684abi\u6587\u4ef6 \u2502 \u2502 \u251c\u2500\u2500 appDemo.cpp.bc \u2502 \u2502 \u251c\u2500\u2500 appDemo.s \u2502 \u2502 \u251c\u2500\u2500 appDemo.wasm ## \u5408\u7ea6\u7684wasm\u5b57\u8282\u7801 \u2502 \u2502 \u251c\u2500\u2500 appDemo.wast \u2502 \u2502 \u251c\u2500\u2500 CMakeFiles \u2502 \u2502 \u251c\u2500\u2500 cmake_install.cmake \u2502 \u2502 \u2514\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 CMakeFiles \u2502 \u251c\u2500\u2500 cmake_install.cmake \u2502 \u251c\u2500\u2500 Makefile \u2502 \u2514\u2500\u2500 my_contract \u2502 \u251c\u2500\u2500 CMakeFiles \u2502 \u251c\u2500\u2500 cmake_install.cmake \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 my_contract.cpp.abi.json ## \u5408\u7ea6\u7684abi\u6587\u4ef6 \u2502 \u251c\u2500\u2500 my_contract.bc \u2502 \u251c\u2500\u2500 my_contract.cpp.bc \u2502 \u251c\u2500\u2500 my_contract.s \u2502 \u251c\u2500\u2500 my_contract.wasm \u2502 \u2514\u2500\u2500 my_contract.wast \u251c\u2500\u2500 CMakeCache.txt \u251c\u2500\u2500 CMakeFiles \u251c\u2500\u2500 cmake_install.cmake \u2514\u2500\u2500 Makefile \u5408\u7ea6\u6587\u4ef6\u4f1a\u901a\u8fc7\u811a\u672c autoprojectForApp.sh \u9ed8\u8ba4\u751f\u6210\u5982\u4e0b\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u7f16\u5199\u81ea\u5df1\u7684\u5408\u7ea6\u3002 //auto create contract #include <stdlib.h> #include <string.h> #include <string> #include <bcwasm/bcwasm.hpp> namespace demo { class my_contract : public bcwasm::Contract { public: my_contract(){} /// \u5b9e\u73b0\u7236\u7c7b: bcwasm::Contract \u7684\u865a\u51fd\u6570 /// \u8be5\u51fd\u6570\u5728\u5408\u7ea6\u9996\u6b21\u53d1\u5e03\u65f6\u6267\u884c\uff0c\u4ec5\u8c03\u7528\u4e00\u6b21 void init() { bcwasm::println(\"init success...\"); } /// \u5b9a\u4e49Event. /// BCWASM_EVENT(eventName\uff0carguments...) BCWASM_EVENT(setName\uff0cconst char *) public: void setName(const char *msg) { // \u5b9a\u4e49\u72b6\u6001\u53d8\u91cf bcwasm::setState(\"NAME_KEY\"\uff0cstd::string(msg)); // \u65e5\u5fd7\u8f93\u51fa // \u4e8b\u4ef6\u8fd4\u56de BCWASM_EMIT_EVENT(setName\uff0c\"std::string(msg)\"); } const char* getName() const { std::string value; bcwasm::getState(\"NAME_KEY\"\uff0cvalue); // \u8bfb\u53d6\u5408\u7ea6\u6570\u636e\u5e76\u8fd4\u56de return value.c_str(); } }; } // \u6b64\u5904\u5b9a\u4e49\u7684\u51fd\u6570\u4f1a\u751f\u6210ABI\u6587\u4ef6\u4f9b\u5916\u90e8\u8c03\u7528 BCWASM_ABI(demo::my_contract\uff0csetName) BCWASM_ABI(demo::my_contract\uff0cgetName) 2.2. \u7f16\u8bd1\u5408\u7ea6 \u8fdb\u5165 build \u76ee\u5f55\u5e76\u7f16\u8bd1\u8be5\u5408\u7ea6 cd ${CONTRACTSSPACE}/build make my_contract \u751f\u6210\u6587\u4ef6\u5982\u4e0b \u251cbuild/ \u251c-appContact/ \u2502 \u2514\u2500\u2500 my_contract \u2502 \u251c\u2500\u2500 CMakeFiles \u2502 \u251c\u2500\u2500 cmake_install.cmake \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 my_contract.cpp.abi.json ## \u5408\u7ea6\u7684abi\u6587\u4ef6 \u2502 \u251c\u2500\u2500 my_contract.bc \u2502 \u251c\u2500\u2500 my_contract.cpp.bc \u2502 \u251c\u2500\u2500 my_contract.s \u2502 \u251c\u2500\u2500 my_contract.wasm \u2502 \u2514\u2500\u2500 my_contract.wast \u4e3b\u8981\u6587\u4ef6\u7b80\u4ecb\uff1a .bc \u8fde\u63a5\u6807\u51c6\u5e93\u540e\u7684LLVM\u5b57\u8282\u7801\u6587\u4ef6\uff0c\u542b\u6240\u6709\u4f9d\u8d56\u5e93\uff1b .json \u5408\u7ea6\u5bf9\u5e94\u7684\u63a5\u53e3\u63cf\u8ff0\u6587\u4ef6\uff1b .s \u6c47\u7f16\u6587\u4ef6\uff1b .wasm \u5408\u7ea6\u7f16\u8bd1\u540e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b57\u8282\u7801\u6307\u4ee4\u96c6\uff1b .wast \u5408\u7ea6\u7f16\u8bd1\u540e\u7684\u53ef\u88ab\u8ba4\u4e3a\u8bfb\u61c2\u7684\u6307\u4ee4\u6587\u4ef6\uff1b .cpp.bc \uff1bLLVM \u5b57\u8282\u7801\u6587\u4ef6\uff0c\u4ec5\u5305\u542b\u5408\u7ea6\u4ee3\u7801\u672c\u8eab\u7684\uff1b \u5176\u4e2d\uff0c\u53d1\u5e03\u5408\u7ea6\u65f6\u9700\u8981\u7528\u5230\u7684\u6587\u4ef6\u4e3amy_contract.wast\u548cmy_contract.cpp.abi.json\u3002 3. \u90e8\u7f72\u53ca\u8c03\u7528\u5408\u7ea6 3.1. \u751f\u6210\u5408\u7ea6\u90e8\u7f72\u8d26\u6237 cd ${CONTRACTSSPACE}/build ../script/create_accout.sh --ip 127.0.0.1 --rpc_port 6791 \u8be5\u547d\u4ee4\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8d26\u6237\uff0c\u521b\u5efa\u65f6\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u8d26\u6237\u5bc6\u7801\uff0c\u65b9\u4fbf\u540e\u7eed\u89e3\u9501\u3002 \u9664\u4e86\u65b0\u751f\u6210\u4e00\u4e2a\u8d26\u6237\uff0c\u8be5\u547d\u4ee4\u8fd8\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a config.json \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5728\u8c03\u7528\u5408\u7ea6\u65f6\u4f1a\u7528\u5230\u3002\u8be5\u6587\u4ef6\u8bb0\u5f55\u8282\u70b9\u7684ip\u7aef\u53e3\u4ee5\u53ca\u53d1\u9001\u4ea4\u6613\u7684\u8d26\u53f7\u3002 \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a nodeid: 127.0.0.1 rpc_port: 6791 ########################################### #### Create an account #### ########################################### Input account passphrase. passphrase: your_phrase --output{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\"} --output New account: 0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c {\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":true} 127.0.0.1:6791 Create config.json for contract-deploy { \"url\":\"http://127.0.0.1:6791\"\uff0c \"gas\":\"0x0\"\uff0c \"gasPrice\":\"0x0\"\uff0c \"from\":\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\" } \u914d\u7f6e\u6587\u4ef6\u5b57\u6bb5\u7b80\u8ff0\uff1a url PlatONE\u8282\u70b9\u5f00\u653e\u7684JSON-RPC\u5730\u5740\u4fe1\u606f\uff1b from \u53d1\u5e03\u5408\u7ea6\u8005\u7684\u8d26\u6237\u5730\u5740\u3002 \u957f\u65f6\u95f4\u6ca1\u7528\u4f7f\u7528\u8d26\u6237\u53d1\u9001\u8fc7\u4ea4\u6613\uff0c\u6216\u8005\u8282\u70b9\u91cd\u542f\u540e\uff0c\u8d26\u6237\u4f1a\u88ab\u9501\u5b9a\uff0c\u4e0d\u80fd\u53d1\u9001\u4ea4\u6613\u3002\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff0c\u91cd\u65b0\u4e3a\u8d26\u6237\u89e3\u9501\u3002 ../script/unlock_account.sh \\ --account 0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c \\ --phrase \"your_phrase\" \\ --ip 127.0.0.1 \\ --rpc_port 6791 3.2. \u90e8\u7f72\u5408\u7ea6 cd ${CONTRACTSSPACE}/build # ctool\u662f\u7528\u6765\u90e8\u7f72\u5408\u7ea6\u53ca\u53d1\u9001\u4ea4\u6613\u7684\u5de5\u5177\u3002 cp ${BIN_PATH}/ctool . # \u90e8\u7f72\u5408\u7ea6 ./ctool deploy --abi appContract/my_contract/my_contract.cpp.abi.json --code appContract/my_contract/my_contract.wasm --config ./config.json \u7ed3\u679c: trasaction hash: 0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99 contract address: 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 ctool\u5de5\u5177\u4f7f\u7528\u65b9\u5f0f\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u79cd\uff1a # \u5408\u7ea6\u90e8\u7f72 ./ctool \\ deploy \\ --abi contract.cpp.abi.json \\ --code contract.wasm \\ --config ./config.json # \u5408\u7ea6\u8c03\u7528 ./ctool \\ invoke \\ --abi contract.cpp.abi.json \\ --addr \"\u5408\u7ea6\u5730\u5740\uff1a 0x1234\" \\ --config ./config.json \\ --func \"\u65b9\u6cd5\u540d\u5b57\" \\ --param \"\u7b2c1\u4e2a\u53c2\u6570\" \\ --param \"\u7b2c2\u4e2a\u53c2\u6570\" \u63d0\u793a1\uff1a \u5982\u679c\u547d\u4ee4\u884c\u4e2d\u672a\u660e\u786e\u6307\u660e\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u5219\u4f1a\u5728\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u8bfb\u53d6\u6587\u4ef6\uff1aconfig.json\u3002 \u63d0\u793a2\uff1a \u53d1\u5e03\u5408\u7ea6\u5230PlatONE\u7f51\u7edc\uff0c\u9700\u8981\u8fde\u63a5\u5230\u8282\u70b9\uff0c\u5e76\u4fdd\u8bc1\u53d1\u5e03\u5408\u7ea6\u7684\u8d26\u6237\u5df2\u8fdb\u884c\u4e86\u89e3\u9501\u64cd\u4f5c\uff0c\u4e14\u6ca1\u6709\u8d85\u65f6\u3002\u6267\u884cgit-bash.exe\u6253\u5f00git-bash\u7a97\u53e3\u3002 \u63d0\u793a3\uff1a \u5982\u679c\u547d\u4ee4\u4e0d\u80fd\u6267\u884c\uff0c\u8bf7\u786e\u4fdd\u811a\u672c\u5177\u6709\u6267\u884c\u6743\u9650\uff0c\u53ef\u4f7f\u7528\u547d\u4ee4\uff1achmod +x ctool \u8fdb\u884c\u6388\u6743\u3002 3.3. \u8c03\u7528\u5408\u7ea6 \u8c03\u7528\u5408\u7ea6\u7684 setName\u65b9\u6cd5 #\u5730\u5740\u9700\u8981\u6539\u6210\u4e0a\u8282\u751f\u6210\u7684\u5730\u5740 ./ctool invoke --addr 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 --abi appContract/my_contract/my_contract.cpp.abi.json --config ./config.json --func \"setName\" --param \"wxbc\" request json data\uff1a[{\"from\":\"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c\"to\":\"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c\"gas\":\"0x0\"\uff0c\"gasPrice\":\"0x0\"\uff0c\"value\":\"\"\uff0c\"data\":\"0xdb8800000000000000028c696e766f6b654e6f746966798477786263\"\uff0c\"txType\":2}] response json\uff1a{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0xeb3680c65b393952a07ec590cef7b19fc87877a9fbb70c8e16797a97ed4cfaeb\"} \u8c03\u7528\u5408\u7ea6\u7684 getName \u65b9\u6cd5\uff1a #\u5730\u5740\u9700\u8981\u6539\u6210\u4e0a\u8282\u751f\u6210\u7684\u5730\u5740 ./ctool invoke --addr 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 --abi appContract/my_contract/my_contract.cpp.abi.json --config ./config.json --func getName request json data\uff1a[{\"from\":\"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c\"to\":\"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c\"gas\":\"0x0\"\uff0c\"gasPrice\":\"0x0\"\uff0c\"value\":\"\"\uff0c\"data\":\"0xd1880000000000000002876765744e616d65\"\uff0c\"txType\":2}\uff0c\"latest\"] response json\uff1a{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000047778626300000000000000000000000000000000000000000000000000000000\"} result: wxbc 4. \u901a\u8fc7console\u4e0e\u8282\u70b9\u4ea4\u4e92 4.1. \u8282\u70b9\u4ea4\u4e92 cd ${BIN_PATH} ./platone attach http://127.0.0.1:6791 Welcome to the PlatONE JavaScript console! instance: PlatONEnetwork/platone/v0.2.0-stable-1b13ff73/linux-amd64/go1.12.4 coinbase: 0x938c231429f5ab34244618fe0dc7380e319b470e at block: 1557 (Tue\uff0c18 Jun 2019 16:29:12 CST) datadir: /home/gexin/PlatONE-Workspace/chain/PlatONE_linux/data/node-1 modules: admin:1.0 eth:1.0 net:1.0 personal:1.0 rpc:1.0 web3:1.0 > \u901a\u8fc7\u4e0a\u9762\u547d\u4ee4\u53ef\u4ee5\u4e0e\u8282\u70b9\u4ea4\u4e92\uff0c\u7528\u4e8e\u67e5\u8be2\u76f8\u5173\u4fe1\u606f 4.2. \u67e5\u8be2\u4ea4\u6613receipt #\u4ea4\u6613\u54c8\u5e0c\u503c\u6539\u6210\u4e0a\u8282\u751f\u6210\u7684 > eth.getTransactionReceipt(\"0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99\") \u7ed3\u679c\u5982\u4e0b\uff1a { blockHash: \"0x3f1e326f4b122efb26e9da417daff97dbb403c714d3324e8020ddce04b88617a\"\uff0c blockNumber: 236\uff0c contractAddress: \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c cumulativeGasUsed: 1996535\uff0c from: \"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c gasUsed: 1996535\uff0c logs: []\uff0c logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\uff0c status: \"0x1\"\uff0c to: null\uff0c transactionHash: \"0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99\"\uff0c transactionIndex: 0 }","title":"\u7f16\u8bd1\u53ca\u90e8\u7f72"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#1-wasm","text":"\u83b7\u53d6\u6700\u65b0\u7a33\u5b9a\u7248\u7684WASM\u5408\u7ea6\u53d1\u5e03\u5305\uff0c\u5e76\u8fdb\u884c\u89e3\u538b\u3002 wget https://github.com/PlatONEnterprise/PlatONE-Go/releases/download/v0.9.0/BCWasm_linux_release.v0.9.0.tar.gz # \u8fdb\u5165BCWasm\u76ee\u5f55\uff0c\u7136\u540e\u5b9a\u4e49\u8def\u5f84\uff1a cd BCWasm export CONTRACTSSPACE=${PWD} \u5728 ${CONTRACTSSPACE} \u76ee\u5f55\u4e0b\u5305\u542b\u4e86\u5408\u7ea6\u7f16\u8bd1\u6240\u9700\u7684\u6750\u6599\uff0c\u5408\u7ea6\u6e90\u7801\u76ee\u5f55\u4e3a ${CONTRACTSSPACE}/appContract \u83b7\u53d6PlatONE\u6700\u65b0\u7a33\u5b9a\u7248\u7684\u53d1\u5e03\u5305\uff0c\u5e76\u8fdb\u884c\u89e3\u538b\u3002\u8fdb\u5165\u89e3\u538b\u83b7\u5f97\u7684PlatONE_linux\u76ee\u5f55\uff0c\u7136\u540e\u5b9a\u4e49\u8def\u5f84\uff1a wget https://github.com/PlatONEnterprise/PlatONE-Go/releases/download/v0.9.0/PlatONE_linux_v0.9.0.tar.gz tar -xzvf PlatONE_linux_v0.9.0.tar.gz cd PlatONE_linux export BIN_PATH=${PWD}/bin \u26a0 \u8bf7\u786e\u4fdd ${BIN_PATH}\u8bbe\u7f6e\u5728\u5f53\u524d\u7684\u5de5\u4f5cShell\uff0c\u4ee5\u8ba9\u8be5\u73af\u5883\u53d8\u91cf\u751f\u6548\u3002","title":"1. \u914d\u7f6eWasm\u5408\u7ea6\u5f00\u53d1\u73af\u5883"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#2","text":"cd ${CONTRACTSSPACE} # 1. \u6784\u5efa\u7528\u6237\u5408\u7ea6 ./script/autoprojectForApp.sh . my_contract # 2. \u6784\u5efa\u5de5\u7a0b ./script/autoprojectForApp.sh . # 3. \u7f16\u8bd1\u5408\u7ea6 cd build make my_contract","title":"2. \u6784\u5efa\u9879\u76ee\u53ca\u7f16\u8bd1\u5408\u7ea6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#21","text":"\u7b2c\u4e00\u6b65\u65f6\uff0c\u4f1a\u5728 ${CONTRACTSSPACE}/appContract \u4e0b\u6784\u5efa\u65b0\u7684\u5408\u7ea6\u76ee\u5f55 my_contract \u3002 \u7b2c\u4e8c\u6b65\u65f6\uff0c\u4f1a\u5728 ${CONTRACTSSPACE} \u4e0b\u521b\u5efa build \uff0c\u5e76\u7f16\u8bd1\u5408\u7ea6\u3002 \u6b64\u65f6\uff0c build \u76ee\u5f55\u4e0b\u7684\u7ed3\u6784\u5982\u4e0b\u6240\u793a \u251c\u2500\u2500 appContract \u2502 \u251c\u2500\u2500 appDemo \u2502 \u2502 \u251c\u2500\u2500 appDemo.bc \u2502 \u2502 \u251c\u2500\u2500 appDemo.cpp.abi.json ## \u5408\u7ea6\u7684abi\u6587\u4ef6 \u2502 \u2502 \u251c\u2500\u2500 appDemo.cpp.bc \u2502 \u2502 \u251c\u2500\u2500 appDemo.s \u2502 \u2502 \u251c\u2500\u2500 appDemo.wasm ## \u5408\u7ea6\u7684wasm\u5b57\u8282\u7801 \u2502 \u2502 \u251c\u2500\u2500 appDemo.wast \u2502 \u2502 \u251c\u2500\u2500 CMakeFiles \u2502 \u2502 \u251c\u2500\u2500 cmake_install.cmake \u2502 \u2502 \u2514\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 CMakeFiles \u2502 \u251c\u2500\u2500 cmake_install.cmake \u2502 \u251c\u2500\u2500 Makefile \u2502 \u2514\u2500\u2500 my_contract \u2502 \u251c\u2500\u2500 CMakeFiles \u2502 \u251c\u2500\u2500 cmake_install.cmake \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 my_contract.cpp.abi.json ## \u5408\u7ea6\u7684abi\u6587\u4ef6 \u2502 \u251c\u2500\u2500 my_contract.bc \u2502 \u251c\u2500\u2500 my_contract.cpp.bc \u2502 \u251c\u2500\u2500 my_contract.s \u2502 \u251c\u2500\u2500 my_contract.wasm \u2502 \u2514\u2500\u2500 my_contract.wast \u251c\u2500\u2500 CMakeCache.txt \u251c\u2500\u2500 CMakeFiles \u251c\u2500\u2500 cmake_install.cmake \u2514\u2500\u2500 Makefile \u5408\u7ea6\u6587\u4ef6\u4f1a\u901a\u8fc7\u811a\u672c autoprojectForApp.sh \u9ed8\u8ba4\u751f\u6210\u5982\u4e0b\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u7f16\u5199\u81ea\u5df1\u7684\u5408\u7ea6\u3002 //auto create contract #include <stdlib.h> #include <string.h> #include <string> #include <bcwasm/bcwasm.hpp> namespace demo { class my_contract : public bcwasm::Contract { public: my_contract(){} /// \u5b9e\u73b0\u7236\u7c7b: bcwasm::Contract \u7684\u865a\u51fd\u6570 /// \u8be5\u51fd\u6570\u5728\u5408\u7ea6\u9996\u6b21\u53d1\u5e03\u65f6\u6267\u884c\uff0c\u4ec5\u8c03\u7528\u4e00\u6b21 void init() { bcwasm::println(\"init success...\"); } /// \u5b9a\u4e49Event. /// BCWASM_EVENT(eventName\uff0carguments...) BCWASM_EVENT(setName\uff0cconst char *) public: void setName(const char *msg) { // \u5b9a\u4e49\u72b6\u6001\u53d8\u91cf bcwasm::setState(\"NAME_KEY\"\uff0cstd::string(msg)); // \u65e5\u5fd7\u8f93\u51fa // \u4e8b\u4ef6\u8fd4\u56de BCWASM_EMIT_EVENT(setName\uff0c\"std::string(msg)\"); } const char* getName() const { std::string value; bcwasm::getState(\"NAME_KEY\"\uff0cvalue); // \u8bfb\u53d6\u5408\u7ea6\u6570\u636e\u5e76\u8fd4\u56de return value.c_str(); } }; } // \u6b64\u5904\u5b9a\u4e49\u7684\u51fd\u6570\u4f1a\u751f\u6210ABI\u6587\u4ef6\u4f9b\u5916\u90e8\u8c03\u7528 BCWASM_ABI(demo::my_contract\uff0csetName) BCWASM_ABI(demo::my_contract\uff0cgetName)","title":"2.1. \u6784\u5efa\u9879\u76ee"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#22","text":"\u8fdb\u5165 build \u76ee\u5f55\u5e76\u7f16\u8bd1\u8be5\u5408\u7ea6 cd ${CONTRACTSSPACE}/build make my_contract \u751f\u6210\u6587\u4ef6\u5982\u4e0b \u251cbuild/ \u251c-appContact/ \u2502 \u2514\u2500\u2500 my_contract \u2502 \u251c\u2500\u2500 CMakeFiles \u2502 \u251c\u2500\u2500 cmake_install.cmake \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 my_contract.cpp.abi.json ## \u5408\u7ea6\u7684abi\u6587\u4ef6 \u2502 \u251c\u2500\u2500 my_contract.bc \u2502 \u251c\u2500\u2500 my_contract.cpp.bc \u2502 \u251c\u2500\u2500 my_contract.s \u2502 \u251c\u2500\u2500 my_contract.wasm \u2502 \u2514\u2500\u2500 my_contract.wast \u4e3b\u8981\u6587\u4ef6\u7b80\u4ecb\uff1a .bc \u8fde\u63a5\u6807\u51c6\u5e93\u540e\u7684LLVM\u5b57\u8282\u7801\u6587\u4ef6\uff0c\u542b\u6240\u6709\u4f9d\u8d56\u5e93\uff1b .json \u5408\u7ea6\u5bf9\u5e94\u7684\u63a5\u53e3\u63cf\u8ff0\u6587\u4ef6\uff1b .s \u6c47\u7f16\u6587\u4ef6\uff1b .wasm \u5408\u7ea6\u7f16\u8bd1\u540e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b57\u8282\u7801\u6307\u4ee4\u96c6\uff1b .wast \u5408\u7ea6\u7f16\u8bd1\u540e\u7684\u53ef\u88ab\u8ba4\u4e3a\u8bfb\u61c2\u7684\u6307\u4ee4\u6587\u4ef6\uff1b .cpp.bc \uff1bLLVM \u5b57\u8282\u7801\u6587\u4ef6\uff0c\u4ec5\u5305\u542b\u5408\u7ea6\u4ee3\u7801\u672c\u8eab\u7684\uff1b \u5176\u4e2d\uff0c\u53d1\u5e03\u5408\u7ea6\u65f6\u9700\u8981\u7528\u5230\u7684\u6587\u4ef6\u4e3amy_contract.wast\u548cmy_contract.cpp.abi.json\u3002","title":"2.2. \u7f16\u8bd1\u5408\u7ea6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#3","text":"","title":"3. \u90e8\u7f72\u53ca\u8c03\u7528\u5408\u7ea6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#31","text":"cd ${CONTRACTSSPACE}/build ../script/create_accout.sh --ip 127.0.0.1 --rpc_port 6791 \u8be5\u547d\u4ee4\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8d26\u6237\uff0c\u521b\u5efa\u65f6\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u8d26\u6237\u5bc6\u7801\uff0c\u65b9\u4fbf\u540e\u7eed\u89e3\u9501\u3002 \u9664\u4e86\u65b0\u751f\u6210\u4e00\u4e2a\u8d26\u6237\uff0c\u8be5\u547d\u4ee4\u8fd8\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a config.json \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5728\u8c03\u7528\u5408\u7ea6\u65f6\u4f1a\u7528\u5230\u3002\u8be5\u6587\u4ef6\u8bb0\u5f55\u8282\u70b9\u7684ip\u7aef\u53e3\u4ee5\u53ca\u53d1\u9001\u4ea4\u6613\u7684\u8d26\u53f7\u3002 \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a nodeid: 127.0.0.1 rpc_port: 6791 ########################################### #### Create an account #### ########################################### Input account passphrase. passphrase: your_phrase --output{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\"} --output New account: 0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c {\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":true} 127.0.0.1:6791 Create config.json for contract-deploy { \"url\":\"http://127.0.0.1:6791\"\uff0c \"gas\":\"0x0\"\uff0c \"gasPrice\":\"0x0\"\uff0c \"from\":\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\" } \u914d\u7f6e\u6587\u4ef6\u5b57\u6bb5\u7b80\u8ff0\uff1a url PlatONE\u8282\u70b9\u5f00\u653e\u7684JSON-RPC\u5730\u5740\u4fe1\u606f\uff1b from \u53d1\u5e03\u5408\u7ea6\u8005\u7684\u8d26\u6237\u5730\u5740\u3002 \u957f\u65f6\u95f4\u6ca1\u7528\u4f7f\u7528\u8d26\u6237\u53d1\u9001\u8fc7\u4ea4\u6613\uff0c\u6216\u8005\u8282\u70b9\u91cd\u542f\u540e\uff0c\u8d26\u6237\u4f1a\u88ab\u9501\u5b9a\uff0c\u4e0d\u80fd\u53d1\u9001\u4ea4\u6613\u3002\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff0c\u91cd\u65b0\u4e3a\u8d26\u6237\u89e3\u9501\u3002 ../script/unlock_account.sh \\ --account 0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c \\ --phrase \"your_phrase\" \\ --ip 127.0.0.1 \\ --rpc_port 6791","title":"3.1. \u751f\u6210\u5408\u7ea6\u90e8\u7f72\u8d26\u6237"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#32","text":"cd ${CONTRACTSSPACE}/build # ctool\u662f\u7528\u6765\u90e8\u7f72\u5408\u7ea6\u53ca\u53d1\u9001\u4ea4\u6613\u7684\u5de5\u5177\u3002 cp ${BIN_PATH}/ctool . # \u90e8\u7f72\u5408\u7ea6 ./ctool deploy --abi appContract/my_contract/my_contract.cpp.abi.json --code appContract/my_contract/my_contract.wasm --config ./config.json \u7ed3\u679c: trasaction hash: 0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99 contract address: 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 ctool\u5de5\u5177\u4f7f\u7528\u65b9\u5f0f\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u79cd\uff1a # \u5408\u7ea6\u90e8\u7f72 ./ctool \\ deploy \\ --abi contract.cpp.abi.json \\ --code contract.wasm \\ --config ./config.json # \u5408\u7ea6\u8c03\u7528 ./ctool \\ invoke \\ --abi contract.cpp.abi.json \\ --addr \"\u5408\u7ea6\u5730\u5740\uff1a 0x1234\" \\ --config ./config.json \\ --func \"\u65b9\u6cd5\u540d\u5b57\" \\ --param \"\u7b2c1\u4e2a\u53c2\u6570\" \\ --param \"\u7b2c2\u4e2a\u53c2\u6570\" \u63d0\u793a1\uff1a \u5982\u679c\u547d\u4ee4\u884c\u4e2d\u672a\u660e\u786e\u6307\u660e\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u5219\u4f1a\u5728\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u8bfb\u53d6\u6587\u4ef6\uff1aconfig.json\u3002 \u63d0\u793a2\uff1a \u53d1\u5e03\u5408\u7ea6\u5230PlatONE\u7f51\u7edc\uff0c\u9700\u8981\u8fde\u63a5\u5230\u8282\u70b9\uff0c\u5e76\u4fdd\u8bc1\u53d1\u5e03\u5408\u7ea6\u7684\u8d26\u6237\u5df2\u8fdb\u884c\u4e86\u89e3\u9501\u64cd\u4f5c\uff0c\u4e14\u6ca1\u6709\u8d85\u65f6\u3002\u6267\u884cgit-bash.exe\u6253\u5f00git-bash\u7a97\u53e3\u3002 \u63d0\u793a3\uff1a \u5982\u679c\u547d\u4ee4\u4e0d\u80fd\u6267\u884c\uff0c\u8bf7\u786e\u4fdd\u811a\u672c\u5177\u6709\u6267\u884c\u6743\u9650\uff0c\u53ef\u4f7f\u7528\u547d\u4ee4\uff1achmod +x ctool \u8fdb\u884c\u6388\u6743\u3002","title":"3.2. \u90e8\u7f72\u5408\u7ea6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#33","text":"\u8c03\u7528\u5408\u7ea6\u7684 setName\u65b9\u6cd5 #\u5730\u5740\u9700\u8981\u6539\u6210\u4e0a\u8282\u751f\u6210\u7684\u5730\u5740 ./ctool invoke --addr 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 --abi appContract/my_contract/my_contract.cpp.abi.json --config ./config.json --func \"setName\" --param \"wxbc\" request json data\uff1a[{\"from\":\"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c\"to\":\"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c\"gas\":\"0x0\"\uff0c\"gasPrice\":\"0x0\"\uff0c\"value\":\"\"\uff0c\"data\":\"0xdb8800000000000000028c696e766f6b654e6f746966798477786263\"\uff0c\"txType\":2}] response json\uff1a{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0xeb3680c65b393952a07ec590cef7b19fc87877a9fbb70c8e16797a97ed4cfaeb\"} \u8c03\u7528\u5408\u7ea6\u7684 getName \u65b9\u6cd5\uff1a #\u5730\u5740\u9700\u8981\u6539\u6210\u4e0a\u8282\u751f\u6210\u7684\u5730\u5740 ./ctool invoke --addr 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 --abi appContract/my_contract/my_contract.cpp.abi.json --config ./config.json --func getName request json data\uff1a[{\"from\":\"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c\"to\":\"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c\"gas\":\"0x0\"\uff0c\"gasPrice\":\"0x0\"\uff0c\"value\":\"\"\uff0c\"data\":\"0xd1880000000000000002876765744e616d65\"\uff0c\"txType\":2}\uff0c\"latest\"] response json\uff1a{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000047778626300000000000000000000000000000000000000000000000000000000\"} result: wxbc","title":"3.3. \u8c03\u7528\u5408\u7ea6"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#4-console","text":"","title":"4. \u901a\u8fc7console\u4e0e\u8282\u70b9\u4ea4\u4e92"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#41","text":"cd ${BIN_PATH} ./platone attach http://127.0.0.1:6791 Welcome to the PlatONE JavaScript console! instance: PlatONEnetwork/platone/v0.2.0-stable-1b13ff73/linux-amd64/go1.12.4 coinbase: 0x938c231429f5ab34244618fe0dc7380e319b470e at block: 1557 (Tue\uff0c18 Jun 2019 16:29:12 CST) datadir: /home/gexin/PlatONE-Workspace/chain/PlatONE_linux/data/node-1 modules: admin:1.0 eth:1.0 net:1.0 personal:1.0 rpc:1.0 web3:1.0 > \u901a\u8fc7\u4e0a\u9762\u547d\u4ee4\u53ef\u4ee5\u4e0e\u8282\u70b9\u4ea4\u4e92\uff0c\u7528\u4e8e\u67e5\u8be2\u76f8\u5173\u4fe1\u606f","title":"4.1. \u8282\u70b9\u4ea4\u4e92"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91/%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91-%E7%BC%96%E8%AF%91%E5%8F%8A%E9%83%A8%E7%BD%B2/#42-receipt","text":"#\u4ea4\u6613\u54c8\u5e0c\u503c\u6539\u6210\u4e0a\u8282\u751f\u6210\u7684 > eth.getTransactionReceipt(\"0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99\") \u7ed3\u679c\u5982\u4e0b\uff1a { blockHash: \"0x3f1e326f4b122efb26e9da417daff97dbb403c714d3324e8020ddce04b88617a\"\uff0c blockNumber: 236\uff0c contractAddress: \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c cumulativeGasUsed: 1996535\uff0c from: \"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c gasUsed: 1996535\uff0c logs: []\uff0c logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\uff0c status: \"0x1\"\uff0c to: null\uff0c transactionHash: \"0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99\"\uff0c transactionIndex: 0 }","title":"4.2. \u67e5\u8be2\u4ea4\u6613receipt"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/","text":"1. Geth\u547d\u4ee4\u884c\u7528\u6cd5 2. \u547d\u4ee4 3. \u4ea4\u6613\u6c60\u9009\u9879 4. ethereum\u9009\u9879 5. \u5f00\u53d1\u8005\u9009\u9879 6. \u6027\u80fd\u8c03\u4f18\u9009\u9879 7. \u8d26\u6237\u9009\u9879 8. \u7f51\u7edc\u9009\u9879 9. \u65f7\u5de5\u9009\u9879 10. GAS\u4ef7\u683c\u9009\u9879 11. \u865a\u62df\u673a\u9009\u9879 12. \u65e5\u5fd7\u8c03\u8bd5\u9009\u9879 13. whisper\u5b9e\u9a8c\u9009\u9879 14. ethash\u9009\u9879 15. API\u548c\u63a7\u5236\u53f0\u9009\u9879 16. \u8865\u5145\u9009\u9879 1. Geth\u547d\u4ee4\u884c\u7528\u6cd5 \u57fa\u4e8e: go-ethereum@1.8-stable geth [\u9009\u9879] \u547d\u4ee4 [\u547d\u4ee4\u9009\u9879] [\u53c2\u6570\u2026] 2. \u547d\u4ee4 account \u7ba1\u7406\u8d26\u6237 list \u663e\u793a\u8d26\u6237 new \u521b\u5efa\u8d26\u6237 update \u8ddf\u65b0\u8d26\u6237 import \u5bfc\u5165\u8d26\u6237 \u4f8b\u5b50: geth account new attach : \u901a\u8fc7rpc/ipc \u8fde\u63a5\u4ee5\u592a\u574a\u8282\u70b9 \u4f8b\u5b50: geth attach http:127.0.0.1:9999 bug : \u6d4f\u89c8\u5668\u6253\u5f00github\u7528\u4e8e\u63d0\u4ea4bug issues \u4f8b\u5b50: geth bug console \u542f\u52a8\u4ea4\u4e92\u5f0fJavaScript\u73af\u5883 \u4f8b\u5b50: geth console copydb \u4ece\u6587\u4ef6\u5939chaindata\u521b\u5efa\u672c\u5730\u94fe \u4f8b\u5b50: geth --datadir ./peer2 copydb peer1/geth/chaindata/ dump \u6307\u5b9ahash \u6216\u8005 \u533a\u5757\u9ad8\u5ea6 \u83b7\u53d6\u6b64\u65f6\u7684 \u6240\u6709\u8d26\u6237 \u548c\u8d26\u6237\u5bf9\u5e94\u7684\u5b57\u6bb5\u4fe1\u606f \u4f8b\u5b50: geth dump 0 go \"f76f69cee4faa0a63b30ae1e7881f4f715657010\": { \"balance\": \"200000000000000000000\", \"nonce\": 0, \"root\": \"56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\", \"codeHash\": \"c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\", \"code\": \"\", \"storage\": {} }, ... dumpconfig \u663e\u793a\u914d\u7f6e\u4fe1\u606f \u663e\u793a eth, Eth.Ethash, Eth.TxPool, Eth.GPO, Shh, Node, Node.P2P, Node.HTTPTimeouts, Dashboard \u7b49\u914d\u7f6e\u4fe1\u606f \u4f8b\u5b50: geth dumpconfig export \u5bfc\u51fa\u533a\u5757\u94fe\u5230\u6587\u4ef6 [ ] \u4f8b\u5b50: geth --datadir ./peer1 export exportfile 0 100 import \u5bfc\u5165\u4e00\u4e2a\u533a\u5757\u94fe\u6587\u4ef6 ( ... ) \u4f8b\u5b50: geth --datadir ./peer2 import exportfile init \u542f\u52a8\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u7684\u521b\u4e16\u7eaa\u5757 \u6307\u5b9a\u521b\u4e16\u533a\u5757\u6587\u4ef6\u6765\u8fdb\u884c\u521d\u59cb\u5316\u521b\u4e16\u533a\u5757 \u4f8b\u5b50: geth init genesis.json js \u6267\u884c\u6307\u5b9a\u7684JavaScript\u6587\u4ef6(\u591a\u4e2a) [jsfile...] \u4f8b\u5b50: geth js xx.js license \u76f4\u63a5\u8f93\u5165, \u67e5\u770b\u8bb8\u53ef\u4fe1\u606f \u4f8b\u5b50: geth license makecache \u751f\u6210ethash\u9a8c\u8bc1\u7f13\u5b58(\u7528\u4e8e\u6d4b\u8bd5) \u4f8b\u5b50: geth makecache 20 xxdir makedag \u751f\u6210ethash \u6316\u77ffDAG(\u7528\u4e8e\u6d4b\u8bd5) monitor \u76d1\u63a7\u548c\u53ef\u89c6\u5316\u8282\u70b9\u6307\u6807 \u9700\u6307\u5b9aAvailable \u7684\u6307\u6807, \u5373\u53ef \u53ef\u89c6\u5316\u7684\u76d1\u63a7 \u4f8b\u5b50: ./geth monitor txpool/underpriced/Overall removedb \u5220\u9664\u533a\u5757\u94fe\u548c\u72b6\u6001\u6570\u636e\u5e93 \u4f8b\u5b50: geth --datadir peer2/ removedb version \u6253\u5370\u7248\u672c\u53f7 \u4f8b\u5b50: geth version wallet \u7ba1\u7406\u94b1\u5305\u5bfc\u5165 \u4f8b\u5b50: geth wallet import /path/to/my/presale.wallet help,h \u663e\u793a\u4e00\u4e2a\u547d\u4ee4\u6216\u5e2e\u52a9\u4e00\u4e2a\u547d\u4ee4\u5217\u8868 3. \u4ea4\u6613\u6c60\u9009\u9879 --txpool.nolocals locals\u4e2d\u7684\u8d26\u6237\u7684\u4ea4\u6613, \u4f1a\u5728\u9a8c\u8bc1\u4ea4\u6613\u65f6, \u8fdb\u884c\u6761\u4ef6\u8c41\u514d, \u6bd4\u5982 locals\u4e2d\u7684\u4f4e\u4ef7\u4ea4\u6613\u662f\u4e0d\u4f1a\u88ab\u5254\u9664\u7684. \u6307\u5b9anolocals \u5219\u4e0d\u4f1a\u5bf9\u672c\u5730\u4ea4\u6613\u7279\u6b8a\u5bf9\u5f85 --txpool.locals \u9017\u53f7\u5206\u9694\u6307\u5b9a\u8d26\u6237, \u5c06\u4f1a\u88ab\u6dfb\u52a0\u5230txpool\u7684locals\u5b57\u6bb5\u4e2d. --txpool.journal \u672c\u5730 pending\u548cqueue\u4e2d\u7684\u4ea4\u6613\u8bb0\u5f55\u5728\u78c1\u76d8, \u65b9\u4fbf\u672c\u5730\u8282\u70b9\u91cd\u542f \u9ed8\u8ba4: \"transactions.rlp\" -- txpool.rejournal \u6307\u5b9a\u65f6\u95f4\u95f4\u9694, \u91cd\u65b0\u751f\u6210\u4ea4\u6613\u65e5\u5fd7. \u6700\u5c0f\u4e3a1\u79d2, \u5982\u679c\u77ed\u4e8e1\u79d2, \u4f1a\u88ab\u66ff\u6362\u62101\u79d2 \u9ed8\u8ba41hour --txpool.pricelimit \u52a0\u5165\u4ea4\u6613\u6c60\u7684\u6700\u5c0f\u7684gas\u4ef7\u683c\u9650\u5236, \u9ed8\u8ba4\u4e3a1, \u5f53\u8bbe\u7f6e\u5c0f\u4e8e1, \u5219\u4f1a\u66ff\u6362\u62101 txpool\u5bf9\u8c61\u7684 gasPrice\u5b57\u6bb5 --txpool.pricebump \u6bcf\u4e00\u4e2a\u8d26\u53f7 \u90fd\u4f1a\u88ab\u521b\u5efa\u4e00\u4e2a txList, \u6839\u636e\u4ea4\u6613\u7684nonce \u53ef\u4ee5\u4ecetxlist\u4e2d\u53d6\u51fa\u5bf9\u5e94\u7684\u4ea4\u6613, \u5982\u679c\u4e00\u4e2a\u65b0\u7684\u4ea4\u6613, \u8981\u66ff\u6362\u8001\u7684\u4ea4\u6613 (\u4ed6\u4eec\u7684nonce \u76f8\u540c), \u90a3\u4e48\u4ef7\u683c\u9700\u4e0a\u6d6e, \u4e0d\u7136\u4e0d\u4f1a\u88ab\u52a0\u5165\u5230 txlist\u4e2d, \u6b64\u9009\u9879\u5c31\u662f\u6307\u5b9a\u4e0a\u6d6e\u767e\u5206\u6bd4 \u9ed8\u8ba4\u4e0a\u6d6e10% --txpool.accountslots \u6bcf\u4e2a\u5e10\u6237\u4fdd\u8bc1 \u53ef\u6267\u884c \u7684\u6700\u5c11\u4ea4\u6613\u69fd\u6570\u91cf (\u9ed8\u8ba4: 16) \u8bbe\u7f6e\u5c0f\u4e8e1\u65f6, \u66ff\u6362\u621016 \u4f1a\u8fdb\u884c\u7ba1\u7406\u4e00\u4e0b\u6bcf\u4e2a\u672c\u5730\u8d26\u6237\u7684 \u4ea4\u6613\u72b6\u6001, \u5982\u679c\u4f20\u5165nil, \u90a3\u4e48\u5c31\u4f1a\u628a queue\u4e2d\u7684 \u62ff\u8fc7\u6765 \u5728\u68c0\u67e5\u4f4enonce(\u592a\u4e45\u7684\u4ea4\u6613, \u6bd4\u73b0\u5728\u7684\u8fd8\u4f4e), \u548c \u4f4e\u4f59\u989d\u8d85\u8fc7gas\u7684\u4ea4\u6613\u7b49\u7b49\u4e4b\u540e, \u904d\u5386pending\u8fdb\u884c\u5747\u8861\u914d\u989d \u5982\u679cpenging\u603b\u6570\u5927\u4e8e\u4e86\u5168\u5c40\u7684GlobalSlots\u7684\u8bdd, \u90a3\u4e48\u5c31\u4f1a\u68c0\u67e5 \u6bcf\u4e00\u4e2a\u8d26\u6237\u7684\u4ea4\u6613, \u901a\u8fc7\u7b56\u7565\u6bd4\u5bf9 \u8d26\u6237\u7684 accountslots, \u51cf\u5c11\u5355\u4e2a\u8d26\u6237\u4ea4\u6613, \u4ece\u800c\u51cf\u5c11GlobalSlots\u603b\u4ea4\u6613\u6570 --txpool.globalslots \u6240\u6709\u5e10\u6237 \u53ef\u6267\u884c \u7684\u6700\u5927\u4ea4\u6613\u69fd\u6570\u91cf, \u9ed8\u8ba4: 4096 --txpool.accountqueue \u6bcf\u4e2a\u5e10\u6237\u5141\u8bb8\u7684\u6700\u591a \u975e\u53ef\u6267\u884c \u4ea4\u6613\u69fd\u6570\u91cf (\u9ed8\u8ba4: 64) \u904d\u5386\u6bcf\u4e00\u4e2a\u8d26\u6237\u7684\u65f6\u5019, \u4f1a\u628a\u8d26\u6237\u5bf9\u5e94\u7684txList\u8d85\u8fc7\u4e86 accountqueue \u4e2a\u6570\u7684\u4ea4\u6613, \u8fdb\u884c\u5220\u9664\u6389 (\u6839\u636enonce\u5012\u53d9\u7684) --txpool.globalqueue \u6240\u6709\u5e10\u6237 \u975e\u53ef\u6267\u884c \u4ea4\u6613\u6700\u5927\u69fd\u6570\u91cf (\u9ed8\u8ba4: 1024) \u5982\u679cqueue\u4e2d\u7684\u8d26\u53f7\u7684\u603b\u975e\u53ef\u6267\u884c\u7684\u4ea4\u6613\u6570 \u5927\u4e8e\u6307\u5b9a\u9608\u503c, \u90a3\u4e48 \u628a\u4e0d\u662f\u672c\u5730\u53d1\u8d77\u4ea4\u6613\u7684\u8d26\u53f7\u653e\u5165\u6570\u7ec4, (\u8fdb\u884c\u4e86\u6392\u5e8f, \u7136\u540e \u5faa\u73af, \u53d6\u51fa\u6700\u540e\u4e00\u4e2a\u8d26\u53f7\u7684\u4ea4\u6613, \u8fdb\u884c\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u5b83\u7684\u6240\u6709\u4ea4\u6613, \u7136\u540e \u518d\u53d6\u51fa\u5012\u6570\u7b2c\u4e8c\u4e2a\u8d26\u53f7, \u8fdb\u884c\u5220\u9664\u6240\u6709\u4ea4\u6613, \u76f4\u5230 \u975e\u53ef\u6267\u884c\u4ea4\u6613\u7684\u603b\u91cf\u5728 \u9608\u503c\u4e4b\u5185 --txpool.lifetime \u975e\u53ef\u6267\u884c\u4ea4\u6613\u6700\u5927\u5165\u961f\u65f6\u95f4(\u9ed8\u8ba4: 3\u5c0f\u65f6) txpool\u7684queue\u96c6\u5408\u4e2d, \u5982\u679c\u4e00\u4e2a\u975e\u672c\u5730\u8d26\u6237 \u5b58\u5728\u7684\u65f6\u95f4\u8d85\u8fc7\u4e86 txpool.lifttime\u6307\u5b9a\u7684\u65f6\u95f4, \u90a3\u4e48\u5c06\u4f1a\u5220\u9664\u6b64\u8d26\u6237\u7684\u5168\u90e8\u4ea4\u6613 (\u6bcf\u5206\u949f\u68c0\u67e5\u4e00\u6b21) 4. ethereum\u9009\u9879 --config value TOML \u914d\u7f6e\u6587\u4ef6 --datadir \u201cxxx\u201d \u6570\u636e\u5e93\u548ckeystore\u5bc6\u94a5\u7684\u6570\u636e\u76ee\u5f55 --keystore keystore\u5b58\u653e\u76ee\u5f55(\u9ed8\u8ba4\u5728datadir\u5185) --nousb \u7981\u7528\u76d1\u63a7\u548c\u7ba1\u7406USB\u786c\u4ef6\u94b1\u5305 --networkid value \u7f51\u7edc\u6807\u8bc6\u7b26(\u6574\u578b, 1=Frontier, 2=Morden (\u5f03\u7528), 3=Ropsten, 4=Rinkeby) (\u9ed8\u8ba4: 1) --testnet Ropsten\u7f51\u7edc:\u9884\u5148\u914d\u7f6e\u7684POW(proof-of-work)\u6d4b\u8bd5\u7f51\u7edc --rinkeby Rinkeby\u7f51\u7edc: \u9884\u5148\u914d\u7f6e\u7684POA(proof-of-authority)\u6d4b\u8bd5\u7f51\u7edc --syncmode \"fast\" \u540c\u6b65\u6a21\u5f0f (\"fast\", \"full\", or \"light\") --ethstats value \u7edf\u8ba1\u4e0a\u62a5ethstats service URL (nodename:secret@host:port) --identity value \u81ea\u5b9a\u4e49\u8282\u70b9\u540d --lightserv value \u6307\u5b9a\u5927\u4e8e0, \u5219\u4f1a\u589e\u52a0les\u670d\u52a1, \u6839\u636e\u6bd4\u4f8b\u8bbe\u7f6e\u7ebf\u7a0b\u6570 --lightpeers value \u6700\u5927\u7684LES\u5ba2\u6237\u7aef\u7684peers\u6570\u91cf(\u9ed8\u8ba4\u503c:100) --lightkdf \u542f\u52a8\u65f6, \u4f1a\u5728 \u8d26\u53f7\u914d\u7f6e\u7684\u65f6\u5019, \u964d\u4f4e\u52a0\u5bc6\u4f7f\u7528\u7684\u5185\u5b58\u548ccpu\u8d44\u6e90 5. \u5f00\u53d1\u8005\u9009\u9879 --dev \u4f7f\u7528POA\u5171\u8bc6\u7f51\u7edc\uff0c \u9ed8\u8ba4\u9884\u5206\u914d\u4e00\u4e2a\u5f00\u53d1\u8005\u8d26 \u81ea\u52a8\u5f00\u542f\u6316\u77ff \u65e0\u6cd5\u4f7f\u7528p2p\u7f51\u7edc --dev.period value \u5f00\u53d1\u8005\u6a21\u5f0f\u4e0b\u6316\u77ff\u5468\u671f (0 = \u4ec5\u5728\u4ea4\u6613\u65f6) (\u9ed8\u8ba4: 0) 6. \u6027\u80fd\u8c03\u4f18\u9009\u9879 --trie-cache-gens \u4fdd\u6301\u5728\u5185\u5b58\u4e2d\u4ea7\u751f\u7684trie node\u6570\u91cf(\u9ed8\u8ba4:120) stateDB\u5728 New\u548c reset\u7684\u65f6\u5019, \u90fd\u4f1a\u8c03\u7528 OpenTrie, \u6b64\u65f6\u4f1a\u7ed9 trie\u7684cachelimit\u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u6570\u91cf --cache \u8bbe\u7f6e\u53ef\u4f9b\u4f7f\u7528\u7684\u5185\u5b58\u6570, \u9ed8\u8ba4\u662f 1024M . cache.database, cache.trie, cache.gc\u7b49\u5185\u5b58 \u90fd\u662f\u6307\u5b9a\u767e\u5206\u6bd4, \u4ececache\u4e0a\u9762\u8fdb\u884c\u5206\u914d 7. \u8d26\u6237\u9009\u9879 --unlock \u9700\u89e3\u9501\u8d26\u6237\u4ee5\u9017\u53f7\u5206\u9694 --password \u7528\u4e8e\u975e\u4ea4\u4e92\u5f0f\u5bc6\u7801\u8f93\u5165\u5bc6\u7801\u6587\u4ef6, \u6307\u5b9a\u6587\u4ef6\u8def\u5f84, \u6bcf\u4e00\u884c\u4f5c\u4e3a \u4e00\u4e2a\u8d26\u53f7\u5bf9\u5e94\u7684\u5bc6\u7801 8. \u7f51\u7edc\u9009\u9879 --bootnodes value \u7528\u4e8eP2P\u53d1\u73b0\u5f15\u5bfc\u7684enode urls(\u9017\u53f7\u5206\u9694)(\u5bf9\u4e8elight servers\u7528v4+v5\u4ee3\u66ff) \u5f53\u5f00\u542f\u4e86\u8282\u70b9\u53d1\u73b0, \u6ee1\u8db3 \u8282\u70b9\u8fde\u63a5\u6570\u4e3a0, 20\u79d2\u5185\u6ca1\u6709\u8fde\u63a5\u8fc7\u8282\u70b9\u7b49\u6761\u4ef6\u65f6, \u5c06\u4f1a\u5c1d\u8bd5\u8fde\u63a5bootnodes\u6240\u6307\u5b9a\u7684\u8282\u70b9 --bootnodesv4 , --bootnodesv5 \u8bbe\u7f6e\u540e, \u4f1a\u8986\u76d6\u6389 --bootnodes \u8bbe\u7f6e\u7684\u5185\u5bb9 --port value p2p\u7684\u76d1\u542c\u7aef\u53e3(\u9ed8\u8ba4\u503c:30303) --maxpeers value p2p.server\u7684 maxpeers \u6700\u5927\u8fde\u63a5\u6570 (\u5982\u679c\u8bbe\u7f6e\u4e3a0\uff0c\u7f51\u7edc\u5c06\u88ab\u7981\u7528)(\u9ed8\u8ba4\u503c:25) \u8282\u70b9\u5efa\u7acb\u8fde\u63a5\u65f6, \u4f1a\u5224\u65ad\u6b64\u65f6\u662f\u5426\u8d85\u8fc7\u4e86\u6700\u5927\u8282\u70b9\u6570, \u5982\u679c\u662f, \u5219\u4e0d\u4f1a\u518d\u5efa\u7acb\u8fde\u63a5 --maxpendpeers value \u6700\u5927\u5c1d\u8bd5\u8fde\u63a5\u7684\u6570\u91cf(\u5982\u679c\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c)(\u9ed8\u8ba4\u503c:0) \u88ab\u52a8\u63a5\u53d7 \u7f51\u7edc\u4e2d\u6700\u5927\u7684\u5c1d\u8bd5\u8fde\u63a5\u6570, \u5982\u679c\u8bbe\u7f6e\u4e3a0(\u9ed8\u8ba4\u503c), \u90fd\u5c06\u4f1a\u5728p2p.server\u7684 listenLoop\u4e2d, \u88ab\u6309\u716750\u6765\u6267\u884c --nat value NAT\u7aef\u53e3\u6620\u5c04\u673a\u5236 (any|none|upnp|pmp|extip: ) (\u9ed8\u8ba4: \u201cany\u201d) \u628a\u5185\u7f51\u7684ip+\u7aef\u53e3, \u6620\u5c04\u4e3a \u8def\u7531\u5668\u7684IP+\u7aef\u53e3\u3002 \u9ed8\u8ba4\u503c\u4e3aany, \u4e3a\u540c\u65f6\u4f7f\u7528 upnp\u548cpmp --nodiscover \u7981\u7528\u8282\u70b9\u53d1\u73b0\u673a\u5236(\u624b\u52a8\u6dfb\u52a0\u8282\u70b9) \u5173\u95ed\u8282\u70b9\u53d1\u73b0, \u540c\u6b65\u6a21\u5f0f\u4e3alight \u5219\u9ed8\u8ba4\u5173\u95ed. \u540c\u65f6p2p\u4e2d\u4e0d\u4f1a\u5c1d\u8bd5\u8fde\u63a5bootnodes\u4e2d\u8282\u70b9 --v5disc \u542f\u52a8\u65b0\u7684\u8282\u70b9\u53d1\u73b0\u673a\u5236: topic-discovery\u534f\u8bae \u5f53\u542f\u52a8 --v5disc , \u90a3\u4e48 \u4f1a\u542f\u52a8\u8282\u70b9\u53d1\u73b0\u673a\u5236, nodiscover \u8bbe\u7f6e\u4e3atrue\u4e5f\u4e0d\u7ba1\u7528. --nodekey value \u6307\u5b9ap2p\u8282\u70b9\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 --nodekeyhex value \u6307\u5b9a\u79c1\u94a5\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32 \u8fdb\u884c\u542f\u52a8 nodekey\u548cnodekeyhex\u4e0d\u80fd\u540c\u65f6\u8bbe\u7f6e 9. \u65f7\u5de5\u9009\u9879 --mine \u542f\u52a8\u6316\u77ff \u5f53\u8bbe\u7f6e\u542f\u52a8 --dev \u65f6, \u4e5f\u4f1a\u5728\u8282\u70b9\u542f\u52a8\u65f6\u542f\u52a8\u6316\u77ff(\u5982\u679c, \u6b64\u65f6\u540c\u65f6\u6307\u5b9a\u4e86 --sync light \u5219\u4f1a\u62a5\u9519) --minerthreads / --miner.threads : \u6316\u77ff\u4f7f\u7528\u7684CPU\u7ebf\u7a0b\u6570\u91cf, \u9ed8\u8ba4\u4e3a0 \u5982\u679c\u8bbe\u7f6e\u4e3a0, \u5219\u5728\u542f\u52a8\u6316\u77ff\u65f6, \u88ab\u5f53\u505a-1\u6765\u8fdb\u884c\u4f7f\u7528, \u5219\u4f1a\u7981\u6b62\u672c\u5730\u6316\u77ff --etherbase / --miner.etherbas \u6316\u77ff\u5956\u52b1\u5730\u5740(\u9ed8\u8ba4=\u7b2c\u4e00\u4e2a\u521b\u5efa\u7684\u5e10\u6237)(\u9ed8\u8ba4\u503c:\u201c0\u201d) --targetgaslimit / --miner.gastarge \u76ee\u6807gas\u9650\u5236\uff1a\u8bbe\u7f6e\u6700\u4f4egas\u9650\u5236(\u9ed8\u8ba4\u503c:\u201c8000000\u201d) \u8bbe\u7f6e\u5230 worker\u7684 gasFloor\u5b57\u6bb5, \u4f1a\u6839\u636e gasFloor \u548c gasCeil \u6765\u8fdb\u884c\u8ba1\u7b97 \u4e0b\u4e00\u4e2a\u533a\u5757\u7684\u533a\u5757\u5934\u4e2d\u7684 gasLimit, \u8fdb\u884c\u4e00\u4e2a\u516c\u5f0f\u7684\u8c03\u6574 --miner.gaslimit \u6316\u77ff\u662f, \u533a\u5757\u7684gas\u4e0a\u9650, \u9ed8\u8ba48000000 \u8bbe\u7f6e\u5230 worker\u7684 gasCeil\u4e0a --gasprice / --miner.gasprice \u6316\u77ff\u63a5\u53d7\u4ea4\u6613\u7684\u6700\u4f4egas\u4ef7\u683c \u9ed8\u8ba4GWei \u8bbe\u7f6e\u5728 eth\u7684 gasPrice\u5bf9\u8c61\u4e0a, \u5728\u6316\u77ff\u65f6, \u4f1a\u8bbe\u7f6e\u5230txpool\u7684gasprice, \u4e5f\u5c31\u662f\u9650\u5236\u63a5\u6536\u4ea4\u6613\u7684gasprice --extradata / --miner.extradat \u77ff\u5de5\u8bbe\u7f6e\u7684\u989d\u5916\u5757\u6570\u636e (\u4e0d\u8bbe\u7f6e, \u90a3\u4e48\u9ed8\u8ba4\u586b\u5ba2\u6237\u7aef\u7248\u672c) \u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc732 \u63d0\u4ea4\u65b0\u533a\u5757\u65f6, \u4f1a\u586b\u5230 header\u7684Extra\u5b57\u6bb5\u4e2d --miner.recommit \u65b0\u7684\u6316\u6398\u5faa\u73af\u7684\u65f6\u95f4\u95f4\u9694 \u9ed8\u8ba43\u79d2 \u5982\u679c\u8bbe\u7f6e\u5c0f\u4e8e\u4e00\u79d2, \u5219\u4f1a\u88ab\u5f53\u505a\u4e00\u79d2\u4f7f\u7528 \u5728newWorkLoop\u7684\u65f6\u5019, \u4f1a\u6307\u5b9a \u4e00\u4e2a \u65f6\u95f4\u95f4\u9694\u4f20\u5165 , \u4f1a\u6839\u636e \u9ed8\u8ba4\u7684\u8c03\u6574\u6bd4\u4f8b \u8fdb\u884c\u8c03\u6574 --miner.noverify \u4e0d\u5bf9\u8fdc\u7a0b\u533a\u5757\u8fdb\u884c\u9a8c\u8bc1, ethash\u4e2d, \u4e0d\u9a8c\u8bc1\u63a5\u6536\u5230\u7684\u533a\u5757\u7684\u5de5\u4f5c\u91cf 10. GAS\u4ef7\u683c\u9009\u9879 --gpoblocks value \u7528\u4e8e\u68c0\u67e5gas\u4ef7\u683c\u7684\u6700\u8fd1\u5757\u7684\u4e2a\u6570 (\u9ed8\u8ba4: 20) \u8bbe\u7f6e\u5c0f\u4e8e1, \u5c06\u88ab\u5f53\u505a1\u4f7f\u7528 \u68c0\u67e5\u6700\u8fd1\u6307\u5b9a\u4e2a\u6570\u7684\u533a\u5757\u7684\u4ea4\u6613\u7684gasprice --gpopercentile value \u5efa\u8baegas\u4ef7\u53c2\u8003\u6700\u8fd1\u4ea4\u6613\u7684gas\u4ef7\u7684\u767e\u5206\u4f4d\u6570\uff0c(\u9ed8\u8ba4: 50) \u8bbe\u7f6e\u5c0f\u4e8e0 \u88ab\u5f53\u505a0, \u8bbe\u7f6e\u5927\u4e8e100 \u88ab\u5f53\u505a100 \u4f1a\u628a\u6307\u5b9a\u7684\u6700\u8fd1\u7684\u4e2a\u6570\u7684\u533a\u5757 \u7684\u6240\u6709\u4ea4\u6613\u7684 gasPrice \u8fdb\u884c\u6392\u5e8f\u4e4b\u540e, \u7136\u540e\u4ee5\u6307\u5b9a\u7684\u767e\u5206\u6bd4, \u4ece\u96c6\u5408\u4e2d\u627e\u51fa\u5bf9\u5e94\u7684 gasprice\u4e3a\u5efa\u8bae\u7684price 11. \u865a\u62df\u673a\u9009\u9879 --vmdebug \u8bb0\u5f55VM\u548c\u5408\u7ea6\u8c03\u8bd5\u4fe1\u606f bool \u4e5f\u5c31\u662f\u5728opSha3\u7684\u65f6\u5019, \u65e5\u5fd7\u8bb0\u5f55\u4e86\u5bf9\u5e94\u7684hash\u503c 12. \u65e5\u5fd7\u8c03\u8bd5\u9009\u9879 --metrics \u542f\u7528metrics\u6536\u96c6\u548c\u62a5\u544abool \u5f00\u542f\u4e4b\u540e, \u6bcf3\u79d2\u6536\u96c6\u4e00\u6b21\u8fd0\u884c\u65f6\u8fdb\u7a0b\u7684\u5404\u9879\u6307\u6807, \u6b63\u5728\u4f7f\u7528\u7684\u5185\u5b58\u4e4b\u7c7b\u7684\u7b49\u7b49 --fakepow \u4e0d\u771f\u6b63\u7684\u8fdb\u884c\u6316\u77ff\u548c\u9a8c\u8bc1\u533a\u5757 --verbosity value \u8bbe\u7f6elog\u7b49\u7ea7 0=crit, 1=error, 2=warn, 3=info, 4=debug, 5=detail (default: 3) --vmodule value \u4e0d\u540c\u7684\u6a21\u5757\u4e2d, \u53ef\u4ee5\u8bbe\u7f6e\u4e0d\u540c\u7684\u65e5\u5fd7\u7b49\u7ea7. (\u6bd4\u5982 eth/*=6,p2p=5) --backtrace value \u6307\u5b9a\u6587\u4ef6\u548c\u5bf9\u5e94\u884c\u53f7, \u628a\u8fd9\u884c\u7684log\u7684\u8c03\u7528\u6808\u90fd\u6253\u5370\u51fa\u6765 (\u6bd4\u5982 \u201cblock.go:271\u201d) --debug \u65e5\u5fd7\u4f1a\u5e26\u4e0a\u6b64log\u6267\u884c\u6240\u5728\u7684\u6587\u4ef6\u540d\u548c\u5bf9\u5e94\u884c\u53f7 --pprof \u4f1a\u542f\u7528pprof HTTP\u7684\u670d\u52a1\u5668, \u53ef\u4ee5\u770b\u5230\u7a0b\u5e8f \u5f00\u542f\u4e86\u591a\u5c11\u4e2agoroutine, \u591a\u5c11\u4e2a\u7ebf\u7a0b\u7b49, \u7528\u4e8e\u5185\u5b58\u5206\u6790 --pprofaddr value pprof HTTP\u670d\u52a1\u5668\u76d1\u542c\u63a5\u53e3(\u9ed8\u8ba4\u503c:127.0.0.1) --pprofport value pprof HTTP\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3(\u9ed8\u8ba4\u503c:6060) --memprofilerate value \u6309\u6307\u5b9a\u9891\u7387\u8fdb\u884c\u5185\u5b58\u5206\u6790 \u9ed8\u8ba4512 * 1024 \u7528\u4e8epprof, \u6309\u7167\u6307\u5b9a\u7684\u5b57\u8282\u6570 \u8fdb\u884c\u6bcf\u6b21\u91c7\u6837, \u91c7\u6837\u7387\u8d8a\u5c0f, \u6570\u636e\u8d8a\u7ec6\u81f4, \u4f46\u8fdb\u7a0b\u8fd0\u884c\u8d8a\u6162 --blockprofilerate value \u6309\u6307\u5b9a\u9891\u7387\u6253\u5f00block profiling (\u9ed8\u8ba4\u503c:0) \u83b7\u53d6\u5bfc\u81f4\u963b\u585e\u7684 goroutine \u5806\u6808, \u6307\u5b9a\u7684\u6570\u503c\u7684\u610f\u601d\u662f, \u5982\u6307\u5b9a\u4e3a1,\u5219\u6bcf\u53d1\u751f1\u4e2agoroutine\u5835\u585e, \u5c31\u4f1a\u91c7\u6837\u62a5\u544a\u4e00\u6b21. \u8bbe\u7f6e\u4e3a0 , \u5219\u6b64\u91c7\u6837\u64cd\u4f5c\u53d6\u6d88 --cpuprofile \u6307\u5b9a\u6587\u4ef6\u8def\u5f84,\u5199\u5165cpu\u7684\u62a5\u544a\u5206\u6790, \u663e\u793a\u6bcf\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u7684\u65f6\u95f4 --trace \u5c06runtime\u4e2dtrace\u5199\u5165\u6307\u5b9a\u6587\u4ef6, \u5e2e\u52a9\u8ffd\u8e2aos\u7ebf\u7a0b\u5982\u4f55\u8c03\u5ea6goroutine , goroutine\u4e3a\u4ec0\u4e48\u5835\u585e\u7b49\u7b49\u95ee\u9898 13. whisper\u5b9e\u9a8c\u9009\u9879 --shh \u542f\u7528Whisper \u5b89\u5168\u901a\u4fe1\u534f\u8bae --dev \u60c5\u51b5\u4e0b, \u9ed8\u8ba4\u5f00\u542f. \u53ea\u8981\u8bbe\u7f6e\u4e86whisper\u76f8\u5173\u7684\u547d\u4ee4\u884c\u53c2\u6570, \u90fd\u4f1a\u81ea\u52a8\u5f00\u542f whisper --shh.maxmessagesize \u53ef\u63a5\u53d7\u7684\u6700\u5927\u7684\u6d88\u606f\u5927\u5c0f (\u9ed8\u8ba4\u503c: 1024*1024) \u8bbe\u7f6e\u548c\u63a5\u6536\u6d88\u606f\u65f6, \u4f1a\u68c0\u67e5\u6d88\u606f\u7684\u5927\u5c0f, \u8d85\u8fc7\u9608\u503c, \u4f1a\u663e\u793a\u9519\u8bef --shh.pow value \u53ef\u63a5\u53d7\u7684\u6700\u5c0f\u7684POW (\u9ed8\u8ba4\u503c: 0.2) \u63a5\u6536\u5230\u7684\u8bf7\u6c42\u4fe1\u606f, \u4f1a\u6bd4\u5bf9 powtarget\u503c, \u5728 \u6307\u5b9a\u503c\u4e4b\u4e0a \u624d\u4f1a\u88ab\u63a5\u6536 \u76f8\u5f53\u4e8e\u8ba1\u7b97pow\u7684\u6210\u672c, \u4e3a\u4e86\u9632\u6b62\u5783\u573e\u6d88\u606f, \u4e5f\u662f\u4e3a\u4e86\u7f13\u89e3\u7f51\u7edc\u538b\u529b (pow\u503c\u4e5f \u6d88\u606f\u5927\u5c0f\u548cTTL\u6210\u6b63\u6bd4) --shh.restrict-light \u9650\u5236 2\u4e2a\u8f7b\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u8fde\u63a5 \u5728\u63e1\u624b\u4e2d, \u8fdb\u884c\u5224\u65ad, \u5982\u679c\u662f\u8f7b\u8282\u70b9 \u5728 \u52a0\u4e0a\u6b64\u53c2\u6570\u8bbe\u7f6e\u540e, \u90a3\u4e48 \u8282\u70b9\u95f4\u63e1\u624b\u5c06\u4e0d\u4f1a\u88ab\u901a\u8fc7 14. ethash\u9009\u9879 --ethash.cachedir ethash\u9a8c\u8bc1\u7f13\u5b58\u76ee\u5f55(\u9ed8\u8ba4 = datadir\u76ee\u5f55\u5185) --ethash.cachesinmem value \u5728\u5185\u5b58\u4fdd\u5b58\u7684\u6700\u8fd1\u7684ethash\u7f13\u5b58\u4e2a\u6570 (\u6bcf\u4e2a\u7f13\u5b5816MB ) (\u9ed8\u8ba4: 2) --ethash.cachesondisk value \u5728\u78c1\u76d8\u4fdd\u5b58\u7684\u6700\u8fd1\u7684ethash\u7f13\u5b58\u4e2a\u6570 (\u6bcf\u4e2a\u7f13\u5b5816MB) (\u9ed8\u8ba4: 3) --ethash.dagdir \"\" \u5b58ethash DAGs\u76ee\u5f55 (\u9ed8\u8ba4 = \u7528\u6237hom\u76ee\u5f55) --ethash.dagsinmem value \u5728\u5185\u5b58\u4fdd\u5b58\u7684\u6700\u8fd1\u7684ethash DAGs \u4e2a\u6570 (\u6bcf\u4e2a1GB\u4ee5\u4e0a) (\u9ed8\u8ba4: 1) --ethash.dagsondisk value \u5728\u78c1\u76d8\u4fdd\u5b58\u7684\u6700\u8fd1\u7684ethash DAGs \u4e2a\u6570 (\u6bcf\u4e2a1GB\u4ee5\u4e0a) (\u9ed8\u8ba4: 2) 15. API\u548c\u63a7\u5236\u53f0\u9009\u9879 --rpc \u542f\u7528HTTP-RPC\u670d\u52a1\u5668 --rpcaddr value HTTP-RPC\u670d\u52a1\u5668\u63a5\u53e3\u5730\u5740(\u9ed8\u8ba4\u503c:\u201clocalhost\u201d) --rpcport value HTTP-RPC\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3(\u9ed8\u8ba4\u503c:8545) --rpcapi value \u57fa\u4e8eHTTP-RPC\u63a5\u53e3\u63d0\u4f9b\u7684API --ws \u542f\u7528WS-RPC\u670d\u52a1\u5668 --wsaddr value WS-RPC\u670d\u52a1\u5668\u76d1\u542c\u63a5\u53e3\u5730\u5740(\u9ed8\u8ba4\u503c:\u201clocalhost\u201d) --wsport value WS-RPC\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3(\u9ed8\u8ba4\u503c:8546) --wsapi value \u57fa\u4e8eWS-RPC\u7684\u63a5\u53e3\u63d0\u4f9b\u7684API --wsorigins value websockets\u8bf7\u6c42\u5141\u8bb8\u7684\u6e90 --ipcdisable \u7981\u7528IPC-RPC\u670d\u52a1\u5668 --ipcpath \u5305\u542b\u5728datadir\u91cc\u7684IPC socket/pipe\u6587\u4ef6\u540d(\u8f6c\u4e49\u8fc7\u7684\u663e\u5f0f\u8def\u5f84) --rpccorsdomain value \u5141\u8bb8\u8de8\u57df\u8bf7\u6c42\u7684\u57df\u540d\u5217\u8868(\u9017\u53f7\u5206\u9694)(\u6d4f\u89c8\u5668\u5f3a\u5236) --jspath loadScript JavaScript\u52a0\u8f7d\u811a\u672c\u7684\u6839\u8def\u5f84(\u9ed8\u8ba4\u503c:\u201c.\u201d) --exec value \u6267\u884cJavaScript\u8bed\u53e5(\u53ea\u80fd\u7ed3\u5408console/attach\u4f7f\u7528) \u4f8b\u5b50: geth --exec \"eth.blockNumber\" console 2>/dev/null --preload value \u9884\u52a0\u8f7d\u5230\u63a7\u5236\u53f0\u7684JavaScript\u6587\u4ef6\u5217\u8868(\u9017\u53f7\u5206\u9694) 16. \u8865\u5145\u9009\u9879 --goerli \u9884\u5148\u914d\u7f6e\u7684POA\u6d4b\u8bd5\u7f51\u7edc --override.constantinople \u541b\u58eb\u5766\u4e01\u5821\u5206\u5c94\u8bbe\u7f6e --docroot \u6587\u6863\u6839\u76ee\u5f55, \u9ed8\u8ba4home --gcmode \u533a\u5757\u94fe\u5783\u573e\u56de\u6536\u6a21\u5f0f (\"full\", \"archive\") \u9ed8\u8ba4full \u94fe\u9000\u51fa\u65f6, full \u4f1a\u5c06 \u6700\u8fd1\u533a\u5757\u8d26\u6237\u72b6\u6001\u5199\u5165\u78c1\u76d8, archive\u4e0d\u4f1a archive\u4e0d\u4f1a\u5bf9trie\u8fdb\u884c\u4fee\u526a, \u4f1a\u5b9e\u65f6\u540c\u6b65tire\u5230\u78c1\u76d8, full\u4e0d\u4f1a --whitelist ( = ) \u4f7f\u7528\u9017\u53f7\u5206\u9694 \u53d1\u9001GetBlockHeadersMsg\u6d88\u606f\u8bf7\u6c42\u767d\u540d\u5355\u4e2d\u5bf9\u5e94\u7684\u533a\u5757\u5934 \u6536\u5230\u5bf9\u5e94\u7684\u533a\u5757\u540e, \u4f1a \u9a8c\u8bc1\u6b64\u533a\u5757hash\u662f\u5426\u8ddf\u767d\u540d\u5355\u4e2dhash \u5339\u914d\u5f97\u4e0a --dashboard \u542f\u52a8dashboard, \u6536\u96c6\u4ee5\u592a\u574a\u8282\u70b9\u6570\u636e\uff0c\u7528\u4e8e\u53ef\u89c6\u5316\u5206\u6790 --dashboard.addr dashboard\u76d1\u542c\u7684host \u9ed8\u8ba4localhost --dashboard.host dashboard\u76d1\u542c\u7684port \u9ed8\u8ba48080 --dashboard.refresh \u5237\u65b0\u95f4\u9694, \u9ed8\u8ba45s --vm.ewasm \u5916\u90e8\u7684ewasm\u914d\u7f6e ./geth --vm.ewasm=\"$HOME/testnet/libhera.so,metering=true,fallback=true\" ... --vm.evm \u5916\u90e8evm\u914d\u7f6e import-preimages hash\u9884\u955c\u50cf\u5bfc\u51fa\u5230RLP\u7f16\u7801\u7684\u6d41 geth --datadir ./data0 export-preimages exportPreImage export-preimages \u4eceRLP\u7f16\u7801\u7684\u6d41\u5bfc\u5165hash\u9884\u955c\u50cf geth --datadir ./data1 import-preimages exportPreImage","title":"(\u53c2\u8003)geth\u5404\u547d\u4ee4\u884c\u4f5c\u75281.1"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#1-geth","text":"\u57fa\u4e8e: go-ethereum@1.8-stable geth [\u9009\u9879] \u547d\u4ee4 [\u547d\u4ee4\u9009\u9879] [\u53c2\u6570\u2026]","title":"1. Geth\u547d\u4ee4\u884c\u7528\u6cd5"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#2","text":"account \u7ba1\u7406\u8d26\u6237 list \u663e\u793a\u8d26\u6237 new \u521b\u5efa\u8d26\u6237 update \u8ddf\u65b0\u8d26\u6237 import \u5bfc\u5165\u8d26\u6237 \u4f8b\u5b50: geth account new attach : \u901a\u8fc7rpc/ipc \u8fde\u63a5\u4ee5\u592a\u574a\u8282\u70b9 \u4f8b\u5b50: geth attach http:127.0.0.1:9999 bug : \u6d4f\u89c8\u5668\u6253\u5f00github\u7528\u4e8e\u63d0\u4ea4bug issues \u4f8b\u5b50: geth bug console \u542f\u52a8\u4ea4\u4e92\u5f0fJavaScript\u73af\u5883 \u4f8b\u5b50: geth console copydb \u4ece\u6587\u4ef6\u5939chaindata\u521b\u5efa\u672c\u5730\u94fe \u4f8b\u5b50: geth --datadir ./peer2 copydb peer1/geth/chaindata/ dump \u6307\u5b9ahash \u6216\u8005 \u533a\u5757\u9ad8\u5ea6 \u83b7\u53d6\u6b64\u65f6\u7684 \u6240\u6709\u8d26\u6237 \u548c\u8d26\u6237\u5bf9\u5e94\u7684\u5b57\u6bb5\u4fe1\u606f \u4f8b\u5b50: geth dump 0 go \"f76f69cee4faa0a63b30ae1e7881f4f715657010\": { \"balance\": \"200000000000000000000\", \"nonce\": 0, \"root\": \"56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\", \"codeHash\": \"c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\", \"code\": \"\", \"storage\": {} }, ... dumpconfig \u663e\u793a\u914d\u7f6e\u4fe1\u606f \u663e\u793a eth, Eth.Ethash, Eth.TxPool, Eth.GPO, Shh, Node, Node.P2P, Node.HTTPTimeouts, Dashboard \u7b49\u914d\u7f6e\u4fe1\u606f \u4f8b\u5b50: geth dumpconfig export \u5bfc\u51fa\u533a\u5757\u94fe\u5230\u6587\u4ef6 [ ] \u4f8b\u5b50: geth --datadir ./peer1 export exportfile 0 100 import \u5bfc\u5165\u4e00\u4e2a\u533a\u5757\u94fe\u6587\u4ef6 ( ... ) \u4f8b\u5b50: geth --datadir ./peer2 import exportfile init \u542f\u52a8\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u7684\u521b\u4e16\u7eaa\u5757 \u6307\u5b9a\u521b\u4e16\u533a\u5757\u6587\u4ef6\u6765\u8fdb\u884c\u521d\u59cb\u5316\u521b\u4e16\u533a\u5757 \u4f8b\u5b50: geth init genesis.json js \u6267\u884c\u6307\u5b9a\u7684JavaScript\u6587\u4ef6(\u591a\u4e2a) [jsfile...] \u4f8b\u5b50: geth js xx.js license \u76f4\u63a5\u8f93\u5165, \u67e5\u770b\u8bb8\u53ef\u4fe1\u606f \u4f8b\u5b50: geth license makecache \u751f\u6210ethash\u9a8c\u8bc1\u7f13\u5b58(\u7528\u4e8e\u6d4b\u8bd5) \u4f8b\u5b50: geth makecache 20 xxdir makedag \u751f\u6210ethash \u6316\u77ffDAG(\u7528\u4e8e\u6d4b\u8bd5) monitor \u76d1\u63a7\u548c\u53ef\u89c6\u5316\u8282\u70b9\u6307\u6807 \u9700\u6307\u5b9aAvailable \u7684\u6307\u6807, \u5373\u53ef \u53ef\u89c6\u5316\u7684\u76d1\u63a7 \u4f8b\u5b50: ./geth monitor txpool/underpriced/Overall removedb \u5220\u9664\u533a\u5757\u94fe\u548c\u72b6\u6001\u6570\u636e\u5e93 \u4f8b\u5b50: geth --datadir peer2/ removedb version \u6253\u5370\u7248\u672c\u53f7 \u4f8b\u5b50: geth version wallet \u7ba1\u7406\u94b1\u5305\u5bfc\u5165 \u4f8b\u5b50: geth wallet import /path/to/my/presale.wallet help,h \u663e\u793a\u4e00\u4e2a\u547d\u4ee4\u6216\u5e2e\u52a9\u4e00\u4e2a\u547d\u4ee4\u5217\u8868","title":"2. \u547d\u4ee4"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#3","text":"--txpool.nolocals locals\u4e2d\u7684\u8d26\u6237\u7684\u4ea4\u6613, \u4f1a\u5728\u9a8c\u8bc1\u4ea4\u6613\u65f6, \u8fdb\u884c\u6761\u4ef6\u8c41\u514d, \u6bd4\u5982 locals\u4e2d\u7684\u4f4e\u4ef7\u4ea4\u6613\u662f\u4e0d\u4f1a\u88ab\u5254\u9664\u7684. \u6307\u5b9anolocals \u5219\u4e0d\u4f1a\u5bf9\u672c\u5730\u4ea4\u6613\u7279\u6b8a\u5bf9\u5f85 --txpool.locals \u9017\u53f7\u5206\u9694\u6307\u5b9a\u8d26\u6237, \u5c06\u4f1a\u88ab\u6dfb\u52a0\u5230txpool\u7684locals\u5b57\u6bb5\u4e2d. --txpool.journal \u672c\u5730 pending\u548cqueue\u4e2d\u7684\u4ea4\u6613\u8bb0\u5f55\u5728\u78c1\u76d8, \u65b9\u4fbf\u672c\u5730\u8282\u70b9\u91cd\u542f \u9ed8\u8ba4: \"transactions.rlp\" -- txpool.rejournal \u6307\u5b9a\u65f6\u95f4\u95f4\u9694, \u91cd\u65b0\u751f\u6210\u4ea4\u6613\u65e5\u5fd7. \u6700\u5c0f\u4e3a1\u79d2, \u5982\u679c\u77ed\u4e8e1\u79d2, \u4f1a\u88ab\u66ff\u6362\u62101\u79d2 \u9ed8\u8ba41hour --txpool.pricelimit \u52a0\u5165\u4ea4\u6613\u6c60\u7684\u6700\u5c0f\u7684gas\u4ef7\u683c\u9650\u5236, \u9ed8\u8ba4\u4e3a1, \u5f53\u8bbe\u7f6e\u5c0f\u4e8e1, \u5219\u4f1a\u66ff\u6362\u62101 txpool\u5bf9\u8c61\u7684 gasPrice\u5b57\u6bb5 --txpool.pricebump \u6bcf\u4e00\u4e2a\u8d26\u53f7 \u90fd\u4f1a\u88ab\u521b\u5efa\u4e00\u4e2a txList, \u6839\u636e\u4ea4\u6613\u7684nonce \u53ef\u4ee5\u4ecetxlist\u4e2d\u53d6\u51fa\u5bf9\u5e94\u7684\u4ea4\u6613, \u5982\u679c\u4e00\u4e2a\u65b0\u7684\u4ea4\u6613, \u8981\u66ff\u6362\u8001\u7684\u4ea4\u6613 (\u4ed6\u4eec\u7684nonce \u76f8\u540c), \u90a3\u4e48\u4ef7\u683c\u9700\u4e0a\u6d6e, \u4e0d\u7136\u4e0d\u4f1a\u88ab\u52a0\u5165\u5230 txlist\u4e2d, \u6b64\u9009\u9879\u5c31\u662f\u6307\u5b9a\u4e0a\u6d6e\u767e\u5206\u6bd4 \u9ed8\u8ba4\u4e0a\u6d6e10% --txpool.accountslots \u6bcf\u4e2a\u5e10\u6237\u4fdd\u8bc1 \u53ef\u6267\u884c \u7684\u6700\u5c11\u4ea4\u6613\u69fd\u6570\u91cf (\u9ed8\u8ba4: 16) \u8bbe\u7f6e\u5c0f\u4e8e1\u65f6, \u66ff\u6362\u621016 \u4f1a\u8fdb\u884c\u7ba1\u7406\u4e00\u4e0b\u6bcf\u4e2a\u672c\u5730\u8d26\u6237\u7684 \u4ea4\u6613\u72b6\u6001, \u5982\u679c\u4f20\u5165nil, \u90a3\u4e48\u5c31\u4f1a\u628a queue\u4e2d\u7684 \u62ff\u8fc7\u6765 \u5728\u68c0\u67e5\u4f4enonce(\u592a\u4e45\u7684\u4ea4\u6613, \u6bd4\u73b0\u5728\u7684\u8fd8\u4f4e), \u548c \u4f4e\u4f59\u989d\u8d85\u8fc7gas\u7684\u4ea4\u6613\u7b49\u7b49\u4e4b\u540e, \u904d\u5386pending\u8fdb\u884c\u5747\u8861\u914d\u989d \u5982\u679cpenging\u603b\u6570\u5927\u4e8e\u4e86\u5168\u5c40\u7684GlobalSlots\u7684\u8bdd, \u90a3\u4e48\u5c31\u4f1a\u68c0\u67e5 \u6bcf\u4e00\u4e2a\u8d26\u6237\u7684\u4ea4\u6613, \u901a\u8fc7\u7b56\u7565\u6bd4\u5bf9 \u8d26\u6237\u7684 accountslots, \u51cf\u5c11\u5355\u4e2a\u8d26\u6237\u4ea4\u6613, \u4ece\u800c\u51cf\u5c11GlobalSlots\u603b\u4ea4\u6613\u6570 --txpool.globalslots \u6240\u6709\u5e10\u6237 \u53ef\u6267\u884c \u7684\u6700\u5927\u4ea4\u6613\u69fd\u6570\u91cf, \u9ed8\u8ba4: 4096 --txpool.accountqueue \u6bcf\u4e2a\u5e10\u6237\u5141\u8bb8\u7684\u6700\u591a \u975e\u53ef\u6267\u884c \u4ea4\u6613\u69fd\u6570\u91cf (\u9ed8\u8ba4: 64) \u904d\u5386\u6bcf\u4e00\u4e2a\u8d26\u6237\u7684\u65f6\u5019, \u4f1a\u628a\u8d26\u6237\u5bf9\u5e94\u7684txList\u8d85\u8fc7\u4e86 accountqueue \u4e2a\u6570\u7684\u4ea4\u6613, \u8fdb\u884c\u5220\u9664\u6389 (\u6839\u636enonce\u5012\u53d9\u7684) --txpool.globalqueue \u6240\u6709\u5e10\u6237 \u975e\u53ef\u6267\u884c \u4ea4\u6613\u6700\u5927\u69fd\u6570\u91cf (\u9ed8\u8ba4: 1024) \u5982\u679cqueue\u4e2d\u7684\u8d26\u53f7\u7684\u603b\u975e\u53ef\u6267\u884c\u7684\u4ea4\u6613\u6570 \u5927\u4e8e\u6307\u5b9a\u9608\u503c, \u90a3\u4e48 \u628a\u4e0d\u662f\u672c\u5730\u53d1\u8d77\u4ea4\u6613\u7684\u8d26\u53f7\u653e\u5165\u6570\u7ec4, (\u8fdb\u884c\u4e86\u6392\u5e8f, \u7136\u540e \u5faa\u73af, \u53d6\u51fa\u6700\u540e\u4e00\u4e2a\u8d26\u53f7\u7684\u4ea4\u6613, \u8fdb\u884c\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u5b83\u7684\u6240\u6709\u4ea4\u6613, \u7136\u540e \u518d\u53d6\u51fa\u5012\u6570\u7b2c\u4e8c\u4e2a\u8d26\u53f7, \u8fdb\u884c\u5220\u9664\u6240\u6709\u4ea4\u6613, \u76f4\u5230 \u975e\u53ef\u6267\u884c\u4ea4\u6613\u7684\u603b\u91cf\u5728 \u9608\u503c\u4e4b\u5185 --txpool.lifetime \u975e\u53ef\u6267\u884c\u4ea4\u6613\u6700\u5927\u5165\u961f\u65f6\u95f4(\u9ed8\u8ba4: 3\u5c0f\u65f6) txpool\u7684queue\u96c6\u5408\u4e2d, \u5982\u679c\u4e00\u4e2a\u975e\u672c\u5730\u8d26\u6237 \u5b58\u5728\u7684\u65f6\u95f4\u8d85\u8fc7\u4e86 txpool.lifttime\u6307\u5b9a\u7684\u65f6\u95f4, \u90a3\u4e48\u5c06\u4f1a\u5220\u9664\u6b64\u8d26\u6237\u7684\u5168\u90e8\u4ea4\u6613 (\u6bcf\u5206\u949f\u68c0\u67e5\u4e00\u6b21)","title":"3. \u4ea4\u6613\u6c60\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#4-ethereum","text":"--config value TOML \u914d\u7f6e\u6587\u4ef6 --datadir \u201cxxx\u201d \u6570\u636e\u5e93\u548ckeystore\u5bc6\u94a5\u7684\u6570\u636e\u76ee\u5f55 --keystore keystore\u5b58\u653e\u76ee\u5f55(\u9ed8\u8ba4\u5728datadir\u5185) --nousb \u7981\u7528\u76d1\u63a7\u548c\u7ba1\u7406USB\u786c\u4ef6\u94b1\u5305 --networkid value \u7f51\u7edc\u6807\u8bc6\u7b26(\u6574\u578b, 1=Frontier, 2=Morden (\u5f03\u7528), 3=Ropsten, 4=Rinkeby) (\u9ed8\u8ba4: 1) --testnet Ropsten\u7f51\u7edc:\u9884\u5148\u914d\u7f6e\u7684POW(proof-of-work)\u6d4b\u8bd5\u7f51\u7edc --rinkeby Rinkeby\u7f51\u7edc: \u9884\u5148\u914d\u7f6e\u7684POA(proof-of-authority)\u6d4b\u8bd5\u7f51\u7edc --syncmode \"fast\" \u540c\u6b65\u6a21\u5f0f (\"fast\", \"full\", or \"light\") --ethstats value \u7edf\u8ba1\u4e0a\u62a5ethstats service URL (nodename:secret@host:port) --identity value \u81ea\u5b9a\u4e49\u8282\u70b9\u540d --lightserv value \u6307\u5b9a\u5927\u4e8e0, \u5219\u4f1a\u589e\u52a0les\u670d\u52a1, \u6839\u636e\u6bd4\u4f8b\u8bbe\u7f6e\u7ebf\u7a0b\u6570 --lightpeers value \u6700\u5927\u7684LES\u5ba2\u6237\u7aef\u7684peers\u6570\u91cf(\u9ed8\u8ba4\u503c:100) --lightkdf \u542f\u52a8\u65f6, \u4f1a\u5728 \u8d26\u53f7\u914d\u7f6e\u7684\u65f6\u5019, \u964d\u4f4e\u52a0\u5bc6\u4f7f\u7528\u7684\u5185\u5b58\u548ccpu\u8d44\u6e90","title":"4. ethereum\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#5","text":"--dev \u4f7f\u7528POA\u5171\u8bc6\u7f51\u7edc\uff0c \u9ed8\u8ba4\u9884\u5206\u914d\u4e00\u4e2a\u5f00\u53d1\u8005\u8d26 \u81ea\u52a8\u5f00\u542f\u6316\u77ff \u65e0\u6cd5\u4f7f\u7528p2p\u7f51\u7edc --dev.period value \u5f00\u53d1\u8005\u6a21\u5f0f\u4e0b\u6316\u77ff\u5468\u671f (0 = \u4ec5\u5728\u4ea4\u6613\u65f6) (\u9ed8\u8ba4: 0)","title":"5. \u5f00\u53d1\u8005\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#6","text":"--trie-cache-gens \u4fdd\u6301\u5728\u5185\u5b58\u4e2d\u4ea7\u751f\u7684trie node\u6570\u91cf(\u9ed8\u8ba4:120) stateDB\u5728 New\u548c reset\u7684\u65f6\u5019, \u90fd\u4f1a\u8c03\u7528 OpenTrie, \u6b64\u65f6\u4f1a\u7ed9 trie\u7684cachelimit\u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u6570\u91cf --cache \u8bbe\u7f6e\u53ef\u4f9b\u4f7f\u7528\u7684\u5185\u5b58\u6570, \u9ed8\u8ba4\u662f 1024M . cache.database, cache.trie, cache.gc\u7b49\u5185\u5b58 \u90fd\u662f\u6307\u5b9a\u767e\u5206\u6bd4, \u4ececache\u4e0a\u9762\u8fdb\u884c\u5206\u914d","title":"6. \u6027\u80fd\u8c03\u4f18\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#7","text":"--unlock \u9700\u89e3\u9501\u8d26\u6237\u4ee5\u9017\u53f7\u5206\u9694 --password \u7528\u4e8e\u975e\u4ea4\u4e92\u5f0f\u5bc6\u7801\u8f93\u5165\u5bc6\u7801\u6587\u4ef6, \u6307\u5b9a\u6587\u4ef6\u8def\u5f84, \u6bcf\u4e00\u884c\u4f5c\u4e3a \u4e00\u4e2a\u8d26\u53f7\u5bf9\u5e94\u7684\u5bc6\u7801","title":"7. \u8d26\u6237\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#8","text":"--bootnodes value \u7528\u4e8eP2P\u53d1\u73b0\u5f15\u5bfc\u7684enode urls(\u9017\u53f7\u5206\u9694)(\u5bf9\u4e8elight servers\u7528v4+v5\u4ee3\u66ff) \u5f53\u5f00\u542f\u4e86\u8282\u70b9\u53d1\u73b0, \u6ee1\u8db3 \u8282\u70b9\u8fde\u63a5\u6570\u4e3a0, 20\u79d2\u5185\u6ca1\u6709\u8fde\u63a5\u8fc7\u8282\u70b9\u7b49\u6761\u4ef6\u65f6, \u5c06\u4f1a\u5c1d\u8bd5\u8fde\u63a5bootnodes\u6240\u6307\u5b9a\u7684\u8282\u70b9 --bootnodesv4 , --bootnodesv5 \u8bbe\u7f6e\u540e, \u4f1a\u8986\u76d6\u6389 --bootnodes \u8bbe\u7f6e\u7684\u5185\u5bb9 --port value p2p\u7684\u76d1\u542c\u7aef\u53e3(\u9ed8\u8ba4\u503c:30303) --maxpeers value p2p.server\u7684 maxpeers \u6700\u5927\u8fde\u63a5\u6570 (\u5982\u679c\u8bbe\u7f6e\u4e3a0\uff0c\u7f51\u7edc\u5c06\u88ab\u7981\u7528)(\u9ed8\u8ba4\u503c:25) \u8282\u70b9\u5efa\u7acb\u8fde\u63a5\u65f6, \u4f1a\u5224\u65ad\u6b64\u65f6\u662f\u5426\u8d85\u8fc7\u4e86\u6700\u5927\u8282\u70b9\u6570, \u5982\u679c\u662f, \u5219\u4e0d\u4f1a\u518d\u5efa\u7acb\u8fde\u63a5 --maxpendpeers value \u6700\u5927\u5c1d\u8bd5\u8fde\u63a5\u7684\u6570\u91cf(\u5982\u679c\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c)(\u9ed8\u8ba4\u503c:0) \u88ab\u52a8\u63a5\u53d7 \u7f51\u7edc\u4e2d\u6700\u5927\u7684\u5c1d\u8bd5\u8fde\u63a5\u6570, \u5982\u679c\u8bbe\u7f6e\u4e3a0(\u9ed8\u8ba4\u503c), \u90fd\u5c06\u4f1a\u5728p2p.server\u7684 listenLoop\u4e2d, \u88ab\u6309\u716750\u6765\u6267\u884c --nat value NAT\u7aef\u53e3\u6620\u5c04\u673a\u5236 (any|none|upnp|pmp|extip: ) (\u9ed8\u8ba4: \u201cany\u201d) \u628a\u5185\u7f51\u7684ip+\u7aef\u53e3, \u6620\u5c04\u4e3a \u8def\u7531\u5668\u7684IP+\u7aef\u53e3\u3002 \u9ed8\u8ba4\u503c\u4e3aany, \u4e3a\u540c\u65f6\u4f7f\u7528 upnp\u548cpmp --nodiscover \u7981\u7528\u8282\u70b9\u53d1\u73b0\u673a\u5236(\u624b\u52a8\u6dfb\u52a0\u8282\u70b9) \u5173\u95ed\u8282\u70b9\u53d1\u73b0, \u540c\u6b65\u6a21\u5f0f\u4e3alight \u5219\u9ed8\u8ba4\u5173\u95ed. \u540c\u65f6p2p\u4e2d\u4e0d\u4f1a\u5c1d\u8bd5\u8fde\u63a5bootnodes\u4e2d\u8282\u70b9 --v5disc \u542f\u52a8\u65b0\u7684\u8282\u70b9\u53d1\u73b0\u673a\u5236: topic-discovery\u534f\u8bae \u5f53\u542f\u52a8 --v5disc , \u90a3\u4e48 \u4f1a\u542f\u52a8\u8282\u70b9\u53d1\u73b0\u673a\u5236, nodiscover \u8bbe\u7f6e\u4e3atrue\u4e5f\u4e0d\u7ba1\u7528. --nodekey value \u6307\u5b9ap2p\u8282\u70b9\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 --nodekeyhex value \u6307\u5b9a\u79c1\u94a5\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32 \u8fdb\u884c\u542f\u52a8 nodekey\u548cnodekeyhex\u4e0d\u80fd\u540c\u65f6\u8bbe\u7f6e","title":"8. \u7f51\u7edc\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#9","text":"--mine \u542f\u52a8\u6316\u77ff \u5f53\u8bbe\u7f6e\u542f\u52a8 --dev \u65f6, \u4e5f\u4f1a\u5728\u8282\u70b9\u542f\u52a8\u65f6\u542f\u52a8\u6316\u77ff(\u5982\u679c, \u6b64\u65f6\u540c\u65f6\u6307\u5b9a\u4e86 --sync light \u5219\u4f1a\u62a5\u9519) --minerthreads / --miner.threads : \u6316\u77ff\u4f7f\u7528\u7684CPU\u7ebf\u7a0b\u6570\u91cf, \u9ed8\u8ba4\u4e3a0 \u5982\u679c\u8bbe\u7f6e\u4e3a0, \u5219\u5728\u542f\u52a8\u6316\u77ff\u65f6, \u88ab\u5f53\u505a-1\u6765\u8fdb\u884c\u4f7f\u7528, \u5219\u4f1a\u7981\u6b62\u672c\u5730\u6316\u77ff --etherbase / --miner.etherbas \u6316\u77ff\u5956\u52b1\u5730\u5740(\u9ed8\u8ba4=\u7b2c\u4e00\u4e2a\u521b\u5efa\u7684\u5e10\u6237)(\u9ed8\u8ba4\u503c:\u201c0\u201d) --targetgaslimit / --miner.gastarge \u76ee\u6807gas\u9650\u5236\uff1a\u8bbe\u7f6e\u6700\u4f4egas\u9650\u5236(\u9ed8\u8ba4\u503c:\u201c8000000\u201d) \u8bbe\u7f6e\u5230 worker\u7684 gasFloor\u5b57\u6bb5, \u4f1a\u6839\u636e gasFloor \u548c gasCeil \u6765\u8fdb\u884c\u8ba1\u7b97 \u4e0b\u4e00\u4e2a\u533a\u5757\u7684\u533a\u5757\u5934\u4e2d\u7684 gasLimit, \u8fdb\u884c\u4e00\u4e2a\u516c\u5f0f\u7684\u8c03\u6574 --miner.gaslimit \u6316\u77ff\u662f, \u533a\u5757\u7684gas\u4e0a\u9650, \u9ed8\u8ba48000000 \u8bbe\u7f6e\u5230 worker\u7684 gasCeil\u4e0a --gasprice / --miner.gasprice \u6316\u77ff\u63a5\u53d7\u4ea4\u6613\u7684\u6700\u4f4egas\u4ef7\u683c \u9ed8\u8ba4GWei \u8bbe\u7f6e\u5728 eth\u7684 gasPrice\u5bf9\u8c61\u4e0a, \u5728\u6316\u77ff\u65f6, \u4f1a\u8bbe\u7f6e\u5230txpool\u7684gasprice, \u4e5f\u5c31\u662f\u9650\u5236\u63a5\u6536\u4ea4\u6613\u7684gasprice --extradata / --miner.extradat \u77ff\u5de5\u8bbe\u7f6e\u7684\u989d\u5916\u5757\u6570\u636e (\u4e0d\u8bbe\u7f6e, \u90a3\u4e48\u9ed8\u8ba4\u586b\u5ba2\u6237\u7aef\u7248\u672c) \u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc732 \u63d0\u4ea4\u65b0\u533a\u5757\u65f6, \u4f1a\u586b\u5230 header\u7684Extra\u5b57\u6bb5\u4e2d --miner.recommit \u65b0\u7684\u6316\u6398\u5faa\u73af\u7684\u65f6\u95f4\u95f4\u9694 \u9ed8\u8ba43\u79d2 \u5982\u679c\u8bbe\u7f6e\u5c0f\u4e8e\u4e00\u79d2, \u5219\u4f1a\u88ab\u5f53\u505a\u4e00\u79d2\u4f7f\u7528 \u5728newWorkLoop\u7684\u65f6\u5019, \u4f1a\u6307\u5b9a \u4e00\u4e2a \u65f6\u95f4\u95f4\u9694\u4f20\u5165 , \u4f1a\u6839\u636e \u9ed8\u8ba4\u7684\u8c03\u6574\u6bd4\u4f8b \u8fdb\u884c\u8c03\u6574 --miner.noverify \u4e0d\u5bf9\u8fdc\u7a0b\u533a\u5757\u8fdb\u884c\u9a8c\u8bc1, ethash\u4e2d, \u4e0d\u9a8c\u8bc1\u63a5\u6536\u5230\u7684\u533a\u5757\u7684\u5de5\u4f5c\u91cf","title":"9. \u65f7\u5de5\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#10-gas","text":"--gpoblocks value \u7528\u4e8e\u68c0\u67e5gas\u4ef7\u683c\u7684\u6700\u8fd1\u5757\u7684\u4e2a\u6570 (\u9ed8\u8ba4: 20) \u8bbe\u7f6e\u5c0f\u4e8e1, \u5c06\u88ab\u5f53\u505a1\u4f7f\u7528 \u68c0\u67e5\u6700\u8fd1\u6307\u5b9a\u4e2a\u6570\u7684\u533a\u5757\u7684\u4ea4\u6613\u7684gasprice --gpopercentile value \u5efa\u8baegas\u4ef7\u53c2\u8003\u6700\u8fd1\u4ea4\u6613\u7684gas\u4ef7\u7684\u767e\u5206\u4f4d\u6570\uff0c(\u9ed8\u8ba4: 50) \u8bbe\u7f6e\u5c0f\u4e8e0 \u88ab\u5f53\u505a0, \u8bbe\u7f6e\u5927\u4e8e100 \u88ab\u5f53\u505a100 \u4f1a\u628a\u6307\u5b9a\u7684\u6700\u8fd1\u7684\u4e2a\u6570\u7684\u533a\u5757 \u7684\u6240\u6709\u4ea4\u6613\u7684 gasPrice \u8fdb\u884c\u6392\u5e8f\u4e4b\u540e, \u7136\u540e\u4ee5\u6307\u5b9a\u7684\u767e\u5206\u6bd4, \u4ece\u96c6\u5408\u4e2d\u627e\u51fa\u5bf9\u5e94\u7684 gasprice\u4e3a\u5efa\u8bae\u7684price","title":"10. GAS\u4ef7\u683c\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#11","text":"--vmdebug \u8bb0\u5f55VM\u548c\u5408\u7ea6\u8c03\u8bd5\u4fe1\u606f bool \u4e5f\u5c31\u662f\u5728opSha3\u7684\u65f6\u5019, \u65e5\u5fd7\u8bb0\u5f55\u4e86\u5bf9\u5e94\u7684hash\u503c","title":"11. \u865a\u62df\u673a\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#12","text":"--metrics \u542f\u7528metrics\u6536\u96c6\u548c\u62a5\u544abool \u5f00\u542f\u4e4b\u540e, \u6bcf3\u79d2\u6536\u96c6\u4e00\u6b21\u8fd0\u884c\u65f6\u8fdb\u7a0b\u7684\u5404\u9879\u6307\u6807, \u6b63\u5728\u4f7f\u7528\u7684\u5185\u5b58\u4e4b\u7c7b\u7684\u7b49\u7b49 --fakepow \u4e0d\u771f\u6b63\u7684\u8fdb\u884c\u6316\u77ff\u548c\u9a8c\u8bc1\u533a\u5757 --verbosity value \u8bbe\u7f6elog\u7b49\u7ea7 0=crit, 1=error, 2=warn, 3=info, 4=debug, 5=detail (default: 3) --vmodule value \u4e0d\u540c\u7684\u6a21\u5757\u4e2d, \u53ef\u4ee5\u8bbe\u7f6e\u4e0d\u540c\u7684\u65e5\u5fd7\u7b49\u7ea7. (\u6bd4\u5982 eth/*=6,p2p=5) --backtrace value \u6307\u5b9a\u6587\u4ef6\u548c\u5bf9\u5e94\u884c\u53f7, \u628a\u8fd9\u884c\u7684log\u7684\u8c03\u7528\u6808\u90fd\u6253\u5370\u51fa\u6765 (\u6bd4\u5982 \u201cblock.go:271\u201d) --debug \u65e5\u5fd7\u4f1a\u5e26\u4e0a\u6b64log\u6267\u884c\u6240\u5728\u7684\u6587\u4ef6\u540d\u548c\u5bf9\u5e94\u884c\u53f7 --pprof \u4f1a\u542f\u7528pprof HTTP\u7684\u670d\u52a1\u5668, \u53ef\u4ee5\u770b\u5230\u7a0b\u5e8f \u5f00\u542f\u4e86\u591a\u5c11\u4e2agoroutine, \u591a\u5c11\u4e2a\u7ebf\u7a0b\u7b49, \u7528\u4e8e\u5185\u5b58\u5206\u6790 --pprofaddr value pprof HTTP\u670d\u52a1\u5668\u76d1\u542c\u63a5\u53e3(\u9ed8\u8ba4\u503c:127.0.0.1) --pprofport value pprof HTTP\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3(\u9ed8\u8ba4\u503c:6060) --memprofilerate value \u6309\u6307\u5b9a\u9891\u7387\u8fdb\u884c\u5185\u5b58\u5206\u6790 \u9ed8\u8ba4512 * 1024 \u7528\u4e8epprof, \u6309\u7167\u6307\u5b9a\u7684\u5b57\u8282\u6570 \u8fdb\u884c\u6bcf\u6b21\u91c7\u6837, \u91c7\u6837\u7387\u8d8a\u5c0f, \u6570\u636e\u8d8a\u7ec6\u81f4, \u4f46\u8fdb\u7a0b\u8fd0\u884c\u8d8a\u6162 --blockprofilerate value \u6309\u6307\u5b9a\u9891\u7387\u6253\u5f00block profiling (\u9ed8\u8ba4\u503c:0) \u83b7\u53d6\u5bfc\u81f4\u963b\u585e\u7684 goroutine \u5806\u6808, \u6307\u5b9a\u7684\u6570\u503c\u7684\u610f\u601d\u662f, \u5982\u6307\u5b9a\u4e3a1,\u5219\u6bcf\u53d1\u751f1\u4e2agoroutine\u5835\u585e, \u5c31\u4f1a\u91c7\u6837\u62a5\u544a\u4e00\u6b21. \u8bbe\u7f6e\u4e3a0 , \u5219\u6b64\u91c7\u6837\u64cd\u4f5c\u53d6\u6d88 --cpuprofile \u6307\u5b9a\u6587\u4ef6\u8def\u5f84,\u5199\u5165cpu\u7684\u62a5\u544a\u5206\u6790, \u663e\u793a\u6bcf\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u7684\u65f6\u95f4 --trace \u5c06runtime\u4e2dtrace\u5199\u5165\u6307\u5b9a\u6587\u4ef6, \u5e2e\u52a9\u8ffd\u8e2aos\u7ebf\u7a0b\u5982\u4f55\u8c03\u5ea6goroutine , goroutine\u4e3a\u4ec0\u4e48\u5835\u585e\u7b49\u7b49\u95ee\u9898","title":"12. \u65e5\u5fd7\u8c03\u8bd5\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#13-whisper","text":"--shh \u542f\u7528Whisper \u5b89\u5168\u901a\u4fe1\u534f\u8bae --dev \u60c5\u51b5\u4e0b, \u9ed8\u8ba4\u5f00\u542f. \u53ea\u8981\u8bbe\u7f6e\u4e86whisper\u76f8\u5173\u7684\u547d\u4ee4\u884c\u53c2\u6570, \u90fd\u4f1a\u81ea\u52a8\u5f00\u542f whisper --shh.maxmessagesize \u53ef\u63a5\u53d7\u7684\u6700\u5927\u7684\u6d88\u606f\u5927\u5c0f (\u9ed8\u8ba4\u503c: 1024*1024) \u8bbe\u7f6e\u548c\u63a5\u6536\u6d88\u606f\u65f6, \u4f1a\u68c0\u67e5\u6d88\u606f\u7684\u5927\u5c0f, \u8d85\u8fc7\u9608\u503c, \u4f1a\u663e\u793a\u9519\u8bef --shh.pow value \u53ef\u63a5\u53d7\u7684\u6700\u5c0f\u7684POW (\u9ed8\u8ba4\u503c: 0.2) \u63a5\u6536\u5230\u7684\u8bf7\u6c42\u4fe1\u606f, \u4f1a\u6bd4\u5bf9 powtarget\u503c, \u5728 \u6307\u5b9a\u503c\u4e4b\u4e0a \u624d\u4f1a\u88ab\u63a5\u6536 \u76f8\u5f53\u4e8e\u8ba1\u7b97pow\u7684\u6210\u672c, \u4e3a\u4e86\u9632\u6b62\u5783\u573e\u6d88\u606f, \u4e5f\u662f\u4e3a\u4e86\u7f13\u89e3\u7f51\u7edc\u538b\u529b (pow\u503c\u4e5f \u6d88\u606f\u5927\u5c0f\u548cTTL\u6210\u6b63\u6bd4) --shh.restrict-light \u9650\u5236 2\u4e2a\u8f7b\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u8fde\u63a5 \u5728\u63e1\u624b\u4e2d, \u8fdb\u884c\u5224\u65ad, \u5982\u679c\u662f\u8f7b\u8282\u70b9 \u5728 \u52a0\u4e0a\u6b64\u53c2\u6570\u8bbe\u7f6e\u540e, \u90a3\u4e48 \u8282\u70b9\u95f4\u63e1\u624b\u5c06\u4e0d\u4f1a\u88ab\u901a\u8fc7","title":"13. whisper\u5b9e\u9a8c\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#14-ethash","text":"--ethash.cachedir ethash\u9a8c\u8bc1\u7f13\u5b58\u76ee\u5f55(\u9ed8\u8ba4 = datadir\u76ee\u5f55\u5185) --ethash.cachesinmem value \u5728\u5185\u5b58\u4fdd\u5b58\u7684\u6700\u8fd1\u7684ethash\u7f13\u5b58\u4e2a\u6570 (\u6bcf\u4e2a\u7f13\u5b5816MB ) (\u9ed8\u8ba4: 2) --ethash.cachesondisk value \u5728\u78c1\u76d8\u4fdd\u5b58\u7684\u6700\u8fd1\u7684ethash\u7f13\u5b58\u4e2a\u6570 (\u6bcf\u4e2a\u7f13\u5b5816MB) (\u9ed8\u8ba4: 3) --ethash.dagdir \"\" \u5b58ethash DAGs\u76ee\u5f55 (\u9ed8\u8ba4 = \u7528\u6237hom\u76ee\u5f55) --ethash.dagsinmem value \u5728\u5185\u5b58\u4fdd\u5b58\u7684\u6700\u8fd1\u7684ethash DAGs \u4e2a\u6570 (\u6bcf\u4e2a1GB\u4ee5\u4e0a) (\u9ed8\u8ba4: 1) --ethash.dagsondisk value \u5728\u78c1\u76d8\u4fdd\u5b58\u7684\u6700\u8fd1\u7684ethash DAGs \u4e2a\u6570 (\u6bcf\u4e2a1GB\u4ee5\u4e0a) (\u9ed8\u8ba4: 2)","title":"14. ethash\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#15-api","text":"--rpc \u542f\u7528HTTP-RPC\u670d\u52a1\u5668 --rpcaddr value HTTP-RPC\u670d\u52a1\u5668\u63a5\u53e3\u5730\u5740(\u9ed8\u8ba4\u503c:\u201clocalhost\u201d) --rpcport value HTTP-RPC\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3(\u9ed8\u8ba4\u503c:8545) --rpcapi value \u57fa\u4e8eHTTP-RPC\u63a5\u53e3\u63d0\u4f9b\u7684API --ws \u542f\u7528WS-RPC\u670d\u52a1\u5668 --wsaddr value WS-RPC\u670d\u52a1\u5668\u76d1\u542c\u63a5\u53e3\u5730\u5740(\u9ed8\u8ba4\u503c:\u201clocalhost\u201d) --wsport value WS-RPC\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3(\u9ed8\u8ba4\u503c:8546) --wsapi value \u57fa\u4e8eWS-RPC\u7684\u63a5\u53e3\u63d0\u4f9b\u7684API --wsorigins value websockets\u8bf7\u6c42\u5141\u8bb8\u7684\u6e90 --ipcdisable \u7981\u7528IPC-RPC\u670d\u52a1\u5668 --ipcpath \u5305\u542b\u5728datadir\u91cc\u7684IPC socket/pipe\u6587\u4ef6\u540d(\u8f6c\u4e49\u8fc7\u7684\u663e\u5f0f\u8def\u5f84) --rpccorsdomain value \u5141\u8bb8\u8de8\u57df\u8bf7\u6c42\u7684\u57df\u540d\u5217\u8868(\u9017\u53f7\u5206\u9694)(\u6d4f\u89c8\u5668\u5f3a\u5236) --jspath loadScript JavaScript\u52a0\u8f7d\u811a\u672c\u7684\u6839\u8def\u5f84(\u9ed8\u8ba4\u503c:\u201c.\u201d) --exec value \u6267\u884cJavaScript\u8bed\u53e5(\u53ea\u80fd\u7ed3\u5408console/attach\u4f7f\u7528) \u4f8b\u5b50: geth --exec \"eth.blockNumber\" console 2>/dev/null --preload value \u9884\u52a0\u8f7d\u5230\u63a7\u5236\u53f0\u7684JavaScript\u6587\u4ef6\u5217\u8868(\u9017\u53f7\u5206\u9694)","title":"15. API\u548c\u63a7\u5236\u53f0\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platone/%28%E5%8F%82%E8%80%83%29geth%E5%90%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%9C%E7%94%A81.1/#16","text":"--goerli \u9884\u5148\u914d\u7f6e\u7684POA\u6d4b\u8bd5\u7f51\u7edc --override.constantinople \u541b\u58eb\u5766\u4e01\u5821\u5206\u5c94\u8bbe\u7f6e --docroot \u6587\u6863\u6839\u76ee\u5f55, \u9ed8\u8ba4home --gcmode \u533a\u5757\u94fe\u5783\u573e\u56de\u6536\u6a21\u5f0f (\"full\", \"archive\") \u9ed8\u8ba4full \u94fe\u9000\u51fa\u65f6, full \u4f1a\u5c06 \u6700\u8fd1\u533a\u5757\u8d26\u6237\u72b6\u6001\u5199\u5165\u78c1\u76d8, archive\u4e0d\u4f1a archive\u4e0d\u4f1a\u5bf9trie\u8fdb\u884c\u4fee\u526a, \u4f1a\u5b9e\u65f6\u540c\u6b65tire\u5230\u78c1\u76d8, full\u4e0d\u4f1a --whitelist ( = ) \u4f7f\u7528\u9017\u53f7\u5206\u9694 \u53d1\u9001GetBlockHeadersMsg\u6d88\u606f\u8bf7\u6c42\u767d\u540d\u5355\u4e2d\u5bf9\u5e94\u7684\u533a\u5757\u5934 \u6536\u5230\u5bf9\u5e94\u7684\u533a\u5757\u540e, \u4f1a \u9a8c\u8bc1\u6b64\u533a\u5757hash\u662f\u5426\u8ddf\u767d\u540d\u5355\u4e2dhash \u5339\u914d\u5f97\u4e0a --dashboard \u542f\u52a8dashboard, \u6536\u96c6\u4ee5\u592a\u574a\u8282\u70b9\u6570\u636e\uff0c\u7528\u4e8e\u53ef\u89c6\u5316\u5206\u6790 --dashboard.addr dashboard\u76d1\u542c\u7684host \u9ed8\u8ba4localhost --dashboard.host dashboard\u76d1\u542c\u7684port \u9ed8\u8ba48080 --dashboard.refresh \u5237\u65b0\u95f4\u9694, \u9ed8\u8ba45s --vm.ewasm \u5916\u90e8\u7684ewasm\u914d\u7f6e ./geth --vm.ewasm=\"$HOME/testnet/libhera.so,metering=true,fallback=true\" ... --vm.evm \u5916\u90e8evm\u914d\u7f6e import-preimages hash\u9884\u955c\u50cf\u5bfc\u51fa\u5230RLP\u7f16\u7801\u7684\u6d41 geth --datadir ./data0 export-preimages exportPreImage export-preimages \u4eceRLP\u7f16\u7801\u7684\u6d41\u5bfc\u5165hash\u9884\u955c\u50cf geth --datadir ./data1 import-preimages exportPreImage","title":"16. \u8865\u5145\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/","text":"\u94fe\u4ea4\u4e92\u5de5\u5177\uff08\u539fctool\uff09\u64cd\u4f5c\u6307\u5357 \u65f6\u95f4 \u4fee\u6539\u4eba \u4fee\u6539\u4e8b\u9879 PlatONE\u7248\u672c 2020.04.28 \u9093\u752b\u6d0b \u521d\u7a3f v0.9.9 - stable 2020.05.07 \u9093\u752b\u6d0b \u521d\u7a3freview v0.9.9 - stable \u94fe\u4ea4\u4e92\u5de5\u5177\uff08\u539fctool\uff09\u64cd\u4f5c\u6307\u5357 \u5b9a\u4e49 Definition \u540d\u8bcd\u5b9a\u4e49 \u5b9a\u4e49\u4e4b\u95f4\u7684\u5173\u8054 \u6a21\u677f Template 0. \u5168\u5c40\u9009\u9879 0.1 config.json 0.2 \u8d26\u6237\u5730\u5740\u9009\u62e9 0.3 \u8fdc\u7a0b\u8282\u70b9\u8fde\u63a5 0.4 \u4e0d\u7b49\u5f85\u4ea4\u6613\u56de\u6267\u7ed3\u679c --sync* 0.5 \u5176\u4ed6\u5168\u5c40\u9009\u9879 1. \u7528\u6237\u64cd\u4f5c account 1.1 \u7528\u6237\u8f6c\u8d26 account transfer 1.2 \u7528\u6237\u6ce8\u518c account register-user 1.3 \u7528\u6237\u89d2\u8272\u6ce8\u518c account register-roles 1.4 \u7528\u6237\u4fe1\u606f\u66f4\u65b0 account update 1.5 \u7528\u6237\u4fe1\u606f\u67e5\u8be2 account query 1.6 \u7528\u6237\u72b6\u6001\u67e5\u8be2 account state // status? 2. \u5408\u7ea6\u64cd\u4f5c contract 2.1 \u5408\u7ea6\u90e8\u7f72 contract deploy 2.2 \u5408\u7ea6\u8fc1\u79fb contract migrate 2.3 \u5408\u7ea6\u6267\u884c contract execute 2.4 \u5408\u7ea6\u65b9\u6cd5\u67e5\u8be2 contract methods* 3. \u5408\u7ea6\u57df\u540d\u7cfb\u7edf\u670d\u52a1 cns 3.1 \u5408\u7ea6cns\u6ce8\u518c cns register 3.2 \u5408\u7ea6cns\u6ce8\u9500 cns unregister 3.3 \u5408\u7ea6cns\u89e3\u6790 cns resolve 3.4 \u5408\u7ea6cns\u4fe1\u606f\u67e5\u8be2 cns query 3.5 \u5408\u7ea6cns\u72b6\u6001\u67e5\u8be2 cns state // \u503e\u5411\u4f7f\u7528state 4. \u9632\u706b\u5899\u670d\u52a1 fw 4.1 \u9632\u706b\u5899\u5f00\u542f fw start* 4.2 \u9632\u706b\u5899\u5173\u95ed fw stop* 4.3 \u9632\u706b\u5899\u4fe1\u606f\u67e5\u8be2 fw query* // \u503e\u5411\u4e0d\u4f7f\u7528status? 4.4 \u9632\u706b\u5899\u89c4\u5219\u6e05\u7a7a fw clear 4.5 \u9632\u706b\u5899\u89c4\u5219\u6dfb\u52a0 fw new 4.6 \u9632\u706b\u5899\u89c4\u5219\u5220\u9664 fw delete 4.7 \u9632\u706b\u5899\u89c4\u5219\u66ff\u6362 fw reset 4.8 \u9632\u706b\u5899\u89c4\u5219\u5bfc\u5165 fw import // import rule list 4.9 \u9632\u706b\u5899\u89c4\u5219\u5bfc\u51fa fw export 5. \u7cfb\u7edf\u7ba1\u7406\u5458 admin 5.1 \u8282\u70b9\u7ba1\u7406\u5458 admin node 5.1.1 \u8282\u70b9\u6dfb\u52a0 admin node add 5.1.2 \u8282\u70b9\u5220\u9664 admin node delete 5.1.3 \u8282\u70b9\u4fe1\u606f\u66f4\u65b0 admin node update \u53ea\u66f4\u65b0\u7528\u6237\u90ae\u7bb1\u548c\u7535\u8bdd\u4fe1\u606f\uff0c\u8bbe\u8ba1\u7684\u610f\u4e49\u4e0d\u5927\uff1f 5.1.4 \u8282\u70b9\u4fe1\u606f\u67e5\u8be2 admin node query 5.1.4 \u8282\u70b9\u4fe1\u606f\u7edf\u8ba1 admin node stat 5.2 \u5408\u7ea6\u90e8\u7f72\u8005\u7ba1\u7406\u5458 admin contract* 5.2.1 \u5408\u7ea6\u90e8\u7f72\u8005\u5ba1\u6838 admin contract approve 5.2.2 \u5408\u7ea6\u90e8\u7f72\u8005\u6dfb\u52a0 admin contract add 5.2.3 \u5408\u7ea6\u90e8\u7f72\u8005\u5220\u9664 admin contract delete 5.2.4 \u90e8\u7f72\u5408\u7ea6\u5ba1\u8ba1 admin contract audit // \u6682\u65e0\u63a5\u53e3 5.2.5 \u5408\u7ea6\u90e8\u7f72\u8005\u8bf7\u6c42\u5217\u8868 admin contract list* 5.3 \u7528\u6237\u7ba1\u7406\u5458 admin user 5.3.1 \u7528\u6237\u5ba1\u6838 admin user approve 5.3.2 \u7528\u6237\u6dfb\u52a0 admin user add 5.3.3 \u7528\u6237\u5220\u9664 admin user delete 5.3.4 \u7528\u6237\u89e3\u7981 admin user enable 5.3.5 \u7528\u6237\u7981\u7528 admin user disable 5.3.6 \u7528\u6237(\u4fe1\u606f)\u66f4\u65b0 admin user update 5.3.7 \u7528\u6237\u8bf7\u6c42\u5217\u8868 admin user list* 5.4 XX\u7ba1\u7406\u5458 admin sup* 5.4.1 XX\u5ba1\u6838 admin sup approve 5.4.2 XX\u6dfb\u52a0 admin sup add 5.4.3 XX\u5220\u9664 admin sup delete 5.4.4 XX\u8bf7\u6c42\u5217\u8868 admin sup list* 5.5 \u7cfb\u7edf\u53c2\u6570\u8bbe\u7f6e admin sysconfig (\u6682\u672a\u5b9e\u73b0) 5.5.1 \u5171\u8bc6\u8bbe\u7f6e admin sysconfig consensus* 5.5.2 \u6743\u9650\u63a7\u5236\u8bbe\u7f6e admin sysconfig ac* 5.5.3 \u670d\u52a1\u8d39\u8bbe\u7f6e admin sysconfig gasfee* A. PlatONE\u7cfb\u7edf\u5408\u7ea6\u4e2d\u672a\u4f7f\u7528\u7684\u63a5\u53e3 (\u5f85\u8865\u5145) B. \u53c2\u8003\u6765\u6e90 \u5b9a\u4e49 Definition \u540d\u8bcd\u5b9a\u4e49 \u6587\u6863\u4e2d\u6d89\u53ca\u7684\u540d\u8bcd\u5b9a\u4e49\uff1a \u8d26\u6237account\uff1a\u533a\u5206\u4e8e\u94fe\u4e0a\u7684\u8d26\u6237\uff08\u5916\u90e8\u8d26\u6237EOA, \u5408\u7ea6\u8d26\u6237contract account\uff09\u7684\u6982\u5ff5\uff0c\u4e3a\u672c\u5730\u7aef\uff08local\uff09\u7684\u4e00\u4e2a\u6982\u5ff5\u3002\u8d26\u6237\uff08\u5730\u5740\uff09\u7531\u968f\u673a\u751f\u6210\u7684\u79c1\u94a5\u4ea7\u751f\u3002\u8be6\u60c5\u89c1\u5173\u7cfb\u56fe \u7528\u6237user\uff1a\u8d26\u6237\u5730\u5740\u8fdb\u884c\u7528\u6237\u6ce8\u518c\u64cd\u4f5c\u5f97\u5230\u5bf9\u5e94\u7684\u7528\u6237\u3002\u8be6\u7ec6\u53c2\u8003 \u7528\u6237\u6ce8\u518c\u8868\uff1a\u5b58\u50a8\u8d26\u6237\u8fdb\u884c\u7528\u6237\u6ce8\u518c\u65f6\u63d0\u4ea4\u7684\u76f8\u5173\u4fe1\u606f\u3002 \u7528\u6237\u5e73\u53f0\uff1a\u5ba1\u6838\u901a\u8fc7\u7684\u6ce8\u518c\u7528\u6237\u4fe1\u606f\u4f1a\u88ab\u6dfb\u52a0\u5230\u7528\u6237\u5e73\u53f0\u3002 \u6709\u6548\u7528\u6237\uff1a\u7528\u6237\u5e73\u53f0\u4e2d\u7684\u7528\u6237\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u6709\u6548\u4ee5\u53ca\u65e0\u6548\uff0c\u4ec5\u5f53\u7528\u6237\u4e3a\u6709\u6548\u72b6\u6001\u65f6\uff0c\u8be5\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5176\u62e5\u6709\u7684\u89d2\u8272\u7684\u6743\u9650\u3002\u5f53\u7528\u6237\u88ab\u7981\u7528\u6216\u88ab\u5220\u9664\u65f6\uff08\u7edf\u79f0\u4e3a\u65e0\u6548\uff09\uff0c\u65e0\u6cd5\u4eab\u6709\u94fe\u7ba1\u7406\u6743\u9650\u3002 \u89d2\u8272role\uff1a\u6709\u6548\u7528\u6237\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6ce8\u518c\u89d2\u8272\uff0c\u4e0d\u540c\u7684\u89d2\u8272\u62e5\u6709\u4e0d\u540c\u7684\u94fe\u7ba1\u7406\u6743\u9650\u3002\u8be6\u7ec6\u53c2\u8003 \uff08\u7528\u6237\uff09\u89d2\u8272\u6ce8\u518c\u8868\uff1a\u5b58\u50a8\u7528\u6237\u89d2\u8272\u6ce8\u518c\u65f6\u63d0\u4ea4\u7684\u76f8\u5173\u4fe1\u606f \u666e\u901a\u7528\u6237\uff1a\u6709\u6548\u4f46\u65e0\u4efb\u4f55\u89d2\u8272\u7684\u7528\u6237\u3002 \u89d2\u8272\u7528\u6237\uff1a\u62e5\u6709\u89d2\u8272\u7684\u6709\u6548\u7528\u6237\u3002 cns\u5e73\u53f0\uff1a\u5b58\u50a8\u5408\u7ea6cns\u6ce8\u518c\u4fe1\u606f\u3002 \u5b9a\u4e49\u4e4b\u95f4\u7684\u5173\u8054 \u5173\u7cfb\u8868 \uff1a account\u547d\u4ee4: \u8d26\u6237\u5730\u5740\u76f8\u5173\u64cd\u4f5c -\uff08\u4e0e\u516c\u79c1\u94a5\u5bf9\u7ed1\u5b9a\uff09 new delete update (changepassphrase) lock unlock EOA\u8d26\u6237\u64cd\u4f5c -\uff08\u4ee5\u592a\u574a\u539f\u751f\u6982\u5ff5\uff0c\u94fe\u4e0a\uff09 transfer balance User\u64cd\u4f5c -\uff08PlatONE\u6743\u9650\u6a21\u578b\u4e2d\u7684\u6982\u5ff5\uff0c\u94fe\u4e0a\uff09 register ...... \u5173\u7cfb\u56fe \uff1a rectangle local{ agent private_key as prk database keystore agent password package account { agent address as A A .. password } card crypto_module as crypto } prk .> A: gen prk <--> crypto: en/decode crypto <--> keystore crypto <- password rectangle operations{ card transfer card register card deploy transfer .. deploy deploy .. register } A -> transfer A -> register A -> deploy rectangle PlatONE{ package state_root{ package EOA{ agent address as B agent balance } package \u7528\u6237user{ package \u7528\u6237\u5e73\u53f0 as User{ agent address as C } package \u89d2\u8272role as Role{ agent roles } package \u7528\u6237\u6ce8\u518c\u8868 as UserReg{ } package \u89d2\u8272\u6ce8\u518c\u8868 as RoleReg{ } } package contract_account{ agent contract_address as caddr agent storage } EOA .. contract_account /'User ..contract_account'/ storage ..|> \u7528\u6237user UserReg . RoleReg C . Role RoleReg --> Role UserReg --> User } } transfer -> EOA register -> \u7528\u6237user deploy -> contract_account \u6a21\u677f Template \u63cf\u8ff0 \uff1a \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a \u53ef\u9009\u53c2\u6570\uff1a \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u91cd\u6784\u540e\uff1a \u8f93\u51fa\u7ed3\u679c \uff1a \u5907\u6ce8 \uff1a 0. \u5168\u5c40\u9009\u9879 0.1 config.json \u914d\u7f6e\u6587\u4ef6 : \u7528\u4e8e\u5b58\u50a8\u90e8\u5206\u5168\u5c40\u9009\u9879\u5bf9\u5e94\u7684\u503c\uff0c\u4ee5\u51cf\u5c11\u7528\u6237\u91cd\u590d\u8f93\u5165\u3002 \u6bcf\u6b21\u7a0b\u5e8f\u542f\u52a8\u90fd\u4f1a\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u503c\u5e76\u8d4b\u503c\u5230 config \u5bf9\u8c61\u4e2d config.json (template) { \"url\":\"http://NODE-IP:RPC-PORT\", \"keystore\":\"DEFAULT_KEYSTORE_FILE\", \"account\":\"0xDEFAULT_ACCOUNT\" // \u6682\u672a\u4f7f\u7528 // \"gas\":\"0x0\", // \"gasPrice\":\"0x0\", } 0.2 \u8d26\u6237\u5730\u5740\u9009\u62e9 \u63cf\u8ff0 \uff1a\u4f7f\u7528\u672c\u5730\u8d26\u6237\u5730\u5740\u53d1\u9001\u4ea4\u6613\uff0c\u5bf9\u5e94\u7684RPC\u8c03\u7528\u65b9\u5f0f\u5219\u4e3a eth_sendRawTransaction \u3002\u9009\u62e9\u8fdc\u7a0b\u8282\u70b9\u5b58\u50a8\u7684\u8d26\u6237\u5730\u5740\u53d1\u9001\u4ea4\u6613\uff0c\u5bf9\u5e94\u7684RPC\u8c03\u7528\u65b9\u5f0f\u5219\u4e3a eth_sendTransaction \u3002 \u53c2\u6570 \uff1a --account : \u6307\u5b9a\u53d1\u9001\u4ea4\u6613\u7684\u8d26\u6237\u5730\u5740\u3002\u5982\u679c\u540c\u65f6\u8fd8\u5b58\u5728 --local \u4ee5\u53ca --keystore \u9009\u9879\uff0c\u5219\u4f7f\u7528\u7684\u662f\u672c\u5730keystore\u4e2d\u5b58\u50a8\u7684\u8d26\u6237\u5730\u5740\uff0c\u82e5\u8be5\u5730\u5740\u4e0e --account \u4e0d\u5339\u914d\uff0c\u5219\u4f1a\u62a5\u9519\u3002 \u5f53\u53ea\u63d0\u4f9b --account \u65f6\uff0c\u5219\u4f7f\u7528\u8fdc\u7a0b\u8282\u70b9\u6240\u5b58\u50a8\u7684\u8d26\u6237\u5730\u5740\uff0c\u82e5\u5bf9\u5e94\u503c\u4e3a\u7a7a\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u5730\u5740 0X00...0 \u3002 --local : \u4ece\u672c\u5730\u9ed8\u8ba4\u7684kerystore file\u6587\u4ef6\u5939\u53bb\u5bfb\u627ekeystore\u6587\u4ef6 --keystore <file> : \u6307\u5b9a\u672c\u5730keystore\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u4f18\u5148\u5ea6\u9ad8\u4e8e --local 0.3 \u8fdc\u7a0b\u8282\u70b9\u8fde\u63a5 \u63cf\u8ff0 \uff1a\u6307\u5b9a\u8fdc\u7a0b\u8282\u70b9\u7684IP\u8fdb\u884c\u8fde\u63a5 \u53c2\u6570 : --url <string> \uff1a\u901a\u8fc7--url\u4e0e\u5168\u5c40\u53d8\u91cfconfig.Url\u83b7\u53d6URL: \u5f53\u672a\u63d0\u4f9b--url\u65f6,\u4f7f\u7528\u53d8\u91cfconfig.Url\u4e2d\u7684\u503c \u5f53\u63d0\u4f9b--url\u65f6\uff0c\u8bfb\u53d6--url\u4e2d\u7684\u503c\u5e76\u8986\u76d6config.json\u4e2durl\u952e\u5bf9\u5e94\u7684\u503c \u65e2\u672a\u63d0\u4f9b--url\u4e14\u5168\u5c40\u53d8\u91cfconfig.Url\u7684\u503c\u4e3a\u7a7a\uff0c\u62a5\u9519\u5e76\u63d0\u793a\u9519\u8bef 0.4 \u4e0d\u7b49\u5f85\u4ea4\u6613\u56de\u6267\u7ed3\u679c --sync* \u63cf\u8ff0 \uff1a\u4e3b\u8981\u7528\u4e8e\u94fe\u4ea4\u4e92\u5199\u64cd\u4f5c\uff0c\u9ed8\u8ba4\u4e3a\u540c\u6b65\u7b49\u5f85\u4ea4\u6613\u56de\u6267\u67e5\u8be2\u7684\u8fd4\u56de\u7ed3\u679c\u3002 \u53c2\u6570 : --sync \uff1a\u4e0d\u67e5\u8be2\u4ea4\u6613\u56de\u6267\uff0c\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\uff0c\u8fd4\u56de\u7ed3\u679c\u4e3aTransaction Hash\uff0c\u5728\u7f51\u7edc\u73af\u5883\u8f83\u5dee\u65f6\u5efa\u8bae\u4f7f\u7528\u8be5\u53c2\u6570\u3002\u82e5\u8981\u8fdb\u4e00\u6b65\u67e5\u8be2\u4ea4\u6613\u56de\u6267\uff0c\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u53ef\u901a\u8fc7 contract methods \u547d\u4ee4\u8fdb\u884c\u67e5\u8be2 (\u8be6\u89c1Section 2.4)\u3002 0.5 \u5176\u4ed6\u5168\u5c40\u9009\u9879 \u63cf\u8ff0 \uff1a\u94fe\u4ea4\u4e92\u64cd\u4f5c\u9700\u8981\u8fdb\u884c\u7684\u5168\u5c40\u914d\u7f6e \u53c2\u6570 : --gas <num> : \u8bbe\u7f6e\u4ee3\u7801\u6267\u884c\u7684\u6700\u5927\u5141\u8bb8\u91cf\uff0c\u4ee5\u907f\u514d\u65e0\u9650\u5faa\u73af\u3002\u9ed8\u8ba4\u503c\u4e3a(TODO) --gas-price <num> : \u8bbe\u7f6e\u6267\u884c\u94fe\u4ea4\u4e92\u547d\u4ee4\u65f6\u5355\u4f4dgas\u6240\u9700\u6d88\u8017\u7684XX\u6570\u91cf\u3002\u9ed8\u8ba4\u503c\u4e3a(TODO) 1. \u7528\u6237\u64cd\u4f5c account \u9488\u5bf9\u8d26\u6237\u5730\u5740\u7684\u76f8\u5173\u64cd\u4f5c\u3002 1.1 \u7528\u6237\u8f6c\u8d26 account transfer \u63cf\u8ff0 \uff1a\u4f7f\u7528\u8d26\u6237\u8fdb\u884c\u8f6c\u8d26\u64cd\u4f5c \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <to>: \u6536\u6b3e\u65b9\u8d26\u6237\u5730\u5740 <value>: \u8f6c\u8d26\u91d1\u989d\uff0c\u5355\u4f4d\uff08\u6682\u65e0\uff09 \u64cd\u4f5c \uff1a \u8d26\u6237\u5730\u57400xb239401ecf8427f17c6de134d6a6bddd3100251f\u5411\u8d26\u6237\u5730\u57400X123\u8f6c\u8d2610 wei \u91cd\u6784\u524d\uff1a # \u901a\u8fc7sendTransaction\u65b9\u5f0f: ctool transfer --from \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" --to \"0X123\" --value \"10\" # \u901a\u8fc7sendRawTransaction\u65b9\u5f0f: ctool transfer --from --to --value --pk // --pk (deprecated): private key file. If the argument is null, read from default path (./test/privateKeys.txt). \u91cd\u6784\u540e\uff1a # \u901a\u8fc7sendTransaction\u65b9\u5f0f ctool account transfer \"0X123\" \"10\" ## \u6307\u5b9a\u53d1\u9001\u4ea4\u6613\u8d26\u6237 ctool account transfer \"0X123\" \"10\" --account \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" # \u901a\u8fc7sendRawTransaction\u65b9\u5f0f\u53d1\u9001 ctool account transfer \"0X123\" \"10\" --keystore \"keystore.json\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u64cd\u4f5c\u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: Operation Succeeded ## \u5f02\u6b65\u67e5\u8be2 result: transaction hash is <transaction hash> # Error ## \u901a\u8fc7sendTransaction\u65b9\u5f0f ### \u8f93\u5165\u65e0\u6548\u91d1\u989d Fatal: parse value param error: strconv.ParseInt: parsing \"x0\": invalid syntax ### \u8f6c\u8d26\u91d1\u989d\u4e0d\u8db3 Fatal: send Transaction through http error: execute eth_sendTransaction rpc call error: insufficient funds for value ### \u8f6c\u8d26\u8d26\u6237\u65e0\u6548 Fatal: send Transaction through http error: execute eth_sendTransaction rpc call error: unknown account ## \u901a\u8fc7sendRawTransaction\u65b9\u5f0f \u7565 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a evm.Transfer(...) 1.2 \u7528\u6237\u6ce8\u518c account register-user \u63cf\u8ff0 \uff1a\u5bf9\u62e5\u6709\u7684\u8d26\u6237\u8fdb\u884c\u7528\u6237\u6ce8\u518c\uff08User\uff09\uff0c\u5ba1\u6838\u901a\u8fc7\u7684\u8d26\u6237\u5730\u5740\u53ca\u5176\u4e2a\u4eba\u4fe1\u606f\u5c06\u88ab\u8bb0\u5f55\u5728\u7528\u6237\u5e73\u53f0\u3002\u53ea\u6709\u8fdb\u884c\u4e86\u7528\u6237\u6ce8\u518c\u7684\u8d26\u6237\u624d\u80fd\u8fdb\u4e00\u6b65\u8fdb\u884c\u89d2\u8272\u6ce8\u518c\u7533\u8bf7\u3002\u53ef\u4ee5\u5728\u7528\u6237\u6ce8\u518c\u9636\u6bb5\u9644\u4e0a\u89d2\u8272\u7533\u8bf7\uff0c\u7ba1\u7406\u5458\u5728\u5ba1\u6838\u901a\u8fc7\u8be5\u8d26\u6237\u540e\uff0c\u4f1a\u8fdb\u4e00\u6b65\u8fdb\u884c\u89d2\u8272\u6dfb\u52a0\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <account>\uff1a \u7528\u6237\u8d26\u6237\u5730\u5740 <name>\uff1a \u7528\u6237\u540d <tel>\uff1a \u7528\u6237\u7535\u8bdd\u4fe1\u606f <email>\uff1a \u7528\u6237\u90ae\u7bb1\u4fe1\u606f \u53ef\u9009\u53c2\u6570\uff1a --roles array<string>: \u7533\u8bf7\u6ce8\u518c\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\u540d\uff0c\u683c\u5f0f\u4e3a\"[\"<role>\"]\"\u6216\u8005\"[\"<role1>\",...,\"<role3>\"]\" --remark string: \u7528\u6237\u5907\u6ce8\u4fe1\u606f \u64cd\u4f5c \uff1a \u7528\u6237\u6ce8\u518c \u91cd\u6784\u524d\uff1a ctool invoke --addr \"0xf7e769f67be5bf06d5712c355e293ef0d4c685fc\" --func 'registerUser' --param '{\"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\",\"name\":\"xiaoluo\",\"mobile\":\"13111111111\",\"email\":\"123@126.com\",\"roles\":[\"chainAdmin\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"}' --abi \"userRegister/userRegister.cpp.abi.json\" --config \"cnsManager/user.json\" ctool cnsInvoke --cns \"__sys_UserRegister\" --func 'registerUser({\"address\":\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\",\"name\":\"Alice\",\"mobile\":\"13111111111\",\"email\":\"alice@wx.bc.com\",\"roles\":[\"scDeployer, nodeAdmin\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"})' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userRegister.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool account register-user \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \"Alice\" \"13111111111\" \"alice@wx.bc.com\" // \u7701\u53bb\u586b\u5199\"__sys_UserRegister\"\u5408\u7ea6\u540d \u4ee5\u53ca\"registerUser\"\u65b9\u6cd5\u540d\u7684\u7e41\u7410\u6b65\u9aa4 // \u7528\u6237\u9700\u8981\u586b\u5199\u7684\u4fe1\u606f\u66f4\u52a0\u660e\u786e # optonal flags: ## \u89d2\u8272\u4fe1\u606f ctool account register-user --addr ... ... --roles '[\"contractDeployer\", \"nodeAdmin\"]' ## \u7528\u6237\u5907\u6ce8\u4fe1\u606f ctool account register-user --addr ... ... --remark \"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: Operation Succeeded # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int registerUser(const char* registJson) contract\uff1a userRegister register-user \u6709\u5fc5\u586b\u4fe1\u606f\uff0c\u56e0\u6b64\u5355\u72ec\u5217\u51fa\u4e00\u4e2aregister-roles 1.3 \u7528\u6237\u89d2\u8272\u6ce8\u518c account register-roles \u63cf\u8ff0 \uff1a\u7528\u6237\u901a\u8fc7\u6709\u6548\u7528\u6237\u7684\u8d26\u6237\u5730\u5740\u8fdb\u884c\u89d2\u8272\u6ce8\u518c\u7533\u8bf7\uff0c\u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u7533\u8bf7\u5e76\u62e5\u6709\u591a\u79cd\u89d2\u8272\u3002\u89d2\u8272\u7528\u6237\u4eab\u6709\u66f4\u591a\u7684\u94fe\u7ba1\u7406\u6743\u9650\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003PlatONE\u767d\u76ae\u4e66\u6743\u9650\u6a21\u578b\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <roles>: \u7533\u8bf7\u6ce8\u518c\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\u540d\uff0c\u683c\u5f0f\u4e3a\"[\"<role>\"]\"\u6216\u8005\"[\"<role1>\",...,\"<role3>\"]\" \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u89d2\u8272\u6ce8\u518c\u5408\u7ea6\u5730\u57400xf8f1bec07e2556e6be2371f441f0a1ce9c8b737b ctool invoke --addr \" \" --func 'registerRole' --param '[\"nodeAdmin\"]' --abi \"roleRegister/roleRegister.cpp.abi.json\" --config \"cnsManager/user.json\" ctool cnsInvoke --cns \"__sys_RoleRegister\" --func 'registerRole(\"[\"nodeAdmin\"]\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/roleRegister.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool account register-roles --roles [\"nodeAdmin\"] \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: OK: [RoleRegister] [registerRole] Register success # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int registerRole(const char* roles) contract\uff1a roleRegister 1.4 \u7528\u6237\u4fe1\u606f\u66f4\u65b0 account update \u63cf\u8ff0 \uff1a\u66f4\u65b0\u7528\u6237\u7684\u7535\u8bdd\u3001\u90ae\u7bb1\u7b49\u76f8\u5173\u4fe1\u606f\uff0c\u666e\u901a\u7528\u6237\uff08\u65e0\u89d2\u8272/\u65e0\u6743\u9650\u7528\u6237\uff09\u53ea\u80fd\u4fee\u6539\u81ea\u5df1\u7684\u4fe1\u606f\uff0c\u65e0\u6cd5\u4fee\u6539\u5176\u4ed6\u7528\u6237\u7684\u4fe1\u606f\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address> \uff1a \uff08\u9009\u62e9\u8fdb\u884c\u66f4\u65b0\u7684\uff09\u7528\u6237\u8d26\u6237\u5730\u5740 \u53ef\u9009\u53c2\u6570 --mobile <number> \uff1a \u7528\u6237\u7535\u8bdd\u4fe1\u606f\uff08\u66f4\u65b0\uff09 --email string \uff1a \u7528\u6237\u90ae\u7bb1\u4fe1\u606f\uff08\u66f4\u65b0\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d: ctool cnsInvoke --cns \"__sys_UserManager\" --func 'update(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\",{\"address\":\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\",\"name\":\"Alice\",\"mobile\":\"1312222\",\"email\":\"123@qq.com\",\"status\":0})' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.jso\" --config \"../config.json\" // \u8f93\u5165\u53c2\u6570\u6709\u95ee\u9898? \u91cd\u6784\u540e: # optional flags\uff1a ## \u4fee\u6539\u7528\u6237\u7535\u8bdd ctool account update \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" --mobile \"1312222\" ## \u4fee\u6539\u7528\u6237\u90ae\u7bb1 ctool account update \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" --email \"123@qq.com\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: \u66f4\u65b0\u8bb0\u5f55\u6210\u529f # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int update(const char* userAddr, const char* updateJson) contract\uff1a userManager 1.5 \u7528\u6237\u4fe1\u606f\u67e5\u8be2 account query \u63cf\u8ff0 \uff1a\u6839\u636e\u67e5\u8be2\u952e\u503c\u4ee5\u53ca\u8f85\u52a9\u9009\u9879\u8fdb\u884c\u4fe1\u606f\u7684\u7b5b\u9009\u67e5\u8be2\uff0c\u8fd4\u56de\u6240\u6709\u5339\u914d\u6210\u529f\u7684\u6570\u636e\u5bf9\u8c61 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a \u7528\u6237\u4fe1\u606f\u67e5\u8be2\uff0c\u7528\u4e8e\u7528\u6237\u4fe1\u606f\u66f4\u65b0\u3002 <account>: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u6216\u8d26\u6237\u540d\u79f0\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 // \u672a\u542f\u7528 --name string\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u8d26\u6237\u540d\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 \u5f85\u5546\u69b7\u53c2\u6570\uff08\u6682\u672a\u5b9e\u73b0\uff09\uff1a --status int\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u72b6\u6001\u3001\u6ce8\u518c\u72b6\u6001\u8fdb\u884c\u67e5\u8be2\u3002\u7528\u6237\u72b6\u6001\uff1a0\u6709\u6548\uff0c1\u7981\u7528, 2\u5220\u9664\u3002\u6ce8\u518c\u72b6\u6001\uff1a1\u7533\u8bf7\u4e2d\uff0c2\u5df2\u6279\u51c6\uff0c3\u62d2\u7edd --roles array<string>\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u89d2\u8272\u8fdb\u884c\u67e5\u8be2\uff0c\u683c\u5f0f\u4e3a\"[\"<role>\"]\" --reg string\uff1a \u8f85\u52a9\u9009\u9879\uff0c\u901a\u5e38\u642d\u914d--status\u8fdb\u884c\u4f7f\u7528\u3002\u53c2\u6570\u4e3a\"user\",\u5373\u5bf9\u7528\u6237\u6ce8\u518c\u8868\u8fdb\u884c\u67e5\u8be2\uff1b\u53c2\u6570\u4e3a\"role\",\u5373\u5bf9\u7528\u6237\u89d2\u8272\u6ce8\u518c\u8868\u8fdb\u884c\u67e5\u8be2\u3002 --display <num>\uff1a \u8f85\u52a9\u9009\u9879\uff0c\u8bbe\u7f6e\u67e5\u8be2\u5bf9\u8c61\u7684\u663e\u793a\u6570\u76ee\u3002\u642d\u914d\u67e5\u8be2\u952e\u8fdb\u884c\u4f7f\u7528\u3002\u82e5\u8f93\u5165\u663e\u793a\u6570\u76ee\u5927\u4e8e\u5b9e\u9645\u5bf9\u8c61\u6570\u76ee\uff0c\u5219\u663e\u793a\u5168\u90e8\u67e5\u8be2\u5bf9\u8c61\u3002\u53cd\u4e4b\uff0c\u663e\u793a\u524ddisplay\u6761\u6570\u76ee\uff0c\u6216\u4f7f\u7528--index\u8fdb\u884c\u8f85\u52a9\u663e\u793a\u3002\u8f93\u5165\u4e3a\u7a7a\u6216\u65e0--display\u9009\u9879\u65f6\uff0c\u5219\u8fd4\u56de\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u67e5\u8be2\u5bf9\u8c61\u3002 --index <num>: \u8f85\u52a9\u9009\u9879\uff0c\u642d\u914d--display\u4f7f\u7528\uff0c\u9ed8\u8ba4\u4e3a0\u3002\u663e\u793a\u7b2cdisplay*index\u6761\u81f3\u7b2cdisplay*(index+1)\u6761\u67e5\u8be2\u4fe1\u606f\uff0c\u82e5display*index\u5927\u4e8e\u5b9e\u9645\u5bf9\u8c61\u6570\u76ee\uff0c\u5219\u5ffd\u7565--index\u9009\u9879\u7684\u4f5c\u7528\u3002\u82e5\u5b9e\u9645\u67e5\u8be2\u5230\u7684\u5bf9\u8c61\u6570\u76ee\u4e3an, \u4e14display*index<n<display*(index+1),\u5219\u663e\u793a\u7b2cdisplay*index\u6761\u81f3\u7b2cn\u6761\u67e5\u8be2\u4fe1\u606f\u3002 \u64cd\u4f5c \uff1a \u7528\u6237\u4fe1\u606f\u548c\u7528\u6237\u89d2\u8272\u4fe1\u606f\u5206\u522b\u6765\u81ea\u4e0d\u540c\u7cfb\u7edf\u5408\u7ea6\u7684\u5b58\u50a8\u4e2d\uff0c\u91cd\u6784\u540e\u6211\u4eec\u628a\u7528\u6237\u4fe1\u606f\u4e0e\u89d2\u8272\u4fe1\u606f\u5728\u5185\u90e8\u8fdb\u884c\u5173\u8054\u540e\u518d\u53cd\u9988\u7ed9\u7528\u6237\u3002\uff08\u672a\u5b9e\u73b0\uff09 \u91cd\u6784\u524d\uff1a # 1 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u67e5\u8be2\u7528\u6237\u4fe1\u606f ## \u6b65\u9aa41\uff1a ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'getAccountByAddress' --param \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" --abi \"userManager/userManager.cpp.abi.json\" --config \"cnsManager/config.json\" ## \u6b65\u9aa42\uff1a getRolesByAddress # 2 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f ## \u6b65\u9aa41\uff1a ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'getAccountByName' --param \"xiaoluo\" --abi \"userManager/userManager.cpp.abi.json\" --config \"cnsManager/config.json\" ctool cnsInvoke --cns \"__sys_UserManager\" --func 'getAccountByName(\"Alice\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.json\" --config \"../config.json\" ## \u6b65\u9aa42\uff1a getRolesByName # 3 \u901a\u8fc7\u89d2\u8272\u540d\u67e5\u8be2\u89d2\u8272\u4fe1\u606f ## \u6b65\u9aa41\uff1a ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'getAccountsByRole' --param \"chainAdmin\" --abi \"roleManager/roleManager.cpp.abi.json\" --config \"cnsManager/config.json\" ## \u5982\u679c\u89d2\u8272\u5b58\u5728\u5219\u7528\u6237\u72b6\u6001\u4e00\u5b9a\u4e3a\u6709\u6548\uff1f\u4e0d\u4e00\u5b9a ## \u6b65\u9aa42\uff1aisValidUser(for\u5faa\u73af\u67e5\u8be2\uff0c\u589e\u52a0\u8d1f\u62c5\uff1f) # 5 \u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u6ce8\u518c\u8868\u4fe1\u606f ## \u7528\u6237\u6ce8\u518c\u8868 ## \u89d2\u8272\u6ce8\u518c\u8868 \u91cd\u6784\u540e\uff1a # 1 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u67e5\u8be2\u7528\u6237\u4fe1\u606f ctool account query \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" # 2 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f ctool account query \"xiaoluo\" # 3 \u901a\u8fc7\u89d2\u8272\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f \uff08\u6682\u672a\u5b9e\u73b0\uff09 ctool account query --roles [\"chainAdmin\"] # 4 \u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u7528\u6237\u4fe1\u606f \uff08\u65e0\u5bf9\u5e94\u63a5\u53e3\uff0c\u672a\u5b9e\u73b0\uff09 ctool account query --status \"0\" --display \"10\" --index \"2\" // 0:\u53ef\u7528; 1:\u7981\u7528; 2:\u5220\u9664 \u4e0d\u5bf9\u5220\u9664\u72b6\u6001\u8fdb\u884c\u67e5\u8be2\uff1f # 5 \u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u6ce8\u518c\u8868\u4fe1\u606f \uff08\u6682\u672a\u5b9e\u73b0\uff09 ## \u7528\u6237\u6ce8\u518c\u8868 ctool account query --status \"1\" --reg \"user\" --display \"10\" --index \"2\" // 1\u5ba1\u6838\u4e2d\uff0c2\u5df2\u6fc0\u6d3b\uff0c3\u5df2\u62d2\u7edd ## \u89d2\u8272\u6ce8\u518c\u8868 \uff08\u6682\u672a\u5b9e\u73b0\uff09 ctool account query --status \"0\" --reg \"role\" --display \"10\" --index \"2\" // 1 \u7533\u8bf7\u4e2d 2 \u5df2\u6279\u51c6 3 \u5df2\u62d2\u7edd \u8f93\u51fa\u7ed3\u679c \uff1a // \u57fa\u4e8e\u5bf9\u7528\u6237\u4fe1\u606f\u4fdd\u62a4\u7684\u76ee\u7684\uff0c\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u4e0d\u5305\u542b--tel, --email\u4fe1\u606f\uff1f # \u901a\u7528\u683c\u5f0f ## \u6210\u529f \u67e5\u8be2\u5230XX\u6761\u4fe1\u606f\uff0c\u663e\u793aXX\u6761\uff1a \uff08\u6682\u672a\u5b9e\u73b0\uff09 result: %s # \u5931\u8d25 \u540c 2.3 # 1 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u67e5\u8be2\u7528\u6237\u4fe1\u606f \u7528\u6237\u4fe1\u606f\u5bf9\u8c61\uff1a json<userInfo> { \"adress\": , \"name\": , \"email\": , \"mobile\": , \"status\": } ## \u6210\u529f\uff1a result: { \"code\":0, \"msg\":\"succeed\", \"data\":{ \"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\", \"name\":\"xiaoluo\", \"mobile\":\"1312222\", \"email\":\"123@qq.com\", \"status\":2 } } # 2 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f \u7ed3\u679c\u540c# 1 # 3 \u901a\u8fc7\u89d2\u8272\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f \uff08\u6682\u672a\u5b9e\u73b0\uff09 array of json<roleInfo> { \"address\": , \"name\": , \"roles\": } \u6210\u529f\uff1a result: { \"code\":0, \"msg\":\"Success\", \"data\":[{ \"name\":\"xiaoluo\", \"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\"}], \"roles\": } # 4 \u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u7528\u6237\u4fe1\u606f N/A # 5 \u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u6ce8\u518c\u4fe1\u606f \uff08\u6682\u672a\u5b9e\u73b0\uff09 \u7528\u6237\u6ce8\u518c\u8868 json<registerInfo> { \"user_address\": , \"name\": , \"mobile\": , \"email\": , \"remark\": , \"user_state\": , \"auditor_address\": , \"roles\": } \uff08\u5f85\u8865\u5145\uff09 \u89d2\u8272\u6ce8\u518c\u8868 \uff08\u6682\u672a\u5b9e\u73b0\uff09 json<registerUserInfo> { \"userAddress\": , \"userName\": , \"roleRequireStatus\": , \"requireRoles\": , \"approver\": } \uff08\u5f85\u8865\u5145\uff09 \u5907\u6ce8 \uff1a \u7528\u6237\u6ce8\u518c\u5408\u7ea6\u4e2d\u672a\u4f7f\u7528\u7684\u65b9\u6cd5\uff1a userRegister.getAccountByAddress() userRegister.getAccountByUsername() \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a const char* getAccountByAddress(const char* address) const contract\uff1a userManager const char* getRolesByAddress(const char *address)const contract\uff1a userManager const char* getAccountByName(const char* name) const contract\uff1a userManager const char* getRolesByName(const char *name)const contract\uff1a userManager const char* getAccountsByRole(const char *role)cont contract\uff1a roleManager const char* getRegisterInfosByStatus(int status, int pageNum, int pageSize) const contract\uff1a roleRegister const char* getAccountsByStatus(int pageNum, int pageSize, int accountStatus) const contract\uff1a userRegister 1.6 \u7528\u6237\u72b6\u6001\u67e5\u8be2 account state // status? \u63cf\u8ff0 \uff1a\u67e5\u8be2\u7528\u6237\u7684\u5f53\u524d\u72b6\u6001\uff0c\u5f53\u524d\u72b6\u6001\u6709\u4ee5\u4e0b\u51e0\u79cd\u53ef\u80fd\uff1a1. \u8d26\u6237\u672a\u6ce8\u518c\u30022. \u8d26\u6237\u5ba1\u6838\u4e2d\u30023. \u8d26\u6237\u5ba1\u6838\u88ab\u62d2\u7edd\u30024. \u65e0\u6548\u7528\u6237\uff08\u88ab\u7ba1\u7406\u5458\u7981\u7528\u6216\u5220\u9664\uff09\u30025. \u666e\u901a\u7528\u6237\uff08\u6709\u6548\u7528\u6237\uff0c\u65e0\u89d2\u8272\uff09\u30026. \u6743\u9650\u7528\u6237\uff0c\u5ba1\u6838\u4e2d\u89d2\u8272\uff1a <num> \uff0c\u5df2\u62e5\u6709\u89d2\u8272\uff1a <num> \u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <account>\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u6216\u8d26\u6237\u540d\u8fdb\u884c\u72b6\u6001\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u6b65\u9aa41\uff1a userRegister:getStatusByAddress ctool cnsInvoke --cns \"__sys_UserManager\" --func 'isValidUser(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.json\" --config \"../config.json\" # \u6b65\u9aa42\uff1auserManager: isValidUser # \u6b65\u9aa43\uff1aroleRegister: getRegisterInfoByAddress/ Name # \u6b65\u9aa44\uff1aroleManager: getRolesByAddress/ Name \u91cd\u6784\u540e\uff1a ctool account status \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \u8f93\u51fa\u7ed3\u679c : \u8fd4\u56de\u7c7b\u578b\uff1astring<status> \u8fd4\u56de\u4ee5\u4e0b\u7ed3\u679c\u4e2d\u7684\u5176\u4e2d\u4e00\u4e2a\uff1a # \u6b65\u9aa41\uff1a 1. \u8d26\u6237\u672a\u6ce8\u518c 2. \u8d26\u6237\u5ba1\u6838\u4e2d 3. \u8d26\u6237\u5ba1\u6838\u88ab\u62d2 # \u6b65\u9aa42\uff1a 4. \u65e0\u6548\u7528\u6237\uff08\u88ab\u7ba1\u7406\u5458\u7981\u7528\u6216\u5220\u9664\uff09 # \u6b65\u9aa43\uff1a 5. \u666e\u901a\u7528\u6237\uff08\u6709\u6548\u7528\u6237\uff0c\u65e0\u89d2\u8272\uff09 \u5ba1\u6838\u4e2d\u89d2\u8272\uff1a... # \u6b65\u9aa44\uff1a 6. \u6743\u9650\u7528\u6237\uff0c \u5ba1\u6838\u4e2d\u89d2\u8272\uff1a... \u5df2\u62e5\u6709\u89d2\u8272\uff1a... \uff08\u5f85\u8865\u5145\uff09 getRolesByAddress/Name result: { \"code\":0, \"msg\":\"Success\", \"data\":[\"contractDeployer\",\"contractAdmin\"] } \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a int getStatusByAddress(const char* address) const contract\uff1a userRegister getStatusByName contract\uff1a userRegister 2. \u5408\u7ea6\u64cd\u4f5c contract \u9488\u5bf9\u5408\u7ea6\u7684\u76f8\u5173\u64cd\u4f5c 2.1 \u5408\u7ea6\u90e8\u7f72 contract deploy \u63cf\u8ff0 \uff1a\u5408\u7ea6\u90e8\u7f72\u8005\u5c06\u7f16\u5199\u597d\u7684\u5408\u7ea6\u90e8\u7f72\u5230\u94fe\u4e0a\u3002\u652f\u6301wasm\u865a\u62df\u673a\u5408\u7ea6\u548cevm\u865a\u62df\u673a\u5408\u7ea6\u90e8\u7f72\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <codeFile>\uff1a \u5408\u7ea6\u7f16\u8bd1\u540e\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u6587\u4ef6\u8def\u5f84 \u53ef\u9009\u53c2\u6570\uff1a --abi <file>\uff1a \u5408\u7ea6abi\u6587\u4ef6\u8def\u5f84\uff0c\u90e8\u7f72wasm\u5408\u7ea6\u5fc5\u987b\u63d0\u4f9b\uff0c\u90e8\u7f72evm\u5408\u7ea6\u4e0d\u9700\u8981\u63d0\u4f9b --vm value: \u9009\u62e9\u8fdb\u884c\u90e8\u7f72\u7684\u5408\u7ea6\uff08\u76ee\u524d\u652f\u6301evm\u5408\u7ea6\uff0cwasm\u5408\u7ea6\uff0c\u9ed8\u8ba4\u4e3awasm\u5408\u7ea6\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool deploy --abi \"appContract/my_contract/my_contract.cpp.abi.json\" --code \"appContract/my_contract/my_contract.wasm\" --config \"./config.json\" \u91cd\u6784\u540e\uff1a ## wasm\u5408\u7ea6 ctool contract deploy \"./test/test_case/wasm/contracta.wasm\" --abi \"./test/test_case/wasm/contracta.cpp.abi.json\" ## evm\u5408\u7ea6 ctool contract deploy \"./test/test_case/sol/storage_byzantium_065.bin\" --vm evm \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f\uff1a ## \u540c\u6b65\u67e5\u8be2 result: contract address is 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 # \u5931\u8d25\uff1a \u53ef\u80fd\u5931\u8d25\u7684\u539f\u56e0\uff0c\u5177\u4f53\u9519\u8bef\u4fe1\u606f\u8bf7\u53c2\u7167\u4ee3\u7801 1. rlp\u7f16\u7801\u5931\u8d25 2. Http\u53d1\u9001\u5931\u8d25\uff1a * \u65e0\u8fd4\u56de\u7ed3\u679c * \u53d1\u9001\u51fa\u9519 * \u53d1\u9001\u6210\u529f\uff0c\u72b6\u6001\u7801\u4e0d\u4e3a200 3. Rpc\u8c03\u7528\u5931\u8d25 * RPC JSON\u6d88\u606f\u89e3\u6790\u5931\u8d25 * RPC\u8c03\u7528\u5931\u8d25\uff1a<\u5931\u8d25\u4fe1\u606f> 4. \u4ea4\u6613\u56de\u6267\u67e5\u8be2\u5931\u8d25 * \u67e5\u8be2\u8d85\u65f6 * \u4ea4\u6613\u6267\u884c\u5931\u8d25\uff0c\u72b6\u6001\u7801\u4e3a0x0 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a evm.Create(...) 2.2 \u5408\u7ea6\u8fc1\u79fb contract migrate \u63cf\u8ff0 \uff1a\u5c06\u65e7\u5408\u7ea6\u7684\u6570\u636e\u8fc1\u79fb\u5230\u65b0\u5408\u7ea6\u4e2d\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u65e7\u5408\u7ea6\u8d26\u6237\u5730\u5740 <to>: \u65b0\u5408\u7ea6\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool migInvoke --addr ${destination_contract_addr} --func 'migrateFrom' --param ${source_contract_addr} --config ${ctool.json} \u91cd\u6784\u540e\uff1a ctool contract migrate ${destination_contract_addr} ${source_contract_addr} \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: Operation Success # \u5931\u8d25\uff1a \u7565 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func migProcess(*state.StateDB, common.Address, common.Address, []byte) ([]byte, uint64, error) \u76ee\u524d\u63a5\u53e3\u5b58\u5728\uff0c\u4f46\u5e76\u672a\u542f\u7528\u76f8\u5e94\u529f\u80fd\uff0c\u6240\u4ee5\u64cd\u4f5c\u540estorage trie\u5e76\u672a\u4ece\u65e7\u5408\u7ea6\u590d\u5236\u5230\u65b0\u5408\u7ea6\u4e2d \u8fdb\u4e00\u6b65\uff1a\u8c03\u7528\u8fd4\u56de\u7ed3\u679c\u786e\u8ba4 2.3 \u5408\u7ea6\u6267\u884c contract execute \u63cf\u8ff0 \uff1a\u8c03\u7528\u5e76\u6267\u884c\u5408\u7ea6\u4e2d\u7684\u65b9\u6cd5\u3002\u652f\u6301wasm\u865a\u62df\u673a\u5408\u7ea6\u548cevm\u865a\u62df\u673a\u5408\u7ea6\u65b9\u6cd5\u7684\u8c03\u7528\u3002\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u8be5\u547d\u4ee4\u5b9e\u73b0\u7cfb\u7edf\u5408\u7ea6\u7684\u8c03\u7528 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <contract>: \u5408\u7ea6\u8d26\u6237\u5730\u5740\u6216\u5408\u7ea6\u540d\u79f0 <function>: \u88ab\u6267\u884c\u5408\u7ea6\u7684\u5177\u4f53\u65b9\u6cd5\u4ee5\u53ca\u53c2\u6570\uff0c \u683c\u5f0f<funcname>(<param1>,<param2>) \u6216\u8005<funcname>()\u3002\u793a\u4f8b\uff1agetName()\u3002 \u53ef\u9009\u53c2\u6570\uff1a --param value: \u5408\u7ea6\u65b9\u6cd5\u7684\u5165\u53c2\uff0c\u5f53\u6709\u591a\u4e2a\u5165\u53c2\u65f6\uff0c\u4e00\u4e2a--param\u5bf9\u5e94\u4e00\u4e2a\u53c2\u6570\u3002\u683c\u5f0f\uff1a--param <value1> --param <value2> --abi <file>: \u5408\u7ea6abi\u6587\u4ef6\u8def\u5f84\u3002wasm\u865a\u62df\u673a\u5408\u7ea6abi\u6587\u4ef6\u672a\u6307\u5b9a\u65f6\u4f1a\u9ed8\u8ba4\u4ece\u94fe\u4e0a\u83b7\u53d6(\u672a\u542f\u7528)\u3002evm\u865a\u62df\u673a\u5408\u7ea6\u6267\u884c\u5fc5\u987b\u6307\u5b9aabi\u6587\u4ef6\uff0c\u5426\u5219\u6267\u884c\u51fa\u9519\u3002 --vm value: \u9009\u62e9\u8fdb\u884c\u6267\u884c\u7684\u5408\u7ea6\uff08\u76ee\u524d\u652f\u6301evm\u5408\u7ea6\uff0cwasm\u5408\u7ea6\uff0c\u9ed8\u8ba4\u4e3awasm\u5408\u7ea6\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u901a\u8fc7\u5408\u7ea6\u5730\u5740\u8c03\u7528\u5408\u7ea6 ## \u5199\u64cd\u4f5c ### \u5f62\u5f0f1 ctool invoke --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --abi \"appContract/my_contract/my_contract.cpp.abi.json\" --config \"./config.json\" --func \"setName\" --param \"wxbc\" ### \u5f62\u5f0f2 ctool invoke --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --abi ... ... --func \"setName(wxbc)\" //\u5efa\u8bae\u5199\u6210\u7b2c\u4e8c\u79cd\u5f62\u5f0f ## \u53ea\u8bfb\u64cd\u4f5c ctool invoke --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --abi \"appContract/my_contract/my_contract.cpp.abi.json\" --config \"./config.json\" --func \"getName\" # \u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8c03\u7528\u5408\u7ea6\uff08cns\u670d\u52a1\uff09 ctool cnsInvoke --cns \"test\" --abi \"appContract/my_contract/my_contract.cpp.abi.json\" --config \"./config.json\" --func \"setName(wxbc)\" //--cns (deprecated?) \u91cd\u6784\u540e\uff1a # \u901a\u8fc7\u5408\u7ea6\u5730\u5740\u8c03\u7528\u5408\u7ea6 ## wasm\u5408\u7ea6\uff08\u9ed8\u8ba4\uff09 ctool contract execute \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" \"setName(wxbc)\" ## evm\u5408\u7ea6 ctool contract execute ... ... --vm evm # \u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8c03\u7528\u5408\u7ea6\uff08cns\u670d\u52a1\uff09 ctool contract execute \"test\" \"setName(wxbc)\" // \u6ce8\uff1aevm\u5408\u7ea6\uff0c\u53ef\u4ee5\u901a\u8fc7CNS\u6ce8\u518c\u5408\u7ea6\u540d\uff0c\u4f46\u6682\u65f6\u4e0d\u652f\u6301\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u5408\u7ea6\u8c03\u7528\u3002 \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f request json data: %s response json: %s ## \u5199\u64cd\u4f5c * trasaction hash: %s ## \u53ea\u8bfb\u64cd\u4f5c * result: %v * result: [] # \u793a\u4f8b ## \u5199\u64cd\u4f5c transaction hash: \" \" ## \u53ea\u8bfb\u64cd\u4f5c result: wxbc # \u5931\u8d25 \u7565 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction or eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1aN/A 2.4 \u5408\u7ea6\u65b9\u6cd5\u67e5\u8be2 contract methods* \u63cf\u8ff0 \uff1a\u67e5\u8be2\u6307\u5b9a\u5408\u7ea6\u6240\u62e5\u6709\u7684\u65b9\u6cd5\uff0c\u8fd4\u56de\u65b9\u6cd5\u5217\u8868\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a --contract <string>: \u5408\u7ea6\u8d26\u6237\u5730\u5740\uff08\u6216\u8005\u5408\u7ea6\u540d\u79f0\uff0c\u5c1a\u672a\u5b9e\u73b0 --abi <file>: \u5408\u7ea6abi\u6587\u4ef6\u8def\u5f84\u3002wasm\u865a\u62df\u673a\u5408\u7ea6abi\u6587\u4ef6\u672a\u6307\u5b9a\u65f6\u4f1a\u9ed8\u8ba4\u4ece\u94fe\u4e0a\u83b7\u53d6\u3002evm\u865a\u62df\u673a\u5408\u7ea6\u6267\u884c\u5fc5\u987b\u6307\u5b9aabi\u6587\u4ef6\uff0c\u5426\u5219\u6267\u884c\u51fa\u9519\u3002 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u65e0 \u91cd\u6784\u540e\uff1a # \u901a\u8fc7abi\u83b7\u53d6\u5e76\u663e\u793a\u6240\u6709\u5408\u7ea6\u65b9\u6cd5 ctool contract methods --abi \"appContract/my_contract/my_contract.cpp.abi.json\" # \u901a\u8fc7\u5408\u7ea6\u5730\u5740\u83b7\u53d6\u5e76\u663e\u793a\u6240\u6709\u5408\u7ea6\u65b9\u6cd5 ctool contract methods --contract \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" // \u6ce8\uff1a\u524d\u63d0\u662f\u8be5\u5408\u7ea6\u5730\u5740\u7684abi\u6587\u4ef6\u6309\u7167\u5bf9\u5e94\u547d\u540d\u683c\u5f0f\u5b58\u50a8\u4e8e./abi\u6587\u4ef6\u5939\u4e2d \u8f93\u51fa\u7ed3\u679c \uff1a -------contract methods list---------- Method 1: retreive() int32 Method 2: store(num int32) ... ... \u5907\u6ce8 \uff1a \u65e0 3. \u5408\u7ea6\u57df\u540d\u7cfb\u7edf\u670d\u52a1 cns \u9488\u5bf9\u5408\u7ea6\u57df\u540d\u7cfb\u7edf\u670d\u52a1\u7684\u76f8\u5173\u64cd\u4f5c\u3002\u76ee\u524d\u4ec5\u652f\u6301wasm\u5408\u7ea6\u4f7f\u7528\u8be5\u670d\u52a1\uff0cevm\u5408\u7ea6\u53ef\u4ee5\u8fdb\u884ccns\u6ce8\u518c\uff0c\u4f46\u65e0\u6cd5\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u5b9e\u73b0\u5408\u7ea6\u8c03\u7528\u3002 3.1 \u5408\u7ea6cns\u6ce8\u518c cns register \u63cf\u8ff0 \uff1a\u5c06\u5408\u7ea6\u6ce8\u518c\u5230cns\u5e73\u53f0\u4e2d\uff0c\u6ce8\u518c\u540e\u7684\u5408\u7ea6\u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u8d26\u6237\u5730\u5740\u8fdb\u884c\u8c03\u7528\u6267\u884c\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5176\u5bf9\u5e94\u7684\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u6267\u884c\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>: \u5728cns\u4e2d\u6ce8\u518c\u7684\u5408\u7ea6\u540d\u79f0 <version>: \u5728cns\u4e2d\u6ce8\u518c\u7684\u7248\u672c\u53f7\uff0c\uff08\u8865\u5145\uff09\u3002\u683c\u5f0f\uff1a\"X.X.X.X\" <address>: \u8fdb\u884c\u6ce8\u518c\u7684\u5408\u7ea6\u7684\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'cnsRegister' --param \"test\" --param \"1.0.0.0\" --param \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --abi \"cnsManager/cnsManager.cpp.abi.json\" --config \"cnsManager/config.json\" \"cnsRegister('test', 1.0.0.0, 0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f)\" \u91cd\u6784\u540e\uff1a cns register \"test\" \"1.0.0.0\" \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" // \u7701\u53bb\u586b\u5199cnsProxy\u5408\u7ea6\u5730\u5740 // \u7528\u6237\u8f93\u5165\u53c2\u6570\u65f6\u66f4\u52a0\u660e\u786e \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: cnsRegister succeed! # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int cnsRegister(const char *name, const char *version, const char *address) contract: cnsManager 3.2 \u5408\u7ea6cns\u6ce8\u9500 cns unregister \u63cf\u8ff0 \uff1a\u6ce8\u9500\u6ce8\u518c\u5728cns\u5e73\u53f0\u4e2d\u7684\u5408\u7ea6\u3002\u901a\u8fc7\u4fee\u6539\u8be5\u5408\u7ea6\u6570\u636e\u5bf9\u8c61\u7684\u72b6\u6001\u5b57\u6bb5\u5b9e\u73b0\uff0c\u56e0\u6b64\u8be5\u5408\u7ea6\u7684cns\u6ce8\u518c\u6570\u636e\u4ecd\u7136\u4f1a\u4fdd\u7559\u5728cns\u5e73\u53f0\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 cns query \u547d\u4ee4\u67e5\u8be2\u5230\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>\uff1a \u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u5408\u7ea6\u540d\u79f0 <version>: \u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u7248\u672c\u53f7 \u53ef\u9009\u53c2\u6570\uff1a ```param --ver string: \u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u7248\u672c\u53f7\uff0c\u9ed8\u8ba4\u4e3a\"latest\" \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'cnsUnregister' --param \"test\" --param \"1.0.0.0\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a # \u6ce8\u9500\u6700\u65b0\u7248\u672c ctool cns unregister \"test\" # \u6ce8\u9500\u6307\u5b9a\u7248\u672c ctool cns unregister \"test\" --ver \"1.0.0.0\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u64cd\u4f5c result: cnsUnregister succeed! # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int cnsUnregister(char *name, char *version) contract: cnsManager 3.3 \u5408\u7ea6cns\u89e3\u6790 cns resolve \u63cf\u8ff0 \uff1a\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u4ee5\u53ca\u7248\u672c\u53f7\uff08\u9ed8\u8ba4\u4e3a\"latest\"\uff09\u89e3\u6790\u51fa\u5bf9\u5e94\u7684\u8d26\u6237\u5730\u5740\u3002\u4e00\u4e2a\u5408\u7ea6\u540d\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\uff08\u5728\u6ce8\u518c\u7684\uff09\u5408\u7ea6\u5730\u5740\uff0c\u901a\u8fc7\u7248\u672c\u53f7\u89e3\u6790\u51fa\u5bf9\u5e94\u7684\u5408\u7ea6\u5730\u5740\uff0c\u4f46\u5728cns\u5e73\u53f0\u4e2d\u5df2\u6ce8\u9500\u7684\u5408\u7ea6\u540d\u5bf9\u5e94\u7684\u7248\u672c\u53f7\u65e0\u6cd5\u89e3\u6790\u51fa\u76f8\u5e94\u7684\u8d26\u6237\u5730\u5740\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>\uff1a \u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u5408\u7ea6\u540d\u79f0 \u53ef\u9009\u53c2\u6570\uff1a --ver string: \u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u7248\u672c\u53f7\uff0c\u9ed8\u8ba4\u4e3a\"latest\" \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getContractAddress' --param \"test\" --param \"1.0.0.0\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getContractAddress' --param \"test\" --param \"1.0.0.0\" --abi \"cnsManager/cnsManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a # \u67e5\u8be2\u6700\u65b0\u7248\u672c ctool cns resolve \"test\" # \u67e5\u8be2\u6307\u5b9a\u7248\u672c ctool cns resolve \"test\" --ver \"1.0.0.0\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: <address> ## \u5bf9\u5e94\u5408\u7ea6\u540d\u79f0\u7684\u7248\u672c\u5df2\u6ce8\u9500 result: <null> # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a const char *getContractAddress(char *name, char *version) const contract: cnsManager 3.4 \u5408\u7ea6cns\u4fe1\u606f\u67e5\u8be2 cns query \u63cf\u8ff0 \uff1a\u6839\u636e\u67e5\u8be2\u952e\u503c\u4ee5\u53ca\u8f85\u52a9\u9009\u9879\u8fdb\u884ccns\u6ce8\u518c\u4fe1\u606f\u7684\u7b5b\u9009\u67e5\u8be2\uff0c\u8fd4\u56de\u6240\u6709\u5339\u914d\u6210\u529f\u7684\u6570\u636e\u5bf9\u8c61\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a --contract <address>: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u5408\u7ea6\u8d26\u6237\u5730\u5740\u6216\u8005\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u67e5\u8be2 --user <address>\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u8fdb\u884c\u67e5\u8be2\uff0c\u67e5\u8be2\u8be5\u7528\u6237\u6ce8\u518c\u5728cns\u7684\u5408\u7ea6 // \u4f7f\u7528--user\u4f53\u73b0\u4e86PlatONE\u7684\u6743\u9650\u6a21\u578b\u7279\u8272 --all \u67e5\u8be2\u952e\uff0c\u663e\u793a\u6240\u6709cns\u4e2d\u6240\u6709\u6ce8\u518c\u7684\u5bf9\u8c61\uff08\u4e0d\u663e\u793a\u5df2\u6ce8\u9500\u7684\u4fe1\u606f\uff09 // \u540d\u79f0\u5f85\u5b9aTODO --display <num>\uff1a x --index <num>\uff1a x // \u5c1a\u672a\u5b9e\u73b0 --detail: \uff1f\uff1f\uff1f --addr <address>: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u5408\u7ea6\u8d26\u6237\u5730\u5740\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff1f\uff1f\uff1f\uff09 --name string\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u4e0d\u552f\u4e00\uff09 \u5f85\u5546\u69b7\u53c2\u6570 --status bool: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u5408\u7ea6\u5728cns\u7684\u6ce8\u518c\u72b6\u6001\u8fdb\u884c\u67e5\u8be2\uff0c\u53ef\u80fd\u5b58\u5728\u7684\u72b6\u6001\uff1a\u6ce8\u518c\u4e2d\uff08true\uff09\u6216\u6ce8\u9500(false) \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # 1 \u67e5\u8be2\u5df2\u6ce8\u518c\u5408\u7ea6 list registered contracts ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getRegisteredContracts' --param \"0\" --param \"10\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" # 2 \u901a\u8fc7\u540d\u79f0\u67e5\u8be2\u6ce8\u518c\u5386\u53f2 get contract history ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getHistoryContractsByName' --param \"test\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" # 3 \u901a\u8fc7\u6ce8\u518c\u8005\u8fdb\u884c\u67e5\u8be2 query contract register info ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getRegisteredContractsByAddress' --param \"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\" --param \"0\" --param \"10\" --abi \"cnsManager/cnsManager.cpp.abi.json\" --config \"cnsManager/config.json\" # 4 \u901a\u8fc7\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u67e5\u8be2 cnsManager: getContractInfoByAddress # 5 \u5408\u7ea6\u662f\u5426\u6ce8\u518c \u8be6\u7ec6\u89c1 3.5 \u91cd\u6784\u540e\uff1a # 1 \u67e5\u8be2\u5df2\u6ce8\u518c\u7684\u5408\u7ea6 ctool cns query --all --display \"10\" --index \"0\" # 2 \u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u67e5\u8be2 - \u67e5\u8be2\u8be5\u540d\u79f0\u6ce8\u518c\u5386\u53f2 ctool cns query --contract \"test\" # 3 \u901a\u8fc7\u6ce8\u518c\u8005\u8fdb\u884c\u67e5\u8be2 ctool cns query --user \"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\" --pageNum \"10\" --pageSize \"0\" # 4 \u901a\u8fc7\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u67e5\u8be2 // \u76ee\u524d\u63a5\u53e3\u4e3a\u901a\u8fc7\u5730\u5740\u67e5\u8be2\u672a\u88ab\u6ce8\u9500\u7684\u5408\u7ea6 ctool cns query --contract \"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\" \u8f93\u51fa\u7ed3\u679c \uff1a cnsInfo\u5bf9\u8c61: json<kInfo>{ \"name\": , \"version\": , \"address\": , \"origin\": , \"create_time\": , \"enabled\": } # \u6210\u529f # \u6ce8\uff1a\u64cd\u4f5c#1 #2 #3 #4\u5177\u6709\u7ed3\u6784\u76f8\u4f3c\u7684\u8f93\u51fa\u7ed3\u679c ## \u7ed3\u679c\u793a\u4f8b result: { \"code\":0, \"msg\":\"ok\", \"data\":{ \"total\":8, \"contract\":[ {\"name\":\"__sys_NodeManager\", \"version\":\"1.0.0.0\", \"address\":\"0xa94ad954e17606b8c254065c2317139f9cc593d0\", ... ..., \"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\", \"create_time\":1556258758307, \"enabled\":false} ] } } # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a char *getRegisteredContracts(int pageNum, int pageSize) const contract: cnsManager char *getRegisteredContractsByAddress(char *origin, int pageNum, int pageSize) const contract: cnsManager char* getContractInfoByAddress(char *address) const contract: cnsManager char *getHistoryContractsByName(char *name) const contract: cnsManager 3.5 \u5408\u7ea6cns\u72b6\u6001\u67e5\u8be2 cns state // \u503e\u5411\u4f7f\u7528state \u63cf\u8ff0 \uff1a\u901a\u8fc7\u67e5\u8be2\u952e\u67e5\u8be2\u4e00\u4e2a\u5408\u7ea6\u5728cns\u5e73\u53f0\u4e2d\u7684\u6ce8\u518c\u72b6\u6001\uff0c\u6ce8\u518c\u72b6\u6001\u5206\u4e3a\uff1a\u6ce8\u518c\u4e2d\uff08\u8fd4\u56detrue\uff09\u6216\u8005\u5df2\u7ecf\u6ce8\u9500\uff08\u8fd4\u56defalse\uff09\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <contract>: \u67e5\u8be2\u952e\uff0c\u6839\u636e\u5408\u7ea6\u8d26\u6237\u5730\u5740\u6216\u5408\u7ea6\u8d26\u6237\u540d\u79f0\u8fdb\u884c\u67e5\u8be2 // \u672a\u5b9e\u73b0 --addr <address>: \u67e5\u8be2\u952e\uff0c\u5408\u7ea6\u8d26\u6237\u5730\u5740 --name string: \u67e5\u8be2\u952e\uff0c\u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u5408\u7ea6\u540d\u79f0\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u67e5\u8be2\u5408\u7ea6\u5730\u5740\u662f\u5426\u6ce8\u518c ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'ifRegisteredByAddress' --param \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" # \u67e5\u8be2\u5408\u7ea6\u540d\u79f0\u662f\u5426\u88ab\u6ce8\u518c ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'ifRegisteredByName' --param \"test\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a # \u67e5\u8be2\u5408\u7ea6\u5730\u5740\u662f\u5426\u6ce8\u518c ctool cns state \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" # \u67e5\u8be2\u5408\u7ea6\u540d\u79f0\u662f\u5426\u88ab\u6ce8\u518c ctool cns state \"test\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u5df2\u6ce8\u518c result: the contract is registered in CNS ## \u672a\u6ce8\u518c result: the contract is not registered in CNS # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a int ifRegisteredByName(char *name) const contract: cnsManager int ifRegisteredByAddress(char *address) const contract: cnsManager \u53ea\u8981\u88ab\u67e5\u8be2\u5730\u5740\u6216\u540d\u79f0\u6709\u4e00\u4e2acns\u5bf9\u8c61\u7684enable\u5b57\u6bb5\u662f\u6709\u6548\u7684\uff0c\u67e5\u8be2\u7ed3\u679c\u90fd\u4e3a\u771f\uff08\u5df2\u6ce8\u518c\uff09 4. \u9632\u706b\u5899\u670d\u52a1 fw TODO: \u9632\u706b\u5899\u76f8\u5173\u672f\u8bed\u5b66\u4e60\uff0c\u5e76\u4fee\u6539\u76f8\u5e94\u63cf\u8ff0\uff08\u5f85\u5b8c\u6210\uff09\uff1f\uff1f\uff1f \u6dfb\u52a0\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8c03\u7528\u9632\u706b\u5899\uff1fTxType\u51b2\u7a81\uff0cfwType&cnsType\uff0c\u662f\u5426\u80fd\u591f\u6539\u8fdb\uff1f \u7279\u522b\u8bf4\u660e\uff1a\u9632\u706b\u5899\u5f00\u542f\u4e0e\u5173\u95ed\u72b6\u6001\u4e0e\u9632\u706b\u5899\u89c4\u5219\u5199\u5165\u65e0\u5173\u8054\uff0c\u5373\u4f7f\u9632\u706b\u5899\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u4f9d\u65e7\u53ef\u4ee5\u5bf9\u9632\u706b\u5899\u89c4\u5219\u8fdb\u884c\u7f16\u5199\uff0c\u4f46\u4ec5\u5f53\u9632\u706b\u5899\u72b6\u6001\u4e3a\u5f00\u542f\u65f6\uff0c\u5199\u5165\u7684\u89c4\u5219\u624d\u4f1a\u751f\u6548\u3002 4.1 \u9632\u706b\u5899\u5f00\u542f fw start* \u63cf\u8ff0 \uff1a\u5bf9\u6307\u5b9a\u5408\u7ea6\u5f00\u542f\u9632\u706b\u5899\u670d\u52a1 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --func '__sys_FwOpen()' --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool fw start \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u7565 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB)OpenFirewall(addr common.Address) 4.2 \u9632\u706b\u5899\u5173\u95ed fw stop* \u63cf\u8ff0 \uff1a\u5bf9\u6307\u5b9a\u5408\u7ea6\u5173\u95ed\u9632\u706b\u5899\u670d\u52a1 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" --func '__sys_FwClose()' --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool fw stop \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB)CloseFirewall(addr common.Address) 4.3 \u9632\u706b\u5899\u4fe1\u606f\u67e5\u8be2 fw query* // \u503e\u5411\u4e0d\u4f7f\u7528status? \u63cf\u8ff0 \uff1a\u901a\u8fc7\u67e5\u8be2\u952e\uff0c\u67e5\u8be2\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u4fe1\u606f \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u5408\u7ea6\u8d26\u6237\u5730\u5740\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --func '__sys_FwStatus()' --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool fw query \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: { \"ContractAddress\":\"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\", \"FwActive\":true, \"AcceptedList\":[{ \"Addr\":\"0xffffffffffffffffffffffffffffffffffffffff\", \"FuncName\":\"getName\"} ], \"DeniedList\":[{ \"Addr\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\", \"FuncName\":\"invokeNotify\"} ] } # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) GetFwStatus(addr common.Address) FwStatus 4.4 \u9632\u706b\u5899\u89c4\u5219\u6e05\u7a7a fw clear \u63cf\u8ff0 \uff1a\u6e05\u7a7a\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u7684approve\u64cd\u4f5c\u6216reject\u64cd\u4f5c\u7684\u5168\u90e8\u89c4\u5219 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 \u53ef\u9009\u53c2\u6570\uff1a --action string \u6e05\u9664\u5bf9\u5e94\u64cd\u4f5c\u7684\u9632\u706b\u5899\u89c4\u5219\u3002\u9632\u706b\u5899\u64cd\u4f5c\uff1a\u5141\u8bb8approve(allow?)\u6216\u62d2\u7eddreject(block?) --all \u6e05\u9664\u6240\u6709\u64cd\u4f5c\u7684\u9632\u706b\u5899\u89c4\u5219 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --func '__sys_FwClear(\"Reject\")' --config \"../config.json\" \u91cd\u6784\u540e\uff1a # \u6e05\u9664\u5bf9\u5e94\u9632\u706b\u5899\u64cd\u4f5c\u89c4\u5219 ctool fw clear \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --action \"Reject\" # \u6e05\u9664\u6240\u6709\u9632\u706b\u5899\u89c4\u5219 ctool fw clear \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --all \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) FwClear(addr common.Address, action Action) 4.5 \u9632\u706b\u5899\u89c4\u5219\u6dfb\u52a0 fw new \u63cf\u8ff0 \uff1a\u65b0\u5efa\u4e00\u6761\u6216\u591a\u6761\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\u3002\u4e00\u6761\u9632\u706b\u5899\u89c4\u5219\u5305\u542b\u5177\u4f53\u7684\u9632\u706b\u5899\u64cd\u4f5c\uff08accept\u6216reject\u64cd\u4f5c\uff09\uff0c\u9700\u8981\u8fdb\u884c\u8fc7\u6ee4\u7684\u8d26\u6237\u5730\u5740\u4ee5\u53ca\u9700\u8981\u8fdb\u884c\u9650\u5236\u8bbf\u95ee\u7684\u5408\u7ea6\u63a5\u53e3\u540d\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addrres>: (\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684)\u5408\u7ea6\u8d26\u6237\u5730\u5740 <action>: \u9632\u706b\u5899\u64cd\u4f5c\uff1a\u5141\u8bb8accept(allow?)\u6216\u62d2\u7eddreject(block?) <account>: \u6307\u5b9a\u88ab\u8fc7\u6ee4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u6237\u8d26\u6237\u5730\u5740\uff0c'*'\u8868\u793a\u9632\u706b\u5899\u89c4\u5219\u5bf9\u6240\u6709\u7528\u6237\u8d26\u6237\u5730\u5740\u751f\u6548\u3002\u683c\u5f0f[\"<address1>\",\"<address2>\"]\uff0c\u5355\u4e2a\u8d26\u6237\u5730\u5740\u53ef\u7701\u7565[]\u3002 <api>: \u6307\u5b9a\u8fc7\u6ee4\u7684\u5408\u7ea6\u63a5\u53e3\u540d\uff0c'*'\u8868\u793a\u8be5\u5408\u7ea6\u7684\u6240\u6709\u63a5\u53e3\u3002\u683c\u5f0f[\"<funcname1>\",\"<funcname2>\"]\uff0c\u5355\u4e2a\u63a5\u53e3\u540d\u53ef\u7701\u7565[]\u3002\u793a\u4f8b--api \"getName\" \u6ce8\uff1a\u76ee\u524d\u53ea\u652f\u6301\u5355\u6761\u9632\u706b\u5899\u89c4\u5219\u7684\u6dfb\u52a0\uff0c\u5373\u5355\u4e2a\u8d26\u6237\u5730\u5740+\u5355\u4e2a\u63a5\u53e3 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --func '__sys_FwAdd(\"Accept\",\"*:getName\")' --config \"../config.json\" ctool fwInvoke --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --func '__sys_FwAdd(\"REJECT\", \"<addr1>:*|*:<api2>|<addr3>:<api3>\")' --config \"./config.json\" \u91cd\u6784\u540e\uff1a ## \u65b0\u589e\u4e00\u6761\u9632\u706b\u5899\u89c4\u5219 ctool fw \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" \"accept\" \"*\" \"getName\" ## \u6279\u91cf\u65b0\u589e\uff08\u6682\u672a\u5b9e\u73b0\uff09 ctool fw --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --act \"reject\" --user [\"<addr1>,*,<addr3>\"] --api [\"*,<api2>,<api3>\"] // \u7701\u53bb\"__sys_FwAdd\"\u7684\u586b\u5199 // --acount --api\u5206\u5f00\u7684\u5199\u6cd5\u5bf9\u7528\u6237\u4e0d\u592a\u53cb\u597d\uff1f \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) FwAdd(addr common.Address, action Action, list []FwElem) 4.6 \u9632\u706b\u5899\u89c4\u5219\u5220\u9664 fw delete \u63cf\u8ff0 \uff1a\u5220\u9664\u4e00\u6761\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 <action>: \u9632\u706b\u5899\u64cd\u4f5c\uff1a\u5141\u8bb8approve(allow?)\u6216\u62d2\u7eddreject(block?) <account>: \u6307\u5b9a\u88ab\u8fc7\u6ee4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u6237\u8d26\u6237\u5730\u5740\uff0c'*'\u8868\u793a\u9632\u706b\u5899\u89c4\u5219\u5bf9\u6240\u6709\u7528\u6237\u8d26\u6237\u5730\u5740\u751f\u6548\u3002\u683c\u5f0f[\"<address1>\",\"<address2>\"]\uff0c\u5355\u4e2a\u8d26\u6237\u5730\u5740\u53ef\u7701\u7565[]\u3002 <api>: \u6307\u5b9a\u8fc7\u6ee4\u7684\u5408\u7ea6\u63a5\u53e3\u540d\uff0c'*'\u8868\u793a\u8be5\u5408\u7ea6\u7684\u6240\u6709\u63a5\u53e3\u3002\u683c\u5f0f[\"<funcname1>\",\"<funcname2>\"]\uff0c\u5355\u4e2a\u63a5\u53e3\u540d\u53ef\u7701\u7565[]\u3002\u793a\u4f8b--api \"getName\" \u6ce8\uff1a\u76ee\u524d\u53ea\u652f\u6301\u5355\u6761\u9632\u706b\u5899\u89c4\u5219\u7684\u5220\u9664\uff0c\u5373\u5355\u4e2a\u8d26\u6237\u5730\u5740+\u5355\u4e2a\u63a5\u53e3 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" --func '__sys_FwDel(\"Reject\",\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5:setName\")' --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool fw delete \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" \"Reject\" \"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\" \"setName\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) FwDel(addr common.Address, action Action, list []FwElem) 4.7 \u9632\u706b\u5899\u89c4\u5219\u66ff\u6362 fw reset \u63cf\u8ff0 \uff1a\u5c06\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899accept\u64cd\u4f5c\u6216\u8005reject\u64cd\u4f5c\u5bf9\u5e94\u7684\u6240\u6709\u89c4\u5219\u6e05\u7a7a\uff0c\u5e76\u518d\u5199\u5165\u6210\u4e00\u6761\u5bf9\u5e94\u64cd\u4f5c\u7684\u65b0\u7684\u89c4\u5219\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 <action>: \u9632\u706b\u5899\u64cd\u4f5c\uff1a\u5141\u8bb8accept(allow?)\u6216\u62d2\u7eddreject(block?) <account>: \u6307\u5b9a\u88ab\u8fc7\u6ee4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u6237\u8d26\u6237\u5730\u5740\uff0c'*'\u8868\u793a\u9632\u706b\u5899\u89c4\u5219\u5bf9\u6240\u6709\u7528\u6237\u8d26\u6237\u5730\u5740\u751f\u6548\u3002\u683c\u5f0f[\"<address1>\",\"<address2>\"]\uff0c\u5355\u4e2a\u8d26\u6237\u5730\u5740\u53ef\u7701\u7565[]\u3002 <api>: \u6307\u5b9a\u8fc7\u6ee4\u7684\u5408\u7ea6\u63a5\u53e3\u540d\uff0c'*'\u8868\u793a\u8be5\u5408\u7ea6\u7684\u6240\u6709\u63a5\u53e3\u3002\u683c\u5f0f[\"<funcname1>\",\"<funcname2>\"]\uff0c\u5355\u4e2a\u63a5\u53e3\u540d\u53ef\u7701\u7565[]\u3002\u793a\u4f8b--api \"getName\" \u6ce8\uff1a\u76ee\u524d\u53ea\u652f\u6301\u5355\u6761\u9632\u706b\u5899\u89c4\u5219\u7684\u91cd\u7f6e\uff0c\u5373\u5355\u4e2a\u8d26\u6237\u5730\u5740+\u5355\u4e2a\u63a5\u53e3 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" --func '__sys_FwSet(\"Reject\",\"*:setName\")' --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool fw replace \"0x5855455df9d1b395332e3ae9b2efc4e 18ad8755f\" \"Reject\" \"*\" \"setName\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) FwSet(addr common.Address, action Action, list []FwElem) 4.8 \u9632\u706b\u5899\u89c4\u5219\u5bfc\u5165 fw import // import rule list \u63cf\u8ff0 \uff1a\u5c06XX\u683c\u5f0f\u9632\u706b\u5899\u6587\u4ef6\u4e2d\u7684\u9632\u706b\u5899\u89c4\u5219\u5bfc\u5165\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\u4e2d \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a --addr <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 \u53ef\u9009\u53c2\u6570\uff1a --fwfile <file>: \u5bfc\u5165\u7684\u9632\u706b\u5899\u89c4\u5219\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u6587\u4ef6\u4e3a\u3002/config/fireWall.json \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u7565 \u91cd\u6784\u540e\uff1a ctool fw import \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" --fwfile <file path> \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) FwImport(addr common.Address, data []byte) error 4.9 \u9632\u706b\u5899\u89c4\u5219\u5bfc\u51fa fw export \u63cf\u8ff0 \uff1a\u5c06\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\u5bfc\u51fa\u5230\u6307\u5b9a\u4f4d\u7f6e\u7684\u9632\u706b\u5899\u89c4\u5219\u6587\u4ef6\u4e2d \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \u5408\u7ea6\u8d26\u6237\u5730\u5740 \u53ef\u9009\u53c2\u6570\uff1a --fwfile <file>: \u5bfc\u51fa\u7684\u9632\u706b\u5899\u89c4\u5219\u6587\u4ef6\u5b58\u50a8\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u8def\u5f84\u4e3a./config \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --func '__sys_FwStatus()' --config \"../config.json\" // \u901a\u8fc7__sys_FwStatus()\u5b9e\u73b0\uff0c\u6ca1\u6709\u72ec\u7acb\u7684\u63a5\u53e3 \u91cd\u6784\u540e\uff1a # \u5bfc\u51fa\u9632\u706b\u5899\u89c4\u5219\u5230\u9ed8\u8ba4\u5730\u5740 ctool fw export \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" # \u5bfc\u51fa\u9632\u706b\u5899\u89c4\u5219\u5230\u6307\u5b9a\u5730\u5740 ctool fw export \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --fwfile <file path> \u8f93\u51fa\u7ed3\u679c \uff1a \u540c 4.3 \u5907\u6ce8 \uff1a 5. \u7cfb\u7edf\u7ba1\u7406\u5458 admin \u5206\u7c7b\u4f9d\u636e \uff1a \u6839\u636e\u76ee\u524dPlatONE\u5df2\u6709\u7684\u89d2\u8272\u8fdb\u884c\u5206\u7c7b,\u65b9\u4fbf\u5404\u7c7b\u7ba1\u7406\u5458\u4f7f\u7528\u7b26\u5408\u5404\u81ea\u6743\u9650\u7684\u547d\u4ee4\u3002\u4f8b\u5982\u8282\u70b9\u7ba1\u7406\u5458\u53ea\u9700\u5728node\u4e8c\u7ea7\u547d\u4ee4\u4e2d\u53bb\u5bfb\u627e\u76f8\u5173\u547d\u4ee4\uff0c\u4ece\u800c\u51cf\u5c11\u8c03\u7528\u4e00\u4e2a\u64cd\u4f5c\u53d1\u73b0no permission\u7684\u60c5\u51b5\u3002 \u867d\u7136node, ,user,\u8fd9\u4e9b\u4e8c\u7ea7\u547d\u4ee4\u7684\u5b50\u547d\u4ee4\u91cd\u5408\u5ea6\u5f88\u9ad8\uff0c\u4f46\u662f\u540c\u540d\u5b50\u547d\u4ee4\u7684\u5fc5\u8981\u53c2\u6570\u5374\u4e0d\u4e00\u81f4\uff0c\u4e5f\u5bfc\u81f4\u65e0\u6cd5\u5c06\u8fd9\u4e9b\u547d\u4ee4\u8f83\u597d\u7684\u5408\u5e76\u5230\u4e00\u8d77\u3002 \u8865\u5145 \uff1a \u4e8c\u7ea7\u547d\u4ee4\u7684\u540d\u79f0\u53c2\u8003\u4e86PlatONE\u6743\u9650\u6a21\u578b\u4e2d\u7684\u89d2\u8272\u547d\u540d 5.1 \u8282\u70b9\u7ba1\u7406\u5458 admin node 5.1.1 \u8282\u70b9\u6dfb\u52a0 admin node add \u63cf\u8ff0 \uff1a\u5c06\u8282\u70b9\u6dfb\u52a0\u5230PlatONE\u7f51\u7edc\u4e2d\u3002\u6ca1\u6709\u88ab\u7ba1\u7406\u5458\u6dfb\u52a0\u5230\u8282\u70b9\u5217\u8868\u7684\u8282\u70b9\u65e0\u6cd5\u53c2\u4e0ePlatONE\u7f51\u7edc\u4e2d\u8282\u70b9\u7684\u533a\u5757\u540c\u6b65\uff0c\u5171\u8bc6\u7b49\u7b49\u3002\u7b2c\u4e00\u6b21\u88ab\u6dfb\u52a0\u7684\u8282\u70b9\u7c7b\u578b\u90fd\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9\u3002\u89c2\u5bdf\u8005\u8282\u70b9\u540e\u7eed\u53ef\u4ee5\u7531\u7ba1\u7406\u5458\u4fee\u6539\u6210\u4e3a\u5171\u8bc6\u8282\u70b9\u53c2\u4e0e\u5171\u8bc6\u3002\uff08\u8282\u70b9\u88ab\u6dfb\u52a0\u540e\uff0c\u5728\u4e0b\u4e00\u6b21peer\u66f4\u65b0\u65f6\u4f1a\u4e0ePlatONE\u7f51\u7edc\u4e2d\u7684boostnode\u8282\u70b9\u5efa\u7acb\u8fde\u63a5\uff08\u5f85\u786e\u8ba4\uff09\uff09 \u6ce8 \uff1a * \u5982\u679c\u8282\u70b9\u5217\u8868\u4e2d\u5df2\u6709\u540c\u540d\u4e14\u72b6\u6001\u4e3a\u6709\u6548\u7684\u8282\u70b9\uff0c\u5219\u6ce8\u518c\u5931\u8d25\u3002 * \u5982\u679c\u8282\u70b9\u5217\u8868\u4e2d\u5df2\u6709\u540c\u516c\u94a5\u7684\u8282\u70b9\uff08\u65e0\u8bba\u8282\u70b9\u72b6\u6001\uff09\uff0c\u5219\u6ce8\u518c\u5931\u8d25\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>: \u8282\u70b9\u540d\u79f0 <publicKey>: \u8282\u70b9\u516c\u94a5\uff0c\u7528\u4e8e\u8282\u70b9\u95f4\u5b89\u5168\u901a\u4fe1\u3002\u8282\u70b9\u7684\u516c\u79c1\u94a5\u5bf9\u53ef\u7531ethkey\u5de5\u5177\u4ea7\u751f\u3002 <externalIP>: \u8282\u70b9\u5916\u7f51IP <internalIP>: \u8282\u70b9\u5185\u7f51IP // \u521d\u59cb\u5316\u65f6\u90fd\u662f\u56fa\u5b9a\u5e38\u6570\u503c\uff0c\u53ef\u4ee5\u7701\u7565 // --type string: \u8282\u70b9\u7c7b\u578b\uff0c0\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9\uff0c1\u4e3a\u5171\u8bc6\u8282\u70b9\u3002\u521d\u6b21\u52a0\u5165\u94fe\u7f51\u7edc\u7684\u8282\u70b9\u90fd\u4e3a\u89c2\u5bdf\u8282\u70b9\uff0c\u89c2\u5bdf\u8282\u70b9\u53ef\u4ee5\u7531\u7ba1\u7406\u5458\u8bbe\u7f6e\u4e3a\u5171\u8bc6\u8282\u70b9\u3002 // --status string: \u8282\u70b9\u72b6\u6001\uff0c1\u4e3a\u6709\u6548\u72b6\u6001\uff0c2\u4e3a\u65e0\u6548\uff08\u5220\u9664\uff09\u72b6\u6001 \u53ef\u9009\u53c2\u6570\uff1a --rpc-port int<num>: \u7528\u4e8erpc\u8fdc\u7a0b\u8c03\u7528\u7684\u7f51\u7edc\u7aef\u53e3\uff0c\u9ed8\u8ba4\u7aef\u53e36791 --p2p-port int<num>: \u7528\u4e8ep2p\u901a\u4fe1\u7684\u7f51\u7edc\u7aef\u53e3\uff0c\u9ed8\u8ba4\u7aef\u53e316791 --desc string: \u8282\u70b9\u63cf\u8ff0 --delay <num>: \u5171\u8bc6\u8282\u70b9\u5ef6\u8fdf\u8bbe\u7f6e\u7684\u533a\u5757\u9ad8\u5ea6\uff0c\u9ed8\u8ba4\u5b9e\u65f6\u8bbe\u7f6e // \u7b80\u5199--rpc, --p2p ??? \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'add' --param '{\"name\":\"root\",\"owner\":\"0x96307a6168921cefd50d66e1921a029fe1982394\",\"approver\":\"0x96307a6168921cefd50d66e1921a029fe1982394\",\"desc\":\"root\",\"publicKey\":\"feffe2938d427088f5fcce94a9245760b92c468d3ca25ab5ef2b1cdccf0ed911963b74ca2dffef20ef135966e34ebcc905d1f12c1df09f05974a617cf8afe8e8\",\"root\":true,\"type\":1,\"externalIP\":\"127.0.0.1\",\"internalIP\":\"127.0.0.1\",\"rpcPort\":6791,\"p2pPort\":16791,\"status\":1}' --abi \"./conf/contracts/nodeManager.cpp.abi.json\" --config \"./user2.json\" \u91cd\u6784\u540e\uff1a ctool admin node add \"root\" --desc \"root\" \"feffe2938d427088f5fcce94a9245760b92c468d3ca25ab5ef2b1cdccf0ed911963b74ca2dffef20ef135966e34ebcc905d1f12c1df09f05974a617cf8afe8e8\" \"127.0.0.1\" \"127.0.0.1\" // \u4e0d\u9700\u6307\u5b9atype, status // owner \u9700\u8981\u6307\u5b9a\uff0c\u76ee\u524d\u5185\u7f6e\u4e00\u4e2a\u503c // approver\u4e0d\u9700\u8981\u6307\u5b9a\uff0c\u5df2\u5f03\u7528\uff1f \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u7ed3\u679c result\uff1aadd node info success. node info: {\"delayNum\":... ...} # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int add(const char *nodeJsonStr) contract: nodeManager \"owner\"``\"approver\" \u5b57\u6bb5\u672a\u542f\u7528 5.1.2 \u8282\u70b9\u5220\u9664 admin node delete \u63cf\u8ff0 \uff1a\u5c06\u8282\u70b9\u4ece\u8282\u70b9\u5217\u8868\u4e2d\u5220\u9664\u3002\u5728\u4e0b\u4e00\u6b21peers\u66f4\u65b0\u540e\uff0c\u88ab\u5220\u9664\u7684\u8282\u70b9\u4f1a\u88abPlatONE\u7f51\u7edc\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\u65ad\u5f00\u8fde\u63a5\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>: \u8282\u70b9\u540d\u79f0 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u7565 \u91cd\u6784\u540e\uff1a ctool admin node delete \"root\" // \u4e0d\u5b58\u5728\u7528\u6237\u76f4\u63a5\u4fee\u6539status\u7684\u60c5\u51b5\u3002\u786e\u4fddstatus\u53ea\u80fd\u4ece1->2\u3002 // \u72b6\u6001\u4fee\u6539\u540e\uff0c\u8282\u70b9\u7684\u5b8c\u6574\u4fe1\u606f\u4f9d\u65e7\u53ef\u4ee5\u901a\u8fc7query\u547d\u4ee4\u67e5\u8be2\u5230 \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u5199\u64cd\u4f5c result: NodeManager update key: status # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int update(const char *name, const char *nodeJsonStr) contract nodeManager 5.1.3 \u8282\u70b9\u4fe1\u606f\u66f4\u65b0 admin node update \u53ea\u66f4\u65b0\u7528\u6237\u90ae\u7bb1\u548c\u7535\u8bdd\u4fe1\u606f\uff0c\u8bbe\u8ba1\u7684\u610f\u4e49\u4e0d\u5927\uff1f \u63cf\u8ff0 \uff1a \u66f4\u65b0\u8282\u70b9\u7684 desc \u3001 delayNum \u4e0e type \u5b57\u6bb5\u4e2d\u7684\u4fe1\u606f\u3002\u65e0\u6cd5\u66f4\u65b0\u6743\u9650\u540c\u7ea7\u53ca\u5176\u4ee5\u4e0a\u89d2\u8272\u8282\u7684\u4fe1\u606f\u3002 \u72b6\u6001\u65e0\u6548\u7684\u8282\u70b9\u4f9d\u65e7\u53ef\u4ee5\u66f4\u65b0\u76f8\u5e94\u4fe1\u606f(bug?) \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>: \u8282\u70b9\u540d\u79f0 \u53ef\u9009\u53c2\u6570\uff1a --desc string: \u8282\u70b9\u63cf\u8ff0 --type string: \u8282\u70b9\u7c7b\u578b\uff0c\"observer\"(0)\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9\uff0c\"consensus\"(1)\u4e3a\u5171\u8bc6\u8282\u70b9\u3002 --delay <num>: \u5171\u8bc6\u8282\u70b9\u5ef6\u8fdf\u8bbe\u7f6e\u7684\u533a\u5757\u9ad8\u5ea6\uff0c\u9ed8\u8ba4\u5b9e\u65f6\u8bbe\u7f6e \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u8c03\u7528 ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func \"update\" --param \"nodeC\" --param '{\"type\":1}' --abi \"./conf/contracts/nodeManager.cpp.abi.json\" --config \"./user2.json\" # \u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u8c03\u7528 ctool cnsInvoke --cns \"__sys_NodeManager\" --config \"ctool.json\" --abi \"nodeManager/nodeManager.cpp.abi.json\" --func \"update\" --param \"test\" --param '{\"type\":1}' ctool cnsInvoke --cns \"__sys_NodeManager\" --func 'update(\"node-4\",\"1\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/nodeManager.cpp.abi.json\" --config \"../config.json\" // \u5efa\u8bae\u4f7f\u7528\u5408\u7ea6\u540d\u79f0\u8c03\u7528\u7cfb\u7edf\u5408\u7ea6 \u91cd\u6784\u540e\uff1a # \u66f4\u65b0\u8282\u70b9type\u4fe1\u606f ctool admin node update \"node-4\" --type \"consensus\" # \u66f4\u65b0\u8282\u70b9desc\u4fe1\u606f ctool admin node update \"node-4\" --desc \"this is a description\" # \u66f4\u65b0\u8282\u70b9delayNum\u4fe1\u606f ctool admin node update \"node-4\" --delay 10 \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: NodeManager update key: type # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int update(const char *name, const char *nodeJsonStr) contract: nodeManager 5.1.4 \u8282\u70b9\u4fe1\u606f\u67e5\u8be2 admin node query \u63cf\u8ff0 \uff1a\u901a\u8fc7\u67e5\u8be2\u952e\u5bf9\u8282\u70b9\u4fe1\u606f\u8fdb\u884c\u67e5\u8be2\uff0c\u8fd4\u56de\u5339\u914d\u6210\u529f\u7684\u6570\u636e\u5bf9\u8c61\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a \u82e5\u65e0\u4efb\u4f55\u67e5\u8be2\u952e\u5219\u8fd4\u56de\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u636e\u5bf9\u8c61 --all \u67e5\u8be2\u952e\uff0c\u67e5\u8be2\u6240\u6709\u8282\u70b9(\u5305\u542b\u5df2\u88ab\u5220\u9664\u7684\u8282\u70b9) --name string\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u540d\u79f0\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u53ef\u80fd\u4e0d\u552f\u4e00\uff09 --status string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u72b6\u6001\u8fdb\u884c\u67e5\u8be2\u3002valid(1)\u4e3a\u6709\u6548\u72b6\u6001\uff0cinvalid(2)\u4e3a\u65e0\u6548\uff08\u5220\u9664\uff09\u72b6\u6001 --type string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u7c7b\u578b\u8fdb\u884c\u67e5\u8be2\u3002observer(0)\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9\uff0cconsensus(1)\u4e3a\u5171\u8bc6\u8282\u70b9 --publickey string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u516c\u94a5\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 // \u6682\u672a\u5b9e\u73b0 --enode \u642d\u914d--status\u4f7f\u7528\uff0c\u8fd4\u56de\u7684\u8282\u70b9\u4fe1\u606f\u4e3aenode\u683c\u5f0f \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u8c03\u7528 ## \u8fd4\u56de\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9 ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'getAllNodes' --abi \"./conf/contracts/nodeManager.cpp.abi.json\" --config \"./user2.json\" ## \u6839\u636e\u67e5\u8be2\u952e\u8fdb\u884c\u641c\u7d22 ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'getNodes' --param '{\"name\":\"nodeC\"}' --abi \"./conf/contracts/nodeManager.cpp.abi.json\" --config \"./user2.json\" # \u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u8c03\u7528 ## \u8fd4\u56de\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9 ctool cnsInvoke --cns \"__sys_NodeManager\" --config \"ctool.json\" --abi \"nodeManager/nodeManager.cpp.abi.json\" --func \"getAllNodes()\" ## \u6839\u636e\u67e5\u8be2\u952e\u8fdb\u641c\u7d22 ctool cnsInvoke --cns \"__sys_NodeManager\" --func 'getNodes({\"name\":\"node-0\"})' --abi \"~/PlatONE-Go/release/linux/conf/contracts/nodeManager.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a ## \u8fd4\u56de\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9 ctool admin node query --all ## \u6839\u636e\u67e5\u8be2\u952e\u8fdb\u884c\u641c\u7d22 ctool admin node query --name \"node-0\" ctool admin node query --status \"valid\" ctool admin node query --type \"consensus\" ## \u7ec4\u5408\u67e5\u8be2 ctool admin node query --status \"valid\" --name \"root\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u8bfb\u64cd\u4f5c * result: %s ## \u793a\u4f8b array of json<nodeInfo> result:{ \"code\":0, \"msg\":\"success\", \"data\":[{ \"name\": ..., \"owner\": ..., \"desc\": ..., \"type\": ..., \"publickey\": ..., \"externalIP\": ..., \"internalIP\": ..., \"rpcPort\": ..., \"p2pPort\": ..., \"status\": ..., \"delynum\": `omitempty` } ] } // \u65e0\"approver\"\u5b57\u6bb5 # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a const char *getAllNodes() const contract: nodeManager const char *getNodes(const char *nodeJsonStr) const contract: nodeManager nodeManager: getNormalEnodeNodes nodeManager: getDeletedEnodeNodes // \u8fd4\u56de enode://<pk>@<int-ip>:<p2p-port>|...|enode:... 5.1.4 \u8282\u70b9\u4fe1\u606f\u7edf\u8ba1 admin node stat \u63cf\u8ff0 \uff1a\u901a\u8fc7\u67e5\u8be2\u952e\u5bf9\u8282\u70b9\u4fe1\u606f\u8fdb\u884c\u67e5\u8be2\uff0c\u5bf9\u5339\u914d\u6210\u529f\u7684\u6570\u636e\u5bf9\u8c61\u8fdb\u884c\u7edf\u8ba1\uff0c\u8fd4\u56de\u7edf\u8ba1\u503c\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a --status string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u72b6\u6001\u8fdb\u884c\u7edf\u8ba1\u3002\"valid\"\u4e3a\u6709\u6548\u72b6\u6001(1)\uff0c\"invalid\"\u4e3a\u65e0\u6548\uff08\u5220\u9664\uff09\u72b6\u6001(2) --type string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u7c7b\u578b\u8fdb\u884c\u7edf\u8ba1\u3002\"observer\"\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9(0)\uff0c\"consensus\"\u4e3a\u5171\u8bc6\u8282\u70b9(1) \u65e0\u610f\u4e49\u7684\u53c2\u6570\uff1a(\u6682\u672a\u5b9e\u73b0) --name string\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u540d\u79f0\u8fdb\u884c\u7edf\u8ba1 // \u5305\u542b\u65e0\u6548\u72b6\u6001\u8282\u70b9\u7684\u540d\u79f0\u7684\u7edf\u8ba1\uff0c\u65e0\u610f\u4e49\uff1f --pk string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u516c\u94a5\u8fdb\u884c\u7edf\u8ba1\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 //\u5220\u9664 \u8fd4\u56de\u503c\u53ea\u80fd\u4e3a1 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u6307\u5b9a\u516c\u94a5\u5bf9\u5e94\u7684\u6709\u6548\u8282\u70b9\u6570\u76ee ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'getRegisterInfoByPublicKey' --param \"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\" --abi \"./conf/contracts/nodeRegister.cpp.abi.json\" --config \"./user2.json\" \u91cd\u6784\u540e\uff1a # \u6307\u5b9a\u516c\u94a5\u5bf9\u5e94\u7684\u8282\u70b9\u6570\u76ee ctool admin node stat --status \"valid\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u8bfb\u64cd\u4f5c * result: <num> # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a int nodesNum(const char *nodeJsonStr) const contract: nodeManager \u8c03\u7528getNodes int validJoinNode(const char *publicKey) const contract: nodeManager \u8c03\u7528nodesNum 5.2 \u5408\u7ea6\u90e8\u7f72\u8005\u7ba1\u7406\u5458 admin contract* 5.2.1 \u5408\u7ea6\u90e8\u7f72\u8005\u5ba1\u6838 admin contract approve \u63cf\u8ff0 \uff1a\u5ba1\u6838\u5ba1\u6838\u4e2d\u72b6\u6001\u7684\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u6ce8\u518c\u4fe1\u606f\uff0c\u5e76\u7ed9\u4e88\u901a\u8fc7\u6216\u662f\u62d2\u7edd\u64cd\u4f5c\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u89d2\u8272\u6ce8\u518c\u8868\u4e2d\u6ce8\u518c\u5408\u7ea6\u90e8\u7f72\u8005\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 <operation>: \u5ba1\u6279\u72b6\u6001: approve(2)\u4e3a\u6ce8\u518c\u7533\u8bf7\u901a\u8fc7\uff0creject(3)\u4e3a\u62d2\u7edd \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_RoleRegister\" --func 'approveRole(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\",2)' --abi \"~/PlatONE-Go/release/linux/conf/contracts/roleRegister.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool admin contract approve \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \"approve\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f // TODO # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int approveRole(const char* address, int status) contract: roleRegister 5.2.2 \u5408\u7ea6\u90e8\u7f72\u8005\u6dfb\u52a0 admin contract add // \u662f\u5426\u4f1a\u68c0\u67e5\u89d2\u8272\u6ce8\u518c\u8868\u4fe1\u606f\uff1f \u63cf\u8ff0 \uff1a\u4e3a\u4e00\u4e2a\u6709\u6548\u7528\u6237\u6dfb\u52a0\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\uff0c\u6dfb\u52a0\u6210\u529f\u540e\u8be5\u7528\u6237\u53ef\u4ee5\u8fdb\u884c\u5408\u7ea6\u90e8\u7f72\u64cd\u4f5c\uff0c\u5e76\u53ef\u4ee5\u5bf9\u81ea\u5df1\u90e8\u7f72\u7684\u5408\u7ea6\u8fdb\u884c\u8fc1\u79fb\u548c\u5199\u64cd\u4f5c\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>: \u88ab\u6dfb\u52a0\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u8d26\u6237\u540d\u79f0 <address>: \u88ab\u6dfb\u52a0\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u7565 \u91cd\u6784\u540e\uff1a ctool admin contract add \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \"root\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: OK: [RoleManager] [addRole] Update roles success. \\ address: 0xb239401ecf8427f17c6de134d6a6bddd3100251f, roles: [\"contractDeployer\"] # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int addRole(const char *name, const char *address, const char *roles) contract: roleManager 5.2.3 \u5408\u7ea6\u90e8\u7f72\u8005\u5220\u9664 admin contract delete \u63cf\u8ff0 \uff1a\u5220\u9664\u7528\u6237\u7684\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\uff0c\u6210\u529f\u5220\u9664\u540e\u8be5\u7528\u6237\u65e0\u6cd5\u518d\u8fdb\u884c\u5408\u7ea6\u90e8\u7f72\u3001\u5199\u64cd\u4f5c\u4ee5\u53ca\u8fc1\u79fb\u64cd\u4f5c\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u5220\u9664\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_RoleManager\" --func 'removeRole(\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\",\"[\"contractDeployer\"]\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/roleManager.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool admin contract delete \"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: OK: [RoleManager] [removeRole] Remove roles success. \\ address: 0xb239401ecf8427f17c6de134d6a6bddd3100251f, roles: [\"contractDeployer\"] # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int removeRole(const char *address,const char *roles) roleManager 5.2.4 \u90e8\u7f72\u5408\u7ea6\u5ba1\u8ba1 admin contract audit // \u6682\u65e0\u63a5\u53e3 \u7565 5.2.5 \u5408\u7ea6\u90e8\u7f72\u8005\u8bf7\u6c42\u5217\u8868 admin contract list* \u63cf\u8ff0 \uff1a\u6839\u636e\u4e0d\u540c\u64cd\u4f5c\uff0c\u8fd4\u56de\u6ee1\u8db3\u7b5b\u9009\u6761\u4ef6\u7684\u5408\u7ea6\u90e8\u7f72\u8005\u7528\u6237\u5217\u8868\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a --approve \u83b7\u53d6\u5ba1\u6838\u4e2d\u7684\u6ce8\u518c\u5408\u7ea6\u90e8\u7f72\u89d2\u8272\u7684\u5217\u8868 --delete \u83b7\u53d6\u62e5\u6709\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u5217\u8868 // \u672a\u5b9e\u73b0 --display <num> x --index <num> x \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u62e5\u6709\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u5217\u8868 ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'getAccountsByRole' --param \"chainAdmin\" --abi \"roleManager/roleManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a # \u62e5\u6709\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u5217\u8868\uff0c\u65b9\u4fbf\u5220\u9664delete\u64cd\u4f5c ctool admin contract list --delete // \u7b49\u4ef7\u4e8e ctool account query --roles [\"contractDeployer\"] # \u89d2\u8272\u6ce8\u518c\u8868\u4e2d\u5ba1\u6838\u4e2d\u72b6\u6001\u7684\u7528\u6237\uff0c\u65b9\u4fbf\u5ba1\u6838approve\u64cd\u4f5c ctool admin contract list --approve // \u7b49\u4ef7\u4e8ectool account query --status \"1\" --reg \"role\" --display \"10\" --index \"2\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## delete\u64cd\u4f5c result: { \"code\": 0, \"msg\": \"Success\", \"data\": [{ \"name\": \"root\" \"address\": \"0x......\" }] } ## approve\u64cd\u4f5c ### \u65e0\u7533\u8bf7\u7528\u6237 result: no contractDeployer in registration ### \u6709\u7533\u8bf7\u7528\u6237 result: { \"code\": 0, \"msg\": \"ok\", \"data\": [{ \"approver\": \"\", \"requireRoles\": [\"nodeAdmin\", \"contractDeployer\"], \"roleRequireStatus\": 1, \"userName\": \"root\", \"userAddress\": \"0x......\" }] } # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a const char* getAccountsByRole(const char *role) const contract: roleManager \u5f85\u8865\u5145 5.3 \u7528\u6237\u7ba1\u7406\u5458 admin user 5.3.1 \u7528\u6237\u5ba1\u6838 admin user approve \u63cf\u8ff0 \uff1a\u5bf9\u7528\u6237\u6ce8\u518c\u8868\u5ba1\u6838\u4e2d\u72b6\u6001\u7684\u7528\u6237\u8fdb\u884c\u5ba1\u6838\uff0c\u901a\u8fc7\u6216\u62d2\u7edd\u8be5\u6ce8\u518c\u7533\u8bf7\u5e76\u4fee\u6539\u76f8\u5e94\u7684\u7533\u8bf7\u72b6\u6001\u3002\u82e5\u72b6\u6001\u4e3a\u901a\u8fc7\uff0c\u7528\u6237\u6ce8\u518c\u6210\u529f\uff0c\u5728\u7528\u6237\u5e73\u53f0\u4e2d\u53ef\u4ee5\u67e5\u5230\u76f8\u5e94\u7528\u6237\u4fe1\u606f\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a --addr <address>: \u7528\u6237\u6ce8\u518c\u8868\u4e2d\u7684\u8d26\u6237\u5730\u5740 --status int<num>: \u5ba1\u6279\u72b6\u6001: \"approve\"\u4e3a\u6ce8\u518c\u5ba1\u6279\u901a\u8fc7(2)\uff0c\"reject\"\u4e3a\u62d2\u7edd(3) \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_UserRegister\" --func 'approve(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\",2)' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userRegister.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0xf7e769f67be5bf06d5712c355e293ef0d4c685fc\" --func 'approve' --param '0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe' --param \"2\" --abi \"./userRegister/userRegister.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin user approve '0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe' \"approve\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u5199\u64cd\u4f5c (\u5f85\u8865\u5145) # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int approve(const char* userAddress, int auditStatus) contract: userRegister 5.3.2 \u7528\u6237\u6dfb\u52a0 admin user add \u63cf\u8ff0 \uff1a\u4e3b\u52a8\u6dfb\u52a0\u4e00\u4e2a\u8d26\u6237\u5230\u7528\u6237\u5e73\u53f0\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>\uff1a \u7528\u6237\u8d26\u6237\u5730\u5740 <name>\uff1a \u7528\u6237\u8d26\u6237\u540d <tel>\uff1a \u7528\u6237\u7535\u8bdd\u4fe1\u606f <email>\uff1a \u7528\u6237\u90ae\u7bb1\u4fe1\u606f \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u7565 \u91cd\u6784\u540e\uff1a ctool admin user add \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \"Alice\" \"13111111111\" \"alice@wx.bc.com\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f (\u5f85\u8865\u5145) # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int addUser(const char* userJson) contract: userManager 5.3.3 \u7528\u6237\u5220\u9664 admin user delete \u63cf\u8ff0 \uff1a\u5220\u9664\u4e00\u4e2a\u7528\u6237\uff0c\u88ab\u5220\u9664\u7684\u7528\u6237\u65e0\u6cd5\u4f7f\u7528\u5176\u62e5\u6709\u89d2\u8272\u7684\u6743\u9650\u3002\u62e5\u6709chainCreator\u89d2\u8272\u7684\u7528\u6237\u65e0\u6cd5\u88ab\u5220\u9664\u3002\uff08\u7528\u6237\u88ab\u5220\u9664\u540e\uff0c\u5176\u5bf9\u5e94\u7684\u8d26\u6237\u5730\u5740\u65e0\u6cd5\u518d\u6b21\u8fdb\u884c\u7528\u6237\u6ce8\u518c(\u5f85\u786e\u8ba4))\uff09\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u5220\u9664\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_UserManager\" --func 'delUser(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'delUser' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi \"userManager/userManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin user delete \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: Operation Succeeded # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int delUser(const char* userAddr) contract\uff1a userManager 5.3.4 \u7528\u6237\u89e3\u7981 admin user enable \u63cf\u8ff0 \uff1a\u5c06\u7528\u6237\u4ece\u7981\u7528\u72b6\u6001\u6539\u4e3a\u6709\u6548\u72b6\u6001\uff0c\u8be5\u7528\u6237\u76f8\u5e94\u89d2\u8272\u7684\u6743\u9650\u4e5f\u968f\u4e4b\u6062\u590d\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u89e3\u7981\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_UserManager\" --func 'enable(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'enable' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi \"userManager/userManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin user enable \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: \u7528\u6237\u72b6\u6001\u66f4\u65b0\u6210\u529f # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int enable(const char* userAddr) userManager 5.3.5 \u7528\u6237\u7981\u7528 admin user disable \u63cf\u8ff0 \uff1a\u7981\u7528\u67d0\u4e2a\u7528\u6237\uff0c\u88ab\u7981\u7528\u7684\u7528\u6237\u65e0\u6cd5\u4f7f\u7528\u5176\u89d2\u8272\u5bf9\u5e94\u7684\u6743\u9650\uff0c\u4f46\u4e0d\u5f71\u54cd\u5176\u53d1\u9001\u4ea4\u6613\u3002\u62e5\u6709chainCreator\u89d2\u8272\u7684\u7528\u6237\u65e0\u6cd5\u88ab\u7981\u7528\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u7981\u7528\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_UserManager\" --func 'disable(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'disable' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi \"userManager/userManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin user disable \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: Operation Succeeded # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int disable(const char* userAddr) contract: userManager 5.3.6 \u7528\u6237(\u4fe1\u606f)\u66f4\u65b0 admin user update \u63cf\u8ff0 \uff1a\u66f4\u65b0\u7528\u6237\u7ed1\u5b9a\u7684\u7535\u8bdd\u6216\u8005\u90ae\u7bb1\u4fe1\u606f\u3002\u62e5\u6709chainCreator\u89d2\u8272\u7684\u7528\u6237\uff08\u8d85\u7ea7\u7ba1\u7406\u5458\uff09\u53ef\u4ee5\u66f4\u65b0\u6240\u6709\u7528\u6237\u7684\u4fe1\u606f\uff0c\u6709\u89d2\u8272\u7684\u6743\u9650\u7528\u6237\u4ec5\u53ef\u4ee5\u66f4\u65b0\u65e0\u6743\u9650\u7528\u6237\u7684\u4fe1\u606f\u3002 //\u8bbe\u8ba1\u7684\u610f\u4e49\uff1f\u5982\u679c\u53ea\u662f\u4fee\u6539\u7535\u8bdd\u53f7\u7801\u548c\u90ae\u7bb1\u611f\u89c9\u5bf9\u4e8e\u7ba1\u7406\u8005\u6765\u8bf4\u610f\u4e49\u4e0d\u5927\uff1f\uff1f \u8be6\u89c1Section 1.4 5.3.7 \u7528\u6237\u8bf7\u6c42\u5217\u8868 admin user list* \u63cf\u8ff0 \uff1a\u6839\u636e\u7ba1\u7406\u5458\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u8fd4\u56de\u6ee1\u8db3\u7b5b\u9009\u6761\u4ef6\u7684\u7528\u6237\u5217\u8868\u6216\u8005\u7528\u6237\u6ce8\u518c\u5217\u8868\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u7528\u6237\u5ba1\u6838\u64cd\u4f5c\uff0c\u5219\u8fd4\u56de\u7528\u6237\u6ce8\u518c\u8868\u5ba1\u6838\u4e2d\u7684\u7528\u6237\u6ce8\u518c\u4fe1\u606f\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a --approve \u83b7\u53d6\u5ba1\u6838\u4e2d\u72b6\u6001\u7684\u6ce8\u518c\u7528\u6237\u5217\u8868 // \u6682\u672a\u5b9e\u73b0 --delete \u83b7\u53d6\u53ef\u5220\u9664\u7684\u7528\u6237\u5217\u8868 --enable \u83b7\u53d6\u5f53\u524d\u6709\u6548\u72b6\u6001\u7684\u7528\u6237\u5217\u8868 --disable \u83b7\u53d6\u7981\u7528\u72b6\u6001\u7684\u7528\u6237\u5217\u8868 --display <num>: x --index <num>: x \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u65e0 \u91cd\u6784\u540e\uff1a # \u663e\u793a\u7528\u6237\u5e73\u53f0\u7528\u6237\uff08\u65e0\u63a5\u53e3\uff0c\u6682\u672a\u5b9e\u73b0\uff09 ctool admin user list --enable --display \"10\" --index \"2\" // \u7b49\u4ef7\u4e8ectool account query --status \"1\" --display \"10\" --index \"2\" # \u663e\u793a\u88ab\u7981\u7528\u7528\u6237\uff08\u65e0\u63a5\u53e3\uff0c\u6682\u672a\u5b9e\u73b0\uff09 ctool admin user list --disable --display \"10\" --index \"2\" // \u7b49\u4ef7\u4e8ectool account query --status \"2\" --display \"10\" --index \"2\" # \u663e\u793a\u7528\u6237\u6ce8\u518c\u8868\u5ba1\u6838\u4e2d\u7528\u6237 ctool admin user list --approve // \u7b49\u4ef7\u4e8ectool account query --status \"1\" --reg \"user\" --display \"10\" --index \"2\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u65e0\u7528\u6237\u7533\u8bf7 result: { \"code\": 3, \"msg\": \"user information is empty in the UserRegister\", \"data\":\"\" } # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a \u5f85\u8865\u5145 5.4 XX\u7ba1\u7406\u5458 admin sup* 5.4.1 XX\u5ba1\u6838 admin sup approve \u63cf\u8ff0 \uff1a\u5ba1\u6838\u6709\u6548\u7528\u6237\u5ba1\u6838\u4e2d\u72b6\u6001\u6ce8\u518c\u89d2\u8272\u7684\u7533\u8bf7\uff0c\u7ed9\u4e88\u901a\u8fc7\u6216\u62d2\u7edd\uff0c\u5e76\u4fee\u6539\u6ce8\u518c\u8868\u4e2d\u76f8\u5e94\u5b57\u6bb5\u7684\u72b6\u6001\u4fe1\u606f\u3002\u5ba1\u6838\u901a\u8fc7\u7684\u89d2\u8272\u4f1a\u6dfb\u52a0\u5230\u5bf9\u5e94\u7528\u6237\u4e2d\uff0c\uff08\u5728\u4e0b\u4e00\u6b21\u5171\u8bc6\u540e\uff09\u8be5\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u76f8\u5e94\u7684\u6743\u9650\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a --addr <address>: \u89d2\u8272\u6ce8\u518c\u8868\u4e2d\u7684\u7528\u6237\u8d26\u6237\u5730\u5740 --status int<num>: \u5ba1\u6279\u72b6\u6001: approve(2)\u4e3a\u6ce8\u518c\u7533\u8bf7\u901a\u8fc7\uff0creject(3)\u4e3a\u62d2\u7edd \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_RoleRegister\" --func 'approveRole(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\",2)' --abi \"~/PlatONE-Go/release/linux/conf/contracts/roleRegister.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0xf8f1bec07e2556e6be2371f441f0a1ce9c8b737b\" --func 'approveRole' --param '0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe' --param 2 --abi \"roleRegister/roleRegister.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin sup approve \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \"approve\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f (\u5f85\u8865\u5145) # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a 5.4.2 XX\u6dfb\u52a0 admin sup add \u63cf\u8ff0 \uff1a\u6dfb\u52a0\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\u5230\u6709\u6548\u7528\u6237\u7684\u89d2\u8272\u5217\u8868\u4e2d\uff0c\u6dfb\u52a0\u6210\u529f\uff08\u5728\u4e0b\u4e00\u6b21\u5171\u8bc6\u540e\uff0c\uff09\u8be5\u7528\u6237\u62e5\u6709\u5bf9\u5e94\u89d2\u8272\u6743\u9650\u3002XX\u53ea\u80fd\u6dfb\u52a0\u4f4e\u4e8e\u81ea\u8eab\u89d2\u8272\u6743\u9650\u7684\u89d2\u8272\u7ed9\u5176\u4ed6\u7528\u6237\u3002 // \u4e00\u4e2a\u7528\u6237\u62e5\u6709\u591a\u4e2a\u89d2\u8272\u7684\u6a21\u5f0f\u6709\u4e00\u70b9\u5947\u602a\uff1f\u8be6\u7ec6\u89e3\u91ca\u7406\u7531\u3002 \u89d2\u8272\u6743\u9650\u662f\u6709\u91cd\u53e0\u7684\uff0c\u4ea7\u751f\u4ec0\u4e48\u95ee\u9898\uff1f\u5728\u68c0\u67e5\u7ba1\u7406\u8005\u6743\u9650\u65f6\uff0c\u8fdb\u884c\u904d\u5386\uff1f \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u6dfb\u52a0\u89d2\u8272\u7684\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 <roles>: \u6dfb\u52a0\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\u540d\uff0c\u683c\u5f0f\u4e3a\"[\"<role>\"]\"\u6216\u8005\"[\"<role1>\",...,\"<role3>\"]\" \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u91cd\u6784\u540e\uff1a ctool admin sup add \"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\" '[\"nodeAdmin\",\"contractDeployer\"]' \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f \u540c 5.2.2 # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a 5.4.3 XX\u5220\u9664 admin sup delete \u63cf\u8ff0 \uff1a\u5220\u9664\u7528\u6237\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\uff0c\uff08\u5728\u4e0b\u4e00\u6b21\u5171\u8bc6\u540e\uff0c\uff09\u8be5\u7528\u6237\u5931\u53bb\u76f8\u5e94\u89d2\u8272\u7684\u6743\u9650\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u6dfb\u52a0\u89d2\u8272\u7684\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 <roles>: \u5220\u9664\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\u540d\uff0c\u683c\u5f0f\u4e3a\"[\"<role>\"]\"\u6216\u8005\"[\"<role1>\",...,\"<role3>\"]\" \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_RoleManager\" --func 'removeRole(\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\",\"[\"nodeAdmin\"]\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/roleManager.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'removeRole' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --param '[\"nodeAdmin\"]' --abi \"roleManager/roleManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin sup delete \"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\" \"['nodeAdmin']\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f \u540c 5.2.3 # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a 5.4.4 XX\u8bf7\u6c42\u5217\u8868 admin sup list* \u63cf\u8ff0 \uff1a\u6839\u636e\u7ba1\u7406\u5458\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u8fd4\u56de\u6ee1\u8db3\u7b5b\u9009\u6761\u4ef6\u7684\u7528\u6237\u89d2\u8272\u5217\u8868\u6216\u8005\u7528\u6237\u89d2\u8272\u6ce8\u518c\u5217\u8868\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u5ba1\u6838\u64cd\u4f5c\uff0c\u5219\u8fd4\u56de\u7528\u6237\u89d2\u8272\u6ce8\u518c\u8868\u5ba1\u6838\u4e2d\u7684\u89d2\u8272\u6ce8\u518c\u4fe1\u606f\u3002 \u8be6\u7ec6\u53c2\u8003 5.2.5 5.5 \u7cfb\u7edf\u53c2\u6570\u8bbe\u7f6e admin sysconfig (\u6682\u672a\u5b9e\u73b0) 5.5.1 \u5171\u8bc6\u8bbe\u7f6e admin sysconfig consensus* ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'setBlockGasLimit(\"10000000000000000\")' --abi \"paramManager/paramManager.cpp.abi.json\" --config \"cnsManager/config.json\" 5.5.2 \u6743\u9650\u63a7\u5236\u8bbe\u7f6e admin sysconfig ac* 5.5.3 \u670d\u52a1\u8d39\u8bbe\u7f6e admin sysconfig gasfee* ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'setTxGasLimit(\"5000000000000\")' --abi \"paramManager/paramManager.cpp.abi.json\" --config \"cnsManager/config.json\" A. PlatONE\u7cfb\u7edf\u5408\u7ea6\u4e2d\u672a\u4f7f\u7528\u7684\u63a5\u53e3 (\u5f85\u8865\u5145) B. \u53c2\u8003\u6765\u6e90 [1] Dev/PlatONE-Workspace/doc/\u529f\u80fd\u6f14\u793a.md [2] Dev/PlatONE-Workspace/doc/\u64cd\u4f5c\u6307\u53571.0.md [3] Dev/PlatONE-Workspace/doc/PlatONE-Authority-Management-Tutorial.md","title":"\u94fe\u4ea4\u4e92\u5de5\u5177\uff08\u539fctool\uff09\u64cd\u4f5c\u6307\u5357"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#ctool","text":"\u65f6\u95f4 \u4fee\u6539\u4eba \u4fee\u6539\u4e8b\u9879 PlatONE\u7248\u672c 2020.04.28 \u9093\u752b\u6d0b \u521d\u7a3f v0.9.9 - stable 2020.05.07 \u9093\u752b\u6d0b \u521d\u7a3freview v0.9.9 - stable \u94fe\u4ea4\u4e92\u5de5\u5177\uff08\u539fctool\uff09\u64cd\u4f5c\u6307\u5357 \u5b9a\u4e49 Definition \u540d\u8bcd\u5b9a\u4e49 \u5b9a\u4e49\u4e4b\u95f4\u7684\u5173\u8054 \u6a21\u677f Template 0. \u5168\u5c40\u9009\u9879 0.1 config.json 0.2 \u8d26\u6237\u5730\u5740\u9009\u62e9 0.3 \u8fdc\u7a0b\u8282\u70b9\u8fde\u63a5 0.4 \u4e0d\u7b49\u5f85\u4ea4\u6613\u56de\u6267\u7ed3\u679c --sync* 0.5 \u5176\u4ed6\u5168\u5c40\u9009\u9879 1. \u7528\u6237\u64cd\u4f5c account 1.1 \u7528\u6237\u8f6c\u8d26 account transfer 1.2 \u7528\u6237\u6ce8\u518c account register-user 1.3 \u7528\u6237\u89d2\u8272\u6ce8\u518c account register-roles 1.4 \u7528\u6237\u4fe1\u606f\u66f4\u65b0 account update 1.5 \u7528\u6237\u4fe1\u606f\u67e5\u8be2 account query 1.6 \u7528\u6237\u72b6\u6001\u67e5\u8be2 account state // status? 2. \u5408\u7ea6\u64cd\u4f5c contract 2.1 \u5408\u7ea6\u90e8\u7f72 contract deploy 2.2 \u5408\u7ea6\u8fc1\u79fb contract migrate 2.3 \u5408\u7ea6\u6267\u884c contract execute 2.4 \u5408\u7ea6\u65b9\u6cd5\u67e5\u8be2 contract methods* 3. \u5408\u7ea6\u57df\u540d\u7cfb\u7edf\u670d\u52a1 cns 3.1 \u5408\u7ea6cns\u6ce8\u518c cns register 3.2 \u5408\u7ea6cns\u6ce8\u9500 cns unregister 3.3 \u5408\u7ea6cns\u89e3\u6790 cns resolve 3.4 \u5408\u7ea6cns\u4fe1\u606f\u67e5\u8be2 cns query 3.5 \u5408\u7ea6cns\u72b6\u6001\u67e5\u8be2 cns state // \u503e\u5411\u4f7f\u7528state 4. \u9632\u706b\u5899\u670d\u52a1 fw 4.1 \u9632\u706b\u5899\u5f00\u542f fw start* 4.2 \u9632\u706b\u5899\u5173\u95ed fw stop* 4.3 \u9632\u706b\u5899\u4fe1\u606f\u67e5\u8be2 fw query* // \u503e\u5411\u4e0d\u4f7f\u7528status? 4.4 \u9632\u706b\u5899\u89c4\u5219\u6e05\u7a7a fw clear 4.5 \u9632\u706b\u5899\u89c4\u5219\u6dfb\u52a0 fw new 4.6 \u9632\u706b\u5899\u89c4\u5219\u5220\u9664 fw delete 4.7 \u9632\u706b\u5899\u89c4\u5219\u66ff\u6362 fw reset 4.8 \u9632\u706b\u5899\u89c4\u5219\u5bfc\u5165 fw import // import rule list 4.9 \u9632\u706b\u5899\u89c4\u5219\u5bfc\u51fa fw export 5. \u7cfb\u7edf\u7ba1\u7406\u5458 admin 5.1 \u8282\u70b9\u7ba1\u7406\u5458 admin node 5.1.1 \u8282\u70b9\u6dfb\u52a0 admin node add 5.1.2 \u8282\u70b9\u5220\u9664 admin node delete 5.1.3 \u8282\u70b9\u4fe1\u606f\u66f4\u65b0 admin node update \u53ea\u66f4\u65b0\u7528\u6237\u90ae\u7bb1\u548c\u7535\u8bdd\u4fe1\u606f\uff0c\u8bbe\u8ba1\u7684\u610f\u4e49\u4e0d\u5927\uff1f 5.1.4 \u8282\u70b9\u4fe1\u606f\u67e5\u8be2 admin node query 5.1.4 \u8282\u70b9\u4fe1\u606f\u7edf\u8ba1 admin node stat 5.2 \u5408\u7ea6\u90e8\u7f72\u8005\u7ba1\u7406\u5458 admin contract* 5.2.1 \u5408\u7ea6\u90e8\u7f72\u8005\u5ba1\u6838 admin contract approve 5.2.2 \u5408\u7ea6\u90e8\u7f72\u8005\u6dfb\u52a0 admin contract add 5.2.3 \u5408\u7ea6\u90e8\u7f72\u8005\u5220\u9664 admin contract delete 5.2.4 \u90e8\u7f72\u5408\u7ea6\u5ba1\u8ba1 admin contract audit // \u6682\u65e0\u63a5\u53e3 5.2.5 \u5408\u7ea6\u90e8\u7f72\u8005\u8bf7\u6c42\u5217\u8868 admin contract list* 5.3 \u7528\u6237\u7ba1\u7406\u5458 admin user 5.3.1 \u7528\u6237\u5ba1\u6838 admin user approve 5.3.2 \u7528\u6237\u6dfb\u52a0 admin user add 5.3.3 \u7528\u6237\u5220\u9664 admin user delete 5.3.4 \u7528\u6237\u89e3\u7981 admin user enable 5.3.5 \u7528\u6237\u7981\u7528 admin user disable 5.3.6 \u7528\u6237(\u4fe1\u606f)\u66f4\u65b0 admin user update 5.3.7 \u7528\u6237\u8bf7\u6c42\u5217\u8868 admin user list* 5.4 XX\u7ba1\u7406\u5458 admin sup* 5.4.1 XX\u5ba1\u6838 admin sup approve 5.4.2 XX\u6dfb\u52a0 admin sup add 5.4.3 XX\u5220\u9664 admin sup delete 5.4.4 XX\u8bf7\u6c42\u5217\u8868 admin sup list* 5.5 \u7cfb\u7edf\u53c2\u6570\u8bbe\u7f6e admin sysconfig (\u6682\u672a\u5b9e\u73b0) 5.5.1 \u5171\u8bc6\u8bbe\u7f6e admin sysconfig consensus* 5.5.2 \u6743\u9650\u63a7\u5236\u8bbe\u7f6e admin sysconfig ac* 5.5.3 \u670d\u52a1\u8d39\u8bbe\u7f6e admin sysconfig gasfee* A. PlatONE\u7cfb\u7edf\u5408\u7ea6\u4e2d\u672a\u4f7f\u7528\u7684\u63a5\u53e3 (\u5f85\u8865\u5145) B. \u53c2\u8003\u6765\u6e90","title":"\u94fe\u4ea4\u4e92\u5de5\u5177\uff08\u539fctool\uff09\u64cd\u4f5c\u6307\u5357"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#definition","text":"","title":"\u5b9a\u4e49 Definition"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#_1","text":"\u6587\u6863\u4e2d\u6d89\u53ca\u7684\u540d\u8bcd\u5b9a\u4e49\uff1a \u8d26\u6237account\uff1a\u533a\u5206\u4e8e\u94fe\u4e0a\u7684\u8d26\u6237\uff08\u5916\u90e8\u8d26\u6237EOA, \u5408\u7ea6\u8d26\u6237contract account\uff09\u7684\u6982\u5ff5\uff0c\u4e3a\u672c\u5730\u7aef\uff08local\uff09\u7684\u4e00\u4e2a\u6982\u5ff5\u3002\u8d26\u6237\uff08\u5730\u5740\uff09\u7531\u968f\u673a\u751f\u6210\u7684\u79c1\u94a5\u4ea7\u751f\u3002\u8be6\u60c5\u89c1\u5173\u7cfb\u56fe \u7528\u6237user\uff1a\u8d26\u6237\u5730\u5740\u8fdb\u884c\u7528\u6237\u6ce8\u518c\u64cd\u4f5c\u5f97\u5230\u5bf9\u5e94\u7684\u7528\u6237\u3002\u8be6\u7ec6\u53c2\u8003 \u7528\u6237\u6ce8\u518c\u8868\uff1a\u5b58\u50a8\u8d26\u6237\u8fdb\u884c\u7528\u6237\u6ce8\u518c\u65f6\u63d0\u4ea4\u7684\u76f8\u5173\u4fe1\u606f\u3002 \u7528\u6237\u5e73\u53f0\uff1a\u5ba1\u6838\u901a\u8fc7\u7684\u6ce8\u518c\u7528\u6237\u4fe1\u606f\u4f1a\u88ab\u6dfb\u52a0\u5230\u7528\u6237\u5e73\u53f0\u3002 \u6709\u6548\u7528\u6237\uff1a\u7528\u6237\u5e73\u53f0\u4e2d\u7684\u7528\u6237\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u6709\u6548\u4ee5\u53ca\u65e0\u6548\uff0c\u4ec5\u5f53\u7528\u6237\u4e3a\u6709\u6548\u72b6\u6001\u65f6\uff0c\u8be5\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5176\u62e5\u6709\u7684\u89d2\u8272\u7684\u6743\u9650\u3002\u5f53\u7528\u6237\u88ab\u7981\u7528\u6216\u88ab\u5220\u9664\u65f6\uff08\u7edf\u79f0\u4e3a\u65e0\u6548\uff09\uff0c\u65e0\u6cd5\u4eab\u6709\u94fe\u7ba1\u7406\u6743\u9650\u3002 \u89d2\u8272role\uff1a\u6709\u6548\u7528\u6237\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6ce8\u518c\u89d2\u8272\uff0c\u4e0d\u540c\u7684\u89d2\u8272\u62e5\u6709\u4e0d\u540c\u7684\u94fe\u7ba1\u7406\u6743\u9650\u3002\u8be6\u7ec6\u53c2\u8003 \uff08\u7528\u6237\uff09\u89d2\u8272\u6ce8\u518c\u8868\uff1a\u5b58\u50a8\u7528\u6237\u89d2\u8272\u6ce8\u518c\u65f6\u63d0\u4ea4\u7684\u76f8\u5173\u4fe1\u606f \u666e\u901a\u7528\u6237\uff1a\u6709\u6548\u4f46\u65e0\u4efb\u4f55\u89d2\u8272\u7684\u7528\u6237\u3002 \u89d2\u8272\u7528\u6237\uff1a\u62e5\u6709\u89d2\u8272\u7684\u6709\u6548\u7528\u6237\u3002 cns\u5e73\u53f0\uff1a\u5b58\u50a8\u5408\u7ea6cns\u6ce8\u518c\u4fe1\u606f\u3002","title":"\u540d\u8bcd\u5b9a\u4e49"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#_2","text":"\u5173\u7cfb\u8868 \uff1a account\u547d\u4ee4: \u8d26\u6237\u5730\u5740\u76f8\u5173\u64cd\u4f5c -\uff08\u4e0e\u516c\u79c1\u94a5\u5bf9\u7ed1\u5b9a\uff09 new delete update (changepassphrase) lock unlock EOA\u8d26\u6237\u64cd\u4f5c -\uff08\u4ee5\u592a\u574a\u539f\u751f\u6982\u5ff5\uff0c\u94fe\u4e0a\uff09 transfer balance User\u64cd\u4f5c -\uff08PlatONE\u6743\u9650\u6a21\u578b\u4e2d\u7684\u6982\u5ff5\uff0c\u94fe\u4e0a\uff09 register ...... \u5173\u7cfb\u56fe \uff1a rectangle local{ agent private_key as prk database keystore agent password package account { agent address as A A .. password } card crypto_module as crypto } prk .> A: gen prk <--> crypto: en/decode crypto <--> keystore crypto <- password rectangle operations{ card transfer card register card deploy transfer .. deploy deploy .. register } A -> transfer A -> register A -> deploy rectangle PlatONE{ package state_root{ package EOA{ agent address as B agent balance } package \u7528\u6237user{ package \u7528\u6237\u5e73\u53f0 as User{ agent address as C } package \u89d2\u8272role as Role{ agent roles } package \u7528\u6237\u6ce8\u518c\u8868 as UserReg{ } package \u89d2\u8272\u6ce8\u518c\u8868 as RoleReg{ } } package contract_account{ agent contract_address as caddr agent storage } EOA .. contract_account /'User ..contract_account'/ storage ..|> \u7528\u6237user UserReg . RoleReg C . Role RoleReg --> Role UserReg --> User } } transfer -> EOA register -> \u7528\u6237user deploy -> contract_account","title":"\u5b9a\u4e49\u4e4b\u95f4\u7684\u5173\u8054"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#template","text":"\u63cf\u8ff0 \uff1a \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a \u53ef\u9009\u53c2\u6570\uff1a \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u91cd\u6784\u540e\uff1a \u8f93\u51fa\u7ed3\u679c \uff1a \u5907\u6ce8 \uff1a","title":"\u6a21\u677f Template"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#0","text":"","title":"0. \u5168\u5c40\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#01-configjson","text":"\u914d\u7f6e\u6587\u4ef6 : \u7528\u4e8e\u5b58\u50a8\u90e8\u5206\u5168\u5c40\u9009\u9879\u5bf9\u5e94\u7684\u503c\uff0c\u4ee5\u51cf\u5c11\u7528\u6237\u91cd\u590d\u8f93\u5165\u3002 \u6bcf\u6b21\u7a0b\u5e8f\u542f\u52a8\u90fd\u4f1a\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u503c\u5e76\u8d4b\u503c\u5230 config \u5bf9\u8c61\u4e2d config.json (template) { \"url\":\"http://NODE-IP:RPC-PORT\", \"keystore\":\"DEFAULT_KEYSTORE_FILE\", \"account\":\"0xDEFAULT_ACCOUNT\" // \u6682\u672a\u4f7f\u7528 // \"gas\":\"0x0\", // \"gasPrice\":\"0x0\", }","title":"0.1 config.json"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#02","text":"\u63cf\u8ff0 \uff1a\u4f7f\u7528\u672c\u5730\u8d26\u6237\u5730\u5740\u53d1\u9001\u4ea4\u6613\uff0c\u5bf9\u5e94\u7684RPC\u8c03\u7528\u65b9\u5f0f\u5219\u4e3a eth_sendRawTransaction \u3002\u9009\u62e9\u8fdc\u7a0b\u8282\u70b9\u5b58\u50a8\u7684\u8d26\u6237\u5730\u5740\u53d1\u9001\u4ea4\u6613\uff0c\u5bf9\u5e94\u7684RPC\u8c03\u7528\u65b9\u5f0f\u5219\u4e3a eth_sendTransaction \u3002 \u53c2\u6570 \uff1a --account : \u6307\u5b9a\u53d1\u9001\u4ea4\u6613\u7684\u8d26\u6237\u5730\u5740\u3002\u5982\u679c\u540c\u65f6\u8fd8\u5b58\u5728 --local \u4ee5\u53ca --keystore \u9009\u9879\uff0c\u5219\u4f7f\u7528\u7684\u662f\u672c\u5730keystore\u4e2d\u5b58\u50a8\u7684\u8d26\u6237\u5730\u5740\uff0c\u82e5\u8be5\u5730\u5740\u4e0e --account \u4e0d\u5339\u914d\uff0c\u5219\u4f1a\u62a5\u9519\u3002 \u5f53\u53ea\u63d0\u4f9b --account \u65f6\uff0c\u5219\u4f7f\u7528\u8fdc\u7a0b\u8282\u70b9\u6240\u5b58\u50a8\u7684\u8d26\u6237\u5730\u5740\uff0c\u82e5\u5bf9\u5e94\u503c\u4e3a\u7a7a\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u5730\u5740 0X00...0 \u3002 --local : \u4ece\u672c\u5730\u9ed8\u8ba4\u7684kerystore file\u6587\u4ef6\u5939\u53bb\u5bfb\u627ekeystore\u6587\u4ef6 --keystore <file> : \u6307\u5b9a\u672c\u5730keystore\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u4f18\u5148\u5ea6\u9ad8\u4e8e --local","title":"0.2 \u8d26\u6237\u5730\u5740\u9009\u62e9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#03","text":"\u63cf\u8ff0 \uff1a\u6307\u5b9a\u8fdc\u7a0b\u8282\u70b9\u7684IP\u8fdb\u884c\u8fde\u63a5 \u53c2\u6570 : --url <string> \uff1a\u901a\u8fc7--url\u4e0e\u5168\u5c40\u53d8\u91cfconfig.Url\u83b7\u53d6URL: \u5f53\u672a\u63d0\u4f9b--url\u65f6,\u4f7f\u7528\u53d8\u91cfconfig.Url\u4e2d\u7684\u503c \u5f53\u63d0\u4f9b--url\u65f6\uff0c\u8bfb\u53d6--url\u4e2d\u7684\u503c\u5e76\u8986\u76d6config.json\u4e2durl\u952e\u5bf9\u5e94\u7684\u503c \u65e2\u672a\u63d0\u4f9b--url\u4e14\u5168\u5c40\u53d8\u91cfconfig.Url\u7684\u503c\u4e3a\u7a7a\uff0c\u62a5\u9519\u5e76\u63d0\u793a\u9519\u8bef","title":"0.3 \u8fdc\u7a0b\u8282\u70b9\u8fde\u63a5"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#04-sync","text":"\u63cf\u8ff0 \uff1a\u4e3b\u8981\u7528\u4e8e\u94fe\u4ea4\u4e92\u5199\u64cd\u4f5c\uff0c\u9ed8\u8ba4\u4e3a\u540c\u6b65\u7b49\u5f85\u4ea4\u6613\u56de\u6267\u67e5\u8be2\u7684\u8fd4\u56de\u7ed3\u679c\u3002 \u53c2\u6570 : --sync \uff1a\u4e0d\u67e5\u8be2\u4ea4\u6613\u56de\u6267\uff0c\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\uff0c\u8fd4\u56de\u7ed3\u679c\u4e3aTransaction Hash\uff0c\u5728\u7f51\u7edc\u73af\u5883\u8f83\u5dee\u65f6\u5efa\u8bae\u4f7f\u7528\u8be5\u53c2\u6570\u3002\u82e5\u8981\u8fdb\u4e00\u6b65\u67e5\u8be2\u4ea4\u6613\u56de\u6267\uff0c\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u53ef\u901a\u8fc7 contract methods \u547d\u4ee4\u8fdb\u884c\u67e5\u8be2 (\u8be6\u89c1Section 2.4)\u3002","title":"0.4 \u4e0d\u7b49\u5f85\u4ea4\u6613\u56de\u6267\u7ed3\u679c --sync*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#05","text":"\u63cf\u8ff0 \uff1a\u94fe\u4ea4\u4e92\u64cd\u4f5c\u9700\u8981\u8fdb\u884c\u7684\u5168\u5c40\u914d\u7f6e \u53c2\u6570 : --gas <num> : \u8bbe\u7f6e\u4ee3\u7801\u6267\u884c\u7684\u6700\u5927\u5141\u8bb8\u91cf\uff0c\u4ee5\u907f\u514d\u65e0\u9650\u5faa\u73af\u3002\u9ed8\u8ba4\u503c\u4e3a(TODO) --gas-price <num> : \u8bbe\u7f6e\u6267\u884c\u94fe\u4ea4\u4e92\u547d\u4ee4\u65f6\u5355\u4f4dgas\u6240\u9700\u6d88\u8017\u7684XX\u6570\u91cf\u3002\u9ed8\u8ba4\u503c\u4e3a(TODO)","title":"0.5 \u5176\u4ed6\u5168\u5c40\u9009\u9879"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#1-account","text":"\u9488\u5bf9\u8d26\u6237\u5730\u5740\u7684\u76f8\u5173\u64cd\u4f5c\u3002","title":"1. \u7528\u6237\u64cd\u4f5c account"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#11-account-transfer","text":"\u63cf\u8ff0 \uff1a\u4f7f\u7528\u8d26\u6237\u8fdb\u884c\u8f6c\u8d26\u64cd\u4f5c \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <to>: \u6536\u6b3e\u65b9\u8d26\u6237\u5730\u5740 <value>: \u8f6c\u8d26\u91d1\u989d\uff0c\u5355\u4f4d\uff08\u6682\u65e0\uff09 \u64cd\u4f5c \uff1a \u8d26\u6237\u5730\u57400xb239401ecf8427f17c6de134d6a6bddd3100251f\u5411\u8d26\u6237\u5730\u57400X123\u8f6c\u8d2610 wei \u91cd\u6784\u524d\uff1a # \u901a\u8fc7sendTransaction\u65b9\u5f0f: ctool transfer --from \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" --to \"0X123\" --value \"10\" # \u901a\u8fc7sendRawTransaction\u65b9\u5f0f: ctool transfer --from --to --value --pk // --pk (deprecated): private key file. If the argument is null, read from default path (./test/privateKeys.txt). \u91cd\u6784\u540e\uff1a # \u901a\u8fc7sendTransaction\u65b9\u5f0f ctool account transfer \"0X123\" \"10\" ## \u6307\u5b9a\u53d1\u9001\u4ea4\u6613\u8d26\u6237 ctool account transfer \"0X123\" \"10\" --account \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" # \u901a\u8fc7sendRawTransaction\u65b9\u5f0f\u53d1\u9001 ctool account transfer \"0X123\" \"10\" --keystore \"keystore.json\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u64cd\u4f5c\u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: Operation Succeeded ## \u5f02\u6b65\u67e5\u8be2 result: transaction hash is <transaction hash> # Error ## \u901a\u8fc7sendTransaction\u65b9\u5f0f ### \u8f93\u5165\u65e0\u6548\u91d1\u989d Fatal: parse value param error: strconv.ParseInt: parsing \"x0\": invalid syntax ### \u8f6c\u8d26\u91d1\u989d\u4e0d\u8db3 Fatal: send Transaction through http error: execute eth_sendTransaction rpc call error: insufficient funds for value ### \u8f6c\u8d26\u8d26\u6237\u65e0\u6548 Fatal: send Transaction through http error: execute eth_sendTransaction rpc call error: unknown account ## \u901a\u8fc7sendRawTransaction\u65b9\u5f0f \u7565 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a evm.Transfer(...)","title":"1.1 \u7528\u6237\u8f6c\u8d26 account transfer"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#12-account-register-user","text":"\u63cf\u8ff0 \uff1a\u5bf9\u62e5\u6709\u7684\u8d26\u6237\u8fdb\u884c\u7528\u6237\u6ce8\u518c\uff08User\uff09\uff0c\u5ba1\u6838\u901a\u8fc7\u7684\u8d26\u6237\u5730\u5740\u53ca\u5176\u4e2a\u4eba\u4fe1\u606f\u5c06\u88ab\u8bb0\u5f55\u5728\u7528\u6237\u5e73\u53f0\u3002\u53ea\u6709\u8fdb\u884c\u4e86\u7528\u6237\u6ce8\u518c\u7684\u8d26\u6237\u624d\u80fd\u8fdb\u4e00\u6b65\u8fdb\u884c\u89d2\u8272\u6ce8\u518c\u7533\u8bf7\u3002\u53ef\u4ee5\u5728\u7528\u6237\u6ce8\u518c\u9636\u6bb5\u9644\u4e0a\u89d2\u8272\u7533\u8bf7\uff0c\u7ba1\u7406\u5458\u5728\u5ba1\u6838\u901a\u8fc7\u8be5\u8d26\u6237\u540e\uff0c\u4f1a\u8fdb\u4e00\u6b65\u8fdb\u884c\u89d2\u8272\u6dfb\u52a0\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <account>\uff1a \u7528\u6237\u8d26\u6237\u5730\u5740 <name>\uff1a \u7528\u6237\u540d <tel>\uff1a \u7528\u6237\u7535\u8bdd\u4fe1\u606f <email>\uff1a \u7528\u6237\u90ae\u7bb1\u4fe1\u606f \u53ef\u9009\u53c2\u6570\uff1a --roles array<string>: \u7533\u8bf7\u6ce8\u518c\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\u540d\uff0c\u683c\u5f0f\u4e3a\"[\"<role>\"]\"\u6216\u8005\"[\"<role1>\",...,\"<role3>\"]\" --remark string: \u7528\u6237\u5907\u6ce8\u4fe1\u606f \u64cd\u4f5c \uff1a \u7528\u6237\u6ce8\u518c \u91cd\u6784\u524d\uff1a ctool invoke --addr \"0xf7e769f67be5bf06d5712c355e293ef0d4c685fc\" --func 'registerUser' --param '{\"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\",\"name\":\"xiaoluo\",\"mobile\":\"13111111111\",\"email\":\"123@126.com\",\"roles\":[\"chainAdmin\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"}' --abi \"userRegister/userRegister.cpp.abi.json\" --config \"cnsManager/user.json\" ctool cnsInvoke --cns \"__sys_UserRegister\" --func 'registerUser({\"address\":\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\",\"name\":\"Alice\",\"mobile\":\"13111111111\",\"email\":\"alice@wx.bc.com\",\"roles\":[\"scDeployer, nodeAdmin\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"})' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userRegister.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool account register-user \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \"Alice\" \"13111111111\" \"alice@wx.bc.com\" // \u7701\u53bb\u586b\u5199\"__sys_UserRegister\"\u5408\u7ea6\u540d \u4ee5\u53ca\"registerUser\"\u65b9\u6cd5\u540d\u7684\u7e41\u7410\u6b65\u9aa4 // \u7528\u6237\u9700\u8981\u586b\u5199\u7684\u4fe1\u606f\u66f4\u52a0\u660e\u786e # optonal flags: ## \u89d2\u8272\u4fe1\u606f ctool account register-user --addr ... ... --roles '[\"contractDeployer\", \"nodeAdmin\"]' ## \u7528\u6237\u5907\u6ce8\u4fe1\u606f ctool account register-user --addr ... ... --remark \"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: Operation Succeeded # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int registerUser(const char* registJson) contract\uff1a userRegister register-user \u6709\u5fc5\u586b\u4fe1\u606f\uff0c\u56e0\u6b64\u5355\u72ec\u5217\u51fa\u4e00\u4e2aregister-roles","title":"1.2 \u7528\u6237\u6ce8\u518c account register-user"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#13-account-register-roles","text":"\u63cf\u8ff0 \uff1a\u7528\u6237\u901a\u8fc7\u6709\u6548\u7528\u6237\u7684\u8d26\u6237\u5730\u5740\u8fdb\u884c\u89d2\u8272\u6ce8\u518c\u7533\u8bf7\uff0c\u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u7533\u8bf7\u5e76\u62e5\u6709\u591a\u79cd\u89d2\u8272\u3002\u89d2\u8272\u7528\u6237\u4eab\u6709\u66f4\u591a\u7684\u94fe\u7ba1\u7406\u6743\u9650\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003PlatONE\u767d\u76ae\u4e66\u6743\u9650\u6a21\u578b\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <roles>: \u7533\u8bf7\u6ce8\u518c\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\u540d\uff0c\u683c\u5f0f\u4e3a\"[\"<role>\"]\"\u6216\u8005\"[\"<role1>\",...,\"<role3>\"]\" \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u89d2\u8272\u6ce8\u518c\u5408\u7ea6\u5730\u57400xf8f1bec07e2556e6be2371f441f0a1ce9c8b737b ctool invoke --addr \" \" --func 'registerRole' --param '[\"nodeAdmin\"]' --abi \"roleRegister/roleRegister.cpp.abi.json\" --config \"cnsManager/user.json\" ctool cnsInvoke --cns \"__sys_RoleRegister\" --func 'registerRole(\"[\"nodeAdmin\"]\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/roleRegister.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool account register-roles --roles [\"nodeAdmin\"] \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: OK: [RoleRegister] [registerRole] Register success # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int registerRole(const char* roles) contract\uff1a roleRegister","title":"1.3 \u7528\u6237\u89d2\u8272\u6ce8\u518c account register-roles"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#14-account-update","text":"\u63cf\u8ff0 \uff1a\u66f4\u65b0\u7528\u6237\u7684\u7535\u8bdd\u3001\u90ae\u7bb1\u7b49\u76f8\u5173\u4fe1\u606f\uff0c\u666e\u901a\u7528\u6237\uff08\u65e0\u89d2\u8272/\u65e0\u6743\u9650\u7528\u6237\uff09\u53ea\u80fd\u4fee\u6539\u81ea\u5df1\u7684\u4fe1\u606f\uff0c\u65e0\u6cd5\u4fee\u6539\u5176\u4ed6\u7528\u6237\u7684\u4fe1\u606f\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address> \uff1a \uff08\u9009\u62e9\u8fdb\u884c\u66f4\u65b0\u7684\uff09\u7528\u6237\u8d26\u6237\u5730\u5740 \u53ef\u9009\u53c2\u6570 --mobile <number> \uff1a \u7528\u6237\u7535\u8bdd\u4fe1\u606f\uff08\u66f4\u65b0\uff09 --email string \uff1a \u7528\u6237\u90ae\u7bb1\u4fe1\u606f\uff08\u66f4\u65b0\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d: ctool cnsInvoke --cns \"__sys_UserManager\" --func 'update(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\",{\"address\":\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\",\"name\":\"Alice\",\"mobile\":\"1312222\",\"email\":\"123@qq.com\",\"status\":0})' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.jso\" --config \"../config.json\" // \u8f93\u5165\u53c2\u6570\u6709\u95ee\u9898? \u91cd\u6784\u540e: # optional flags\uff1a ## \u4fee\u6539\u7528\u6237\u7535\u8bdd ctool account update \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" --mobile \"1312222\" ## \u4fee\u6539\u7528\u6237\u90ae\u7bb1 ctool account update \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" --email \"123@qq.com\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: \u66f4\u65b0\u8bb0\u5f55\u6210\u529f # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int update(const char* userAddr, const char* updateJson) contract\uff1a userManager","title":"1.4 \u7528\u6237\u4fe1\u606f\u66f4\u65b0 account update"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#15-account-query","text":"\u63cf\u8ff0 \uff1a\u6839\u636e\u67e5\u8be2\u952e\u503c\u4ee5\u53ca\u8f85\u52a9\u9009\u9879\u8fdb\u884c\u4fe1\u606f\u7684\u7b5b\u9009\u67e5\u8be2\uff0c\u8fd4\u56de\u6240\u6709\u5339\u914d\u6210\u529f\u7684\u6570\u636e\u5bf9\u8c61 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a \u7528\u6237\u4fe1\u606f\u67e5\u8be2\uff0c\u7528\u4e8e\u7528\u6237\u4fe1\u606f\u66f4\u65b0\u3002 <account>: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u6216\u8d26\u6237\u540d\u79f0\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 // \u672a\u542f\u7528 --name string\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u8d26\u6237\u540d\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 \u5f85\u5546\u69b7\u53c2\u6570\uff08\u6682\u672a\u5b9e\u73b0\uff09\uff1a --status int\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u72b6\u6001\u3001\u6ce8\u518c\u72b6\u6001\u8fdb\u884c\u67e5\u8be2\u3002\u7528\u6237\u72b6\u6001\uff1a0\u6709\u6548\uff0c1\u7981\u7528, 2\u5220\u9664\u3002\u6ce8\u518c\u72b6\u6001\uff1a1\u7533\u8bf7\u4e2d\uff0c2\u5df2\u6279\u51c6\uff0c3\u62d2\u7edd --roles array<string>\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u89d2\u8272\u8fdb\u884c\u67e5\u8be2\uff0c\u683c\u5f0f\u4e3a\"[\"<role>\"]\" --reg string\uff1a \u8f85\u52a9\u9009\u9879\uff0c\u901a\u5e38\u642d\u914d--status\u8fdb\u884c\u4f7f\u7528\u3002\u53c2\u6570\u4e3a\"user\",\u5373\u5bf9\u7528\u6237\u6ce8\u518c\u8868\u8fdb\u884c\u67e5\u8be2\uff1b\u53c2\u6570\u4e3a\"role\",\u5373\u5bf9\u7528\u6237\u89d2\u8272\u6ce8\u518c\u8868\u8fdb\u884c\u67e5\u8be2\u3002 --display <num>\uff1a \u8f85\u52a9\u9009\u9879\uff0c\u8bbe\u7f6e\u67e5\u8be2\u5bf9\u8c61\u7684\u663e\u793a\u6570\u76ee\u3002\u642d\u914d\u67e5\u8be2\u952e\u8fdb\u884c\u4f7f\u7528\u3002\u82e5\u8f93\u5165\u663e\u793a\u6570\u76ee\u5927\u4e8e\u5b9e\u9645\u5bf9\u8c61\u6570\u76ee\uff0c\u5219\u663e\u793a\u5168\u90e8\u67e5\u8be2\u5bf9\u8c61\u3002\u53cd\u4e4b\uff0c\u663e\u793a\u524ddisplay\u6761\u6570\u76ee\uff0c\u6216\u4f7f\u7528--index\u8fdb\u884c\u8f85\u52a9\u663e\u793a\u3002\u8f93\u5165\u4e3a\u7a7a\u6216\u65e0--display\u9009\u9879\u65f6\uff0c\u5219\u8fd4\u56de\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u67e5\u8be2\u5bf9\u8c61\u3002 --index <num>: \u8f85\u52a9\u9009\u9879\uff0c\u642d\u914d--display\u4f7f\u7528\uff0c\u9ed8\u8ba4\u4e3a0\u3002\u663e\u793a\u7b2cdisplay*index\u6761\u81f3\u7b2cdisplay*(index+1)\u6761\u67e5\u8be2\u4fe1\u606f\uff0c\u82e5display*index\u5927\u4e8e\u5b9e\u9645\u5bf9\u8c61\u6570\u76ee\uff0c\u5219\u5ffd\u7565--index\u9009\u9879\u7684\u4f5c\u7528\u3002\u82e5\u5b9e\u9645\u67e5\u8be2\u5230\u7684\u5bf9\u8c61\u6570\u76ee\u4e3an, \u4e14display*index<n<display*(index+1),\u5219\u663e\u793a\u7b2cdisplay*index\u6761\u81f3\u7b2cn\u6761\u67e5\u8be2\u4fe1\u606f\u3002 \u64cd\u4f5c \uff1a \u7528\u6237\u4fe1\u606f\u548c\u7528\u6237\u89d2\u8272\u4fe1\u606f\u5206\u522b\u6765\u81ea\u4e0d\u540c\u7cfb\u7edf\u5408\u7ea6\u7684\u5b58\u50a8\u4e2d\uff0c\u91cd\u6784\u540e\u6211\u4eec\u628a\u7528\u6237\u4fe1\u606f\u4e0e\u89d2\u8272\u4fe1\u606f\u5728\u5185\u90e8\u8fdb\u884c\u5173\u8054\u540e\u518d\u53cd\u9988\u7ed9\u7528\u6237\u3002\uff08\u672a\u5b9e\u73b0\uff09 \u91cd\u6784\u524d\uff1a # 1 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u67e5\u8be2\u7528\u6237\u4fe1\u606f ## \u6b65\u9aa41\uff1a ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'getAccountByAddress' --param \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" --abi \"userManager/userManager.cpp.abi.json\" --config \"cnsManager/config.json\" ## \u6b65\u9aa42\uff1a getRolesByAddress # 2 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f ## \u6b65\u9aa41\uff1a ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'getAccountByName' --param \"xiaoluo\" --abi \"userManager/userManager.cpp.abi.json\" --config \"cnsManager/config.json\" ctool cnsInvoke --cns \"__sys_UserManager\" --func 'getAccountByName(\"Alice\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.json\" --config \"../config.json\" ## \u6b65\u9aa42\uff1a getRolesByName # 3 \u901a\u8fc7\u89d2\u8272\u540d\u67e5\u8be2\u89d2\u8272\u4fe1\u606f ## \u6b65\u9aa41\uff1a ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'getAccountsByRole' --param \"chainAdmin\" --abi \"roleManager/roleManager.cpp.abi.json\" --config \"cnsManager/config.json\" ## \u5982\u679c\u89d2\u8272\u5b58\u5728\u5219\u7528\u6237\u72b6\u6001\u4e00\u5b9a\u4e3a\u6709\u6548\uff1f\u4e0d\u4e00\u5b9a ## \u6b65\u9aa42\uff1aisValidUser(for\u5faa\u73af\u67e5\u8be2\uff0c\u589e\u52a0\u8d1f\u62c5\uff1f) # 5 \u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u6ce8\u518c\u8868\u4fe1\u606f ## \u7528\u6237\u6ce8\u518c\u8868 ## \u89d2\u8272\u6ce8\u518c\u8868 \u91cd\u6784\u540e\uff1a # 1 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u67e5\u8be2\u7528\u6237\u4fe1\u606f ctool account query \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" # 2 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f ctool account query \"xiaoluo\" # 3 \u901a\u8fc7\u89d2\u8272\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f \uff08\u6682\u672a\u5b9e\u73b0\uff09 ctool account query --roles [\"chainAdmin\"] # 4 \u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u7528\u6237\u4fe1\u606f \uff08\u65e0\u5bf9\u5e94\u63a5\u53e3\uff0c\u672a\u5b9e\u73b0\uff09 ctool account query --status \"0\" --display \"10\" --index \"2\" // 0:\u53ef\u7528; 1:\u7981\u7528; 2:\u5220\u9664 \u4e0d\u5bf9\u5220\u9664\u72b6\u6001\u8fdb\u884c\u67e5\u8be2\uff1f # 5 \u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u6ce8\u518c\u8868\u4fe1\u606f \uff08\u6682\u672a\u5b9e\u73b0\uff09 ## \u7528\u6237\u6ce8\u518c\u8868 ctool account query --status \"1\" --reg \"user\" --display \"10\" --index \"2\" // 1\u5ba1\u6838\u4e2d\uff0c2\u5df2\u6fc0\u6d3b\uff0c3\u5df2\u62d2\u7edd ## \u89d2\u8272\u6ce8\u518c\u8868 \uff08\u6682\u672a\u5b9e\u73b0\uff09 ctool account query --status \"0\" --reg \"role\" --display \"10\" --index \"2\" // 1 \u7533\u8bf7\u4e2d 2 \u5df2\u6279\u51c6 3 \u5df2\u62d2\u7edd \u8f93\u51fa\u7ed3\u679c \uff1a // \u57fa\u4e8e\u5bf9\u7528\u6237\u4fe1\u606f\u4fdd\u62a4\u7684\u76ee\u7684\uff0c\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u4e0d\u5305\u542b--tel, --email\u4fe1\u606f\uff1f # \u901a\u7528\u683c\u5f0f ## \u6210\u529f \u67e5\u8be2\u5230XX\u6761\u4fe1\u606f\uff0c\u663e\u793aXX\u6761\uff1a \uff08\u6682\u672a\u5b9e\u73b0\uff09 result: %s # \u5931\u8d25 \u540c 2.3 # 1 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u67e5\u8be2\u7528\u6237\u4fe1\u606f \u7528\u6237\u4fe1\u606f\u5bf9\u8c61\uff1a json<userInfo> { \"adress\": , \"name\": , \"email\": , \"mobile\": , \"status\": } ## \u6210\u529f\uff1a result: { \"code\":0, \"msg\":\"succeed\", \"data\":{ \"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\", \"name\":\"xiaoluo\", \"mobile\":\"1312222\", \"email\":\"123@qq.com\", \"status\":2 } } # 2 \u901a\u8fc7\u7528\u6237\u8d26\u6237\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f \u7ed3\u679c\u540c# 1 # 3 \u901a\u8fc7\u89d2\u8272\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f \uff08\u6682\u672a\u5b9e\u73b0\uff09 array of json<roleInfo> { \"address\": , \"name\": , \"roles\": } \u6210\u529f\uff1a result: { \"code\":0, \"msg\":\"Success\", \"data\":[{ \"name\":\"xiaoluo\", \"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\"}], \"roles\": } # 4 \u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u7528\u6237\u4fe1\u606f N/A # 5 \u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u6ce8\u518c\u4fe1\u606f \uff08\u6682\u672a\u5b9e\u73b0\uff09 \u7528\u6237\u6ce8\u518c\u8868 json<registerInfo> { \"user_address\": , \"name\": , \"mobile\": , \"email\": , \"remark\": , \"user_state\": , \"auditor_address\": , \"roles\": } \uff08\u5f85\u8865\u5145\uff09 \u89d2\u8272\u6ce8\u518c\u8868 \uff08\u6682\u672a\u5b9e\u73b0\uff09 json<registerUserInfo> { \"userAddress\": , \"userName\": , \"roleRequireStatus\": , \"requireRoles\": , \"approver\": } \uff08\u5f85\u8865\u5145\uff09 \u5907\u6ce8 \uff1a \u7528\u6237\u6ce8\u518c\u5408\u7ea6\u4e2d\u672a\u4f7f\u7528\u7684\u65b9\u6cd5\uff1a userRegister.getAccountByAddress() userRegister.getAccountByUsername() \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a const char* getAccountByAddress(const char* address) const contract\uff1a userManager const char* getRolesByAddress(const char *address)const contract\uff1a userManager const char* getAccountByName(const char* name) const contract\uff1a userManager const char* getRolesByName(const char *name)const contract\uff1a userManager const char* getAccountsByRole(const char *role)cont contract\uff1a roleManager const char* getRegisterInfosByStatus(int status, int pageNum, int pageSize) const contract\uff1a roleRegister const char* getAccountsByStatus(int pageNum, int pageSize, int accountStatus) const contract\uff1a userRegister","title":"1.5 \u7528\u6237\u4fe1\u606f\u67e5\u8be2 account query"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#16-account-state-status","text":"\u63cf\u8ff0 \uff1a\u67e5\u8be2\u7528\u6237\u7684\u5f53\u524d\u72b6\u6001\uff0c\u5f53\u524d\u72b6\u6001\u6709\u4ee5\u4e0b\u51e0\u79cd\u53ef\u80fd\uff1a1. \u8d26\u6237\u672a\u6ce8\u518c\u30022. \u8d26\u6237\u5ba1\u6838\u4e2d\u30023. \u8d26\u6237\u5ba1\u6838\u88ab\u62d2\u7edd\u30024. \u65e0\u6548\u7528\u6237\uff08\u88ab\u7ba1\u7406\u5458\u7981\u7528\u6216\u5220\u9664\uff09\u30025. \u666e\u901a\u7528\u6237\uff08\u6709\u6548\u7528\u6237\uff0c\u65e0\u89d2\u8272\uff09\u30026. \u6743\u9650\u7528\u6237\uff0c\u5ba1\u6838\u4e2d\u89d2\u8272\uff1a <num> \uff0c\u5df2\u62e5\u6709\u89d2\u8272\uff1a <num> \u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <account>\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u6216\u8d26\u6237\u540d\u8fdb\u884c\u72b6\u6001\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u6b65\u9aa41\uff1a userRegister:getStatusByAddress ctool cnsInvoke --cns \"__sys_UserManager\" --func 'isValidUser(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.json\" --config \"../config.json\" # \u6b65\u9aa42\uff1auserManager: isValidUser # \u6b65\u9aa43\uff1aroleRegister: getRegisterInfoByAddress/ Name # \u6b65\u9aa44\uff1aroleManager: getRolesByAddress/ Name \u91cd\u6784\u540e\uff1a ctool account status \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \u8f93\u51fa\u7ed3\u679c : \u8fd4\u56de\u7c7b\u578b\uff1astring<status> \u8fd4\u56de\u4ee5\u4e0b\u7ed3\u679c\u4e2d\u7684\u5176\u4e2d\u4e00\u4e2a\uff1a # \u6b65\u9aa41\uff1a 1. \u8d26\u6237\u672a\u6ce8\u518c 2. \u8d26\u6237\u5ba1\u6838\u4e2d 3. \u8d26\u6237\u5ba1\u6838\u88ab\u62d2 # \u6b65\u9aa42\uff1a 4. \u65e0\u6548\u7528\u6237\uff08\u88ab\u7ba1\u7406\u5458\u7981\u7528\u6216\u5220\u9664\uff09 # \u6b65\u9aa43\uff1a 5. \u666e\u901a\u7528\u6237\uff08\u6709\u6548\u7528\u6237\uff0c\u65e0\u89d2\u8272\uff09 \u5ba1\u6838\u4e2d\u89d2\u8272\uff1a... # \u6b65\u9aa44\uff1a 6. \u6743\u9650\u7528\u6237\uff0c \u5ba1\u6838\u4e2d\u89d2\u8272\uff1a... \u5df2\u62e5\u6709\u89d2\u8272\uff1a... \uff08\u5f85\u8865\u5145\uff09 getRolesByAddress/Name result: { \"code\":0, \"msg\":\"Success\", \"data\":[\"contractDeployer\",\"contractAdmin\"] } \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a int getStatusByAddress(const char* address) const contract\uff1a userRegister getStatusByName contract\uff1a userRegister","title":"1.6 \u7528\u6237\u72b6\u6001\u67e5\u8be2 account state // status?"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#2-contract","text":"\u9488\u5bf9\u5408\u7ea6\u7684\u76f8\u5173\u64cd\u4f5c","title":"2. \u5408\u7ea6\u64cd\u4f5c contract"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#21-contract-deploy","text":"\u63cf\u8ff0 \uff1a\u5408\u7ea6\u90e8\u7f72\u8005\u5c06\u7f16\u5199\u597d\u7684\u5408\u7ea6\u90e8\u7f72\u5230\u94fe\u4e0a\u3002\u652f\u6301wasm\u865a\u62df\u673a\u5408\u7ea6\u548cevm\u865a\u62df\u673a\u5408\u7ea6\u90e8\u7f72\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <codeFile>\uff1a \u5408\u7ea6\u7f16\u8bd1\u540e\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u6587\u4ef6\u8def\u5f84 \u53ef\u9009\u53c2\u6570\uff1a --abi <file>\uff1a \u5408\u7ea6abi\u6587\u4ef6\u8def\u5f84\uff0c\u90e8\u7f72wasm\u5408\u7ea6\u5fc5\u987b\u63d0\u4f9b\uff0c\u90e8\u7f72evm\u5408\u7ea6\u4e0d\u9700\u8981\u63d0\u4f9b --vm value: \u9009\u62e9\u8fdb\u884c\u90e8\u7f72\u7684\u5408\u7ea6\uff08\u76ee\u524d\u652f\u6301evm\u5408\u7ea6\uff0cwasm\u5408\u7ea6\uff0c\u9ed8\u8ba4\u4e3awasm\u5408\u7ea6\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool deploy --abi \"appContract/my_contract/my_contract.cpp.abi.json\" --code \"appContract/my_contract/my_contract.wasm\" --config \"./config.json\" \u91cd\u6784\u540e\uff1a ## wasm\u5408\u7ea6 ctool contract deploy \"./test/test_case/wasm/contracta.wasm\" --abi \"./test/test_case/wasm/contracta.cpp.abi.json\" ## evm\u5408\u7ea6 ctool contract deploy \"./test/test_case/sol/storage_byzantium_065.bin\" --vm evm \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f\uff1a ## \u540c\u6b65\u67e5\u8be2 result: contract address is 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 # \u5931\u8d25\uff1a \u53ef\u80fd\u5931\u8d25\u7684\u539f\u56e0\uff0c\u5177\u4f53\u9519\u8bef\u4fe1\u606f\u8bf7\u53c2\u7167\u4ee3\u7801 1. rlp\u7f16\u7801\u5931\u8d25 2. Http\u53d1\u9001\u5931\u8d25\uff1a * \u65e0\u8fd4\u56de\u7ed3\u679c * \u53d1\u9001\u51fa\u9519 * \u53d1\u9001\u6210\u529f\uff0c\u72b6\u6001\u7801\u4e0d\u4e3a200 3. Rpc\u8c03\u7528\u5931\u8d25 * RPC JSON\u6d88\u606f\u89e3\u6790\u5931\u8d25 * RPC\u8c03\u7528\u5931\u8d25\uff1a<\u5931\u8d25\u4fe1\u606f> 4. \u4ea4\u6613\u56de\u6267\u67e5\u8be2\u5931\u8d25 * \u67e5\u8be2\u8d85\u65f6 * \u4ea4\u6613\u6267\u884c\u5931\u8d25\uff0c\u72b6\u6001\u7801\u4e3a0x0 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a evm.Create(...)","title":"2.1 \u5408\u7ea6\u90e8\u7f72 contract deploy"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#22-contract-migrate","text":"\u63cf\u8ff0 \uff1a\u5c06\u65e7\u5408\u7ea6\u7684\u6570\u636e\u8fc1\u79fb\u5230\u65b0\u5408\u7ea6\u4e2d\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u65e7\u5408\u7ea6\u8d26\u6237\u5730\u5740 <to>: \u65b0\u5408\u7ea6\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool migInvoke --addr ${destination_contract_addr} --func 'migrateFrom' --param ${source_contract_addr} --config ${ctool.json} \u91cd\u6784\u540e\uff1a ctool contract migrate ${destination_contract_addr} ${source_contract_addr} \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: Operation Success # \u5931\u8d25\uff1a \u7565 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func migProcess(*state.StateDB, common.Address, common.Address, []byte) ([]byte, uint64, error) \u76ee\u524d\u63a5\u53e3\u5b58\u5728\uff0c\u4f46\u5e76\u672a\u542f\u7528\u76f8\u5e94\u529f\u80fd\uff0c\u6240\u4ee5\u64cd\u4f5c\u540estorage trie\u5e76\u672a\u4ece\u65e7\u5408\u7ea6\u590d\u5236\u5230\u65b0\u5408\u7ea6\u4e2d \u8fdb\u4e00\u6b65\uff1a\u8c03\u7528\u8fd4\u56de\u7ed3\u679c\u786e\u8ba4","title":"2.2 \u5408\u7ea6\u8fc1\u79fb contract migrate"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#23-contract-execute","text":"\u63cf\u8ff0 \uff1a\u8c03\u7528\u5e76\u6267\u884c\u5408\u7ea6\u4e2d\u7684\u65b9\u6cd5\u3002\u652f\u6301wasm\u865a\u62df\u673a\u5408\u7ea6\u548cevm\u865a\u62df\u673a\u5408\u7ea6\u65b9\u6cd5\u7684\u8c03\u7528\u3002\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u8be5\u547d\u4ee4\u5b9e\u73b0\u7cfb\u7edf\u5408\u7ea6\u7684\u8c03\u7528 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <contract>: \u5408\u7ea6\u8d26\u6237\u5730\u5740\u6216\u5408\u7ea6\u540d\u79f0 <function>: \u88ab\u6267\u884c\u5408\u7ea6\u7684\u5177\u4f53\u65b9\u6cd5\u4ee5\u53ca\u53c2\u6570\uff0c \u683c\u5f0f<funcname>(<param1>,<param2>) \u6216\u8005<funcname>()\u3002\u793a\u4f8b\uff1agetName()\u3002 \u53ef\u9009\u53c2\u6570\uff1a --param value: \u5408\u7ea6\u65b9\u6cd5\u7684\u5165\u53c2\uff0c\u5f53\u6709\u591a\u4e2a\u5165\u53c2\u65f6\uff0c\u4e00\u4e2a--param\u5bf9\u5e94\u4e00\u4e2a\u53c2\u6570\u3002\u683c\u5f0f\uff1a--param <value1> --param <value2> --abi <file>: \u5408\u7ea6abi\u6587\u4ef6\u8def\u5f84\u3002wasm\u865a\u62df\u673a\u5408\u7ea6abi\u6587\u4ef6\u672a\u6307\u5b9a\u65f6\u4f1a\u9ed8\u8ba4\u4ece\u94fe\u4e0a\u83b7\u53d6(\u672a\u542f\u7528)\u3002evm\u865a\u62df\u673a\u5408\u7ea6\u6267\u884c\u5fc5\u987b\u6307\u5b9aabi\u6587\u4ef6\uff0c\u5426\u5219\u6267\u884c\u51fa\u9519\u3002 --vm value: \u9009\u62e9\u8fdb\u884c\u6267\u884c\u7684\u5408\u7ea6\uff08\u76ee\u524d\u652f\u6301evm\u5408\u7ea6\uff0cwasm\u5408\u7ea6\uff0c\u9ed8\u8ba4\u4e3awasm\u5408\u7ea6\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u901a\u8fc7\u5408\u7ea6\u5730\u5740\u8c03\u7528\u5408\u7ea6 ## \u5199\u64cd\u4f5c ### \u5f62\u5f0f1 ctool invoke --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --abi \"appContract/my_contract/my_contract.cpp.abi.json\" --config \"./config.json\" --func \"setName\" --param \"wxbc\" ### \u5f62\u5f0f2 ctool invoke --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --abi ... ... --func \"setName(wxbc)\" //\u5efa\u8bae\u5199\u6210\u7b2c\u4e8c\u79cd\u5f62\u5f0f ## \u53ea\u8bfb\u64cd\u4f5c ctool invoke --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --abi \"appContract/my_contract/my_contract.cpp.abi.json\" --config \"./config.json\" --func \"getName\" # \u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8c03\u7528\u5408\u7ea6\uff08cns\u670d\u52a1\uff09 ctool cnsInvoke --cns \"test\" --abi \"appContract/my_contract/my_contract.cpp.abi.json\" --config \"./config.json\" --func \"setName(wxbc)\" //--cns (deprecated?) \u91cd\u6784\u540e\uff1a # \u901a\u8fc7\u5408\u7ea6\u5730\u5740\u8c03\u7528\u5408\u7ea6 ## wasm\u5408\u7ea6\uff08\u9ed8\u8ba4\uff09 ctool contract execute \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" \"setName(wxbc)\" ## evm\u5408\u7ea6 ctool contract execute ... ... --vm evm # \u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8c03\u7528\u5408\u7ea6\uff08cns\u670d\u52a1\uff09 ctool contract execute \"test\" \"setName(wxbc)\" // \u6ce8\uff1aevm\u5408\u7ea6\uff0c\u53ef\u4ee5\u901a\u8fc7CNS\u6ce8\u518c\u5408\u7ea6\u540d\uff0c\u4f46\u6682\u65f6\u4e0d\u652f\u6301\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u5408\u7ea6\u8c03\u7528\u3002 \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f request json data: %s response json: %s ## \u5199\u64cd\u4f5c * trasaction hash: %s ## \u53ea\u8bfb\u64cd\u4f5c * result: %v * result: [] # \u793a\u4f8b ## \u5199\u64cd\u4f5c transaction hash: \" \" ## \u53ea\u8bfb\u64cd\u4f5c result: wxbc # \u5931\u8d25 \u7565 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction or eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1aN/A","title":"2.3 \u5408\u7ea6\u6267\u884c contract execute"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#24-contract-methods","text":"\u63cf\u8ff0 \uff1a\u67e5\u8be2\u6307\u5b9a\u5408\u7ea6\u6240\u62e5\u6709\u7684\u65b9\u6cd5\uff0c\u8fd4\u56de\u65b9\u6cd5\u5217\u8868\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a --contract <string>: \u5408\u7ea6\u8d26\u6237\u5730\u5740\uff08\u6216\u8005\u5408\u7ea6\u540d\u79f0\uff0c\u5c1a\u672a\u5b9e\u73b0 --abi <file>: \u5408\u7ea6abi\u6587\u4ef6\u8def\u5f84\u3002wasm\u865a\u62df\u673a\u5408\u7ea6abi\u6587\u4ef6\u672a\u6307\u5b9a\u65f6\u4f1a\u9ed8\u8ba4\u4ece\u94fe\u4e0a\u83b7\u53d6\u3002evm\u865a\u62df\u673a\u5408\u7ea6\u6267\u884c\u5fc5\u987b\u6307\u5b9aabi\u6587\u4ef6\uff0c\u5426\u5219\u6267\u884c\u51fa\u9519\u3002 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u65e0 \u91cd\u6784\u540e\uff1a # \u901a\u8fc7abi\u83b7\u53d6\u5e76\u663e\u793a\u6240\u6709\u5408\u7ea6\u65b9\u6cd5 ctool contract methods --abi \"appContract/my_contract/my_contract.cpp.abi.json\" # \u901a\u8fc7\u5408\u7ea6\u5730\u5740\u83b7\u53d6\u5e76\u663e\u793a\u6240\u6709\u5408\u7ea6\u65b9\u6cd5 ctool contract methods --contract \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" // \u6ce8\uff1a\u524d\u63d0\u662f\u8be5\u5408\u7ea6\u5730\u5740\u7684abi\u6587\u4ef6\u6309\u7167\u5bf9\u5e94\u547d\u540d\u683c\u5f0f\u5b58\u50a8\u4e8e./abi\u6587\u4ef6\u5939\u4e2d \u8f93\u51fa\u7ed3\u679c \uff1a -------contract methods list---------- Method 1: retreive() int32 Method 2: store(num int32) ... ... \u5907\u6ce8 \uff1a \u65e0","title":"2.4 \u5408\u7ea6\u65b9\u6cd5\u67e5\u8be2 contract methods*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#3-cns","text":"\u9488\u5bf9\u5408\u7ea6\u57df\u540d\u7cfb\u7edf\u670d\u52a1\u7684\u76f8\u5173\u64cd\u4f5c\u3002\u76ee\u524d\u4ec5\u652f\u6301wasm\u5408\u7ea6\u4f7f\u7528\u8be5\u670d\u52a1\uff0cevm\u5408\u7ea6\u53ef\u4ee5\u8fdb\u884ccns\u6ce8\u518c\uff0c\u4f46\u65e0\u6cd5\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u5b9e\u73b0\u5408\u7ea6\u8c03\u7528\u3002","title":"3. \u5408\u7ea6\u57df\u540d\u7cfb\u7edf\u670d\u52a1 cns"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#31-cns-cns-register","text":"\u63cf\u8ff0 \uff1a\u5c06\u5408\u7ea6\u6ce8\u518c\u5230cns\u5e73\u53f0\u4e2d\uff0c\u6ce8\u518c\u540e\u7684\u5408\u7ea6\u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u8d26\u6237\u5730\u5740\u8fdb\u884c\u8c03\u7528\u6267\u884c\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5176\u5bf9\u5e94\u7684\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u6267\u884c\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>: \u5728cns\u4e2d\u6ce8\u518c\u7684\u5408\u7ea6\u540d\u79f0 <version>: \u5728cns\u4e2d\u6ce8\u518c\u7684\u7248\u672c\u53f7\uff0c\uff08\u8865\u5145\uff09\u3002\u683c\u5f0f\uff1a\"X.X.X.X\" <address>: \u8fdb\u884c\u6ce8\u518c\u7684\u5408\u7ea6\u7684\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'cnsRegister' --param \"test\" --param \"1.0.0.0\" --param \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --abi \"cnsManager/cnsManager.cpp.abi.json\" --config \"cnsManager/config.json\" \"cnsRegister('test', 1.0.0.0, 0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f)\" \u91cd\u6784\u540e\uff1a cns register \"test\" \"1.0.0.0\" \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" // \u7701\u53bb\u586b\u5199cnsProxy\u5408\u7ea6\u5730\u5740 // \u7528\u6237\u8f93\u5165\u53c2\u6570\u65f6\u66f4\u52a0\u660e\u786e \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: cnsRegister succeed! # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int cnsRegister(const char *name, const char *version, const char *address) contract: cnsManager","title":"3.1 \u5408\u7ea6cns\u6ce8\u518c cns register"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#32-cns-cns-unregister","text":"\u63cf\u8ff0 \uff1a\u6ce8\u9500\u6ce8\u518c\u5728cns\u5e73\u53f0\u4e2d\u7684\u5408\u7ea6\u3002\u901a\u8fc7\u4fee\u6539\u8be5\u5408\u7ea6\u6570\u636e\u5bf9\u8c61\u7684\u72b6\u6001\u5b57\u6bb5\u5b9e\u73b0\uff0c\u56e0\u6b64\u8be5\u5408\u7ea6\u7684cns\u6ce8\u518c\u6570\u636e\u4ecd\u7136\u4f1a\u4fdd\u7559\u5728cns\u5e73\u53f0\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 cns query \u547d\u4ee4\u67e5\u8be2\u5230\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>\uff1a \u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u5408\u7ea6\u540d\u79f0 <version>: \u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u7248\u672c\u53f7 \u53ef\u9009\u53c2\u6570\uff1a ```param --ver string: \u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u7248\u672c\u53f7\uff0c\u9ed8\u8ba4\u4e3a\"latest\" \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'cnsUnregister' --param \"test\" --param \"1.0.0.0\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a # \u6ce8\u9500\u6700\u65b0\u7248\u672c ctool cns unregister \"test\" # \u6ce8\u9500\u6307\u5b9a\u7248\u672c ctool cns unregister \"test\" --ver \"1.0.0.0\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u64cd\u4f5c result: cnsUnregister succeed! # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int cnsUnregister(char *name, char *version) contract: cnsManager","title":"3.2 \u5408\u7ea6cns\u6ce8\u9500 cns unregister"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#33-cns-cns-resolve","text":"\u63cf\u8ff0 \uff1a\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u4ee5\u53ca\u7248\u672c\u53f7\uff08\u9ed8\u8ba4\u4e3a\"latest\"\uff09\u89e3\u6790\u51fa\u5bf9\u5e94\u7684\u8d26\u6237\u5730\u5740\u3002\u4e00\u4e2a\u5408\u7ea6\u540d\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\uff08\u5728\u6ce8\u518c\u7684\uff09\u5408\u7ea6\u5730\u5740\uff0c\u901a\u8fc7\u7248\u672c\u53f7\u89e3\u6790\u51fa\u5bf9\u5e94\u7684\u5408\u7ea6\u5730\u5740\uff0c\u4f46\u5728cns\u5e73\u53f0\u4e2d\u5df2\u6ce8\u9500\u7684\u5408\u7ea6\u540d\u5bf9\u5e94\u7684\u7248\u672c\u53f7\u65e0\u6cd5\u89e3\u6790\u51fa\u76f8\u5e94\u7684\u8d26\u6237\u5730\u5740\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>\uff1a \u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u5408\u7ea6\u540d\u79f0 \u53ef\u9009\u53c2\u6570\uff1a --ver string: \u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u7248\u672c\u53f7\uff0c\u9ed8\u8ba4\u4e3a\"latest\" \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getContractAddress' --param \"test\" --param \"1.0.0.0\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getContractAddress' --param \"test\" --param \"1.0.0.0\" --abi \"cnsManager/cnsManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a # \u67e5\u8be2\u6700\u65b0\u7248\u672c ctool cns resolve \"test\" # \u67e5\u8be2\u6307\u5b9a\u7248\u672c ctool cns resolve \"test\" --ver \"1.0.0.0\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: <address> ## \u5bf9\u5e94\u5408\u7ea6\u540d\u79f0\u7684\u7248\u672c\u5df2\u6ce8\u9500 result: <null> # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a const char *getContractAddress(char *name, char *version) const contract: cnsManager","title":"3.3 \u5408\u7ea6cns\u89e3\u6790 cns resolve"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#34-cns-cns-query","text":"\u63cf\u8ff0 \uff1a\u6839\u636e\u67e5\u8be2\u952e\u503c\u4ee5\u53ca\u8f85\u52a9\u9009\u9879\u8fdb\u884ccns\u6ce8\u518c\u4fe1\u606f\u7684\u7b5b\u9009\u67e5\u8be2\uff0c\u8fd4\u56de\u6240\u6709\u5339\u914d\u6210\u529f\u7684\u6570\u636e\u5bf9\u8c61\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a --contract <address>: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u5408\u7ea6\u8d26\u6237\u5730\u5740\u6216\u8005\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u67e5\u8be2 --user <address>\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u7528\u6237\u8d26\u6237\u5730\u5740\u8fdb\u884c\u67e5\u8be2\uff0c\u67e5\u8be2\u8be5\u7528\u6237\u6ce8\u518c\u5728cns\u7684\u5408\u7ea6 // \u4f7f\u7528--user\u4f53\u73b0\u4e86PlatONE\u7684\u6743\u9650\u6a21\u578b\u7279\u8272 --all \u67e5\u8be2\u952e\uff0c\u663e\u793a\u6240\u6709cns\u4e2d\u6240\u6709\u6ce8\u518c\u7684\u5bf9\u8c61\uff08\u4e0d\u663e\u793a\u5df2\u6ce8\u9500\u7684\u4fe1\u606f\uff09 // \u540d\u79f0\u5f85\u5b9aTODO --display <num>\uff1a x --index <num>\uff1a x // \u5c1a\u672a\u5b9e\u73b0 --detail: \uff1f\uff1f\uff1f --addr <address>: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u5408\u7ea6\u8d26\u6237\u5730\u5740\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff1f\uff1f\uff1f\uff09 --name string\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u4e0d\u552f\u4e00\uff09 \u5f85\u5546\u69b7\u53c2\u6570 --status bool: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u5408\u7ea6\u5728cns\u7684\u6ce8\u518c\u72b6\u6001\u8fdb\u884c\u67e5\u8be2\uff0c\u53ef\u80fd\u5b58\u5728\u7684\u72b6\u6001\uff1a\u6ce8\u518c\u4e2d\uff08true\uff09\u6216\u6ce8\u9500(false) \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # 1 \u67e5\u8be2\u5df2\u6ce8\u518c\u5408\u7ea6 list registered contracts ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getRegisteredContracts' --param \"0\" --param \"10\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" # 2 \u901a\u8fc7\u540d\u79f0\u67e5\u8be2\u6ce8\u518c\u5386\u53f2 get contract history ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getHistoryContractsByName' --param \"test\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" # 3 \u901a\u8fc7\u6ce8\u518c\u8005\u8fdb\u884c\u67e5\u8be2 query contract register info ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getRegisteredContractsByAddress' --param \"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\" --param \"0\" --param \"10\" --abi \"cnsManager/cnsManager.cpp.abi.json\" --config \"cnsManager/config.json\" # 4 \u901a\u8fc7\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u67e5\u8be2 cnsManager: getContractInfoByAddress # 5 \u5408\u7ea6\u662f\u5426\u6ce8\u518c \u8be6\u7ec6\u89c1 3.5 \u91cd\u6784\u540e\uff1a # 1 \u67e5\u8be2\u5df2\u6ce8\u518c\u7684\u5408\u7ea6 ctool cns query --all --display \"10\" --index \"0\" # 2 \u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u67e5\u8be2 - \u67e5\u8be2\u8be5\u540d\u79f0\u6ce8\u518c\u5386\u53f2 ctool cns query --contract \"test\" # 3 \u901a\u8fc7\u6ce8\u518c\u8005\u8fdb\u884c\u67e5\u8be2 ctool cns query --user \"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\" --pageNum \"10\" --pageSize \"0\" # 4 \u901a\u8fc7\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u67e5\u8be2 // \u76ee\u524d\u63a5\u53e3\u4e3a\u901a\u8fc7\u5730\u5740\u67e5\u8be2\u672a\u88ab\u6ce8\u9500\u7684\u5408\u7ea6 ctool cns query --contract \"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\" \u8f93\u51fa\u7ed3\u679c \uff1a cnsInfo\u5bf9\u8c61: json<kInfo>{ \"name\": , \"version\": , \"address\": , \"origin\": , \"create_time\": , \"enabled\": } # \u6210\u529f # \u6ce8\uff1a\u64cd\u4f5c#1 #2 #3 #4\u5177\u6709\u7ed3\u6784\u76f8\u4f3c\u7684\u8f93\u51fa\u7ed3\u679c ## \u7ed3\u679c\u793a\u4f8b result: { \"code\":0, \"msg\":\"ok\", \"data\":{ \"total\":8, \"contract\":[ {\"name\":\"__sys_NodeManager\", \"version\":\"1.0.0.0\", \"address\":\"0xa94ad954e17606b8c254065c2317139f9cc593d0\", ... ..., \"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\", \"create_time\":1556258758307, \"enabled\":false} ] } } # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a char *getRegisteredContracts(int pageNum, int pageSize) const contract: cnsManager char *getRegisteredContractsByAddress(char *origin, int pageNum, int pageSize) const contract: cnsManager char* getContractInfoByAddress(char *address) const contract: cnsManager char *getHistoryContractsByName(char *name) const contract: cnsManager","title":"3.4 \u5408\u7ea6cns\u4fe1\u606f\u67e5\u8be2 cns query"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#35-cns-cns-state-state","text":"\u63cf\u8ff0 \uff1a\u901a\u8fc7\u67e5\u8be2\u952e\u67e5\u8be2\u4e00\u4e2a\u5408\u7ea6\u5728cns\u5e73\u53f0\u4e2d\u7684\u6ce8\u518c\u72b6\u6001\uff0c\u6ce8\u518c\u72b6\u6001\u5206\u4e3a\uff1a\u6ce8\u518c\u4e2d\uff08\u8fd4\u56detrue\uff09\u6216\u8005\u5df2\u7ecf\u6ce8\u9500\uff08\u8fd4\u56defalse\uff09\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <contract>: \u67e5\u8be2\u952e\uff0c\u6839\u636e\u5408\u7ea6\u8d26\u6237\u5730\u5740\u6216\u5408\u7ea6\u8d26\u6237\u540d\u79f0\u8fdb\u884c\u67e5\u8be2 // \u672a\u5b9e\u73b0 --addr <address>: \u67e5\u8be2\u952e\uff0c\u5408\u7ea6\u8d26\u6237\u5730\u5740 --name string: \u67e5\u8be2\u952e\uff0c\u5408\u7ea6\u5728cns\u4e2d\u6ce8\u518c\u7684\u5408\u7ea6\u540d\u79f0\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u67e5\u8be2\u5408\u7ea6\u5730\u5740\u662f\u5426\u6ce8\u518c ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'ifRegisteredByAddress' --param \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" # \u67e5\u8be2\u5408\u7ea6\u540d\u79f0\u662f\u5426\u88ab\u6ce8\u518c ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'ifRegisteredByName' --param \"test\" --abi \"~/PlatONE-Go/release/linux/conf/contracts/cnsManager.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a # \u67e5\u8be2\u5408\u7ea6\u5730\u5740\u662f\u5426\u6ce8\u518c ctool cns state \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" # \u67e5\u8be2\u5408\u7ea6\u540d\u79f0\u662f\u5426\u88ab\u6ce8\u518c ctool cns state \"test\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u5df2\u6ce8\u518c result: the contract is registered in CNS ## \u672a\u6ce8\u518c result: the contract is not registered in CNS # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a int ifRegisteredByName(char *name) const contract: cnsManager int ifRegisteredByAddress(char *address) const contract: cnsManager \u53ea\u8981\u88ab\u67e5\u8be2\u5730\u5740\u6216\u540d\u79f0\u6709\u4e00\u4e2acns\u5bf9\u8c61\u7684enable\u5b57\u6bb5\u662f\u6709\u6548\u7684\uff0c\u67e5\u8be2\u7ed3\u679c\u90fd\u4e3a\u771f\uff08\u5df2\u6ce8\u518c\uff09","title":"3.5 \u5408\u7ea6cns\u72b6\u6001\u67e5\u8be2 cns state // \u503e\u5411\u4f7f\u7528state"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#4-fw","text":"TODO: \u9632\u706b\u5899\u76f8\u5173\u672f\u8bed\u5b66\u4e60\uff0c\u5e76\u4fee\u6539\u76f8\u5e94\u63cf\u8ff0\uff08\u5f85\u5b8c\u6210\uff09\uff1f\uff1f\uff1f \u6dfb\u52a0\u901a\u8fc7\u5408\u7ea6\u540d\u79f0\u8c03\u7528\u9632\u706b\u5899\uff1fTxType\u51b2\u7a81\uff0cfwType&cnsType\uff0c\u662f\u5426\u80fd\u591f\u6539\u8fdb\uff1f \u7279\u522b\u8bf4\u660e\uff1a\u9632\u706b\u5899\u5f00\u542f\u4e0e\u5173\u95ed\u72b6\u6001\u4e0e\u9632\u706b\u5899\u89c4\u5219\u5199\u5165\u65e0\u5173\u8054\uff0c\u5373\u4f7f\u9632\u706b\u5899\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u4f9d\u65e7\u53ef\u4ee5\u5bf9\u9632\u706b\u5899\u89c4\u5219\u8fdb\u884c\u7f16\u5199\uff0c\u4f46\u4ec5\u5f53\u9632\u706b\u5899\u72b6\u6001\u4e3a\u5f00\u542f\u65f6\uff0c\u5199\u5165\u7684\u89c4\u5219\u624d\u4f1a\u751f\u6548\u3002","title":"4. \u9632\u706b\u5899\u670d\u52a1 fw"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#41-fw-start","text":"\u63cf\u8ff0 \uff1a\u5bf9\u6307\u5b9a\u5408\u7ea6\u5f00\u542f\u9632\u706b\u5899\u670d\u52a1 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --func '__sys_FwOpen()' --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool fw start \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u7565 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB)OpenFirewall(addr common.Address)","title":"4.1 \u9632\u706b\u5899\u5f00\u542f fw start*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#42-fw-stop","text":"\u63cf\u8ff0 \uff1a\u5bf9\u6307\u5b9a\u5408\u7ea6\u5173\u95ed\u9632\u706b\u5899\u670d\u52a1 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" --func '__sys_FwClose()' --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool fw stop \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB)CloseFirewall(addr common.Address)","title":"4.2 \u9632\u706b\u5899\u5173\u95ed fw stop*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#43-fw-query-status","text":"\u63cf\u8ff0 \uff1a\u901a\u8fc7\u67e5\u8be2\u952e\uff0c\u67e5\u8be2\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u4fe1\u606f \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u5408\u7ea6\u8d26\u6237\u5730\u5740\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --func '__sys_FwStatus()' --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool fw query \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: { \"ContractAddress\":\"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\", \"FwActive\":true, \"AcceptedList\":[{ \"Addr\":\"0xffffffffffffffffffffffffffffffffffffffff\", \"FuncName\":\"getName\"} ], \"DeniedList\":[{ \"Addr\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\", \"FuncName\":\"invokeNotify\"} ] } # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) GetFwStatus(addr common.Address) FwStatus","title":"4.3 \u9632\u706b\u5899\u4fe1\u606f\u67e5\u8be2 fw query* // \u503e\u5411\u4e0d\u4f7f\u7528status?"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#44-fw-clear","text":"\u63cf\u8ff0 \uff1a\u6e05\u7a7a\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u7684approve\u64cd\u4f5c\u6216reject\u64cd\u4f5c\u7684\u5168\u90e8\u89c4\u5219 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 \u53ef\u9009\u53c2\u6570\uff1a --action string \u6e05\u9664\u5bf9\u5e94\u64cd\u4f5c\u7684\u9632\u706b\u5899\u89c4\u5219\u3002\u9632\u706b\u5899\u64cd\u4f5c\uff1a\u5141\u8bb8approve(allow?)\u6216\u62d2\u7eddreject(block?) --all \u6e05\u9664\u6240\u6709\u64cd\u4f5c\u7684\u9632\u706b\u5899\u89c4\u5219 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --func '__sys_FwClear(\"Reject\")' --config \"../config.json\" \u91cd\u6784\u540e\uff1a # \u6e05\u9664\u5bf9\u5e94\u9632\u706b\u5899\u64cd\u4f5c\u89c4\u5219 ctool fw clear \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --action \"Reject\" # \u6e05\u9664\u6240\u6709\u9632\u706b\u5899\u89c4\u5219 ctool fw clear \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --all \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) FwClear(addr common.Address, action Action)","title":"4.4 \u9632\u706b\u5899\u89c4\u5219\u6e05\u7a7a fw clear"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#45-fw-new","text":"\u63cf\u8ff0 \uff1a\u65b0\u5efa\u4e00\u6761\u6216\u591a\u6761\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\u3002\u4e00\u6761\u9632\u706b\u5899\u89c4\u5219\u5305\u542b\u5177\u4f53\u7684\u9632\u706b\u5899\u64cd\u4f5c\uff08accept\u6216reject\u64cd\u4f5c\uff09\uff0c\u9700\u8981\u8fdb\u884c\u8fc7\u6ee4\u7684\u8d26\u6237\u5730\u5740\u4ee5\u53ca\u9700\u8981\u8fdb\u884c\u9650\u5236\u8bbf\u95ee\u7684\u5408\u7ea6\u63a5\u53e3\u540d\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addrres>: (\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684)\u5408\u7ea6\u8d26\u6237\u5730\u5740 <action>: \u9632\u706b\u5899\u64cd\u4f5c\uff1a\u5141\u8bb8accept(allow?)\u6216\u62d2\u7eddreject(block?) <account>: \u6307\u5b9a\u88ab\u8fc7\u6ee4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u6237\u8d26\u6237\u5730\u5740\uff0c'*'\u8868\u793a\u9632\u706b\u5899\u89c4\u5219\u5bf9\u6240\u6709\u7528\u6237\u8d26\u6237\u5730\u5740\u751f\u6548\u3002\u683c\u5f0f[\"<address1>\",\"<address2>\"]\uff0c\u5355\u4e2a\u8d26\u6237\u5730\u5740\u53ef\u7701\u7565[]\u3002 <api>: \u6307\u5b9a\u8fc7\u6ee4\u7684\u5408\u7ea6\u63a5\u53e3\u540d\uff0c'*'\u8868\u793a\u8be5\u5408\u7ea6\u7684\u6240\u6709\u63a5\u53e3\u3002\u683c\u5f0f[\"<funcname1>\",\"<funcname2>\"]\uff0c\u5355\u4e2a\u63a5\u53e3\u540d\u53ef\u7701\u7565[]\u3002\u793a\u4f8b--api \"getName\" \u6ce8\uff1a\u76ee\u524d\u53ea\u652f\u6301\u5355\u6761\u9632\u706b\u5899\u89c4\u5219\u7684\u6dfb\u52a0\uff0c\u5373\u5355\u4e2a\u8d26\u6237\u5730\u5740+\u5355\u4e2a\u63a5\u53e3 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --func '__sys_FwAdd(\"Accept\",\"*:getName\")' --config \"../config.json\" ctool fwInvoke --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --func '__sys_FwAdd(\"REJECT\", \"<addr1>:*|*:<api2>|<addr3>:<api3>\")' --config \"./config.json\" \u91cd\u6784\u540e\uff1a ## \u65b0\u589e\u4e00\u6761\u9632\u706b\u5899\u89c4\u5219 ctool fw \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" \"accept\" \"*\" \"getName\" ## \u6279\u91cf\u65b0\u589e\uff08\u6682\u672a\u5b9e\u73b0\uff09 ctool fw --addr \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\" --act \"reject\" --user [\"<addr1>,*,<addr3>\"] --api [\"*,<api2>,<api3>\"] // \u7701\u53bb\"__sys_FwAdd\"\u7684\u586b\u5199 // --acount --api\u5206\u5f00\u7684\u5199\u6cd5\u5bf9\u7528\u6237\u4e0d\u592a\u53cb\u597d\uff1f \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) FwAdd(addr common.Address, action Action, list []FwElem)","title":"4.5 \u9632\u706b\u5899\u89c4\u5219\u6dfb\u52a0 fw new"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#46-fw-delete","text":"\u63cf\u8ff0 \uff1a\u5220\u9664\u4e00\u6761\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 <action>: \u9632\u706b\u5899\u64cd\u4f5c\uff1a\u5141\u8bb8approve(allow?)\u6216\u62d2\u7eddreject(block?) <account>: \u6307\u5b9a\u88ab\u8fc7\u6ee4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u6237\u8d26\u6237\u5730\u5740\uff0c'*'\u8868\u793a\u9632\u706b\u5899\u89c4\u5219\u5bf9\u6240\u6709\u7528\u6237\u8d26\u6237\u5730\u5740\u751f\u6548\u3002\u683c\u5f0f[\"<address1>\",\"<address2>\"]\uff0c\u5355\u4e2a\u8d26\u6237\u5730\u5740\u53ef\u7701\u7565[]\u3002 <api>: \u6307\u5b9a\u8fc7\u6ee4\u7684\u5408\u7ea6\u63a5\u53e3\u540d\uff0c'*'\u8868\u793a\u8be5\u5408\u7ea6\u7684\u6240\u6709\u63a5\u53e3\u3002\u683c\u5f0f[\"<funcname1>\",\"<funcname2>\"]\uff0c\u5355\u4e2a\u63a5\u53e3\u540d\u53ef\u7701\u7565[]\u3002\u793a\u4f8b--api \"getName\" \u6ce8\uff1a\u76ee\u524d\u53ea\u652f\u6301\u5355\u6761\u9632\u706b\u5899\u89c4\u5219\u7684\u5220\u9664\uff0c\u5373\u5355\u4e2a\u8d26\u6237\u5730\u5740+\u5355\u4e2a\u63a5\u53e3 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" --func '__sys_FwDel(\"Reject\",\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5:setName\")' --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool fw delete \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" \"Reject\" \"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\" \"setName\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) FwDel(addr common.Address, action Action, list []FwElem)","title":"4.6 \u9632\u706b\u5899\u89c4\u5219\u5220\u9664 fw delete"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#47-fw-reset","text":"\u63cf\u8ff0 \uff1a\u5c06\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899accept\u64cd\u4f5c\u6216\u8005reject\u64cd\u4f5c\u5bf9\u5e94\u7684\u6240\u6709\u89c4\u5219\u6e05\u7a7a\uff0c\u5e76\u518d\u5199\u5165\u6210\u4e00\u6761\u5bf9\u5e94\u64cd\u4f5c\u7684\u65b0\u7684\u89c4\u5219\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 <action>: \u9632\u706b\u5899\u64cd\u4f5c\uff1a\u5141\u8bb8accept(allow?)\u6216\u62d2\u7eddreject(block?) <account>: \u6307\u5b9a\u88ab\u8fc7\u6ee4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u6237\u8d26\u6237\u5730\u5740\uff0c'*'\u8868\u793a\u9632\u706b\u5899\u89c4\u5219\u5bf9\u6240\u6709\u7528\u6237\u8d26\u6237\u5730\u5740\u751f\u6548\u3002\u683c\u5f0f[\"<address1>\",\"<address2>\"]\uff0c\u5355\u4e2a\u8d26\u6237\u5730\u5740\u53ef\u7701\u7565[]\u3002 <api>: \u6307\u5b9a\u8fc7\u6ee4\u7684\u5408\u7ea6\u63a5\u53e3\u540d\uff0c'*'\u8868\u793a\u8be5\u5408\u7ea6\u7684\u6240\u6709\u63a5\u53e3\u3002\u683c\u5f0f[\"<funcname1>\",\"<funcname2>\"]\uff0c\u5355\u4e2a\u63a5\u53e3\u540d\u53ef\u7701\u7565[]\u3002\u793a\u4f8b--api \"getName\" \u6ce8\uff1a\u76ee\u524d\u53ea\u652f\u6301\u5355\u6761\u9632\u706b\u5899\u89c4\u5219\u7684\u91cd\u7f6e\uff0c\u5373\u5355\u4e2a\u8d26\u6237\u5730\u5740+\u5355\u4e2a\u63a5\u53e3 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" --func '__sys_FwSet(\"Reject\",\"*:setName\")' --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool fw replace \"0x5855455df9d1b395332e3ae9b2efc4e 18ad8755f\" \"Reject\" \"*\" \"setName\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) FwSet(addr common.Address, action Action, list []FwElem)","title":"4.7 \u9632\u706b\u5899\u89c4\u5219\u66ff\u6362 fw reset"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#48-fw-import-import-rule-list","text":"\u63cf\u8ff0 \uff1a\u5c06XX\u683c\u5f0f\u9632\u706b\u5899\u6587\u4ef6\u4e2d\u7684\u9632\u706b\u5899\u89c4\u5219\u5bfc\u5165\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\u4e2d \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a --addr <addres>: \uff08\u8fdb\u884c\u9632\u706b\u5899\u8bbe\u7f6e\u7684\uff09\u5408\u7ea6\u8d26\u6237\u5730\u5740 \u53ef\u9009\u53c2\u6570\uff1a --fwfile <file>: \u5bfc\u5165\u7684\u9632\u706b\u5899\u89c4\u5219\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u6587\u4ef6\u4e3a\u3002/config/fireWall.json \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u7565 \u91cd\u6784\u540e\uff1a ctool fw import \"0x5855455df9d1b395332e3ae9b2efc4e18ad8755f\" --fwfile <file path> \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: Operation Succeeded # \u5931\u8d25 \u540c 4.1 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a func (s *StateDB) FwImport(addr common.Address, data []byte) error","title":"4.8 \u9632\u706b\u5899\u89c4\u5219\u5bfc\u5165 fw import // import rule list"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#49-fw-export","text":"\u63cf\u8ff0 \uff1a\u5c06\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\u5bfc\u51fa\u5230\u6307\u5b9a\u4f4d\u7f6e\u7684\u9632\u706b\u5899\u89c4\u5219\u6587\u4ef6\u4e2d \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <addres>: \u5408\u7ea6\u8d26\u6237\u5730\u5740 \u53ef\u9009\u53c2\u6570\uff1a --fwfile <file>: \u5bfc\u51fa\u7684\u9632\u706b\u5899\u89c4\u5219\u6587\u4ef6\u5b58\u50a8\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u8def\u5f84\u4e3a./config \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool fwInvoke --addr \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --func '__sys_FwStatus()' --config \"../config.json\" // \u901a\u8fc7__sys_FwStatus()\u5b9e\u73b0\uff0c\u6ca1\u6709\u72ec\u7acb\u7684\u63a5\u53e3 \u91cd\u6784\u540e\uff1a # \u5bfc\u51fa\u9632\u706b\u5899\u89c4\u5219\u5230\u9ed8\u8ba4\u5730\u5740 ctool fw export \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" # \u5bfc\u51fa\u9632\u706b\u5899\u89c4\u5219\u5230\u6307\u5b9a\u5730\u5740 ctool fw export \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --fwfile <file path> \u8f93\u51fa\u7ed3\u679c \uff1a \u540c 4.3 \u5907\u6ce8 \uff1a","title":"4.9 \u9632\u706b\u5899\u89c4\u5219\u5bfc\u51fa fw export"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#5-admin","text":"\u5206\u7c7b\u4f9d\u636e \uff1a \u6839\u636e\u76ee\u524dPlatONE\u5df2\u6709\u7684\u89d2\u8272\u8fdb\u884c\u5206\u7c7b,\u65b9\u4fbf\u5404\u7c7b\u7ba1\u7406\u5458\u4f7f\u7528\u7b26\u5408\u5404\u81ea\u6743\u9650\u7684\u547d\u4ee4\u3002\u4f8b\u5982\u8282\u70b9\u7ba1\u7406\u5458\u53ea\u9700\u5728node\u4e8c\u7ea7\u547d\u4ee4\u4e2d\u53bb\u5bfb\u627e\u76f8\u5173\u547d\u4ee4\uff0c\u4ece\u800c\u51cf\u5c11\u8c03\u7528\u4e00\u4e2a\u64cd\u4f5c\u53d1\u73b0no permission\u7684\u60c5\u51b5\u3002 \u867d\u7136node, ,user,\u8fd9\u4e9b\u4e8c\u7ea7\u547d\u4ee4\u7684\u5b50\u547d\u4ee4\u91cd\u5408\u5ea6\u5f88\u9ad8\uff0c\u4f46\u662f\u540c\u540d\u5b50\u547d\u4ee4\u7684\u5fc5\u8981\u53c2\u6570\u5374\u4e0d\u4e00\u81f4\uff0c\u4e5f\u5bfc\u81f4\u65e0\u6cd5\u5c06\u8fd9\u4e9b\u547d\u4ee4\u8f83\u597d\u7684\u5408\u5e76\u5230\u4e00\u8d77\u3002 \u8865\u5145 \uff1a \u4e8c\u7ea7\u547d\u4ee4\u7684\u540d\u79f0\u53c2\u8003\u4e86PlatONE\u6743\u9650\u6a21\u578b\u4e2d\u7684\u89d2\u8272\u547d\u540d","title":"5. \u7cfb\u7edf\u7ba1\u7406\u5458 admin"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#51-admin-node","text":"","title":"5.1 \u8282\u70b9\u7ba1\u7406\u5458 admin node"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#511-admin-node-add","text":"\u63cf\u8ff0 \uff1a\u5c06\u8282\u70b9\u6dfb\u52a0\u5230PlatONE\u7f51\u7edc\u4e2d\u3002\u6ca1\u6709\u88ab\u7ba1\u7406\u5458\u6dfb\u52a0\u5230\u8282\u70b9\u5217\u8868\u7684\u8282\u70b9\u65e0\u6cd5\u53c2\u4e0ePlatONE\u7f51\u7edc\u4e2d\u8282\u70b9\u7684\u533a\u5757\u540c\u6b65\uff0c\u5171\u8bc6\u7b49\u7b49\u3002\u7b2c\u4e00\u6b21\u88ab\u6dfb\u52a0\u7684\u8282\u70b9\u7c7b\u578b\u90fd\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9\u3002\u89c2\u5bdf\u8005\u8282\u70b9\u540e\u7eed\u53ef\u4ee5\u7531\u7ba1\u7406\u5458\u4fee\u6539\u6210\u4e3a\u5171\u8bc6\u8282\u70b9\u53c2\u4e0e\u5171\u8bc6\u3002\uff08\u8282\u70b9\u88ab\u6dfb\u52a0\u540e\uff0c\u5728\u4e0b\u4e00\u6b21peer\u66f4\u65b0\u65f6\u4f1a\u4e0ePlatONE\u7f51\u7edc\u4e2d\u7684boostnode\u8282\u70b9\u5efa\u7acb\u8fde\u63a5\uff08\u5f85\u786e\u8ba4\uff09\uff09 \u6ce8 \uff1a * \u5982\u679c\u8282\u70b9\u5217\u8868\u4e2d\u5df2\u6709\u540c\u540d\u4e14\u72b6\u6001\u4e3a\u6709\u6548\u7684\u8282\u70b9\uff0c\u5219\u6ce8\u518c\u5931\u8d25\u3002 * \u5982\u679c\u8282\u70b9\u5217\u8868\u4e2d\u5df2\u6709\u540c\u516c\u94a5\u7684\u8282\u70b9\uff08\u65e0\u8bba\u8282\u70b9\u72b6\u6001\uff09\uff0c\u5219\u6ce8\u518c\u5931\u8d25\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>: \u8282\u70b9\u540d\u79f0 <publicKey>: \u8282\u70b9\u516c\u94a5\uff0c\u7528\u4e8e\u8282\u70b9\u95f4\u5b89\u5168\u901a\u4fe1\u3002\u8282\u70b9\u7684\u516c\u79c1\u94a5\u5bf9\u53ef\u7531ethkey\u5de5\u5177\u4ea7\u751f\u3002 <externalIP>: \u8282\u70b9\u5916\u7f51IP <internalIP>: \u8282\u70b9\u5185\u7f51IP // \u521d\u59cb\u5316\u65f6\u90fd\u662f\u56fa\u5b9a\u5e38\u6570\u503c\uff0c\u53ef\u4ee5\u7701\u7565 // --type string: \u8282\u70b9\u7c7b\u578b\uff0c0\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9\uff0c1\u4e3a\u5171\u8bc6\u8282\u70b9\u3002\u521d\u6b21\u52a0\u5165\u94fe\u7f51\u7edc\u7684\u8282\u70b9\u90fd\u4e3a\u89c2\u5bdf\u8282\u70b9\uff0c\u89c2\u5bdf\u8282\u70b9\u53ef\u4ee5\u7531\u7ba1\u7406\u5458\u8bbe\u7f6e\u4e3a\u5171\u8bc6\u8282\u70b9\u3002 // --status string: \u8282\u70b9\u72b6\u6001\uff0c1\u4e3a\u6709\u6548\u72b6\u6001\uff0c2\u4e3a\u65e0\u6548\uff08\u5220\u9664\uff09\u72b6\u6001 \u53ef\u9009\u53c2\u6570\uff1a --rpc-port int<num>: \u7528\u4e8erpc\u8fdc\u7a0b\u8c03\u7528\u7684\u7f51\u7edc\u7aef\u53e3\uff0c\u9ed8\u8ba4\u7aef\u53e36791 --p2p-port int<num>: \u7528\u4e8ep2p\u901a\u4fe1\u7684\u7f51\u7edc\u7aef\u53e3\uff0c\u9ed8\u8ba4\u7aef\u53e316791 --desc string: \u8282\u70b9\u63cf\u8ff0 --delay <num>: \u5171\u8bc6\u8282\u70b9\u5ef6\u8fdf\u8bbe\u7f6e\u7684\u533a\u5757\u9ad8\u5ea6\uff0c\u9ed8\u8ba4\u5b9e\u65f6\u8bbe\u7f6e // \u7b80\u5199--rpc, --p2p ??? \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'add' --param '{\"name\":\"root\",\"owner\":\"0x96307a6168921cefd50d66e1921a029fe1982394\",\"approver\":\"0x96307a6168921cefd50d66e1921a029fe1982394\",\"desc\":\"root\",\"publicKey\":\"feffe2938d427088f5fcce94a9245760b92c468d3ca25ab5ef2b1cdccf0ed911963b74ca2dffef20ef135966e34ebcc905d1f12c1df09f05974a617cf8afe8e8\",\"root\":true,\"type\":1,\"externalIP\":\"127.0.0.1\",\"internalIP\":\"127.0.0.1\",\"rpcPort\":6791,\"p2pPort\":16791,\"status\":1}' --abi \"./conf/contracts/nodeManager.cpp.abi.json\" --config \"./user2.json\" \u91cd\u6784\u540e\uff1a ctool admin node add \"root\" --desc \"root\" \"feffe2938d427088f5fcce94a9245760b92c468d3ca25ab5ef2b1cdccf0ed911963b74ca2dffef20ef135966e34ebcc905d1f12c1df09f05974a617cf8afe8e8\" \"127.0.0.1\" \"127.0.0.1\" // \u4e0d\u9700\u6307\u5b9atype, status // owner \u9700\u8981\u6307\u5b9a\uff0c\u76ee\u524d\u5185\u7f6e\u4e00\u4e2a\u503c // approver\u4e0d\u9700\u8981\u6307\u5b9a\uff0c\u5df2\u5f03\u7528\uff1f \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u7ed3\u679c result\uff1aadd node info success. node info: {\"delayNum\":... ...} # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int add(const char *nodeJsonStr) contract: nodeManager \"owner\"``\"approver\" \u5b57\u6bb5\u672a\u542f\u7528","title":"5.1.1 \u8282\u70b9\u6dfb\u52a0 admin node add"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#512-admin-node-delete","text":"\u63cf\u8ff0 \uff1a\u5c06\u8282\u70b9\u4ece\u8282\u70b9\u5217\u8868\u4e2d\u5220\u9664\u3002\u5728\u4e0b\u4e00\u6b21peers\u66f4\u65b0\u540e\uff0c\u88ab\u5220\u9664\u7684\u8282\u70b9\u4f1a\u88abPlatONE\u7f51\u7edc\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\u65ad\u5f00\u8fde\u63a5\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>: \u8282\u70b9\u540d\u79f0 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u7565 \u91cd\u6784\u540e\uff1a ctool admin node delete \"root\" // \u4e0d\u5b58\u5728\u7528\u6237\u76f4\u63a5\u4fee\u6539status\u7684\u60c5\u51b5\u3002\u786e\u4fddstatus\u53ea\u80fd\u4ece1->2\u3002 // \u72b6\u6001\u4fee\u6539\u540e\uff0c\u8282\u70b9\u7684\u5b8c\u6574\u4fe1\u606f\u4f9d\u65e7\u53ef\u4ee5\u901a\u8fc7query\u547d\u4ee4\u67e5\u8be2\u5230 \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u5199\u64cd\u4f5c result: NodeManager update key: status # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int update(const char *name, const char *nodeJsonStr) contract nodeManager","title":"5.1.2 \u8282\u70b9\u5220\u9664 admin node delete"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#513-admin-node-update","text":"\u63cf\u8ff0 \uff1a \u66f4\u65b0\u8282\u70b9\u7684 desc \u3001 delayNum \u4e0e type \u5b57\u6bb5\u4e2d\u7684\u4fe1\u606f\u3002\u65e0\u6cd5\u66f4\u65b0\u6743\u9650\u540c\u7ea7\u53ca\u5176\u4ee5\u4e0a\u89d2\u8272\u8282\u7684\u4fe1\u606f\u3002 \u72b6\u6001\u65e0\u6548\u7684\u8282\u70b9\u4f9d\u65e7\u53ef\u4ee5\u66f4\u65b0\u76f8\u5e94\u4fe1\u606f(bug?) \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>: \u8282\u70b9\u540d\u79f0 \u53ef\u9009\u53c2\u6570\uff1a --desc string: \u8282\u70b9\u63cf\u8ff0 --type string: \u8282\u70b9\u7c7b\u578b\uff0c\"observer\"(0)\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9\uff0c\"consensus\"(1)\u4e3a\u5171\u8bc6\u8282\u70b9\u3002 --delay <num>: \u5171\u8bc6\u8282\u70b9\u5ef6\u8fdf\u8bbe\u7f6e\u7684\u533a\u5757\u9ad8\u5ea6\uff0c\u9ed8\u8ba4\u5b9e\u65f6\u8bbe\u7f6e \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u8c03\u7528 ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func \"update\" --param \"nodeC\" --param '{\"type\":1}' --abi \"./conf/contracts/nodeManager.cpp.abi.json\" --config \"./user2.json\" # \u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u8c03\u7528 ctool cnsInvoke --cns \"__sys_NodeManager\" --config \"ctool.json\" --abi \"nodeManager/nodeManager.cpp.abi.json\" --func \"update\" --param \"test\" --param '{\"type\":1}' ctool cnsInvoke --cns \"__sys_NodeManager\" --func 'update(\"node-4\",\"1\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/nodeManager.cpp.abi.json\" --config \"../config.json\" // \u5efa\u8bae\u4f7f\u7528\u5408\u7ea6\u540d\u79f0\u8c03\u7528\u7cfb\u7edf\u5408\u7ea6 \u91cd\u6784\u540e\uff1a # \u66f4\u65b0\u8282\u70b9type\u4fe1\u606f ctool admin node update \"node-4\" --type \"consensus\" # \u66f4\u65b0\u8282\u70b9desc\u4fe1\u606f ctool admin node update \"node-4\" --desc \"this is a description\" # \u66f4\u65b0\u8282\u70b9delayNum\u4fe1\u606f ctool admin node update \"node-4\" --delay 10 \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: NodeManager update key: type # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int update(const char *name, const char *nodeJsonStr) contract: nodeManager","title":"5.1.3 \u8282\u70b9\u4fe1\u606f\u66f4\u65b0 admin node update \u53ea\u66f4\u65b0\u7528\u6237\u90ae\u7bb1\u548c\u7535\u8bdd\u4fe1\u606f\uff0c\u8bbe\u8ba1\u7684\u610f\u4e49\u4e0d\u5927\uff1f"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#514-admin-node-query","text":"\u63cf\u8ff0 \uff1a\u901a\u8fc7\u67e5\u8be2\u952e\u5bf9\u8282\u70b9\u4fe1\u606f\u8fdb\u884c\u67e5\u8be2\uff0c\u8fd4\u56de\u5339\u914d\u6210\u529f\u7684\u6570\u636e\u5bf9\u8c61\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a \u82e5\u65e0\u4efb\u4f55\u67e5\u8be2\u952e\u5219\u8fd4\u56de\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u636e\u5bf9\u8c61 --all \u67e5\u8be2\u952e\uff0c\u67e5\u8be2\u6240\u6709\u8282\u70b9(\u5305\u542b\u5df2\u88ab\u5220\u9664\u7684\u8282\u70b9) --name string\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u540d\u79f0\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u53ef\u80fd\u4e0d\u552f\u4e00\uff09 --status string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u72b6\u6001\u8fdb\u884c\u67e5\u8be2\u3002valid(1)\u4e3a\u6709\u6548\u72b6\u6001\uff0cinvalid(2)\u4e3a\u65e0\u6548\uff08\u5220\u9664\uff09\u72b6\u6001 --type string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u7c7b\u578b\u8fdb\u884c\u67e5\u8be2\u3002observer(0)\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9\uff0cconsensus(1)\u4e3a\u5171\u8bc6\u8282\u70b9 --publickey string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u516c\u94a5\u8fdb\u884c\u67e5\u8be2\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 // \u6682\u672a\u5b9e\u73b0 --enode \u642d\u914d--status\u4f7f\u7528\uff0c\u8fd4\u56de\u7684\u8282\u70b9\u4fe1\u606f\u4e3aenode\u683c\u5f0f \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u8c03\u7528 ## \u8fd4\u56de\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9 ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'getAllNodes' --abi \"./conf/contracts/nodeManager.cpp.abi.json\" --config \"./user2.json\" ## \u6839\u636e\u67e5\u8be2\u952e\u8fdb\u884c\u641c\u7d22 ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'getNodes' --param '{\"name\":\"nodeC\"}' --abi \"./conf/contracts/nodeManager.cpp.abi.json\" --config \"./user2.json\" # \u901a\u8fc7\u7cfb\u7edf\u5408\u7ea6\u540d\u79f0\u8fdb\u884c\u8c03\u7528 ## \u8fd4\u56de\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9 ctool cnsInvoke --cns \"__sys_NodeManager\" --config \"ctool.json\" --abi \"nodeManager/nodeManager.cpp.abi.json\" --func \"getAllNodes()\" ## \u6839\u636e\u67e5\u8be2\u952e\u8fdb\u641c\u7d22 ctool cnsInvoke --cns \"__sys_NodeManager\" --func 'getNodes({\"name\":\"node-0\"})' --abi \"~/PlatONE-Go/release/linux/conf/contracts/nodeManager.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a ## \u8fd4\u56de\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9 ctool admin node query --all ## \u6839\u636e\u67e5\u8be2\u952e\u8fdb\u884c\u641c\u7d22 ctool admin node query --name \"node-0\" ctool admin node query --status \"valid\" ctool admin node query --type \"consensus\" ## \u7ec4\u5408\u67e5\u8be2 ctool admin node query --status \"valid\" --name \"root\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u8bfb\u64cd\u4f5c * result: %s ## \u793a\u4f8b array of json<nodeInfo> result:{ \"code\":0, \"msg\":\"success\", \"data\":[{ \"name\": ..., \"owner\": ..., \"desc\": ..., \"type\": ..., \"publickey\": ..., \"externalIP\": ..., \"internalIP\": ..., \"rpcPort\": ..., \"p2pPort\": ..., \"status\": ..., \"delynum\": `omitempty` } ] } // \u65e0\"approver\"\u5b57\u6bb5 # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a const char *getAllNodes() const contract: nodeManager const char *getNodes(const char *nodeJsonStr) const contract: nodeManager nodeManager: getNormalEnodeNodes nodeManager: getDeletedEnodeNodes // \u8fd4\u56de enode://<pk>@<int-ip>:<p2p-port>|...|enode:...","title":"5.1.4 \u8282\u70b9\u4fe1\u606f\u67e5\u8be2 admin node query"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#514-admin-node-stat","text":"\u63cf\u8ff0 \uff1a\u901a\u8fc7\u67e5\u8be2\u952e\u5bf9\u8282\u70b9\u4fe1\u606f\u8fdb\u884c\u67e5\u8be2\uff0c\u5bf9\u5339\u914d\u6210\u529f\u7684\u6570\u636e\u5bf9\u8c61\u8fdb\u884c\u7edf\u8ba1\uff0c\u8fd4\u56de\u7edf\u8ba1\u503c\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a --status string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u72b6\u6001\u8fdb\u884c\u7edf\u8ba1\u3002\"valid\"\u4e3a\u6709\u6548\u72b6\u6001(1)\uff0c\"invalid\"\u4e3a\u65e0\u6548\uff08\u5220\u9664\uff09\u72b6\u6001(2) --type string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u7c7b\u578b\u8fdb\u884c\u7edf\u8ba1\u3002\"observer\"\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9(0)\uff0c\"consensus\"\u4e3a\u5171\u8bc6\u8282\u70b9(1) \u65e0\u610f\u4e49\u7684\u53c2\u6570\uff1a(\u6682\u672a\u5b9e\u73b0) --name string\uff1a \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u540d\u79f0\u8fdb\u884c\u7edf\u8ba1 // \u5305\u542b\u65e0\u6548\u72b6\u6001\u8282\u70b9\u7684\u540d\u79f0\u7684\u7edf\u8ba1\uff0c\u65e0\u610f\u4e49\uff1f --pk string: \u67e5\u8be2\u952e\uff0c\u901a\u8fc7\u8282\u70b9\u516c\u94a5\u8fdb\u884c\u7edf\u8ba1\uff08\u8fd4\u56de\u7ed3\u679c\u552f\u4e00\uff09 //\u5220\u9664 \u8fd4\u56de\u503c\u53ea\u80fd\u4e3a1 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u6307\u5b9a\u516c\u94a5\u5bf9\u5e94\u7684\u6709\u6548\u8282\u70b9\u6570\u76ee ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'getRegisterInfoByPublicKey' --param \"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\" --abi \"./conf/contracts/nodeRegister.cpp.abi.json\" --config \"./user2.json\" \u91cd\u6784\u540e\uff1a # \u6307\u5b9a\u516c\u94a5\u5bf9\u5e94\u7684\u8282\u70b9\u6570\u76ee ctool admin node stat --status \"valid\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u8bfb\u64cd\u4f5c * result: <num> # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a int nodesNum(const char *nodeJsonStr) const contract: nodeManager \u8c03\u7528getNodes int validJoinNode(const char *publicKey) const contract: nodeManager \u8c03\u7528nodesNum","title":"5.1.4 \u8282\u70b9\u4fe1\u606f\u7edf\u8ba1 admin node stat"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#52-admin-contract","text":"","title":"5.2 \u5408\u7ea6\u90e8\u7f72\u8005\u7ba1\u7406\u5458 admin contract*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#521-admin-contract-approve","text":"\u63cf\u8ff0 \uff1a\u5ba1\u6838\u5ba1\u6838\u4e2d\u72b6\u6001\u7684\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u6ce8\u518c\u4fe1\u606f\uff0c\u5e76\u7ed9\u4e88\u901a\u8fc7\u6216\u662f\u62d2\u7edd\u64cd\u4f5c\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u89d2\u8272\u6ce8\u518c\u8868\u4e2d\u6ce8\u518c\u5408\u7ea6\u90e8\u7f72\u8005\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 <operation>: \u5ba1\u6279\u72b6\u6001: approve(2)\u4e3a\u6ce8\u518c\u7533\u8bf7\u901a\u8fc7\uff0creject(3)\u4e3a\u62d2\u7edd \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_RoleRegister\" --func 'approveRole(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\",2)' --abi \"~/PlatONE-Go/release/linux/conf/contracts/roleRegister.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool admin contract approve \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \"approve\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f // TODO # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int approveRole(const char* address, int status) contract: roleRegister","title":"5.2.1 \u5408\u7ea6\u90e8\u7f72\u8005\u5ba1\u6838 admin contract approve"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#522-admin-contract-add","text":"// \u662f\u5426\u4f1a\u68c0\u67e5\u89d2\u8272\u6ce8\u518c\u8868\u4fe1\u606f\uff1f \u63cf\u8ff0 \uff1a\u4e3a\u4e00\u4e2a\u6709\u6548\u7528\u6237\u6dfb\u52a0\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\uff0c\u6dfb\u52a0\u6210\u529f\u540e\u8be5\u7528\u6237\u53ef\u4ee5\u8fdb\u884c\u5408\u7ea6\u90e8\u7f72\u64cd\u4f5c\uff0c\u5e76\u53ef\u4ee5\u5bf9\u81ea\u5df1\u90e8\u7f72\u7684\u5408\u7ea6\u8fdb\u884c\u8fc1\u79fb\u548c\u5199\u64cd\u4f5c\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <name>: \u88ab\u6dfb\u52a0\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u8d26\u6237\u540d\u79f0 <address>: \u88ab\u6dfb\u52a0\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u7565 \u91cd\u6784\u540e\uff1a ctool admin contract add \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \"root\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: OK: [RoleManager] [addRole] Update roles success. \\ address: 0xb239401ecf8427f17c6de134d6a6bddd3100251f, roles: [\"contractDeployer\"] # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int addRole(const char *name, const char *address, const char *roles) contract: roleManager","title":"5.2.2 \u5408\u7ea6\u90e8\u7f72\u8005\u6dfb\u52a0 admin contract add"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#523-admin-contract-delete","text":"\u63cf\u8ff0 \uff1a\u5220\u9664\u7528\u6237\u7684\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\uff0c\u6210\u529f\u5220\u9664\u540e\u8be5\u7528\u6237\u65e0\u6cd5\u518d\u8fdb\u884c\u5408\u7ea6\u90e8\u7f72\u3001\u5199\u64cd\u4f5c\u4ee5\u53ca\u8fc1\u79fb\u64cd\u4f5c\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u5220\u9664\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_RoleManager\" --func 'removeRole(\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\",\"[\"contractDeployer\"]\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/roleManager.cpp.abi.json\" --config \"../config.json\" \u91cd\u6784\u540e\uff1a ctool admin contract delete \"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f result: OK: [RoleManager] [removeRole] Remove roles success. \\ address: 0xb239401ecf8427f17c6de134d6a6bddd3100251f, roles: [\"contractDeployer\"] # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int removeRole(const char *address,const char *roles) roleManager","title":"5.2.3 \u5408\u7ea6\u90e8\u7f72\u8005\u5220\u9664 admin contract delete"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#524-admin-contract-audit","text":"\u7565","title":"5.2.4 \u90e8\u7f72\u5408\u7ea6\u5ba1\u8ba1 admin contract audit // \u6682\u65e0\u63a5\u53e3"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#525-admin-contract-list","text":"\u63cf\u8ff0 \uff1a\u6839\u636e\u4e0d\u540c\u64cd\u4f5c\uff0c\u8fd4\u56de\u6ee1\u8db3\u7b5b\u9009\u6761\u4ef6\u7684\u5408\u7ea6\u90e8\u7f72\u8005\u7528\u6237\u5217\u8868\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a --approve \u83b7\u53d6\u5ba1\u6838\u4e2d\u7684\u6ce8\u518c\u5408\u7ea6\u90e8\u7f72\u89d2\u8272\u7684\u5217\u8868 --delete \u83b7\u53d6\u62e5\u6709\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u5217\u8868 // \u672a\u5b9e\u73b0 --display <num> x --index <num> x \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u62e5\u6709\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u5217\u8868 ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'getAccountsByRole' --param \"chainAdmin\" --abi \"roleManager/roleManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a # \u62e5\u6709\u5408\u7ea6\u90e8\u7f72\u8005\u89d2\u8272\u7684\u7528\u6237\u5217\u8868\uff0c\u65b9\u4fbf\u5220\u9664delete\u64cd\u4f5c ctool admin contract list --delete // \u7b49\u4ef7\u4e8e ctool account query --roles [\"contractDeployer\"] # \u89d2\u8272\u6ce8\u518c\u8868\u4e2d\u5ba1\u6838\u4e2d\u72b6\u6001\u7684\u7528\u6237\uff0c\u65b9\u4fbf\u5ba1\u6838approve\u64cd\u4f5c ctool admin contract list --approve // \u7b49\u4ef7\u4e8ectool account query --status \"1\" --reg \"role\" --display \"10\" --index \"2\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## delete\u64cd\u4f5c result: { \"code\": 0, \"msg\": \"Success\", \"data\": [{ \"name\": \"root\" \"address\": \"0x......\" }] } ## approve\u64cd\u4f5c ### \u65e0\u7533\u8bf7\u7528\u6237 result: no contractDeployer in registration ### \u6709\u7533\u8bf7\u7528\u6237 result: { \"code\": 0, \"msg\": \"ok\", \"data\": [{ \"approver\": \"\", \"requireRoles\": [\"nodeAdmin\", \"contractDeployer\"], \"roleRequireStatus\": 1, \"userName\": \"root\", \"userAddress\": \"0x......\" }] } # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a const char* getAccountsByRole(const char *role) const contract: roleManager \u5f85\u8865\u5145","title":"5.2.5 \u5408\u7ea6\u90e8\u7f72\u8005\u8bf7\u6c42\u5217\u8868 admin contract list*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#53-admin-user","text":"","title":"5.3 \u7528\u6237\u7ba1\u7406\u5458 admin user"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#531-admin-user-approve","text":"\u63cf\u8ff0 \uff1a\u5bf9\u7528\u6237\u6ce8\u518c\u8868\u5ba1\u6838\u4e2d\u72b6\u6001\u7684\u7528\u6237\u8fdb\u884c\u5ba1\u6838\uff0c\u901a\u8fc7\u6216\u62d2\u7edd\u8be5\u6ce8\u518c\u7533\u8bf7\u5e76\u4fee\u6539\u76f8\u5e94\u7684\u7533\u8bf7\u72b6\u6001\u3002\u82e5\u72b6\u6001\u4e3a\u901a\u8fc7\uff0c\u7528\u6237\u6ce8\u518c\u6210\u529f\uff0c\u5728\u7528\u6237\u5e73\u53f0\u4e2d\u53ef\u4ee5\u67e5\u5230\u76f8\u5e94\u7528\u6237\u4fe1\u606f\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a --addr <address>: \u7528\u6237\u6ce8\u518c\u8868\u4e2d\u7684\u8d26\u6237\u5730\u5740 --status int<num>: \u5ba1\u6279\u72b6\u6001: \"approve\"\u4e3a\u6ce8\u518c\u5ba1\u6279\u901a\u8fc7(2)\uff0c\"reject\"\u4e3a\u62d2\u7edd(3) \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_UserRegister\" --func 'approve(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\",2)' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userRegister.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0xf7e769f67be5bf06d5712c355e293ef0d4c685fc\" --func 'approve' --param '0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe' --param \"2\" --abi \"./userRegister/userRegister.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin user approve '0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe' \"approve\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u5199\u64cd\u4f5c (\u5f85\u8865\u5145) # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int approve(const char* userAddress, int auditStatus) contract: userRegister","title":"5.3.1 \u7528\u6237\u5ba1\u6838 admin user approve"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#532-admin-user-add","text":"\u63cf\u8ff0 \uff1a\u4e3b\u52a8\u6dfb\u52a0\u4e00\u4e2a\u8d26\u6237\u5230\u7528\u6237\u5e73\u53f0\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>\uff1a \u7528\u6237\u8d26\u6237\u5730\u5740 <name>\uff1a \u7528\u6237\u8d26\u6237\u540d <tel>\uff1a \u7528\u6237\u7535\u8bdd\u4fe1\u606f <email>\uff1a \u7528\u6237\u90ae\u7bb1\u4fe1\u606f \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u7565 \u91cd\u6784\u540e\uff1a ctool admin user add \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \"Alice\" \"13111111111\" \"alice@wx.bc.com\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f (\u5f85\u8865\u5145) # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int addUser(const char* userJson) contract: userManager","title":"5.3.2 \u7528\u6237\u6dfb\u52a0 admin user add"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#533-admin-user-delete","text":"\u63cf\u8ff0 \uff1a\u5220\u9664\u4e00\u4e2a\u7528\u6237\uff0c\u88ab\u5220\u9664\u7684\u7528\u6237\u65e0\u6cd5\u4f7f\u7528\u5176\u62e5\u6709\u89d2\u8272\u7684\u6743\u9650\u3002\u62e5\u6709chainCreator\u89d2\u8272\u7684\u7528\u6237\u65e0\u6cd5\u88ab\u5220\u9664\u3002\uff08\u7528\u6237\u88ab\u5220\u9664\u540e\uff0c\u5176\u5bf9\u5e94\u7684\u8d26\u6237\u5730\u5740\u65e0\u6cd5\u518d\u6b21\u8fdb\u884c\u7528\u6237\u6ce8\u518c(\u5f85\u786e\u8ba4))\uff09\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u5220\u9664\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_UserManager\" --func 'delUser(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'delUser' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi \"userManager/userManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin user delete \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: Operation Succeeded # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int delUser(const char* userAddr) contract\uff1a userManager","title":"5.3.3 \u7528\u6237\u5220\u9664 admin user delete"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#534-admin-user-enable","text":"\u63cf\u8ff0 \uff1a\u5c06\u7528\u6237\u4ece\u7981\u7528\u72b6\u6001\u6539\u4e3a\u6709\u6548\u72b6\u6001\uff0c\u8be5\u7528\u6237\u76f8\u5e94\u89d2\u8272\u7684\u6743\u9650\u4e5f\u968f\u4e4b\u6062\u590d\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u89e3\u7981\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_UserManager\" --func 'enable(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'enable' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi \"userManager/userManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin user enable \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: \u7528\u6237\u72b6\u6001\u66f4\u65b0\u6210\u529f # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int enable(const char* userAddr) userManager","title":"5.3.4 \u7528\u6237\u89e3\u7981 admin user enable"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#535-admin-user-disable","text":"\u63cf\u8ff0 \uff1a\u7981\u7528\u67d0\u4e2a\u7528\u6237\uff0c\u88ab\u7981\u7528\u7684\u7528\u6237\u65e0\u6cd5\u4f7f\u7528\u5176\u89d2\u8272\u5bf9\u5e94\u7684\u6743\u9650\uff0c\u4f46\u4e0d\u5f71\u54cd\u5176\u53d1\u9001\u4ea4\u6613\u3002\u62e5\u6709chainCreator\u89d2\u8272\u7684\u7528\u6237\u65e0\u6cd5\u88ab\u7981\u7528\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u7981\u7528\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_UserManager\" --func 'disable(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/userManager.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'disable' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi \"userManager/userManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin user disable \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u540c\u6b65\u67e5\u8be2 result: Operation Succeeded # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_sendTransaction \u5bf9\u5e94\u65b9\u6cd5\uff1a int disable(const char* userAddr) contract: userManager","title":"5.3.5 \u7528\u6237\u7981\u7528 admin user disable"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#536-admin-user-update","text":"\u63cf\u8ff0 \uff1a\u66f4\u65b0\u7528\u6237\u7ed1\u5b9a\u7684\u7535\u8bdd\u6216\u8005\u90ae\u7bb1\u4fe1\u606f\u3002\u62e5\u6709chainCreator\u89d2\u8272\u7684\u7528\u6237\uff08\u8d85\u7ea7\u7ba1\u7406\u5458\uff09\u53ef\u4ee5\u66f4\u65b0\u6240\u6709\u7528\u6237\u7684\u4fe1\u606f\uff0c\u6709\u89d2\u8272\u7684\u6743\u9650\u7528\u6237\u4ec5\u53ef\u4ee5\u66f4\u65b0\u65e0\u6743\u9650\u7528\u6237\u7684\u4fe1\u606f\u3002 //\u8bbe\u8ba1\u7684\u610f\u4e49\uff1f\u5982\u679c\u53ea\u662f\u4fee\u6539\u7535\u8bdd\u53f7\u7801\u548c\u90ae\u7bb1\u611f\u89c9\u5bf9\u4e8e\u7ba1\u7406\u8005\u6765\u8bf4\u610f\u4e49\u4e0d\u5927\uff1f\uff1f \u8be6\u89c1Section 1.4","title":"5.3.6 \u7528\u6237(\u4fe1\u606f)\u66f4\u65b0 admin user update"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#537-admin-user-list","text":"\u63cf\u8ff0 \uff1a\u6839\u636e\u7ba1\u7406\u5458\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u8fd4\u56de\u6ee1\u8db3\u7b5b\u9009\u6761\u4ef6\u7684\u7528\u6237\u5217\u8868\u6216\u8005\u7528\u6237\u6ce8\u518c\u5217\u8868\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u7528\u6237\u5ba1\u6838\u64cd\u4f5c\uff0c\u5219\u8fd4\u56de\u7528\u6237\u6ce8\u518c\u8868\u5ba1\u6838\u4e2d\u7684\u7528\u6237\u6ce8\u518c\u4fe1\u606f\u3002 \u53c2\u6570 \uff1a \u53ef\u9009\u53c2\u6570\uff1a --approve \u83b7\u53d6\u5ba1\u6838\u4e2d\u72b6\u6001\u7684\u6ce8\u518c\u7528\u6237\u5217\u8868 // \u6682\u672a\u5b9e\u73b0 --delete \u83b7\u53d6\u53ef\u5220\u9664\u7684\u7528\u6237\u5217\u8868 --enable \u83b7\u53d6\u5f53\u524d\u6709\u6548\u72b6\u6001\u7684\u7528\u6237\u5217\u8868 --disable \u83b7\u53d6\u7981\u7528\u72b6\u6001\u7684\u7528\u6237\u5217\u8868 --display <num>: x --index <num>: x \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a \u65e0 \u91cd\u6784\u540e\uff1a # \u663e\u793a\u7528\u6237\u5e73\u53f0\u7528\u6237\uff08\u65e0\u63a5\u53e3\uff0c\u6682\u672a\u5b9e\u73b0\uff09 ctool admin user list --enable --display \"10\" --index \"2\" // \u7b49\u4ef7\u4e8ectool account query --status \"1\" --display \"10\" --index \"2\" # \u663e\u793a\u88ab\u7981\u7528\u7528\u6237\uff08\u65e0\u63a5\u53e3\uff0c\u6682\u672a\u5b9e\u73b0\uff09 ctool admin user list --disable --display \"10\" --index \"2\" // \u7b49\u4ef7\u4e8ectool account query --status \"2\" --display \"10\" --index \"2\" # \u663e\u793a\u7528\u6237\u6ce8\u518c\u8868\u5ba1\u6838\u4e2d\u7528\u6237 ctool admin user list --approve // \u7b49\u4ef7\u4e8ectool account query --status \"1\" --reg \"user\" --display \"10\" --index \"2\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f ## \u65e0\u7528\u6237\u7533\u8bf7 result: { \"code\": 3, \"msg\": \"user information is empty in the UserRegister\", \"data\":\"\" } # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a \u8c03\u7528RPC\u63a5\u53e3\uff1a eth_call \u5bf9\u5e94\u65b9\u6cd5\uff1a \u5f85\u8865\u5145","title":"5.3.7 \u7528\u6237\u8bf7\u6c42\u5217\u8868 admin user list*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#54-xx-admin-sup","text":"","title":"5.4 XX\u7ba1\u7406\u5458 admin sup*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#541-xx-admin-sup-approve","text":"\u63cf\u8ff0 \uff1a\u5ba1\u6838\u6709\u6548\u7528\u6237\u5ba1\u6838\u4e2d\u72b6\u6001\u6ce8\u518c\u89d2\u8272\u7684\u7533\u8bf7\uff0c\u7ed9\u4e88\u901a\u8fc7\u6216\u62d2\u7edd\uff0c\u5e76\u4fee\u6539\u6ce8\u518c\u8868\u4e2d\u76f8\u5e94\u5b57\u6bb5\u7684\u72b6\u6001\u4fe1\u606f\u3002\u5ba1\u6838\u901a\u8fc7\u7684\u89d2\u8272\u4f1a\u6dfb\u52a0\u5230\u5bf9\u5e94\u7528\u6237\u4e2d\uff0c\uff08\u5728\u4e0b\u4e00\u6b21\u5171\u8bc6\u540e\uff09\u8be5\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u76f8\u5e94\u7684\u6743\u9650\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a --addr <address>: \u89d2\u8272\u6ce8\u518c\u8868\u4e2d\u7684\u7528\u6237\u8d26\u6237\u5730\u5740 --status int<num>: \u5ba1\u6279\u72b6\u6001: approve(2)\u4e3a\u6ce8\u518c\u7533\u8bf7\u901a\u8fc7\uff0creject(3)\u4e3a\u62d2\u7edd \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_RoleRegister\" --func 'approveRole(\"0xb239401ecf8427f17c6de134d6a6bddd3100251f\",2)' --abi \"~/PlatONE-Go/release/linux/conf/contracts/roleRegister.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0xf8f1bec07e2556e6be2371f441f0a1ce9c8b737b\" --func 'approveRole' --param '0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe' --param 2 --abi \"roleRegister/roleRegister.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin sup approve \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" \"approve\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f (\u5f85\u8865\u5145) # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a","title":"5.4.1 XX\u5ba1\u6838 admin sup approve"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#542-xx-admin-sup-add","text":"\u63cf\u8ff0 \uff1a\u6dfb\u52a0\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\u5230\u6709\u6548\u7528\u6237\u7684\u89d2\u8272\u5217\u8868\u4e2d\uff0c\u6dfb\u52a0\u6210\u529f\uff08\u5728\u4e0b\u4e00\u6b21\u5171\u8bc6\u540e\uff0c\uff09\u8be5\u7528\u6237\u62e5\u6709\u5bf9\u5e94\u89d2\u8272\u6743\u9650\u3002XX\u53ea\u80fd\u6dfb\u52a0\u4f4e\u4e8e\u81ea\u8eab\u89d2\u8272\u6743\u9650\u7684\u89d2\u8272\u7ed9\u5176\u4ed6\u7528\u6237\u3002 // \u4e00\u4e2a\u7528\u6237\u62e5\u6709\u591a\u4e2a\u89d2\u8272\u7684\u6a21\u5f0f\u6709\u4e00\u70b9\u5947\u602a\uff1f\u8be6\u7ec6\u89e3\u91ca\u7406\u7531\u3002 \u89d2\u8272\u6743\u9650\u662f\u6709\u91cd\u53e0\u7684\uff0c\u4ea7\u751f\u4ec0\u4e48\u95ee\u9898\uff1f\u5728\u68c0\u67e5\u7ba1\u7406\u8005\u6743\u9650\u65f6\uff0c\u8fdb\u884c\u904d\u5386\uff1f \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u6dfb\u52a0\u89d2\u8272\u7684\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 <roles>: \u6dfb\u52a0\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\u540d\uff0c\u683c\u5f0f\u4e3a\"[\"<role>\"]\"\u6216\u8005\"[\"<role1>\",...,\"<role3>\"]\" \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a # \u91cd\u6784\u540e\uff1a ctool admin sup add \"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\" '[\"nodeAdmin\",\"contractDeployer\"]' \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f \u540c 5.2.2 # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a","title":"5.4.2 XX\u6dfb\u52a0 admin sup add"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#543-xx-admin-sup-delete","text":"\u63cf\u8ff0 \uff1a\u5220\u9664\u7528\u6237\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\uff0c\uff08\u5728\u4e0b\u4e00\u6b21\u5171\u8bc6\u540e\uff0c\uff09\u8be5\u7528\u6237\u5931\u53bb\u76f8\u5e94\u89d2\u8272\u7684\u6743\u9650\u3002 \u53c2\u6570 \uff1a \u5fc5\u9009\u53c2\u6570\uff1a <address>: \u6dfb\u52a0\u89d2\u8272\u7684\u7528\u6237\u7684\u8d26\u6237\u5730\u5740 <roles>: \u5220\u9664\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\u540d\uff0c\u683c\u5f0f\u4e3a\"[\"<role>\"]\"\u6216\u8005\"[\"<role1>\",...,\"<role3>\"]\" \u64cd\u4f5c \uff1a \u91cd\u6784\u524d\uff1a ctool cnsInvoke --cns \"__sys_RoleManager\" --func 'removeRole(\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\",\"[\"nodeAdmin\"]\")' --abi \"~/PlatONE-Go/release/linux/conf/contracts/roleManager.cpp.abi.json\" --config \"../config.json\" ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'removeRole' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --param '[\"nodeAdmin\"]' --abi \"roleManager/roleManager.cpp.abi.json\" --config \"cnsManager/config.json\" \u91cd\u6784\u540e\uff1a ctool admin sup delete \"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\" \"['nodeAdmin']\" \u8f93\u51fa\u7ed3\u679c \uff1a # \u6210\u529f \u540c 5.2.3 # \u5931\u8d25 \u540c 2.3 \u5907\u6ce8 \uff1a","title":"5.4.3 XX\u5220\u9664 admin sup delete"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#544-xx-admin-sup-list","text":"\u63cf\u8ff0 \uff1a\u6839\u636e\u7ba1\u7406\u5458\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u8fd4\u56de\u6ee1\u8db3\u7b5b\u9009\u6761\u4ef6\u7684\u7528\u6237\u89d2\u8272\u5217\u8868\u6216\u8005\u7528\u6237\u89d2\u8272\u6ce8\u518c\u5217\u8868\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u5ba1\u6838\u64cd\u4f5c\uff0c\u5219\u8fd4\u56de\u7528\u6237\u89d2\u8272\u6ce8\u518c\u8868\u5ba1\u6838\u4e2d\u7684\u89d2\u8272\u6ce8\u518c\u4fe1\u606f\u3002 \u8be6\u7ec6\u53c2\u8003 5.2.5","title":"5.4.4 XX\u8bf7\u6c42\u5217\u8868 admin sup list*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#55-admin-sysconfig","text":"","title":"5.5 \u7cfb\u7edf\u53c2\u6570\u8bbe\u7f6e admin sysconfig (\u6682\u672a\u5b9e\u73b0)"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#551-admin-sysconfig-consensus","text":"ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'setBlockGasLimit(\"10000000000000000\")' --abi \"paramManager/paramManager.cpp.abi.json\" --config \"cnsManager/config.json\"","title":"5.5.1 \u5171\u8bc6\u8bbe\u7f6e admin sysconfig consensus*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#552-admin-sysconfig-ac","text":"","title":"5.5.2 \u6743\u9650\u63a7\u5236\u8bbe\u7f6e admin sysconfig ac*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#553-admin-sysconfig-gasfee","text":"ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'setTxGasLimit(\"5000000000000\")' --abi \"paramManager/paramManager.cpp.abi.json\" --config \"cnsManager/config.json\"","title":"5.5.3 \u670d\u52a1\u8d39\u8bbe\u7f6e admin sysconfig gasfee*"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#a-platone","text":"","title":"A. PlatONE\u7cfb\u7edf\u5408\u7ea6\u4e2d\u672a\u4f7f\u7528\u7684\u63a5\u53e3 (\u5f85\u8865\u5145)"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/%28TODO%29platonecli/%E9%93%BE%E4%BA%A4%E4%BA%92%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/#b","text":"[1] Dev/PlatONE-Workspace/doc/\u529f\u80fd\u6f14\u793a.md [2] Dev/PlatONE-Workspace/doc/\u64cd\u4f5c\u6307\u53571.0.md [3] Dev/PlatONE-Workspace/doc/PlatONE-Authority-Management-Tutorial.md","title":"B. \u53c2\u8003\u6765\u6e90"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ctool/ctool%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/","text":"ctool\u64cd\u4f5c\u624b\u518c 1. \u914d\u7f6e\u6587\u4ef6 config.json ctool\u4e2d\u7684\u90e8\u5206\u53c2\u6570\u4f1a\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6\uff0c\u82e5\u672a\u6307\u5b9a -config \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4ece\u5f53\u524d\u76ee\u5f55\u8bfb\u53d6 config.json \u6587\u4ef6\u3002 config.json\u6587\u4ef6\u5c55\u793a\uff1a { \"url\":\"http://192.168.9.73:6789\", \"gas\": \"0x76c0\", \"gasPrice\": \"0x9184e72a000\", \"from\":\"0xfb8c2fa47e84fbde43c97a0859557a36a5fb285b\" } 2. \u5408\u7ea6\u90e8\u7f72 | ctool deploy ./ctool deploy -abi abi json file path (must) -code wasm file path (must) -config config path (optional) e.g\uff1a ./ctool deploy -abi \"D:\\\\resource\\\\temp\\\\contractc.cpp.abi.json\" -code \"D:\\\\resource\\\\temp\\\\contractc.wasm\" 3. \u5408\u7ea6\u8c03\u7528 3.1 \u666e\u901a\u8c03\u7528 | ctool invoke ./ctool invoke -addr contract address (must) -func functon name and param (must) -abi abi json file path (must) -type transaction type ,default 2 (optional) e.g: ./ctool invoke -addr \"0xFC43e7f481b9d3F75CcfFc8D23eAC522E96dE570\" -func \"transfer(\"a\",b,c) \" -abi \"D:\\\\resource\\\\temp\\\\contractc.cpp.abi.json\" -type 3.2 \u5408\u7ea6\u540d\u79f0\u8c03\u7528 | ctool cnsInvoke ./ctool cnsInvoke -cns contract name (must) -func functon name and param (must) -abi abi json file path (must) -type transaction type ,default 2 (optional) -config config path (optional) e.g: ./ctool cnsInvoke --cns \"test\" -func \"transfer(\"a\",b,c) \" -abi \"D:\\\\resource\\\\temp\\\\contractc.cpp.abi.json\" 4. \u8f6c\u8d26 | ctool sendTransaction ./ctool sendTransaction -from msg sender (must) -to msg acceptor (must) -value transfer value (must) -config config path (optional) e.g: ./ctool transfer --from \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" --to \"0X123\" --value \"10\" 5. \u4ea4\u6613\u56de\u6267\u67e5\u8be2 | ctool getTxReceipt ./ctool getTxReceipt -hash txhash (must) -config config path (optional) e.g: ./ctool getTxReceipt -hash <transaction_hash> -config \"../config.json\" 6. \u9632\u706b\u5899\u64cd\u4f5c | ctool fwInvoke ./ctool fwInvoke -addr contract address (must) -func functon name and param (must) -config config path (optional) # \u5f00\u542f\u9632\u706b\u5899 e.g: ./ctool fwInvoke --addr \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --func '__sys_FwOpen()' --config \"../config.json\"","title":"ctool"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ctool/ctool%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#ctool","text":"","title":"ctool\u64cd\u4f5c\u624b\u518c"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ctool/ctool%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#1-configjson","text":"ctool\u4e2d\u7684\u90e8\u5206\u53c2\u6570\u4f1a\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6\uff0c\u82e5\u672a\u6307\u5b9a -config \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4ece\u5f53\u524d\u76ee\u5f55\u8bfb\u53d6 config.json \u6587\u4ef6\u3002 config.json\u6587\u4ef6\u5c55\u793a\uff1a { \"url\":\"http://192.168.9.73:6789\", \"gas\": \"0x76c0\", \"gasPrice\": \"0x9184e72a000\", \"from\":\"0xfb8c2fa47e84fbde43c97a0859557a36a5fb285b\" }","title":"1. \u914d\u7f6e\u6587\u4ef6 config.json"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ctool/ctool%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#2-ctool-deploy","text":"./ctool deploy -abi abi json file path (must) -code wasm file path (must) -config config path (optional) e.g\uff1a ./ctool deploy -abi \"D:\\\\resource\\\\temp\\\\contractc.cpp.abi.json\" -code \"D:\\\\resource\\\\temp\\\\contractc.wasm\"","title":"2. \u5408\u7ea6\u90e8\u7f72 | ctool deploy"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ctool/ctool%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#3","text":"","title":"3. \u5408\u7ea6\u8c03\u7528"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ctool/ctool%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#31-ctool-invoke","text":"./ctool invoke -addr contract address (must) -func functon name and param (must) -abi abi json file path (must) -type transaction type ,default 2 (optional) e.g: ./ctool invoke -addr \"0xFC43e7f481b9d3F75CcfFc8D23eAC522E96dE570\" -func \"transfer(\"a\",b,c) \" -abi \"D:\\\\resource\\\\temp\\\\contractc.cpp.abi.json\" -type","title":"3.1 \u666e\u901a\u8c03\u7528 | ctool invoke"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ctool/ctool%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#32-ctool-cnsinvoke","text":"./ctool cnsInvoke -cns contract name (must) -func functon name and param (must) -abi abi json file path (must) -type transaction type ,default 2 (optional) -config config path (optional) e.g: ./ctool cnsInvoke --cns \"test\" -func \"transfer(\"a\",b,c) \" -abi \"D:\\\\resource\\\\temp\\\\contractc.cpp.abi.json\"","title":"3.2 \u5408\u7ea6\u540d\u79f0\u8c03\u7528 | ctool cnsInvoke"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ctool/ctool%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#4-ctool-sendtransaction","text":"./ctool sendTransaction -from msg sender (must) -to msg acceptor (must) -value transfer value (must) -config config path (optional) e.g: ./ctool transfer --from \"0xb239401ecf8427f17c6de134d6a6bddd3100251f\" --to \"0X123\" --value \"10\"","title":"4. \u8f6c\u8d26 | ctool sendTransaction"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ctool/ctool%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#5-ctool-gettxreceipt","text":"./ctool getTxReceipt -hash txhash (must) -config config path (optional) e.g: ./ctool getTxReceipt -hash <transaction_hash> -config \"../config.json\"","title":"5. \u4ea4\u6613\u56de\u6267\u67e5\u8be2 | ctool getTxReceipt"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ctool/ctool%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#6-ctool-fwinvoke","text":"./ctool fwInvoke -addr contract address (must) -func functon name and param (must) -config config path (optional) # \u5f00\u542f\u9632\u706b\u5899 e.g: ./ctool fwInvoke --addr \"0xacda4dfbbd6d093cf7e348abb33296d9aeb0f23c\" --func '__sys_FwOpen()' --config \"../config.json\"","title":"6. \u9632\u706b\u5899\u64cd\u4f5c | ctool fwInvoke"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ethkey/ethkey%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C%20-%20%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E4%B8%8E%E7%AE%A1%E7%90%86/","text":"ethkey \u64cd\u4f5c\u624b\u518c 1. \u6982\u8ff0 PlatONE\u4e0eEthereum\u4e00\u81f4\u90fd\u4f7f\u7528\u4e86\u57fa\u4e8esecp256k1\u692d\u5706\u66f2\u7ebf\u7684\u52a0\u89e3\u5bc6\u3001\u7b7e\u540d\u9a8c\u7b7e\u65b9\u6848\u3002 \u79c1\u94a5\uff1a \u7528\u6237\uff08\u6216\u8282\u70b9\uff09\u81ea\u5df1\u4fdd\u5b58\uff0c\u7528\u4e8e\u7b7e\u540d\u4ea4\u6613\uff08\u6216\u6d88\u606f\uff09 \u516c\u94a5\uff1a \u7531\u79c1\u94a5\u8ba1\u7b97\u800c\u6765\uff0c\u516c\u5f00\u51fa\u53bb\u4f5c\u4e3a\u8eab\u4efd\u9a8c\u8bc1 \u5730\u5740\uff1a \u5bf9\u516c\u94a5\u53d6\u54c8\u5e0c\u540e\uff0c\u53d6\u54c8\u5e0c\u503c\u7684\u540e20\u4e2a\u5b57\u8282 \u7b7e\u540d\uff1a \u7528\u6237\uff08\u6216\u8282\u70b9\uff09\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\uff0c\u5bf9\u4ea4\u6613\uff08\u6216\u6d88\u606f\uff09\u8fdb\u884c\u8fd0\u7b97\u5f97\u5230\u7684\u56fa\u5b9a\u957f\u5ea6\u7684\u5b57\u8282\u6d41 PlatONE\u4e2d\u7528\u5230\u516c\u79c1\u94a5\u7684\u5730\u65b9\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u5904\uff1a \u8282\u70b9\u95f4\u6d88\u606f\u901a\u4fe1\uff0c\u4f7f\u7528\u8282\u70b9\u79c1\u94a5\u4e3a\u6d88\u606f\u7b7e\u540d \u53d1\u9001\u4ea4\u6613\u65f6\uff0c\u4f7f\u7528\u7528\u6237\u79c1\u94a5\u4e3a\u4ea4\u6613\u7b7e\u540d PlatONE\u63d0\u4f9b\u4e86\u5bc6\u94a5\u5de5\u5177ethkey\uff0c\u7528\u4e8e\u4ea7\u751f\u5bc6\u94a5\u5bf9\u3002 \u8be5\u5de5\u5177\u4f4d\u4e8e ~/PlatONE-Go/release/linux/bin \u76ee\u5f55\u4e0b\u3002 2. \u521b\u5efa\u5bc6\u94a5\u5bf9 | ethkey genkeypair ./ethkey genkeypair Address : 0xec5b67d6CC4b18cdEA2A7ddEBFe6E38305F38387 PrivateKey: 3307251f43c4259a861a74eeed666595d961f03c0820f54252d7e711619c8593 PublicKey : a89421260aa2ec3eee9b148556850517b51b042272f5a536938a81acd9f152856dc200911f43f9a1d65567e31875d8de639a8b168c819ff0a3b5cb0a4d056e9f \u8be5\u547d\u4ee4\u4f1a\u521b\u5efa\u4e00\u7ec4\u65b0\u7684\u5bc6\u94a5\u5bf9\uff0c\u5176\u4e2d\u79c1\u94a5\u662f\u7528\u6237\u81ea\u5df1\u4fdd\u5b58\u7684\uff0c\u5730\u5740\u53ca\u516c\u94a5\u53ef\u4ee5\u516c\u5f00\u3002 3. \u521b\u5efa\u5bc6\u94a5\u6587\u4ef6 \uff5c ethkey generate ./ethkey generate Passphrase: Repeat passphrase: Address: 0x8B5d3Af7bF4d309D4C83Ed30936f78FBB1AcAA18 \u8be5\u547d\u4ee4\u7528\u4e8e\u6839\u636e\u8f93\u5165\u7684\u5bc6\u7801\u521b\u5efa\u5bc6\u94a5\u6587\u4ef6\uff08keyfile.json\uff09\uff0c\u5bc6\u94a5\u6587\u4ef6\u53ef\u4ee5\u7528\u6765\u7b7e\u540d\u6d88\u606f\u3002 keyfile.json\u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a { \"address\":\"8b5d3af7bf4d309d4c83ed30936f78fbb1acaa18\", \"crypto\":{ \"cipher\":\"aes-128-ctr\",\"ciphertext\":\"39e7bb77b7a6fc06ecbb884eecdd0f1fdcf48bd9ecd11aa5a904816bb1922160\", \"cipherparams\":{\"iv\":\"4215fdb9202669687cfdb06806aabfe2\"}, \"kdf\":\"scrypt\", \"kdfparams\":{ \"dklen\":32, \"n\":262144, \"p\":1, \"r\":8, \"salt\":\"a9490c104f46548d3a180ab339ad673c7eacb5092d446aba24621a7c25765852\" }, \"mac\":\"487b560d5cabc067a8becfcf0a8279a9b3b293dbaf74989040011e7c40b30b92\" }, \"id\":\"56ccd2ab-1a98-49c8-8173-6a805ac96948\", \"version\":3 } 4. \u67e5\u770b\u5bc6\u94a5\u6587\u4ef6\u4fe1\u606f \uff5c ethkey inspect Usgae: ethkey inspect <keyfile> e.g: ./ethkey inspect keyfile.json --private Result: Passphrase: Address: 0x8B5d3Af7bF4d309D4C83Ed30936f78FBB1AcAA18 Public key: 04f7acbc87ddf0da6edbd3ac86f81ebac69992cd4b40897855322c5c4ed029cacd5e1b9ef5b78d66576de68041689702fe5a893cae5f46def58e25738efa2ff801 Private key: e01cbcdbf2bea366eac27ec1214cd84fe718a77bee15a30102ef88f297b15cff 5. \u7b7e\u540d\u6d88\u606f \uff5c ethkey signmessage Usage: ethkey signmessage <keyfile> <message/file> e.g: ./ethkey signmessage keyfile.json message Result: Passphrase: Signature: cf394180f0ae2e507470e904eeba1cbcc8882c2b73ea9e712fcd897a5d195d292df076171dfb03e1913226de5060e5e7548ecc3091157f8d5b8b62def6c6d9d600 6. \u9a8c\u8bc1\u7b7e\u540d \uff5c ethkey verifymessage Usge: ethkey verifymessage <address> <signature> <message/file> e.g: ./ethkey verifymessage \\ 0x8B5d3Af7bF4d309D4C83Ed30936f78FBB1AcAA18 \\ cf394180f0ae2e507470e904eeba1cbcc8882c2b73ea9e712fcd897a5d195d292df076171dfb03e1913226de5060e5e7548ecc3091157f8d5b8b62def6c6d9d600 \\ message Result: Signature verification successful! Recovered public key: 04f7acbc87ddf0da6edbd3ac86f81ebac69992cd4b40897855322c5c4ed029cacd5e1b9ef5b78d66576de68041689702fe5a893cae5f46def58e25738efa2ff801 Recovered address: 0x8B5d3Af7bF4d309D4C83Ed30936f78FBB1AcAA18 \u6ce8\uff1a\u4e0a\u8ff0\u547d\u4ee4\u7684\u5730\u5740\u548c\u7b7e\u540d\u9700\u8981\u6539\u6210\u4f60\u81ea\u5df1\u7684\u5bf9\u5e94\u7684\u5730\u5740\u548c\u7b7e\u540d\uff0cmessage\u5185\u5bb9\u53ef\u4ee5\u6539\u6210\u4f60\u9700\u8981\u7b7e\u540d\u6253\u5185\u5bb9\uff0c\u4f46\u662f\u9700\u8981\u4fdd\u6301\u7b2c\u4e94\u89e3\u548c\u7b2c\u516d\u8282\u6253message\u5185\u5bb9\u4e00\u81f4\u3002","title":"ethkey"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ethkey/ethkey%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C%20-%20%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E4%B8%8E%E7%AE%A1%E7%90%86/#ethkey","text":"","title":"ethkey \u64cd\u4f5c\u624b\u518c"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ethkey/ethkey%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C%20-%20%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E4%B8%8E%E7%AE%A1%E7%90%86/#1","text":"PlatONE\u4e0eEthereum\u4e00\u81f4\u90fd\u4f7f\u7528\u4e86\u57fa\u4e8esecp256k1\u692d\u5706\u66f2\u7ebf\u7684\u52a0\u89e3\u5bc6\u3001\u7b7e\u540d\u9a8c\u7b7e\u65b9\u6848\u3002 \u79c1\u94a5\uff1a \u7528\u6237\uff08\u6216\u8282\u70b9\uff09\u81ea\u5df1\u4fdd\u5b58\uff0c\u7528\u4e8e\u7b7e\u540d\u4ea4\u6613\uff08\u6216\u6d88\u606f\uff09 \u516c\u94a5\uff1a \u7531\u79c1\u94a5\u8ba1\u7b97\u800c\u6765\uff0c\u516c\u5f00\u51fa\u53bb\u4f5c\u4e3a\u8eab\u4efd\u9a8c\u8bc1 \u5730\u5740\uff1a \u5bf9\u516c\u94a5\u53d6\u54c8\u5e0c\u540e\uff0c\u53d6\u54c8\u5e0c\u503c\u7684\u540e20\u4e2a\u5b57\u8282 \u7b7e\u540d\uff1a \u7528\u6237\uff08\u6216\u8282\u70b9\uff09\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\uff0c\u5bf9\u4ea4\u6613\uff08\u6216\u6d88\u606f\uff09\u8fdb\u884c\u8fd0\u7b97\u5f97\u5230\u7684\u56fa\u5b9a\u957f\u5ea6\u7684\u5b57\u8282\u6d41 PlatONE\u4e2d\u7528\u5230\u516c\u79c1\u94a5\u7684\u5730\u65b9\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u5904\uff1a \u8282\u70b9\u95f4\u6d88\u606f\u901a\u4fe1\uff0c\u4f7f\u7528\u8282\u70b9\u79c1\u94a5\u4e3a\u6d88\u606f\u7b7e\u540d \u53d1\u9001\u4ea4\u6613\u65f6\uff0c\u4f7f\u7528\u7528\u6237\u79c1\u94a5\u4e3a\u4ea4\u6613\u7b7e\u540d PlatONE\u63d0\u4f9b\u4e86\u5bc6\u94a5\u5de5\u5177ethkey\uff0c\u7528\u4e8e\u4ea7\u751f\u5bc6\u94a5\u5bf9\u3002 \u8be5\u5de5\u5177\u4f4d\u4e8e ~/PlatONE-Go/release/linux/bin \u76ee\u5f55\u4e0b\u3002","title":"1. \u6982\u8ff0"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ethkey/ethkey%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C%20-%20%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E4%B8%8E%E7%AE%A1%E7%90%86/#2-ethkey-genkeypair","text":"./ethkey genkeypair Address : 0xec5b67d6CC4b18cdEA2A7ddEBFe6E38305F38387 PrivateKey: 3307251f43c4259a861a74eeed666595d961f03c0820f54252d7e711619c8593 PublicKey : a89421260aa2ec3eee9b148556850517b51b042272f5a536938a81acd9f152856dc200911f43f9a1d65567e31875d8de639a8b168c819ff0a3b5cb0a4d056e9f \u8be5\u547d\u4ee4\u4f1a\u521b\u5efa\u4e00\u7ec4\u65b0\u7684\u5bc6\u94a5\u5bf9\uff0c\u5176\u4e2d\u79c1\u94a5\u662f\u7528\u6237\u81ea\u5df1\u4fdd\u5b58\u7684\uff0c\u5730\u5740\u53ca\u516c\u94a5\u53ef\u4ee5\u516c\u5f00\u3002","title":"2. \u521b\u5efa\u5bc6\u94a5\u5bf9 | ethkey genkeypair"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ethkey/ethkey%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C%20-%20%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E4%B8%8E%E7%AE%A1%E7%90%86/#3-ethkey-generate","text":"./ethkey generate Passphrase: Repeat passphrase: Address: 0x8B5d3Af7bF4d309D4C83Ed30936f78FBB1AcAA18 \u8be5\u547d\u4ee4\u7528\u4e8e\u6839\u636e\u8f93\u5165\u7684\u5bc6\u7801\u521b\u5efa\u5bc6\u94a5\u6587\u4ef6\uff08keyfile.json\uff09\uff0c\u5bc6\u94a5\u6587\u4ef6\u53ef\u4ee5\u7528\u6765\u7b7e\u540d\u6d88\u606f\u3002 keyfile.json\u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a { \"address\":\"8b5d3af7bf4d309d4c83ed30936f78fbb1acaa18\", \"crypto\":{ \"cipher\":\"aes-128-ctr\",\"ciphertext\":\"39e7bb77b7a6fc06ecbb884eecdd0f1fdcf48bd9ecd11aa5a904816bb1922160\", \"cipherparams\":{\"iv\":\"4215fdb9202669687cfdb06806aabfe2\"}, \"kdf\":\"scrypt\", \"kdfparams\":{ \"dklen\":32, \"n\":262144, \"p\":1, \"r\":8, \"salt\":\"a9490c104f46548d3a180ab339ad673c7eacb5092d446aba24621a7c25765852\" }, \"mac\":\"487b560d5cabc067a8becfcf0a8279a9b3b293dbaf74989040011e7c40b30b92\" }, \"id\":\"56ccd2ab-1a98-49c8-8173-6a805ac96948\", \"version\":3 }","title":"3. \u521b\u5efa\u5bc6\u94a5\u6587\u4ef6 \uff5c ethkey generate"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ethkey/ethkey%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C%20-%20%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E4%B8%8E%E7%AE%A1%E7%90%86/#4-ethkey-inspect","text":"Usgae: ethkey inspect <keyfile> e.g: ./ethkey inspect keyfile.json --private Result: Passphrase: Address: 0x8B5d3Af7bF4d309D4C83Ed30936f78FBB1AcAA18 Public key: 04f7acbc87ddf0da6edbd3ac86f81ebac69992cd4b40897855322c5c4ed029cacd5e1b9ef5b78d66576de68041689702fe5a893cae5f46def58e25738efa2ff801 Private key: e01cbcdbf2bea366eac27ec1214cd84fe718a77bee15a30102ef88f297b15cff","title":"4. \u67e5\u770b\u5bc6\u94a5\u6587\u4ef6\u4fe1\u606f \uff5c ethkey inspect"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ethkey/ethkey%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C%20-%20%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E4%B8%8E%E7%AE%A1%E7%90%86/#5-ethkey-signmessage","text":"Usage: ethkey signmessage <keyfile> <message/file> e.g: ./ethkey signmessage keyfile.json message Result: Passphrase: Signature: cf394180f0ae2e507470e904eeba1cbcc8882c2b73ea9e712fcd897a5d195d292df076171dfb03e1913226de5060e5e7548ecc3091157f8d5b8b62def6c6d9d600","title":"5. \u7b7e\u540d\u6d88\u606f \uff5c ethkey signmessage"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E5%91%BD%E4%BB%A4%E8%A1%8Ccmd/ethkey/ethkey%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C%20-%20%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E4%B8%8E%E7%AE%A1%E7%90%86/#6-ethkey-verifymessage","text":"Usge: ethkey verifymessage <address> <signature> <message/file> e.g: ./ethkey verifymessage \\ 0x8B5d3Af7bF4d309D4C83Ed30936f78FBB1AcAA18 \\ cf394180f0ae2e507470e904eeba1cbcc8882c2b73ea9e712fcd897a5d195d292df076171dfb03e1913226de5060e5e7548ecc3091157f8d5b8b62def6c6d9d600 \\ message Result: Signature verification successful! Recovered public key: 04f7acbc87ddf0da6edbd3ac86f81ebac69992cd4b40897855322c5c4ed029cacd5e1b9ef5b78d66576de68041689702fe5a893cae5f46def58e25738efa2ff801 Recovered address: 0x8B5d3Af7bF4d309D4C83Ed30936f78FBB1AcAA18 \u6ce8\uff1a\u4e0a\u8ff0\u547d\u4ee4\u7684\u5730\u5740\u548c\u7b7e\u540d\u9700\u8981\u6539\u6210\u4f60\u81ea\u5df1\u7684\u5bf9\u5e94\u7684\u5730\u5740\u548c\u7b7e\u540d\uff0cmessage\u5185\u5bb9\u53ef\u4ee5\u6539\u6210\u4f60\u9700\u8981\u7b7e\u540d\u6253\u5185\u5bb9\uff0c\u4f46\u662f\u9700\u8981\u4fdd\u6301\u7b2c\u4e94\u89e3\u548c\u7b2c\u516d\u8282\u6253message\u5185\u5bb9\u4e00\u81f4\u3002","title":"6. \u9a8c\u8bc1\u7b7e\u540d \uff5c ethkey verifymessage"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/","text":"Platonectl.sh 1. \u547d\u4ee4\u8be6\u60c5 \u672c\u8282\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u547d\u4ee4\u3002 \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4\uff1a init \u521d\u59cb\u5316\u8282\u70b9\u3002 \u8bf7\u5148\u8bbe\u7f6egenesis one \u5b8c\u5168\u542f\u52a8\u4e00\u4e2a\u8282\u70b9 \u9ed8\u8ba4\u5e10\u6237\u5bc6\u7801\uff1a0 four \u5b8c\u5168\u542f\u52a8\u56db\u4e2a\u8282\u70b9 \u9ed8\u8ba4\u5e10\u6237\u5bc6\u7801\uff1a0 start \u5c1d\u8bd5\u542f\u52a8\u6307\u5b9a\u7684\u8282\u70b9 stop \u5c1d\u8bd5\u505c\u6b62\u6307\u5b9a\u7684\u8282\u70b9 restart \u5c1d\u8bd5\u91cd\u65b0\u542f\u52a8\u6307\u5b9a\u7684\u8282\u70b9 console \u542f\u52a8\u4ea4\u4e92\u5f0fJavaScript\u73af\u5883 deploysys \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6 updatesys \u6b63\u5e38\u8282\u70b9\u66f4\u65b0\u5230\u5171\u8bc6\u8282\u70b9 addnode \u5c06\u6b63\u5e38\u8282\u70b9\u6dfb\u52a0\u5230\u7cfb\u7edf\u5408\u540c\u4e2d clear \u6e05\u9664\u6240\u6709\u8282\u70b9\u6570\u636e unlock \u89e3\u9501\u8282\u70b9\u5e10\u6237 get \u663e\u793a\u7cfb\u7edf\u5408\u540c\u4e2d\u7684\u6240\u6709\u8282\u70b9 setupgen \u521b\u5efagenesis.json\u5e76\u7f16\u8bd1\u7cfb\u7edf\u5951\u7ea6 status \u663e\u793a\u8282\u70b9\u72b6\u6001 createacc \u521b\u5efa\u5e10\u6237 1.1 init \u4f8b\u5b50: ./platonectl.sh init -h console: init OPTIONS --nodeid, -n set node id (default=0) --ip set node ip (default=127.0.0.1) --rpc_port set node rpc port (default=6791) --p2p_port set node p2p port (default=16791) --ws_port set node ws port (default=26791) --auto auto=true: will no prompt to create the node key and init (default: false) --help, -h show help \u4f8b\u5b50: platonectl.sh init -n 1 --ip 127.0.0.1 --rpc_port 6790 --p2p_port 16790 --ws_port 26790 --auto \"true\" or: platonectl.sh init 1.2 one \u4f8b\u5b50: ./platonectl.sh one \u8fd9\u79cd\u60c5\u51b5\u4e0b: \u521b\u5efagenesis.json \u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u8282\u70b9 \u542f\u52a8\u7b2c\u4e00\u4e2a\u8282\u70b9 \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6 \u521b\u5efa\u7528\u6237 \u521b\u5efactool json \u90e8\u7f72\u6240\u6709\u7cfb\u7edf\u5408\u7ea6 \u5c06\u7b2c\u4e00\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230NodeManager System Contract 1.3 four \u4f8b\u5b50: ./platonectl.sh four \u8fd9\u79cd\u60c5\u51b5\u4e0b: \u521b\u5efa genesis.json \u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u8282\u70b9\u548c\u5176\u4ed6\u4e09\u4e2a \u5f00\u542f\u7b2c\u4e00\u4e2a\u8282\u70b9 \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6 \u521b\u5efa\u7528\u6237 \u521b\u5efactool json \u90e8\u7f72\u6240\u6709\u7684\u7cfb\u7edf\u5408\u7ea6 \u5c06\u7b2c\u4e00\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230 NodeManager System Contract \u6dfb\u52a0\u5176\u4ed6\u4e09\u4e2a\u8282\u70b9\u5230NodeManager System Contract \u542f\u52a8\u5176\u4ed6\u4e09\u4e2a\u8282\u70b9 \u66f4\u65b0\u5176\u4ed6\u4e09\u4e2a\u8282\u70b9\u7c7b\u578b\u4e3a\u5171\u8bc6\u8282\u70b9 1.4 start \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 start OPTIONS --nodeid, -n \u542f\u52a8\u6307\u5b9a\u7684\u8282\u70b9 --bootnodes, -b \u8fde\u63a5\u5230\u6307\u5b9a\u7684bootnodes\u8282\u70b9 \u9ed8\u8ba4\u503c\u662fobserveNodes\u4e2d\u7684\u7b2c\u4e00\u4e2aenode\u5728genesis.json --logsize, -s \u65e5\u5fd7\u5757\u5927\u5c0f\uff08\u9ed8\u8ba4\u503c\uff1a67108864\uff09 --logdir, -d log dir (\u9ed8\u8ba4\u503c\u4f4d\u7f6e\uff1a../data/node_dir/logs/) \u8bbe\u7f6e\u65f6\u8def\u5f84\u8fde\u63a5\u7b26'/'\u9700\u8981\u8fdb\u884c\u8f6c\u4e49: \u5982 \".\\/logs\" --extraoptions, -e platone\u547d\u4ee4\u542f\u52a8\u65f6, \u989d\u5916\u9700\u8981\u8bbe\u7f6e\u7684\u547d\u4ee4\u884c\u53c2\u6570. (\u9ed8\u8ba4\u503c: --debug) --all, -a \u542f\u52a8\u6240\u6709\u8282\u70b9 --help, -h \u663e\u793a\u5e2e\u52a9 1.5 stop \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 stop OPTIONS --nodeid, -n \u505c\u6b62\u6307\u5b9a\u7684\u8282\u70b9 --all, -a \u505c\u6b62\u6240\u6709\u8282\u70b9 --help, -h \u663e\u793a\u5e2e\u52a9 1.6 restart \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 restart OPTIONS --nodeid, -n \u91cd\u65b0\u542f\u52a8\u6307\u5b9a\u7684\u8282\u70b9 --all, -a \u91cd\u542f\u6240\u6709\u8282\u70b9 --help, -h \u663e\u793a\u5e2e\u52a9 1.7 console \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 console OPTIONS --opennodeid , -n \u6253\u5f00\u6307\u5b9a\u7684\u8282\u70b9\u63a7\u5236\u53f0 \u5728\u8fd9\u91cc\u8bbe\u7f6e\u8282\u70b9ID --closenodeid, -c \u505c\u6b62\u6307\u5b9a\u7684\u8282\u70b9\u63a7\u5236\u53f0 \u5728\u8fd9\u91cc\u8bbe\u7f6e\u8282\u70b9ID --closeall \u505c\u6b62\u6240\u6709\u8282\u70b9\u63a7\u5236\u53f0 --help, -h \u663e\u793a\u5e2e\u52a9 1.8 deploysys \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 deploysys OPTIONS --nodeid, -n \u6307\u5b9a\u7684\u8282\u70b9\u6807\u8bc6\uff08\u9ed8\u8ba4\u503c\uff1a0\uff09 --auto auto=true: \u5c06\u4f7f\u7528\u9ed8\u8ba4\u8282\u70b9\u5bc6\u7801\uff1a0 \u521b\u5efa\u5e10\u6237\uff0c\u5e76\u89e3\u9501\u5e10\u6237\uff08\u9ed8\u8ba4\u503c\uff1afalse\uff09 --help, -h \u663e\u793a\u5e2e\u52a9 1.9 updatesys \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 updatesys OPTIONS --nodeid, -n \u6307\u5b9a\u7684\u8282\u70b9ID --content, -c \u66f4\u65b0\u5185\u5bb9 (\u9ed8\u8ba4\u503c\uff1a'{\u201ctype\u201d\uff1a1}'\uff09 \u6ce8\u610f\u53c2\u6570\u683c\u5f0f --help, -h \u663e\u793a\u5e2e\u52a9 1.10 addnode \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 addnode OPTIONS --nodeid, -n \u6307\u5b9a\u7684\u8282\u70b9ID\u3002\u5fc5\u987b\u6307\u5b9a --desc \u6307\u5b9a\u7684\u8282\u70b9desc --p2p_port \u6307\u5b9a\u7684\u8282\u70b9p2p_port \u5982\u679cnodeid\u6307\u5b9a\u7684\u8282\u70b9\u662f\u672c\u5730\u7684\uff0c \u90a3\u4e48\u4f60\u4e0d\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u3002 --rpc_port \u6307\u5b9a\u7684\u8282\u70b9rpc_port \u5982\u679cnodeid\u6307\u5b9a\u7684\u8282\u70b9\u662f\u672c\u5730\u7684\uff0c \u90a3\u4e48\u4f60\u4e0d\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u3002 --ip \u6307\u5b9a\u7684\u8282\u70b9ip \u5982\u679cnodeid\u6307\u5b9a\u7684\u8282\u70b9\u662f\u672c\u5730\u7684\uff0c \u90a3\u4e48\u4f60\u4e0d\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u3002 --pubkey \u6307\u5b9a\u7684\u8282\u70b9pubkey \u5982\u679cnodeid\u6307\u5b9a\u7684\u8282\u70b9\u662f\u672c\u5730\u7684\uff0c \u90a3\u4e48\u4f60\u4e0d\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u3002 --account \u6307\u5b9a\u7684\u8282\u70b9\u5e10\u6237 \u5982\u679cnodeid\u6307\u5b9a\u7684\u8282\u70b9\u662f\u672c\u5730\u7684\uff0c \u90a3\u4e48\u4f60\u4e0d\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u3002 --help, -h \u663e\u793a\u5e2e\u52a9 1.11 clear \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 clear OPTIONS --nodeid, -n \u6e05\u9664\u6307\u5b9a\u7684\u8282\u70b9\u6570\u636e --all, -a \u6e05\u9664\u6240\u6709\u8282\u70b9\u6570\u636e --help, -h \u663e\u793a\u5e2e\u52a9 1.12 unlock \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 unlock OPTIONS --nodeid, -n \u89e3\u9501\u6307\u5b9a\u7684\u8282\u70b9\u5e10\u6237 --help, -h \u663e\u793a\u5e2e\u52a9 1.13 get \u4eceNodeManager\u7cfb\u7edf\u5408\u540c\u4e2d\u83b7\u53d6\u6240\u6709\u8282\u70b9 \u4f8b\u5b50: ./platonectl.sh get 1.14 setupgen \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 setupgen OPTIONS --nodeid, -n \u7b2c\u4e00\u4e2a\u8282\u70b9id\uff08\u9ed8\u8ba4\u503c\uff1a0\uff09 --ip \u7b2c\u4e00\u4e2a\u8282\u70b9ip\uff08\u9ed8\u8ba4\u503c\uff1a127.0.0.1\uff09 --p2p_port \u7b2c\u4e00\u4e2a\u8282\u70b9p2p_port\uff08\u9ed8\u8ba4\u503c\uff1a16791\uff09 --auto auto=true: \u5c06\u81ea\u52a8\u521b\u5efa\u65b0\u7684\u8282\u70b9\u5bc6\u94a5\u5e76\u5c06\u81ea\u52a8\u521b\u5efa \u4e0d\u518d\u7f16\u8bd1\u7cfb\u7edf\u5408\u7ea6\uff08\u9ed8\u8ba4= false\uff09 --observeNodes, -o \u8bbe\u7f6egenesis observeNodes \uff08\u9ed8\u8ba4\u503c\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684enode\u4ee3\u7801\uff09 --validatorNodes, -v \u8bbe\u7f6egenesis validatorNodes \uff08\u9ed8\u8ba4\u503c\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684enode\u4ee3\u7801\uff09 --interpreter, -i \u9009\u62e9\u865a\u62df\u673a\u89e3\u91ca\u5668\uff1awasm, evm, all (default: wasm) --help, -h \u663e\u793a\u5e2e\u52a9 1.15 status \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 status OPTIONS \u663e\u793a\u6240\u6709\u8282\u70b9\u72b6\u6001 --nodeid, -n \u663e\u793a\u6307\u5b9a\u7684\u8282\u70b9\u72b6\u6001\u4fe1\u606f --all, -a \u663e\u793a\u6240\u6709\u8282\u70b9\u72b6\u6001\u4fe1\u606f --help, -h \u663e\u793a\u5e2e\u52a9 1.16 createacc \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 createacc OPTIONS --nodeid, -n \u4e3a\u6307\u5b9a\u8282\u70b9\u521b\u5efa\u5e10\u6237 --help, -h \u663e\u793a\u5e2e\u52a9","title":"\u811a\u672cplatonectl.sh"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#platonectlsh","text":"","title":"Platonectl.sh"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#1","text":"\u672c\u8282\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u547d\u4ee4\u3002 \u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4\uff1a init \u521d\u59cb\u5316\u8282\u70b9\u3002 \u8bf7\u5148\u8bbe\u7f6egenesis one \u5b8c\u5168\u542f\u52a8\u4e00\u4e2a\u8282\u70b9 \u9ed8\u8ba4\u5e10\u6237\u5bc6\u7801\uff1a0 four \u5b8c\u5168\u542f\u52a8\u56db\u4e2a\u8282\u70b9 \u9ed8\u8ba4\u5e10\u6237\u5bc6\u7801\uff1a0 start \u5c1d\u8bd5\u542f\u52a8\u6307\u5b9a\u7684\u8282\u70b9 stop \u5c1d\u8bd5\u505c\u6b62\u6307\u5b9a\u7684\u8282\u70b9 restart \u5c1d\u8bd5\u91cd\u65b0\u542f\u52a8\u6307\u5b9a\u7684\u8282\u70b9 console \u542f\u52a8\u4ea4\u4e92\u5f0fJavaScript\u73af\u5883 deploysys \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6 updatesys \u6b63\u5e38\u8282\u70b9\u66f4\u65b0\u5230\u5171\u8bc6\u8282\u70b9 addnode \u5c06\u6b63\u5e38\u8282\u70b9\u6dfb\u52a0\u5230\u7cfb\u7edf\u5408\u540c\u4e2d clear \u6e05\u9664\u6240\u6709\u8282\u70b9\u6570\u636e unlock \u89e3\u9501\u8282\u70b9\u5e10\u6237 get \u663e\u793a\u7cfb\u7edf\u5408\u540c\u4e2d\u7684\u6240\u6709\u8282\u70b9 setupgen \u521b\u5efagenesis.json\u5e76\u7f16\u8bd1\u7cfb\u7edf\u5951\u7ea6 status \u663e\u793a\u8282\u70b9\u72b6\u6001 createacc \u521b\u5efa\u5e10\u6237","title":"1. \u547d\u4ee4\u8be6\u60c5"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#11-init","text":"\u4f8b\u5b50: ./platonectl.sh init -h console: init OPTIONS --nodeid, -n set node id (default=0) --ip set node ip (default=127.0.0.1) --rpc_port set node rpc port (default=6791) --p2p_port set node p2p port (default=16791) --ws_port set node ws port (default=26791) --auto auto=true: will no prompt to create the node key and init (default: false) --help, -h show help \u4f8b\u5b50: platonectl.sh init -n 1 --ip 127.0.0.1 --rpc_port 6790 --p2p_port 16790 --ws_port 26790 --auto \"true\" or: platonectl.sh init","title":"1.1 init"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#12-one","text":"\u4f8b\u5b50: ./platonectl.sh one \u8fd9\u79cd\u60c5\u51b5\u4e0b: \u521b\u5efagenesis.json \u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u8282\u70b9 \u542f\u52a8\u7b2c\u4e00\u4e2a\u8282\u70b9 \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6 \u521b\u5efa\u7528\u6237 \u521b\u5efactool json \u90e8\u7f72\u6240\u6709\u7cfb\u7edf\u5408\u7ea6 \u5c06\u7b2c\u4e00\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230NodeManager System Contract","title":"1.2 one"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#13-four","text":"\u4f8b\u5b50: ./platonectl.sh four \u8fd9\u79cd\u60c5\u51b5\u4e0b: \u521b\u5efa genesis.json \u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u8282\u70b9\u548c\u5176\u4ed6\u4e09\u4e2a \u5f00\u542f\u7b2c\u4e00\u4e2a\u8282\u70b9 \u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6 \u521b\u5efa\u7528\u6237 \u521b\u5efactool json \u90e8\u7f72\u6240\u6709\u7684\u7cfb\u7edf\u5408\u7ea6 \u5c06\u7b2c\u4e00\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230 NodeManager System Contract \u6dfb\u52a0\u5176\u4ed6\u4e09\u4e2a\u8282\u70b9\u5230NodeManager System Contract \u542f\u52a8\u5176\u4ed6\u4e09\u4e2a\u8282\u70b9 \u66f4\u65b0\u5176\u4ed6\u4e09\u4e2a\u8282\u70b9\u7c7b\u578b\u4e3a\u5171\u8bc6\u8282\u70b9","title":"1.3 four"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#14-start","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 start OPTIONS --nodeid, -n \u542f\u52a8\u6307\u5b9a\u7684\u8282\u70b9 --bootnodes, -b \u8fde\u63a5\u5230\u6307\u5b9a\u7684bootnodes\u8282\u70b9 \u9ed8\u8ba4\u503c\u662fobserveNodes\u4e2d\u7684\u7b2c\u4e00\u4e2aenode\u5728genesis.json --logsize, -s \u65e5\u5fd7\u5757\u5927\u5c0f\uff08\u9ed8\u8ba4\u503c\uff1a67108864\uff09 --logdir, -d log dir (\u9ed8\u8ba4\u503c\u4f4d\u7f6e\uff1a../data/node_dir/logs/) \u8bbe\u7f6e\u65f6\u8def\u5f84\u8fde\u63a5\u7b26'/'\u9700\u8981\u8fdb\u884c\u8f6c\u4e49: \u5982 \".\\/logs\" --extraoptions, -e platone\u547d\u4ee4\u542f\u52a8\u65f6, \u989d\u5916\u9700\u8981\u8bbe\u7f6e\u7684\u547d\u4ee4\u884c\u53c2\u6570. (\u9ed8\u8ba4\u503c: --debug) --all, -a \u542f\u52a8\u6240\u6709\u8282\u70b9 --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.4 start"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#15-stop","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 stop OPTIONS --nodeid, -n \u505c\u6b62\u6307\u5b9a\u7684\u8282\u70b9 --all, -a \u505c\u6b62\u6240\u6709\u8282\u70b9 --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.5 stop"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#16-restart","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 restart OPTIONS --nodeid, -n \u91cd\u65b0\u542f\u52a8\u6307\u5b9a\u7684\u8282\u70b9 --all, -a \u91cd\u542f\u6240\u6709\u8282\u70b9 --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.6 restart"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#17-console","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 console OPTIONS --opennodeid , -n \u6253\u5f00\u6307\u5b9a\u7684\u8282\u70b9\u63a7\u5236\u53f0 \u5728\u8fd9\u91cc\u8bbe\u7f6e\u8282\u70b9ID --closenodeid, -c \u505c\u6b62\u6307\u5b9a\u7684\u8282\u70b9\u63a7\u5236\u53f0 \u5728\u8fd9\u91cc\u8bbe\u7f6e\u8282\u70b9ID --closeall \u505c\u6b62\u6240\u6709\u8282\u70b9\u63a7\u5236\u53f0 --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.7 console"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#18-deploysys","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 deploysys OPTIONS --nodeid, -n \u6307\u5b9a\u7684\u8282\u70b9\u6807\u8bc6\uff08\u9ed8\u8ba4\u503c\uff1a0\uff09 --auto auto=true: \u5c06\u4f7f\u7528\u9ed8\u8ba4\u8282\u70b9\u5bc6\u7801\uff1a0 \u521b\u5efa\u5e10\u6237\uff0c\u5e76\u89e3\u9501\u5e10\u6237\uff08\u9ed8\u8ba4\u503c\uff1afalse\uff09 --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.8 deploysys"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#19-updatesys","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 updatesys OPTIONS --nodeid, -n \u6307\u5b9a\u7684\u8282\u70b9ID --content, -c \u66f4\u65b0\u5185\u5bb9 (\u9ed8\u8ba4\u503c\uff1a'{\u201ctype\u201d\uff1a1}'\uff09 \u6ce8\u610f\u53c2\u6570\u683c\u5f0f --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.9 updatesys"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#110-addnode","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 addnode OPTIONS --nodeid, -n \u6307\u5b9a\u7684\u8282\u70b9ID\u3002\u5fc5\u987b\u6307\u5b9a --desc \u6307\u5b9a\u7684\u8282\u70b9desc --p2p_port \u6307\u5b9a\u7684\u8282\u70b9p2p_port \u5982\u679cnodeid\u6307\u5b9a\u7684\u8282\u70b9\u662f\u672c\u5730\u7684\uff0c \u90a3\u4e48\u4f60\u4e0d\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u3002 --rpc_port \u6307\u5b9a\u7684\u8282\u70b9rpc_port \u5982\u679cnodeid\u6307\u5b9a\u7684\u8282\u70b9\u662f\u672c\u5730\u7684\uff0c \u90a3\u4e48\u4f60\u4e0d\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u3002 --ip \u6307\u5b9a\u7684\u8282\u70b9ip \u5982\u679cnodeid\u6307\u5b9a\u7684\u8282\u70b9\u662f\u672c\u5730\u7684\uff0c \u90a3\u4e48\u4f60\u4e0d\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u3002 --pubkey \u6307\u5b9a\u7684\u8282\u70b9pubkey \u5982\u679cnodeid\u6307\u5b9a\u7684\u8282\u70b9\u662f\u672c\u5730\u7684\uff0c \u90a3\u4e48\u4f60\u4e0d\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u3002 --account \u6307\u5b9a\u7684\u8282\u70b9\u5e10\u6237 \u5982\u679cnodeid\u6307\u5b9a\u7684\u8282\u70b9\u662f\u672c\u5730\u7684\uff0c \u90a3\u4e48\u4f60\u4e0d\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u3002 --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.10 addnode"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#111-clear","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 clear OPTIONS --nodeid, -n \u6e05\u9664\u6307\u5b9a\u7684\u8282\u70b9\u6570\u636e --all, -a \u6e05\u9664\u6240\u6709\u8282\u70b9\u6570\u636e --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.11 clear"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#112-unlock","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 unlock OPTIONS --nodeid, -n \u89e3\u9501\u6307\u5b9a\u7684\u8282\u70b9\u5e10\u6237 --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.12 unlock"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#113-get","text":"\u4eceNodeManager\u7cfb\u7edf\u5408\u540c\u4e2d\u83b7\u53d6\u6240\u6709\u8282\u70b9 \u4f8b\u5b50: ./platonectl.sh get","title":"1.13 get"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#114-setupgen","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 setupgen OPTIONS --nodeid, -n \u7b2c\u4e00\u4e2a\u8282\u70b9id\uff08\u9ed8\u8ba4\u503c\uff1a0\uff09 --ip \u7b2c\u4e00\u4e2a\u8282\u70b9ip\uff08\u9ed8\u8ba4\u503c\uff1a127.0.0.1\uff09 --p2p_port \u7b2c\u4e00\u4e2a\u8282\u70b9p2p_port\uff08\u9ed8\u8ba4\u503c\uff1a16791\uff09 --auto auto=true: \u5c06\u81ea\u52a8\u521b\u5efa\u65b0\u7684\u8282\u70b9\u5bc6\u94a5\u5e76\u5c06\u81ea\u52a8\u521b\u5efa \u4e0d\u518d\u7f16\u8bd1\u7cfb\u7edf\u5408\u7ea6\uff08\u9ed8\u8ba4= false\uff09 --observeNodes, -o \u8bbe\u7f6egenesis observeNodes \uff08\u9ed8\u8ba4\u503c\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684enode\u4ee3\u7801\uff09 --validatorNodes, -v \u8bbe\u7f6egenesis validatorNodes \uff08\u9ed8\u8ba4\u503c\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684enode\u4ee3\u7801\uff09 --interpreter, -i \u9009\u62e9\u865a\u62df\u673a\u89e3\u91ca\u5668\uff1awasm, evm, all (default: wasm) --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.14 setupgen"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#115-status","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 status OPTIONS \u663e\u793a\u6240\u6709\u8282\u70b9\u72b6\u6001 --nodeid, -n \u663e\u793a\u6307\u5b9a\u7684\u8282\u70b9\u72b6\u6001\u4fe1\u606f --all, -a \u663e\u793a\u6240\u6709\u8282\u70b9\u72b6\u6001\u4fe1\u606f --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.15 status"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E5%B7%A5%E5%85%B7/%E8%84%9A%E6%9C%ACscripts/Platonectl.sh%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/#116-createacc","text":"\u63cf\u8ff0 PlatONE\u811a\u672c\u90e8\u7f72 \u7528\u6cd5: platonectl.sh <command> [command options] [arguments...] \u547d\u4ee4 createacc OPTIONS --nodeid, -n \u4e3a\u6307\u5b9a\u8282\u70b9\u521b\u5efa\u5e10\u6237 --help, -h \u663e\u793a\u5e2e\u52a9","title":"1.16 createacc"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/","text":"\u64cd\u4f5c\u6307\u5357 1. \u5408\u7ea6\u8c03\u7528\u65b9\u5f0f \u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4e24\u79cd\u65b9\u5f0f\u8c03\u7528\u5408\u7ea6\uff1a \u76f4\u63a5\u4f7f\u7528ctool invoke\uff0c\u901a\u8fc7\u5408\u7ea6\u5730\u5740\u7684\u65b9\u5f0f\u8c03\u7528 ctool invoke --addr \"$contractAddress\" --func '$functionName' --param \"$para\" --abi $abiFilePath --config $configFilePath \u90e8\u7f72\u7684\u5408\u7ea6\u5728\u5408\u7ea6\u7ba1\u7406\u670d\u52a1\uff08CNS\uff09\u6ce8\u518c\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u540d\u7684\u65b9\u5f0f\u8c03\u7528\u6307\u5b9a\u5408\u7ea6\u3002 ctool cnsInvoke --cns \"$contractName\" --func '${functionName}(${param})' --abi $abiFilePath --config $configFilePath 2. \u5408\u7ea6\u7ba1\u7406\u670d\u52a1\uff08CNS\uff09 \u529f\u80fd\u63cf\u8ff0\uff1a \u5408\u7ea6\u7ba1\u7406\u670d\u52a1\u63d0\u4f9b\u4e86\u5bf9\u7cfb\u7edf\u4e2d\u5408\u7ea6\u7684\u7ba1\u7406\u529f\u80fd\uff0c\u5305\u62ec\u5408\u7ea6\u7684\u6ce8\u518c\u548c\u6ce8\u9500\uff0c\u5408\u7ea6\u6ce8\u518c\u4fe1\u606f\u548c\u5730\u5740\u7684\u67e5\u8be2\u7b49\u529f\u80fd\u3002 \u64cd\u4f5c\uff1a \u6ce8\u518c\u5408\u7ea6[cnsRegister(contractName, version)]\uff1a CNS\u5408\u7ea6\u7684\u9ed8\u8ba4\u5730\u5740\uff1a0x0000000000000000000000000000000000000011 \u53c2\u65701\uff1a\u6ce8\u518c\u5408\u7ea6\u7684\u540d\u79f0\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934\uff0c\u5408\u7ea6\u540d\u7684\u6240\u6709\u8005\u4e3a\u7b2c\u4e00\u6b21\u6ce8\u518c\u5408\u7ea6\u7684\u90e8\u7f72\u8005 \u53c2\u65702\uff1a\u6ce8\u518c\u5408\u7ea6\u7684\u7248\u672c\uff0c\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 \u53c2\u65703\uff1a\u6ce8\u518c\u5408\u7ea6\u7684\u5730\u5740\uff0c\u5408\u7ea6\u5730\u5740\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\"0x\"\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'cnsRegister' --param \"test\" --param \"1.0.0.0\" --param \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u6ce8\u9500\u5408\u7ea6[cnsUnregister(contractName, version)]\uff1a \u53c2\u65701\uff1a\u5408\u7ea6\u540d\u79f0\uff0c\u540c\u4e0a\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 \u53c2\u65702\uff1a\u5408\u7ea6\u7248\u672c\uff0c\u540c\u4e0a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'cnsUnregister' --param \"test\" --param \"1.0.0.0\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u67e5\u8be2\u5408\u7ea6\u6ce8\u518c\u4fe1\u606f\u548c\u5730\u5740\uff1a 1\uff09\u67e5\u8be2\u7cfb\u7edf\u4e2d\u5df2\u6ce8\u518c\u7684\u5408\u7ea6[getRegisteredContracts(pageNum, pageSize)]\uff1a \u53c2\u65701\uff1a\u8f93\u51fa\u9875\u7801\uff08\u4ece0\u5f00\u59cb\uff09 \u53c2\u65702\uff1a\u5c55\u793a\u6761\u76ee ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getRegisteredContracts' --param 0 --param 10 --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\u7ed3\u679c\uff1a result: {\"code\":0,\"msg\":\"ok\",\"data\":{\"total\":8,\"contract\":[{\"name\":\"__sys_NodeManager\",\"version\":\"1.0.0.0\",\"address\":\"0xa94ad954e17606b8c254065c2317139f9cc593d0\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176237528,\"enabled\":true},{\"name\":\"__sys_NodeRegister\",\"version\":\"1.0.0.0\",\"address\":\"0x0331920e4c9aa382fa901e1c29f7199c54e351c7\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176340642,\"enabled\":true},{\"name\":\"__sys_ParamManager\",\"version\":\"1.0.0.0\",\"address\":\"0x46f59b9ee012455a8ee5623eb287c2221f1a15ee\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176604980,\"enabled\":true},{\"name\":\"__sys_RoleManager\",\"version\":\"1.0.0.0\",\"address\":\"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176386721,\"enabled\":true},{\"name\":\"__sys_RoleRegister\",\"version\":\"1.0.0.0\",\"address\":\"0xf8f1bec07e2556e6be2371f441f0a1ce9c8b737b\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176464844,\"enabled\":true},{\"name\":\"__sys_UserManager\",\"version\":\"1.0.0.0\",\"address\":\"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176530910,\"enabled\":true},{\"name\":\"__sys_UserRegister\",\"version\":\"1.0.0.0\",\"address\":\"0xf7e769f67be5bf06d5712c355e293ef0d4c685fc\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176561942,\"enabled\":true},{\"name\":\"test\",\"version\":\"1.0.0.0\",\"address\":\"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556258758307,\"enabled\":false}]}} 2\uff09\u67e5\u8be2\u8d26\u6237\u90e8\u7f72\u7684\u6240\u6709\u5408\u7ea6[getRegisteredContractsByAddress(userAddress, pageNum, pageSize)]\uff1a \u53c2\u65701\uff1a\u8d26\u6237\u5730\u5740\uff0c\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u8d26\u6237\u6807\u51c6\u683c\u5f0f \u53c2\u65702\uff1a\u8f93\u51fa\u9875\u7801 \u53c2\u65703\uff1a\u5c55\u793a\u6761\u76ee ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getRegisteredContractsByAddress' --param \"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\" --param 0 --param 10 --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json 3\uff09\u67e5\u8be2\u5408\u7ea6\u7684\u5386\u53f2\u7248\u672c\u4fe1\u606f[getHistoryContractsByName(contractName)]\uff1a \u53c2\u6570\uff1a\u5408\u7ea6\u540d\u79f0\uff0c\u540c\u4e0a\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getHistoryContractsByName' --param \"test\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\u7ed3\u679c\uff1a result: {\"code\":0,\"msg\":\"ok\",\"data\":{\"total\":1,\"contract\":[{\"name\":\"test\",\"version\":\"1.0.0.0\",\"address\":\"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556258758307,\"enabled\":false}]}} 4\uff09\u67e5\u8be2\u5408\u7ea6\u6ce8\u518c\u60c5\u51b5\uff1a \u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u5730\u5740\u548c\u5408\u7ea6\u540d\u79f0\u4e24\u79cd\u67e5\u8be2\u6761\u4ef6\u67e5\u8be2\u5408\u7ea6\u6ce8\u518c\u60c5\u51b5\u3002 [ifRegisteredByAddress(contractAddress)]\uff1a \u53c2\u6570\uff1a\u5408\u7ea6\u5730\u5740\uff0c\u540c\u4e0a\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\"0x\"\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'ifRegisteredByAddress' --param \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json [ifRegisteredByName(contractName)]\uff1a \u53c2\u6570\uff1a\u5408\u7ea6\u540d\u79f0\uff0c\u540c\u4e0a\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'ifRegisteredByName' --param \"test\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a1\u8868\u793a\u5df2\u6ce8\u518c\uff0c0\u8868\u793a\u672a\u6ce8\u518c\u3002 5\uff09\u67e5\u8be2\u5408\u7ea6\u5730\u5740[getContractAddress(contractName, version)]\uff1a \u53c2\u65701\uff1a\u5408\u7ea6\u540d\u79f0\uff0c\u540c\u4e0a\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 \u53c2\u65702\uff1a\u5408\u7ea6\u7248\u672c\uff0c\u540c\u4e0a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getContractAddress' --param \"test\" --param \"1.0.0.0\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a\u5408\u7ea6\u5730\u5740 3. \u53c2\u6570\u7ba1\u7406 \u529f\u80fd\u63cf\u8ff0\uff1a \u53c2\u6570\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u4e86\u5bf9\u94fe\u4e0a\u7cfb\u7edf\u53c2\u6570\u7684\u8bbe\u7f6e\u548c\u67e5\u8be2\u529f\u80fd\uff0c\u7cfb\u7edf\u53c2\u6570\u5305\u62ec\uff1a\u6bcf\u7b14\u4ea4\u6613\u6d88\u8017\u7684gas\u4e0a\u9650\uff08TxGasLimit\uff09\uff0c\u533a\u5757\u4e2d\u6253\u5305\u7684\u6240\u6709\u4ea4\u6613\u6d88\u8017\u7684gas\u4e0a\u9650\uff08BLockGasLimit\uff09\uff0c\u5171\u8bc6\u8fc7\u7a0b\u4e2d\u5355\u4e2a\u8282\u70b9\u51fa\u5757\u65f6\u957f\u548c\u533a\u5757\u95f4\u9694\uff08Duration\uff0cBlockInterval\uff09\u3002 \u64cd\u4f5c\uff1a TxGasLimit\u67e5\u8be2\u548c\u8bbe\u7f6e ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'getTxGasLimit()' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'setTxGasLimit(\"5000000000000\")' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json BLockGasLimit\u67e5\u8be2\u548c\u8bbe\u7f6e ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'getBlockGasLimit()' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'setBlockGasLimit(\"10000000000000000\")' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json \u5171\u8bc6\u65f6\u95f4\u53c2\u6570\u67e5\u8be2\u548c\u8bbe\u7f6e ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'getCBFTTimeParam()' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'setCBFTTimeParam(\"20\",\"1\")' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json 4. \u5e73\u53f0\u7528\u6237\u7ba1\u7406 4.1. \u7528\u6237\u7533\u8bf7 \u529f\u80fd\u63cf\u8ff0\uff1a \u65b0\u7528\u6237\u901a\u8fc7\u63d0\u4ea4\u6ce8\u518c\u4fe1\u606f\uff0c\u5f85\u94fe\u7ba1\u7406\u5458\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u6210\u4e3a\u5e73\u53f0\u7528\u6237\u3002\u5e73\u53f0\u7528\u6237\u53ef\u4ee5\u7533\u8bf7\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u5f85\u94fe\u7ba1\u7406\u5458\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u88ab\u6388\u4e88\u5bf9\u5e94\u7684\u89d2\u8272\uff0c\u5e76\u62e5\u6709\u76f8\u5e94\u7684\u6743\u9650\u3002 \u7cfb\u7edf\u4e2d\u5185\u7f6e\u7684\u89d2\u8272\u6709\uff1a \u89d2\u8272\u4e2d\u6587\u540d \u89d2\u8272\u82f1\u6587\u540d \u94fe\u521b\u5efa\u8005\uff08\u8d85\u7ba1\uff09 chainCreator \u94fe\u7ba1\u7406\u5458\uff08\u666e\u7ba1\uff09 chainAdmin \u8282\u70b9\u7ba1\u7406\u5458 nodeAdmin \u5408\u7ea6\u7ba1\u7406\u5458 contractAdmin \u5408\u7ea6\u90e8\u7f72\u8005 contractDeployer \u5408\u7ea6\u8c03\u7528\u8005 contractCaller \u64cd\u4f5c\uff1a 1\uff09\u65b0\u7528\u6237\u7533\u8bf7[registerUser(RegisterInfo)]\uff1a \u68c0\u67e5\u7528\u6237\u7533\u8bf7\u4e2d\u5404\u53c2\u6570\u7684\u5408\u6cd5\u6027\uff0c\u5e76\u5199\u5165\u5408\u7ea6\u4e2d\u3002 \u53c2\u6570\u8bf4\u660e\uff1a string address\uff1a\u7528\u6237\u5730\u5740 string name\uff1a\u7528\u6237\u540d\uff0c \u4e0d\u80fd\u91cd\u590d string mobile\uff1a \u624b\u673a\u53f7 string email\uff1a\u7528\u6237\u90ae\u7bb1 string[] roles\uff1a\u89d2\u8272 string remark\uff1a\u5907\u6ce8 ctool invoke --addr \"0xf7e769f67be5bf06d5712c355e293ef0d4c685fc\" --func 'registerUser' --param '{\"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\",\"name\":\"xiaoluo\",\"mobile\":\"13111111111\",\"email\":\"123@126.com\",\"roles\":[\"chainAdmin\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"}' --abi userRegister/userRegister.cpp.abi.json --config cnsManager/user.json 2\uff09\u7ba1\u7406\u5458\u5ba1\u6838[approve(userAddress, status)]\uff1a \u7ba1\u7406\u5458\u9a8c\u8bc1\u7528\u6237\u5408\u6cd5\u6027\u540e\uff0c\u4fee\u6539\u7528\u6237\u72b6\u6001\u5e76\u4fdd\u5b58\u5230\u7528\u6237\u7ba1\u7406\u5408\u7ea6\u3002 \u53c2\u65701\uff1a\u5f85\u5ba1\u6838\u7528\u6237\u7684\u5730\u5740 \u53c2\u65702\uff1a\u5ba1\u6838\u72b6\u6001\uff0c1\uff1a\u5f85\u5ba1\u6838\uff0c2\uff1a\u5df2\u6279\u51c6\uff0c3\uff1a\u5df2\u62d2\u7edd ctool invoke --addr \"0xf7e769f67be5bf06d5712c355e293ef0d4c685fc\" --func 'approve' --param '0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe' --param 2 --abi ./userRegister/userRegister.cpp.abi.json --config cnsManager/config.json 4.2. \u7528\u6237\u7ba1\u7406 \u529f\u80fd\u63cf\u8ff0\uff1a \u7528\u6237\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u5bf9\u5e73\u53f0\u7528\u6237\u4fe1\u606f\u7684\u67e5\u8be2\uff0c\u5220\u9664\u548c\u66f4\u65b0\u3002 \u64cd\u4f5c\uff1a 1\uff09\u901a\u8fc7\u7528\u6237\u5730\u5740\u548c\u7528\u6237\u540d\u79f0\u4e24\u79cd\u67e5\u8be2\u6761\u4ef6\u67e5\u8be2\u7528\u6237\u4fe1\u606f \u53c2\u6570\uff1a\u7528\u6237\u5730\u5740 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'getAccountByAddress' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json \u53c2\u6570\uff1a\u7528\u6237\u540d\u79f0 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'getAccountByName' --param \"xiaoluo\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a result: {\"code\":0,\"msg\":\"succeed\",\"data\":{\"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\",\"name\":\"xiaoluo\",\"mobile\":\"1312222\",\"email\":\"123@qq.com\",\"status\":2}} 2\uff09\u67e5\u8be2\u7528\u6237\u662f\u5426\u5408\u6cd5 \u53c2\u6570\uff1a\u7528\u6237\u5730\u5740 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'isValidUser' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a1\u8868\u793a\u5408\u6cd5\uff0c0\u8868\u793a\u975e\u6cd5\u3002 3) \u66f4\u65b0\u7528\u6237\u4fe1\u606f \u53c2\u65701\uff1a\u7528\u6237\u5730\u5740 \u53c2\u65702\uff1a\u7528\u6237\u4fe1\u606f\uff08\u4e0e\u65b0\u589e\u7528\u6237\u65f6\u7c7b\u4f3c\uff09 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'update' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --param '{\"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\",\"name\":\"xiaoluo\",\"mobile\":\"1312222\",\"email\":\"123@qq.com\",\"status\":0}' --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json 4) \u7981\u7528\u548c\u6fc0\u6d3b\u7528\u6237 \u53c2\u6570\uff1a\u7528\u6237\u5730\u5740 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'disable' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'enable' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json 5\uff09\u5220\u9664\u7528\u6237 \u53c2\u6570\uff1a\u7528\u6237\u5730\u5740 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'delUser' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json 4.3. \u89d2\u8272\u7533\u8bf7 \u529f\u80fd\u63cf\u8ff0\uff1a \u5e73\u53f0\u7528\u6237\u7533\u8bf7\u5728\u7cfb\u7edf\u4e2d\u7684\u89d2\u8272\uff0c\u5f85\u94fe\u7ba1\u7406\u5458\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u88ab\u6388\u4e88\u5bf9\u5e94\u7684\u89d2\u8272\uff0c\u5e76\u62e5\u6709\u76f8\u5e94\u7684\u6743\u9650\u3002 \u64cd\u4f5c\uff1a 1\uff09\u7528\u6237\u7533\u8bf7\u89d2\u8272 \u53c2\u6570\uff1a\u7533\u8bf7\u7684\u89d2\u8272\u540d ctool invoke --addr \"0xf8f1bec07e2556e6be2371f441f0a1ce9c8b737b\" --func 'registerRole' --param '[\"nodeAdmin\"]' --abi roleRegister/roleRegister.cpp.abi.json --config cnsManager/user.jso 2\uff09\u7ba1\u7406\u5458\u5ba1\u6838 ctool invoke --addr \"0xf8f1bec07e2556e6be2371f441f0a1ce9c8b737b\" --func 'approveRole' --param '0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe' --param 2 --abi roleRegister/roleRegister.cpp.abi.json --config cnsManager/config.json \u53c2\u65701\uff1a\u5f85\u5ba1\u6838\u7528\u6237\u7684\u5730\u5740 \u53c2\u65702\uff1a\u5ba1\u6838\u72b6\u6001\uff0c1\uff1a\u5f85\u5ba1\u6838\uff0c2\uff1a\u5df2\u6279\u51c6\uff0c3\uff1a\u5df2\u62d2\u7edd 4.4. \u89d2\u8272\u7ba1\u7406 \u529f\u80fd\u63cf\u8ff0\uff1a \u89d2\u8272\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u5bf9\u7528\u6237\u89d2\u8272\u7684\u67e5\u8be2\u548c\u64a4\u9500\u3002 \u64cd\u4f5c\uff1a 1\uff09\u901a\u8fc7\u7528\u6237\u5730\u5740\u548c\u7528\u6237\u540d\u79f0\u4e24\u79cd\u67e5\u8be2\u6761\u4ef6\u67e5\u8be2\u7528\u6237\u89d2\u8272\u4fe1\u606f \u53c2\u6570\uff1a\u7528\u6237\u5730\u5740 ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'getRolesByAddress' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi roleManager/roleManager.cpp.abi.json --config cnsManager/config.json \u53c2\u6570\uff1a\u7528\u6237\u540d\u79f0 ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'getRolesByName' --param \"xiaowang\" --abi roleManager/roleManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a result: {\"code\":0,\"msg\":\"Success\",\"data\":[\"contractDeployer\",\"contractAdmin\"]} 2\uff09\u67e5\u8be2\u7528\u6237\u662f\u5426\u6709\u67d0\u4e2a\u89d2\u8272 \u53c2\u65701\uff1a\u7528\u6237\u5730\u5740 \u53c2\u65702\uff1a\u89d2\u8272\u540d ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'hasRole' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --param \"chainAdmin\" --abi roleManager/roleManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a1\u8868\u793a\u62e5\u6709\uff0c0\u8868\u793a\u6ca1\u6709\u3002 3) \u67e5\u8be2\u7cfb\u7edf\u4e2d\u67d0\u4e2a\u89d2\u8272\u7684\u5730\u5740 \u53c2\u6570\uff1a\u89d2\u8272\u540d ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'getAccountsByRole' --param \"chainAdmin\" --abi roleManager/roleManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a result: {\"code\":0,\"msg\":\"Success\",\"data\":[{\"name\":\"xiaoluo\",\"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\"}]} 4\uff09\u64a4\u9500\u7528\u6237\u89d2\u8272 \u53c2\u65701\uff1a\u7528\u6237\u5730\u5740 \u53c2\u65702\uff1a\u89d2\u8272\u540d ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'removeRole' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --param '[\"nodeAdmin\"]' --abi roleManager/roleManager.cpp.abi.json --config cnsManager/config.json 5. \u8282\u70b9\u7ba1\u7406 5.1. \u8282\u70b9\u7533\u8bf7 \u529f\u80fd\u63cf\u8ff0\uff1a \u7ba1\u7406\u6240\u6709\u8282\u70b9\u7684\u7533\u8bf7\u4fe1\u606f\u4ee5\u53ca\u5ba1\u6838\u4fe1\u606f\uff0c\u8282\u70b9\u7533\u8bf7\u5ba1\u6838\u540e\uff0c\u8282\u70b9\u4fe1\u606f\u624d\u4f1a\u767b\u8bb0\u4e8e\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002 \u64cd\u4f5c: \u6ce8\u518c\u8282\u70b9\u4fe1\u606f[registerNode(RegisterInfo)] \u53c2\u6570\u8bf4\u660e: + name:\u8282\u70b9\u540d\u79f0 + owner :\u7533\u8bf7\u8005\u7684\u5730\u5740 + desc:\u8282\u70b9\u63cf\u8ff0 + type: + 1:\u5171\u8bc6\u8282\u70b9 + 0:\u89c2\u5bdf\u8005\u8282\u70b9 + publicKey :\u8282\u70b9\u516c\u94a5 + externalIP :\u5916\u7f51 IP + internalIP:\u5185\u7f51 IP + rpcPort:rpc \u7aef\u53e3 + p2pPort :p2p\u7aef\u53e3 + status : + 0:\u672a\u5ba1\u6838 + 1:\u7533\u8bf7\u901a\u8fc7 + 2:\u62d2\u7edd\u7533\u8bf7 + approver:\u5ba1\u6838\u4eba\u7684\u5730\u5740 + registerTime:\u7533\u8bf7\u65f6\u95f4 + root: + true:\u662f\u6839\u8282\u70b9 + false:\u4e0d\u662f\u6839\u8282\u70b9 ``` ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'registerNode' --param '{\"name\":\"nodeB\",\"desc\":\"i am nodeB\",\"type\":0,\"publicKey\":\"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\",\"externalIP\":\"127.0.0.1\",\"internalIP\":\"127.0.0.1\",\"rpcPort\":6793,\"p2pPort\":16793,\"root\":false}' --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json ``` \u5ba1\u6838\u8282\u70b9\u4fe1\u606f [approve(publicKey,status)] \u53c2\u6570\u8bf4\u660e: + publicKey:\u5f85\u5ba1\u6838\u8282\u70b9\u516c\u94a5 + status: + 1:\u901a\u8fc7 2:\u62d2\u7edd ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'approve' --param \"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\" --param 1 --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json \u6839\u636e\u516c\u94a5\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f[getRegisterInfoByPublicKey(publicKey)] \u53c2\u6570\u8bf4\u660e: publicKey: \u5f85\u67e5\u770b\u8282\u70b9\u516c\u94a5 ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'getRegisterInfoByPublicKey' --param \"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\" --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json 5.2. \u8282\u70b9\u7ba1\u7406 \u529f\u80fd\u63cf\u8ff0: \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u8282\u70b9\u5305\u62ec\u5171\u8bc6\u8282\u70b9\u548c\u975e\u5171\u8bc6\u8282\u70b9\uff0c\u8282\u70b9\u4fe1\u606f\u5305\u62ec\u516c\u94a5\uff0c\u8bc1\u4e66\uff0c\u7ba1\u7406\u5458\uff0c\u540d\u79f0\u7b49 \u64cd\u4f5c: \u6dfb\u52a0\u8282\u70b9\u4fe1\u606f[add(nodeJsonStr)] \u53c2\u6570\u8bf4\u660e: nodeJsonStr:\u8282\u70b9\u4fe1\u606f\u7684JSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 \u9996\u5148\u9700\u8981\u6dfb\u52a0\u4e3b\u8282\u70b9\u4fe1\u606f ./bin/ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'add' --param '{\"name\":\"root\",\"owner\":\"0x96307a6168921cefd50d66e1921a029fe1982394\",\"approver\":\"0x96307a6168921cefd50d66e1921a029fe1982394\",\"desc\":\"root\",\"publicKey\":\"feffe2938d427088f5fcce94a9245760b92c468d3ca25ab5ef2b1cdccf0ed911963b74ca2dffef20ef135966e34ebcc905d1f12c1df09f05974a617cf8afe8e8\",\"root\":true,\"type\":1,\"externalIP\":\"127.0.0.1\",\"internalIP\":\"127.0.0.1\",\"rpcPort\":6791,\"p2pPort\":16791,\"status\":1}' --abi ./conf/contracts/nodeManager.cpp.abi.json --config ./user2.json \u8fd4\u56de\u6240\u6709\u8282\u70b9\u4fe1\u606f[getAllNodes()] ./bin/ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'getAllNodes' --abi ./conf/contracts/nodeManager.cpp.abi.json --config ./user2.json \u6839\u636e\u7279\u5b9a\u6761\u4ef6\u8fd4\u56de\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u4fe1\u606f[getNodes(nodeJsonStr] \u5982\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d,\u8fd4\u56dename\u4e3a \"nodeC\"\u7684\u8282\u70b9\u4fe1\u606f ./bin/ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'getNodes' --param '{\"name\":\"nodeC\"}' --abi ./conf/contracts/nodeManager.cpp.abi.json --config ./user2.json \u66f4\u65b0\u8282\u70b9\u4fe1\u606f[update(name,nodeJsonStr)] \u53c2\u6570\u8bf4\u660e\uff1a name\uff1a\u8282\u70b9\u540d\u79f0 nodeJsonStr\uff1a\u5f85\u66f4\u65b0\u5b57\u6bb5 \u66f4\u65b0name\u4e3a\"nodeC\"\u7684\u8282\u70b9\u4e3a\u5171\u8bc6\u8282\u70b9 ./bin/ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func update --param \"nodeC\" --param '{\"type\":1}' --abi ./conf/contracts/nodeManager.cpp.abi.json --config ./user2.json 5.3. \u5171\u8bc6\uff06\u89c2\u5bdf\u8005\u8282\u70b9 case1\uff1anodeA \u672a\u7533\u8bf7\u6210\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9 or \u5171\u8bc6\u8282\u70b9\uff0c\u6240\u4ee5\u4e0d\u80fd\u540c\u6b65\u94fe\u4e0a\u4fe1\u606f\uff0c\u4e0d\u65ad\u53d1\u751froundchange\uff0c\u4e14\u533a\u5757\u9ad8\u5ea6\u59cb\u7ec8\u4e3a1 ....... DEBUG[04-26|16:24:37.221] updateRoundState roundChange current=\"&{round:0xc01d0e4a60 sequence:0xc01d0e4a80 Preprepare:<nil> Prepares:[] Commits:[] lockedHash:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] pendingRequest:0xc01d474150 lockedRound:0xc01d0e4b00 lockedPrepares:<nil> mu:0xc002c55280 hasBadProposal:0xb8ed70}\" INFO [04-26|16:24:37.221] ====== roundChange round: 10, height:1 ====== ...... case2\uff1anodeB\u7533\u8bf7\u6210\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9 \u9996\u5148\u7533\u8bf7\u6210\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9 ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'registerNode' --param '{\"name\":\"nodeB\",\"desc\":\"i am nodeB\",\"type\":0,\"publicKey\":\"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\",\"externalIP\":\"127.0.0.1\",\"internalIP\":\"127.0.0.1\",\"rpcPort\":6793,\"p2pPort\":16793,\"root\":false}' --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json \u7531\u7ba1\u7406\u5458\u8fdb\u884c\u5ba1\u6838 ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'approve' --param \"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\" --param 1 --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json \u5ba1\u6838\u901a\u8fc7\u540e\uff0c \u6b64\u65f6nodeB\u53ef\u4ee5\u540c\u6b65\u94fe\u4e0a\u7684\u533a\u5757\u4fe1\u606f\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u51fa\u5757\uff0c\u5177\u4f53\u7684log\u4fe1\u606f\u4e3a: ... DEBUG[04-26|19:13:02.088] startNewRound address=0x3225DF011bfAAB4C87D7ab4dDd94Daf830B8D809 old_round=0 old_seq=11144 old_proposer=0x96307A6168921cefd50D66E1921a029fE1982394 roundChange=false DEBUG[04-26|19:13:02.088] updateRoundState roundChange current=\"&{round:0xc034e7f760 sequence:0xc034e7f720 Preprepare:<nil> Prepares:[] Commits:[] lockedHash:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] pendingRequest:<nil> lockedRound:0xc034e7fd00 lockedPrepares:<nil> mu:0xc04ab4fba0 hasBadProposal:0xb8ed70}\" INFO [04-26|19:13:02.089] ====== roundChange round: 0, height:11145 ====== DEBUG[04-26|19:13:02.089] newRoundChangeTimer round=0 timeout=2s INFO [04-26|19:13:02.089] New round address=0x3225DF011bfAAB4C87D7ab4dDd94Daf830B8D809 old_round=0 old_seq=11144 old_proposer=0x96307A6168921cefd50D66E1921a029fE1982394 new_round=0 new_seq=11145 new_proposer=0x96307A6168921cefd50D66E1921a029fE1982394 valSet=[0x96307A6168921cefd50D66E1921a029fE1982394] size=1 IsProposer=false DEBUG[04-26|19:13:02.088] reset txpool RoutineID=39 oldHash=4b29f8\u20266ae5d3 oldNumber=11143 newHash=2a5fb0\u2026d575d7 newNumber=11144 DEBUG[04-26|19:13:02.089] Reinjecting stale transactions count=0 DEBUG[04-26|19:13:03.006] Received a message[NewBlockMsg]------------ GoRoutineID=3082 ... case3\uff1anodeC\u7533\u8bf7\u6210\u4e3a\u5171\u8bc6\u8282\u70b9 \u9996\u5148\u7533\u8bf7\u6210\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9 ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'registerNode' --param '{\"name\":\"nodeC\",\"desc\":\"i am nodeC\",\"type\":0,\"publicKey\":\"2e11b2ad3aa6ba38b0979d023d148d16d4bb8afee22432259bfba8c6c5f7d43bd42859158575477e0037743f288d63aef94cbb25d3646a25ddcefa1c4e400f89\",\"externalIP\":\"127.0.0.1\",\"internalIP\":\"127.0.0.1\",\"rpcPort\":6794,\"p2pPort\":16794,\"root\":false}' --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json \u7ba1\u7406\u5458\u5ba1\u6838 ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'approve' --param \"2e11b2ad3aa6ba38b0979d023d148d16d4bb8afee22432259bfba8c6c5f7d43bd42859158575477e0037743f288d63aef94cbb25d3646a25ddcefa1c4e400f89\" --param 1 --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json \u66f4\u65b0\u4e3a\u5171\u8bc6\u8282\u70b9 ./bin/ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func update --param \"nodeC\" --param '{\"type\":1}' --abi ./conf/contracts/nodeManager.cpp.abi.json --config ./user2.json \u6b64\u65f6nodeC\u6210\u4e3a\u5171\u8bc6\u8282\u70b9\uff0c\u4e14\u53c2\u4e0e\u51fa\u5757\uff0c\u5177\u4f53\u7684log\u4fe1\u606f\u4e3a: ... INFO [04-28|08:27:19.596] New round address=0x96307A6168921cefd50D66E1921a029fE1982394 old_round=0 old_seq=145147 old_proposer=0x96307A6168921cefd50D66E1921a029fE1982394 new_round=0 new_seq=145148 new_proposer=0x96307A6168921cefd50D66E1921a029fE1982394 valSet=[0x96307A6168921cefd50D66E1921a029fE1982394] size=1 IsProposer=true DEBUG[04-28|08:27:20.522] +++++++++++++++++++++++++++++++++++ShouldSeal() -> true INFO [04-28|08:27:20.522] parentBlock Number: 145147 DEBUG[04-28|08:27:20.522] Begin consensus for new block number=145148 gasLimit=10240000000000000 parentHash=122645\u202689e935 parentNumber=145147 parentStateRoot=fe6dce\u202624e38c timestamp=1556411240522 INFO [04-28|08:27:20.522] Fetch pending transactions success pendingLength=0 time=5.058\u00b5s INFO [04-28|08:27:20.522] Commit new mining work number=145148 sealhash=ba6e11\u2026292c9c receiptHash=56e81f\u202663b421 txs=0 gas=0 fees=0 elapsed=145.102\u00b5s 6. \u5408\u7ea6\u9632\u706b\u5899 \u529f\u80fd\u63cf\u8ff0\uff1a \u5408\u7ea6\u9632\u706b\u5899\u4e3b\u8981\u5b9e\u73b0\u4e86\u5bf9\u9632\u706b\u5899\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\u7684\u7ba1\u7406\u529f\u80fd\uff0c\u4f7f\u5f97\u5408\u7ea6\u7684\u90e8\u7f72\u8005\u53ef\u4ee5\u8bbe\u7f6e\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\uff0c\u4f7f\u7279\u5b9a\u7684\u7528\u6237\u83b7\u5f97\u8c03\u7528\u5408\u7ea6\u6307\u5b9a\u51fd\u6570\u7684\u6743\u9650\u6216\u8005\u7981\u6b62\u7279\u5b9a\u7528\u6237\u8c03\u7528\u5408\u7ea6\u6307\u5b9a\u51fd\u6570\u3002 \u64cd\u4f5c\uff1a 1\uff09\u5408\u7ea6\u9632\u706b\u5899\u6fc0\u6d3b \u53c2\u6570addr\uff1a\u5408\u7ea6\u5730\u5740 ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwOpen()' --config cnsManager/config.json 2\uff09\u5408\u7ea6\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\u7684\u7ba1\u7406 \u521b\u5efa\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\uff1a \u53c2\u6570\u8bf4\u660e\uff1a Accept\uff1a\u8bbe\u7f6e\u767d\u540d\u5355\uff1bReject\uff1a\u8bbe\u7f6e\u9ed1\u540d\u5355 \u8fc7\u6ee4\u89c4\u5219\uff1a\u201d{\u5730\u5740}\uff1a{\u51fd\u6570\u540d}\u201c ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwAdd(\"Accept\",\"*:getName\")' --config cnsManager/config.json ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwAdd(\"Reject\",\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5:invokeNotify\")' --config cnsManager/config.json \u6e05\u7a7a\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\uff1a ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwClear(\"Accept\")' --config cnsManager/config.json ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwClear(\"Reject\")' --config cnsManager/config.json \u91cd\u7f6e\u540d\u5355\uff1a ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwSet(\"Reject\",\"*:invokeNotify\")' --config cnsManager/config.json \u5220\u9664\u6307\u5b9a\u5408\u7ea6\u7684\u767d/\u9ed1\u540d\u5355\u91cc\u7684\u6307\u5b9a\u5730\u5740\uff1a ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwDel(\"Reject\",\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5:invokeNotify\")' --config cnsManager/config.json 3\uff09\u5408\u7ea6\u9632\u706b\u5899\u72b6\u6001\u67e5\u8be2 ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwStatus()' --config cnsManager/config.json \u8f93\u51fa\uff1a result: {\"ContractAddress\":\"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\",\"FwActive\":true,\"AcceptedList\":[{\"Addr\":\"0xffffffffffffffffffffffffffffffffffffffff\",\"FuncName\":\"getName\"}],\"DeniedList\":[{\"Addr\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"FuncName\":\"invokeNotify\"}]} 4\uff09\u5408\u7ea6\u9632\u706b\u5899\u5173\u95ed ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwClose()' --config cnsManager/config.json","title":"\u94fe\u7ba1\u7406\u64cd\u4f5c\u6307\u5357"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#_1","text":"","title":"\u64cd\u4f5c\u6307\u5357"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#1","text":"\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4e24\u79cd\u65b9\u5f0f\u8c03\u7528\u5408\u7ea6\uff1a \u76f4\u63a5\u4f7f\u7528ctool invoke\uff0c\u901a\u8fc7\u5408\u7ea6\u5730\u5740\u7684\u65b9\u5f0f\u8c03\u7528 ctool invoke --addr \"$contractAddress\" --func '$functionName' --param \"$para\" --abi $abiFilePath --config $configFilePath \u90e8\u7f72\u7684\u5408\u7ea6\u5728\u5408\u7ea6\u7ba1\u7406\u670d\u52a1\uff08CNS\uff09\u6ce8\u518c\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u540d\u7684\u65b9\u5f0f\u8c03\u7528\u6307\u5b9a\u5408\u7ea6\u3002 ctool cnsInvoke --cns \"$contractName\" --func '${functionName}(${param})' --abi $abiFilePath --config $configFilePath","title":"1. \u5408\u7ea6\u8c03\u7528\u65b9\u5f0f"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#2-cns","text":"\u529f\u80fd\u63cf\u8ff0\uff1a \u5408\u7ea6\u7ba1\u7406\u670d\u52a1\u63d0\u4f9b\u4e86\u5bf9\u7cfb\u7edf\u4e2d\u5408\u7ea6\u7684\u7ba1\u7406\u529f\u80fd\uff0c\u5305\u62ec\u5408\u7ea6\u7684\u6ce8\u518c\u548c\u6ce8\u9500\uff0c\u5408\u7ea6\u6ce8\u518c\u4fe1\u606f\u548c\u5730\u5740\u7684\u67e5\u8be2\u7b49\u529f\u80fd\u3002 \u64cd\u4f5c\uff1a \u6ce8\u518c\u5408\u7ea6[cnsRegister(contractName, version)]\uff1a CNS\u5408\u7ea6\u7684\u9ed8\u8ba4\u5730\u5740\uff1a0x0000000000000000000000000000000000000011 \u53c2\u65701\uff1a\u6ce8\u518c\u5408\u7ea6\u7684\u540d\u79f0\uff0c\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934\uff0c\u5408\u7ea6\u540d\u7684\u6240\u6709\u8005\u4e3a\u7b2c\u4e00\u6b21\u6ce8\u518c\u5408\u7ea6\u7684\u90e8\u7f72\u8005 \u53c2\u65702\uff1a\u6ce8\u518c\u5408\u7ea6\u7684\u7248\u672c\uff0c\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 \u53c2\u65703\uff1a\u6ce8\u518c\u5408\u7ea6\u7684\u5730\u5740\uff0c\u5408\u7ea6\u5730\u5740\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\"0x\"\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'cnsRegister' --param \"test\" --param \"1.0.0.0\" --param \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u6ce8\u9500\u5408\u7ea6[cnsUnregister(contractName, version)]\uff1a \u53c2\u65701\uff1a\u5408\u7ea6\u540d\u79f0\uff0c\u540c\u4e0a\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 \u53c2\u65702\uff1a\u5408\u7ea6\u7248\u672c\uff0c\u540c\u4e0a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'cnsUnregister' --param \"test\" --param \"1.0.0.0\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u67e5\u8be2\u5408\u7ea6\u6ce8\u518c\u4fe1\u606f\u548c\u5730\u5740\uff1a 1\uff09\u67e5\u8be2\u7cfb\u7edf\u4e2d\u5df2\u6ce8\u518c\u7684\u5408\u7ea6[getRegisteredContracts(pageNum, pageSize)]\uff1a \u53c2\u65701\uff1a\u8f93\u51fa\u9875\u7801\uff08\u4ece0\u5f00\u59cb\uff09 \u53c2\u65702\uff1a\u5c55\u793a\u6761\u76ee ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getRegisteredContracts' --param 0 --param 10 --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\u7ed3\u679c\uff1a result: {\"code\":0,\"msg\":\"ok\",\"data\":{\"total\":8,\"contract\":[{\"name\":\"__sys_NodeManager\",\"version\":\"1.0.0.0\",\"address\":\"0xa94ad954e17606b8c254065c2317139f9cc593d0\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176237528,\"enabled\":true},{\"name\":\"__sys_NodeRegister\",\"version\":\"1.0.0.0\",\"address\":\"0x0331920e4c9aa382fa901e1c29f7199c54e351c7\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176340642,\"enabled\":true},{\"name\":\"__sys_ParamManager\",\"version\":\"1.0.0.0\",\"address\":\"0x46f59b9ee012455a8ee5623eb287c2221f1a15ee\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176604980,\"enabled\":true},{\"name\":\"__sys_RoleManager\",\"version\":\"1.0.0.0\",\"address\":\"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176386721,\"enabled\":true},{\"name\":\"__sys_RoleRegister\",\"version\":\"1.0.0.0\",\"address\":\"0xf8f1bec07e2556e6be2371f441f0a1ce9c8b737b\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176464844,\"enabled\":true},{\"name\":\"__sys_UserManager\",\"version\":\"1.0.0.0\",\"address\":\"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176530910,\"enabled\":true},{\"name\":\"__sys_UserRegister\",\"version\":\"1.0.0.0\",\"address\":\"0xf7e769f67be5bf06d5712c355e293ef0d4c685fc\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556176561942,\"enabled\":true},{\"name\":\"test\",\"version\":\"1.0.0.0\",\"address\":\"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556258758307,\"enabled\":false}]}} 2\uff09\u67e5\u8be2\u8d26\u6237\u90e8\u7f72\u7684\u6240\u6709\u5408\u7ea6[getRegisteredContractsByAddress(userAddress, pageNum, pageSize)]\uff1a \u53c2\u65701\uff1a\u8d26\u6237\u5730\u5740\uff0c\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u8d26\u6237\u6807\u51c6\u683c\u5f0f \u53c2\u65702\uff1a\u8f93\u51fa\u9875\u7801 \u53c2\u65703\uff1a\u5c55\u793a\u6761\u76ee ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getRegisteredContractsByAddress' --param \"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\" --param 0 --param 10 --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json 3\uff09\u67e5\u8be2\u5408\u7ea6\u7684\u5386\u53f2\u7248\u672c\u4fe1\u606f[getHistoryContractsByName(contractName)]\uff1a \u53c2\u6570\uff1a\u5408\u7ea6\u540d\u79f0\uff0c\u540c\u4e0a\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getHistoryContractsByName' --param \"test\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\u7ed3\u679c\uff1a result: {\"code\":0,\"msg\":\"ok\",\"data\":{\"total\":1,\"contract\":[{\"name\":\"test\",\"version\":\"1.0.0.0\",\"address\":\"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\",\"origin\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"create_time\":1556258758307,\"enabled\":false}]}} 4\uff09\u67e5\u8be2\u5408\u7ea6\u6ce8\u518c\u60c5\u51b5\uff1a \u53ef\u4ee5\u901a\u8fc7\u5408\u7ea6\u5730\u5740\u548c\u5408\u7ea6\u540d\u79f0\u4e24\u79cd\u67e5\u8be2\u6761\u4ef6\u67e5\u8be2\u5408\u7ea6\u6ce8\u518c\u60c5\u51b5\u3002 [ifRegisteredByAddress(contractAddress)]\uff1a \u53c2\u6570\uff1a\u5408\u7ea6\u5730\u5740\uff0c\u540c\u4e0a\u5fc5\u987b\u7b26\u5408\u4ee5\u592a\u574a\u5408\u7ea6\u5730\u5740\u6807\u51c6\u683c\u5f0f\uff0c\"0x\"\u524d\u7f00\u53ef\u5199\u53ef\u4e0d\u5199 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'ifRegisteredByAddress' --param \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json [ifRegisteredByName(contractName)]\uff1a \u53c2\u6570\uff1a\u5408\u7ea6\u540d\u79f0\uff0c\u540c\u4e0a\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'ifRegisteredByName' --param \"test\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a1\u8868\u793a\u5df2\u6ce8\u518c\uff0c0\u8868\u793a\u672a\u6ce8\u518c\u3002 5\uff09\u67e5\u8be2\u5408\u7ea6\u5730\u5740[getContractAddress(contractName, version)]\uff1a \u53c2\u65701\uff1a\u5408\u7ea6\u540d\u79f0\uff0c\u540c\u4e0a\u9700\u8981\u5b57\u6bcd\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf\u6253\u5934 \u53c2\u65702\uff1a\u5408\u7ea6\u7248\u672c\uff0c\u540c\u4e0a\u9700\u6ee1\u8db3[num].[num].[num].[num]\u7684\u683c\u5f0f\uff0c\u59821.0.0.0 ctool invoke --addr \"0x0000000000000000000000000000000000000011\" --func 'getContractAddress' --param \"test\" --param \"1.0.0.0\" --abi cnsManager/cnsManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a\u5408\u7ea6\u5730\u5740","title":"2. \u5408\u7ea6\u7ba1\u7406\u670d\u52a1\uff08CNS\uff09"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#3","text":"\u529f\u80fd\u63cf\u8ff0\uff1a \u53c2\u6570\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u4e86\u5bf9\u94fe\u4e0a\u7cfb\u7edf\u53c2\u6570\u7684\u8bbe\u7f6e\u548c\u67e5\u8be2\u529f\u80fd\uff0c\u7cfb\u7edf\u53c2\u6570\u5305\u62ec\uff1a\u6bcf\u7b14\u4ea4\u6613\u6d88\u8017\u7684gas\u4e0a\u9650\uff08TxGasLimit\uff09\uff0c\u533a\u5757\u4e2d\u6253\u5305\u7684\u6240\u6709\u4ea4\u6613\u6d88\u8017\u7684gas\u4e0a\u9650\uff08BLockGasLimit\uff09\uff0c\u5171\u8bc6\u8fc7\u7a0b\u4e2d\u5355\u4e2a\u8282\u70b9\u51fa\u5757\u65f6\u957f\u548c\u533a\u5757\u95f4\u9694\uff08Duration\uff0cBlockInterval\uff09\u3002 \u64cd\u4f5c\uff1a TxGasLimit\u67e5\u8be2\u548c\u8bbe\u7f6e ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'getTxGasLimit()' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'setTxGasLimit(\"5000000000000\")' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json BLockGasLimit\u67e5\u8be2\u548c\u8bbe\u7f6e ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'getBlockGasLimit()' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'setBlockGasLimit(\"10000000000000000\")' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json \u5171\u8bc6\u65f6\u95f4\u53c2\u6570\u67e5\u8be2\u548c\u8bbe\u7f6e ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'getCBFTTimeParam()' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json ctool cnsInvoke --cns \"__sys_ParamManager\" --func 'setCBFTTimeParam(\"20\",\"1\")' --abi paramManager/paramManager.cpp.abi.json --config cnsManager/config.json","title":"3. \u53c2\u6570\u7ba1\u7406"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#4","text":"","title":"4. \u5e73\u53f0\u7528\u6237\u7ba1\u7406"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#41","text":"\u529f\u80fd\u63cf\u8ff0\uff1a \u65b0\u7528\u6237\u901a\u8fc7\u63d0\u4ea4\u6ce8\u518c\u4fe1\u606f\uff0c\u5f85\u94fe\u7ba1\u7406\u5458\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u6210\u4e3a\u5e73\u53f0\u7528\u6237\u3002\u5e73\u53f0\u7528\u6237\u53ef\u4ee5\u7533\u8bf7\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u5f85\u94fe\u7ba1\u7406\u5458\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u88ab\u6388\u4e88\u5bf9\u5e94\u7684\u89d2\u8272\uff0c\u5e76\u62e5\u6709\u76f8\u5e94\u7684\u6743\u9650\u3002 \u7cfb\u7edf\u4e2d\u5185\u7f6e\u7684\u89d2\u8272\u6709\uff1a \u89d2\u8272\u4e2d\u6587\u540d \u89d2\u8272\u82f1\u6587\u540d \u94fe\u521b\u5efa\u8005\uff08\u8d85\u7ba1\uff09 chainCreator \u94fe\u7ba1\u7406\u5458\uff08\u666e\u7ba1\uff09 chainAdmin \u8282\u70b9\u7ba1\u7406\u5458 nodeAdmin \u5408\u7ea6\u7ba1\u7406\u5458 contractAdmin \u5408\u7ea6\u90e8\u7f72\u8005 contractDeployer \u5408\u7ea6\u8c03\u7528\u8005 contractCaller \u64cd\u4f5c\uff1a 1\uff09\u65b0\u7528\u6237\u7533\u8bf7[registerUser(RegisterInfo)]\uff1a \u68c0\u67e5\u7528\u6237\u7533\u8bf7\u4e2d\u5404\u53c2\u6570\u7684\u5408\u6cd5\u6027\uff0c\u5e76\u5199\u5165\u5408\u7ea6\u4e2d\u3002 \u53c2\u6570\u8bf4\u660e\uff1a string address\uff1a\u7528\u6237\u5730\u5740 string name\uff1a\u7528\u6237\u540d\uff0c \u4e0d\u80fd\u91cd\u590d string mobile\uff1a \u624b\u673a\u53f7 string email\uff1a\u7528\u6237\u90ae\u7bb1 string[] roles\uff1a\u89d2\u8272 string remark\uff1a\u5907\u6ce8 ctool invoke --addr \"0xf7e769f67be5bf06d5712c355e293ef0d4c685fc\" --func 'registerUser' --param '{\"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\",\"name\":\"xiaoluo\",\"mobile\":\"13111111111\",\"email\":\"123@126.com\",\"roles\":[\"chainAdmin\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"}' --abi userRegister/userRegister.cpp.abi.json --config cnsManager/user.json 2\uff09\u7ba1\u7406\u5458\u5ba1\u6838[approve(userAddress, status)]\uff1a \u7ba1\u7406\u5458\u9a8c\u8bc1\u7528\u6237\u5408\u6cd5\u6027\u540e\uff0c\u4fee\u6539\u7528\u6237\u72b6\u6001\u5e76\u4fdd\u5b58\u5230\u7528\u6237\u7ba1\u7406\u5408\u7ea6\u3002 \u53c2\u65701\uff1a\u5f85\u5ba1\u6838\u7528\u6237\u7684\u5730\u5740 \u53c2\u65702\uff1a\u5ba1\u6838\u72b6\u6001\uff0c1\uff1a\u5f85\u5ba1\u6838\uff0c2\uff1a\u5df2\u6279\u51c6\uff0c3\uff1a\u5df2\u62d2\u7edd ctool invoke --addr \"0xf7e769f67be5bf06d5712c355e293ef0d4c685fc\" --func 'approve' --param '0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe' --param 2 --abi ./userRegister/userRegister.cpp.abi.json --config cnsManager/config.json","title":"4.1. \u7528\u6237\u7533\u8bf7"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#42","text":"\u529f\u80fd\u63cf\u8ff0\uff1a \u7528\u6237\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u5bf9\u5e73\u53f0\u7528\u6237\u4fe1\u606f\u7684\u67e5\u8be2\uff0c\u5220\u9664\u548c\u66f4\u65b0\u3002 \u64cd\u4f5c\uff1a 1\uff09\u901a\u8fc7\u7528\u6237\u5730\u5740\u548c\u7528\u6237\u540d\u79f0\u4e24\u79cd\u67e5\u8be2\u6761\u4ef6\u67e5\u8be2\u7528\u6237\u4fe1\u606f \u53c2\u6570\uff1a\u7528\u6237\u5730\u5740 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'getAccountByAddress' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json \u53c2\u6570\uff1a\u7528\u6237\u540d\u79f0 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'getAccountByName' --param \"xiaoluo\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a result: {\"code\":0,\"msg\":\"succeed\",\"data\":{\"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\",\"name\":\"xiaoluo\",\"mobile\":\"1312222\",\"email\":\"123@qq.com\",\"status\":2}} 2\uff09\u67e5\u8be2\u7528\u6237\u662f\u5426\u5408\u6cd5 \u53c2\u6570\uff1a\u7528\u6237\u5730\u5740 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'isValidUser' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a1\u8868\u793a\u5408\u6cd5\uff0c0\u8868\u793a\u975e\u6cd5\u3002 3) \u66f4\u65b0\u7528\u6237\u4fe1\u606f \u53c2\u65701\uff1a\u7528\u6237\u5730\u5740 \u53c2\u65702\uff1a\u7528\u6237\u4fe1\u606f\uff08\u4e0e\u65b0\u589e\u7528\u6237\u65f6\u7c7b\u4f3c\uff09 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'update' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --param '{\"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\",\"name\":\"xiaoluo\",\"mobile\":\"1312222\",\"email\":\"123@qq.com\",\"status\":0}' --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json 4) \u7981\u7528\u548c\u6fc0\u6d3b\u7528\u6237 \u53c2\u6570\uff1a\u7528\u6237\u5730\u5740 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'disable' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'enable' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json 5\uff09\u5220\u9664\u7528\u6237 \u53c2\u6570\uff1a\u7528\u6237\u5730\u5740 ctool invoke --addr \"0x6c990c0f1ae07222c7b7dcb2b68b936d0008ca57\" --func 'delUser' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi userManager/userManager.cpp.abi.json --config cnsManager/config.json","title":"4.2. \u7528\u6237\u7ba1\u7406"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#43","text":"\u529f\u80fd\u63cf\u8ff0\uff1a \u5e73\u53f0\u7528\u6237\u7533\u8bf7\u5728\u7cfb\u7edf\u4e2d\u7684\u89d2\u8272\uff0c\u5f85\u94fe\u7ba1\u7406\u5458\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u88ab\u6388\u4e88\u5bf9\u5e94\u7684\u89d2\u8272\uff0c\u5e76\u62e5\u6709\u76f8\u5e94\u7684\u6743\u9650\u3002 \u64cd\u4f5c\uff1a 1\uff09\u7528\u6237\u7533\u8bf7\u89d2\u8272 \u53c2\u6570\uff1a\u7533\u8bf7\u7684\u89d2\u8272\u540d ctool invoke --addr \"0xf8f1bec07e2556e6be2371f441f0a1ce9c8b737b\" --func 'registerRole' --param '[\"nodeAdmin\"]' --abi roleRegister/roleRegister.cpp.abi.json --config cnsManager/user.jso 2\uff09\u7ba1\u7406\u5458\u5ba1\u6838 ctool invoke --addr \"0xf8f1bec07e2556e6be2371f441f0a1ce9c8b737b\" --func 'approveRole' --param '0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe' --param 2 --abi roleRegister/roleRegister.cpp.abi.json --config cnsManager/config.json \u53c2\u65701\uff1a\u5f85\u5ba1\u6838\u7528\u6237\u7684\u5730\u5740 \u53c2\u65702\uff1a\u5ba1\u6838\u72b6\u6001\uff0c1\uff1a\u5f85\u5ba1\u6838\uff0c2\uff1a\u5df2\u6279\u51c6\uff0c3\uff1a\u5df2\u62d2\u7edd","title":"4.3. \u89d2\u8272\u7533\u8bf7"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#44","text":"\u529f\u80fd\u63cf\u8ff0\uff1a \u89d2\u8272\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u5bf9\u7528\u6237\u89d2\u8272\u7684\u67e5\u8be2\u548c\u64a4\u9500\u3002 \u64cd\u4f5c\uff1a 1\uff09\u901a\u8fc7\u7528\u6237\u5730\u5740\u548c\u7528\u6237\u540d\u79f0\u4e24\u79cd\u67e5\u8be2\u6761\u4ef6\u67e5\u8be2\u7528\u6237\u89d2\u8272\u4fe1\u606f \u53c2\u6570\uff1a\u7528\u6237\u5730\u5740 ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'getRolesByAddress' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --abi roleManager/roleManager.cpp.abi.json --config cnsManager/config.json \u53c2\u6570\uff1a\u7528\u6237\u540d\u79f0 ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'getRolesByName' --param \"xiaowang\" --abi roleManager/roleManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a result: {\"code\":0,\"msg\":\"Success\",\"data\":[\"contractDeployer\",\"contractAdmin\"]} 2\uff09\u67e5\u8be2\u7528\u6237\u662f\u5426\u6709\u67d0\u4e2a\u89d2\u8272 \u53c2\u65701\uff1a\u7528\u6237\u5730\u5740 \u53c2\u65702\uff1a\u89d2\u8272\u540d ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'hasRole' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --param \"chainAdmin\" --abi roleManager/roleManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a1\u8868\u793a\u62e5\u6709\uff0c0\u8868\u793a\u6ca1\u6709\u3002 3) \u67e5\u8be2\u7cfb\u7edf\u4e2d\u67d0\u4e2a\u89d2\u8272\u7684\u5730\u5740 \u53c2\u6570\uff1a\u89d2\u8272\u540d ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'getAccountsByRole' --param \"chainAdmin\" --abi roleManager/roleManager.cpp.abi.json --config cnsManager/config.json \u8f93\u51fa\uff1a result: {\"code\":0,\"msg\":\"Success\",\"data\":[{\"name\":\"xiaoluo\",\"address\":\"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\"}]} 4\uff09\u64a4\u9500\u7528\u6237\u89d2\u8272 \u53c2\u65701\uff1a\u7528\u6237\u5730\u5740 \u53c2\u65702\uff1a\u89d2\u8272\u540d ctool invoke --addr \"0x1df9e46ccaf981f993fe26a6eb52a6c3fd7193df\" --func 'removeRole' --param \"0x39f5ddcd8956e57b7fe6290e008f845f59dde8fe\" --param '[\"nodeAdmin\"]' --abi roleManager/roleManager.cpp.abi.json --config cnsManager/config.json","title":"4.4. \u89d2\u8272\u7ba1\u7406"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#5","text":"","title":"5. \u8282\u70b9\u7ba1\u7406"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#51","text":"\u529f\u80fd\u63cf\u8ff0\uff1a \u7ba1\u7406\u6240\u6709\u8282\u70b9\u7684\u7533\u8bf7\u4fe1\u606f\u4ee5\u53ca\u5ba1\u6838\u4fe1\u606f\uff0c\u8282\u70b9\u7533\u8bf7\u5ba1\u6838\u540e\uff0c\u8282\u70b9\u4fe1\u606f\u624d\u4f1a\u767b\u8bb0\u4e8e\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u3002 \u64cd\u4f5c: \u6ce8\u518c\u8282\u70b9\u4fe1\u606f[registerNode(RegisterInfo)] \u53c2\u6570\u8bf4\u660e: + name:\u8282\u70b9\u540d\u79f0 + owner :\u7533\u8bf7\u8005\u7684\u5730\u5740 + desc:\u8282\u70b9\u63cf\u8ff0 + type: + 1:\u5171\u8bc6\u8282\u70b9 + 0:\u89c2\u5bdf\u8005\u8282\u70b9 + publicKey :\u8282\u70b9\u516c\u94a5 + externalIP :\u5916\u7f51 IP + internalIP:\u5185\u7f51 IP + rpcPort:rpc \u7aef\u53e3 + p2pPort :p2p\u7aef\u53e3 + status : + 0:\u672a\u5ba1\u6838 + 1:\u7533\u8bf7\u901a\u8fc7 + 2:\u62d2\u7edd\u7533\u8bf7 + approver:\u5ba1\u6838\u4eba\u7684\u5730\u5740 + registerTime:\u7533\u8bf7\u65f6\u95f4 + root: + true:\u662f\u6839\u8282\u70b9 + false:\u4e0d\u662f\u6839\u8282\u70b9 ``` ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'registerNode' --param '{\"name\":\"nodeB\",\"desc\":\"i am nodeB\",\"type\":0,\"publicKey\":\"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\",\"externalIP\":\"127.0.0.1\",\"internalIP\":\"127.0.0.1\",\"rpcPort\":6793,\"p2pPort\":16793,\"root\":false}' --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json ``` \u5ba1\u6838\u8282\u70b9\u4fe1\u606f [approve(publicKey,status)] \u53c2\u6570\u8bf4\u660e: + publicKey:\u5f85\u5ba1\u6838\u8282\u70b9\u516c\u94a5 + status: + 1:\u901a\u8fc7 2:\u62d2\u7edd ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'approve' --param \"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\" --param 1 --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json \u6839\u636e\u516c\u94a5\u83b7\u53d6\u7533\u8bf7\u4fe1\u606f[getRegisterInfoByPublicKey(publicKey)] \u53c2\u6570\u8bf4\u660e: publicKey: \u5f85\u67e5\u770b\u8282\u70b9\u516c\u94a5 ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'getRegisterInfoByPublicKey' --param \"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\" --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json","title":"5.1. \u8282\u70b9\u7533\u8bf7"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#52","text":"\u529f\u80fd\u63cf\u8ff0: \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u8282\u70b9\u5305\u62ec\u5171\u8bc6\u8282\u70b9\u548c\u975e\u5171\u8bc6\u8282\u70b9\uff0c\u8282\u70b9\u4fe1\u606f\u5305\u62ec\u516c\u94a5\uff0c\u8bc1\u4e66\uff0c\u7ba1\u7406\u5458\uff0c\u540d\u79f0\u7b49 \u64cd\u4f5c: \u6dfb\u52a0\u8282\u70b9\u4fe1\u606f[add(nodeJsonStr)] \u53c2\u6570\u8bf4\u660e: nodeJsonStr:\u8282\u70b9\u4fe1\u606f\u7684JSON\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32 \u9996\u5148\u9700\u8981\u6dfb\u52a0\u4e3b\u8282\u70b9\u4fe1\u606f ./bin/ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'add' --param '{\"name\":\"root\",\"owner\":\"0x96307a6168921cefd50d66e1921a029fe1982394\",\"approver\":\"0x96307a6168921cefd50d66e1921a029fe1982394\",\"desc\":\"root\",\"publicKey\":\"feffe2938d427088f5fcce94a9245760b92c468d3ca25ab5ef2b1cdccf0ed911963b74ca2dffef20ef135966e34ebcc905d1f12c1df09f05974a617cf8afe8e8\",\"root\":true,\"type\":1,\"externalIP\":\"127.0.0.1\",\"internalIP\":\"127.0.0.1\",\"rpcPort\":6791,\"p2pPort\":16791,\"status\":1}' --abi ./conf/contracts/nodeManager.cpp.abi.json --config ./user2.json \u8fd4\u56de\u6240\u6709\u8282\u70b9\u4fe1\u606f[getAllNodes()] ./bin/ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'getAllNodes' --abi ./conf/contracts/nodeManager.cpp.abi.json --config ./user2.json \u6839\u636e\u7279\u5b9a\u6761\u4ef6\u8fd4\u56de\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u4fe1\u606f[getNodes(nodeJsonStr] \u5982\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d,\u8fd4\u56dename\u4e3a \"nodeC\"\u7684\u8282\u70b9\u4fe1\u606f ./bin/ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func 'getNodes' --param '{\"name\":\"nodeC\"}' --abi ./conf/contracts/nodeManager.cpp.abi.json --config ./user2.json \u66f4\u65b0\u8282\u70b9\u4fe1\u606f[update(name,nodeJsonStr)] \u53c2\u6570\u8bf4\u660e\uff1a name\uff1a\u8282\u70b9\u540d\u79f0 nodeJsonStr\uff1a\u5f85\u66f4\u65b0\u5b57\u6bb5 \u66f4\u65b0name\u4e3a\"nodeC\"\u7684\u8282\u70b9\u4e3a\u5171\u8bc6\u8282\u70b9 ./bin/ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func update --param \"nodeC\" --param '{\"type\":1}' --abi ./conf/contracts/nodeManager.cpp.abi.json --config ./user2.json","title":"5.2. \u8282\u70b9\u7ba1\u7406"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#53","text":"case1\uff1anodeA \u672a\u7533\u8bf7\u6210\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9 or \u5171\u8bc6\u8282\u70b9\uff0c\u6240\u4ee5\u4e0d\u80fd\u540c\u6b65\u94fe\u4e0a\u4fe1\u606f\uff0c\u4e0d\u65ad\u53d1\u751froundchange\uff0c\u4e14\u533a\u5757\u9ad8\u5ea6\u59cb\u7ec8\u4e3a1 ....... DEBUG[04-26|16:24:37.221] updateRoundState roundChange current=\"&{round:0xc01d0e4a60 sequence:0xc01d0e4a80 Preprepare:<nil> Prepares:[] Commits:[] lockedHash:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] pendingRequest:0xc01d474150 lockedRound:0xc01d0e4b00 lockedPrepares:<nil> mu:0xc002c55280 hasBadProposal:0xb8ed70}\" INFO [04-26|16:24:37.221] ====== roundChange round: 10, height:1 ====== ...... case2\uff1anodeB\u7533\u8bf7\u6210\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9 \u9996\u5148\u7533\u8bf7\u6210\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9 ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'registerNode' --param '{\"name\":\"nodeB\",\"desc\":\"i am nodeB\",\"type\":0,\"publicKey\":\"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\",\"externalIP\":\"127.0.0.1\",\"internalIP\":\"127.0.0.1\",\"rpcPort\":6793,\"p2pPort\":16793,\"root\":false}' --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json \u7531\u7ba1\u7406\u5458\u8fdb\u884c\u5ba1\u6838 ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'approve' --param \"7caae651e633769fa693f633e3a468775bf19699ccdc014eb9449c2eb0f82ebde4a7d28c9b846d2df02d1e7f7e1460fbb31eb83c6faf208dcbfd4f2944d31c61\" --param 1 --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json \u5ba1\u6838\u901a\u8fc7\u540e\uff0c \u6b64\u65f6nodeB\u53ef\u4ee5\u540c\u6b65\u94fe\u4e0a\u7684\u533a\u5757\u4fe1\u606f\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u51fa\u5757\uff0c\u5177\u4f53\u7684log\u4fe1\u606f\u4e3a: ... DEBUG[04-26|19:13:02.088] startNewRound address=0x3225DF011bfAAB4C87D7ab4dDd94Daf830B8D809 old_round=0 old_seq=11144 old_proposer=0x96307A6168921cefd50D66E1921a029fE1982394 roundChange=false DEBUG[04-26|19:13:02.088] updateRoundState roundChange current=\"&{round:0xc034e7f760 sequence:0xc034e7f720 Preprepare:<nil> Prepares:[] Commits:[] lockedHash:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] pendingRequest:<nil> lockedRound:0xc034e7fd00 lockedPrepares:<nil> mu:0xc04ab4fba0 hasBadProposal:0xb8ed70}\" INFO [04-26|19:13:02.089] ====== roundChange round: 0, height:11145 ====== DEBUG[04-26|19:13:02.089] newRoundChangeTimer round=0 timeout=2s INFO [04-26|19:13:02.089] New round address=0x3225DF011bfAAB4C87D7ab4dDd94Daf830B8D809 old_round=0 old_seq=11144 old_proposer=0x96307A6168921cefd50D66E1921a029fE1982394 new_round=0 new_seq=11145 new_proposer=0x96307A6168921cefd50D66E1921a029fE1982394 valSet=[0x96307A6168921cefd50D66E1921a029fE1982394] size=1 IsProposer=false DEBUG[04-26|19:13:02.088] reset txpool RoutineID=39 oldHash=4b29f8\u20266ae5d3 oldNumber=11143 newHash=2a5fb0\u2026d575d7 newNumber=11144 DEBUG[04-26|19:13:02.089] Reinjecting stale transactions count=0 DEBUG[04-26|19:13:03.006] Received a message[NewBlockMsg]------------ GoRoutineID=3082 ... case3\uff1anodeC\u7533\u8bf7\u6210\u4e3a\u5171\u8bc6\u8282\u70b9 \u9996\u5148\u7533\u8bf7\u6210\u4e3a\u89c2\u5bdf\u8005\u8282\u70b9 ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'registerNode' --param '{\"name\":\"nodeC\",\"desc\":\"i am nodeC\",\"type\":0,\"publicKey\":\"2e11b2ad3aa6ba38b0979d023d148d16d4bb8afee22432259bfba8c6c5f7d43bd42859158575477e0037743f288d63aef94cbb25d3646a25ddcefa1c4e400f89\",\"externalIP\":\"127.0.0.1\",\"internalIP\":\"127.0.0.1\",\"rpcPort\":6794,\"p2pPort\":16794,\"root\":false}' --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json \u7ba1\u7406\u5458\u5ba1\u6838 ./bin/ctool invoke --addr \"0x743bc6816b2fa897d60b657b7eee3aaf2e3ca253\" --func 'approve' --param \"2e11b2ad3aa6ba38b0979d023d148d16d4bb8afee22432259bfba8c6c5f7d43bd42859158575477e0037743f288d63aef94cbb25d3646a25ddcefa1c4e400f89\" --param 1 --abi ./conf/contracts/nodeRegister.cpp.abi.json --config ./user2.json \u66f4\u65b0\u4e3a\u5171\u8bc6\u8282\u70b9 ./bin/ctool invoke --addr \"0x7b821b3d871426eb79d6e7145126f7d0b5fb4356\" --func update --param \"nodeC\" --param '{\"type\":1}' --abi ./conf/contracts/nodeManager.cpp.abi.json --config ./user2.json \u6b64\u65f6nodeC\u6210\u4e3a\u5171\u8bc6\u8282\u70b9\uff0c\u4e14\u53c2\u4e0e\u51fa\u5757\uff0c\u5177\u4f53\u7684log\u4fe1\u606f\u4e3a: ... INFO [04-28|08:27:19.596] New round address=0x96307A6168921cefd50D66E1921a029fE1982394 old_round=0 old_seq=145147 old_proposer=0x96307A6168921cefd50D66E1921a029fE1982394 new_round=0 new_seq=145148 new_proposer=0x96307A6168921cefd50D66E1921a029fE1982394 valSet=[0x96307A6168921cefd50D66E1921a029fE1982394] size=1 IsProposer=true DEBUG[04-28|08:27:20.522] +++++++++++++++++++++++++++++++++++ShouldSeal() -> true INFO [04-28|08:27:20.522] parentBlock Number: 145147 DEBUG[04-28|08:27:20.522] Begin consensus for new block number=145148 gasLimit=10240000000000000 parentHash=122645\u202689e935 parentNumber=145147 parentStateRoot=fe6dce\u202624e38c timestamp=1556411240522 INFO [04-28|08:27:20.522] Fetch pending transactions success pendingLength=0 time=5.058\u00b5s INFO [04-28|08:27:20.522] Commit new mining work number=145148 sealhash=ba6e11\u2026292c9c receiptHash=56e81f\u202663b421 txs=0 gas=0 fees=0 elapsed=145.102\u00b5s","title":"5.3. \u5171\u8bc6\uff06\u89c2\u5bdf\u8005\u8282\u70b9"},{"location":"%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/%E9%93%BE%E7%AE%A1%E7%90%86/%E9%93%BE%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971.0/#6","text":"\u529f\u80fd\u63cf\u8ff0\uff1a \u5408\u7ea6\u9632\u706b\u5899\u4e3b\u8981\u5b9e\u73b0\u4e86\u5bf9\u9632\u706b\u5899\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\u7684\u7ba1\u7406\u529f\u80fd\uff0c\u4f7f\u5f97\u5408\u7ea6\u7684\u90e8\u7f72\u8005\u53ef\u4ee5\u8bbe\u7f6e\u5408\u7ea6\u7684\u9632\u706b\u5899\u89c4\u5219\uff0c\u4f7f\u7279\u5b9a\u7684\u7528\u6237\u83b7\u5f97\u8c03\u7528\u5408\u7ea6\u6307\u5b9a\u51fd\u6570\u7684\u6743\u9650\u6216\u8005\u7981\u6b62\u7279\u5b9a\u7528\u6237\u8c03\u7528\u5408\u7ea6\u6307\u5b9a\u51fd\u6570\u3002 \u64cd\u4f5c\uff1a 1\uff09\u5408\u7ea6\u9632\u706b\u5899\u6fc0\u6d3b \u53c2\u6570addr\uff1a\u5408\u7ea6\u5730\u5740 ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwOpen()' --config cnsManager/config.json 2\uff09\u5408\u7ea6\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\u7684\u7ba1\u7406 \u521b\u5efa\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\uff1a \u53c2\u6570\u8bf4\u660e\uff1a Accept\uff1a\u8bbe\u7f6e\u767d\u540d\u5355\uff1bReject\uff1a\u8bbe\u7f6e\u9ed1\u540d\u5355 \u8fc7\u6ee4\u89c4\u5219\uff1a\u201d{\u5730\u5740}\uff1a{\u51fd\u6570\u540d}\u201c ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwAdd(\"Accept\",\"*:getName\")' --config cnsManager/config.json ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwAdd(\"Reject\",\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5:invokeNotify\")' --config cnsManager/config.json \u6e05\u7a7a\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\uff1a ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwClear(\"Accept\")' --config cnsManager/config.json ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwClear(\"Reject\")' --config cnsManager/config.json \u91cd\u7f6e\u540d\u5355\uff1a ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwSet(\"Reject\",\"*:invokeNotify\")' --config cnsManager/config.json \u5220\u9664\u6307\u5b9a\u5408\u7ea6\u7684\u767d/\u9ed1\u540d\u5355\u91cc\u7684\u6307\u5b9a\u5730\u5740\uff1a ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwDel(\"Reject\",\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5:invokeNotify\")' --config cnsManager/config.json 3\uff09\u5408\u7ea6\u9632\u706b\u5899\u72b6\u6001\u67e5\u8be2 ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwStatus()' --config cnsManager/config.json \u8f93\u51fa\uff1a result: {\"ContractAddress\":\"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\",\"FwActive\":true,\"AcceptedList\":[{\"Addr\":\"0xffffffffffffffffffffffffffffffffffffffff\",\"FuncName\":\"getName\"}],\"DeniedList\":[{\"Addr\":\"0x01a369998e4a141c5e2b40dbcbaf4a601d57cfa5\",\"FuncName\":\"invokeNotify\"}]} 4\uff09\u5408\u7ea6\u9632\u706b\u5899\u5173\u95ed ctool fwInvoke --addr \"0x08644ba5e0dd71d3d7cbb58913a099c2f3ca403f\" --func '__sys_FwClose()' --config cnsManager/config.json","title":"6. \u5408\u7ea6\u9632\u706b\u5899"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/","text":"PlatONE \u6743\u9650\u7ba1\u7406\u6559\u7a0b 1. \u7cfb\u7edf\u5408\u7ea6\u7b80\u8ff0 \u5728PlatONE\u8054\u76df\u94fe\u4e2d\uff0c\u6743\u9650\u63a7\u5236\u662f\u7531\u7cfb\u7edf\u5408\u7ea6\u7ef4\u62a4\u7684\uff0c\u5728\u94fe\u521d\u59cb\u65f6\u7cfb\u7edf\u4e0a\u90e8\u7f72\u5982\u4e0b\uff17\u4e2a\u7cfb\u7edf\u5408\u7ea6\uff0c\u7528\u4e8e\u6743\u9650\u7ba1\u7406\u3002 \u7cfb\u7edf\u5408\u7ea6\u540d\u79f0 \u6807\u8bc6\u7b26 \u4f5c\u7528 \u5408\u7ea6\u7ba1\u7406\u5408\u7ea6 cnsManager \u8bb0\u5f55\u540d\u79f0\u5230\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb \u53c2\u6570\u7ba1\u7406\u5408\u7ea6 __sys_ParamManager \u7ef4\u62a4\u94fe\u7684\u7cfb\u7edf\u7ea7\u53c2\u6570 \u7528\u6237\u7ba1\u7406\u5408\u7ea6 __sys_UserManager \u7528\u6237\u7ba1\u7406 \u7528\u6237\u6ce8\u518c\u5408\u7ea6 __sys_UserRegister \u7528\u6237\u6ce8\u518c \u89d2\u8272\u7ba1\u7406\u5408\u7ea6 __sys_RoleManager \u89d2\u8272\u7ba1\u7406\u5408\u7ea6 \u89d2\u8272\u6ce8\u518c\u5408\u7ea6 __sys_RoleRegister \u89d2\u8272\u6ce8\u518c\u5408\u7ea6 \u8282\u70b9\u7ba1\u7406\u5408\u7ea6 __sys_NodeManager \u8282\u70b9\u7ba1\u7406\u5408\u7ea6 \u7cfb\u7edf\u5408\u7ea6\u652f\u6301\u7684\u63a5\u53e3\uff0c\u8bf7\u53c2\u7167\u9644\u5f55 ctool\u5728 ~/PlatONE-Go/cmd/SysContracts/build \uff0c\u7cfb\u7edf\u5408\u7ea6\u5b58\u653e\u5728 ~/PlatONE-Go/cmd/SysContracts/build/systemContract/cnsManager \u4e0b \u6bd4\u5982\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528cnsManager\u5408\u7ea6\u6765\u67e5\u8be2\u5404\u4e2a\u7cfb\u7edf\u5408\u7ea6\u7684\u5730\u5740 cd ~/PlatONE-Go/cmd/SysContracts/build ./ctool invoke --addr 0x0000000000000000000000000000000000000011 --abi ./systemContract/cnsManager/cnsManager.cpp.abi.json --config ./config.json --func getRegisteredContracts --param 0 --param 10 \u5408\u7ea6\u8c03\u7528\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a {\"code\":0, \"msg\":\"ok\", \"data\":{ \"total\":7, \"contract\":[ {\"name\":\"__sys_NodeManager\",\"version\":\"1.0.0.0\",\"address\":\"0xee62fbc0b45f594465738fb5c794c60f9827f59e\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359510,\"enabled\":true}, {\"name\":\"__sys_NodeRegister\",\"version\":\"1.0.0.0\",\"address\":\"0x6d26ea822241d1baf1c774dd46947616cd0f3d40\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359511,\"enabled\":true}, {\"name\":\"__sys_ParamManager\",\"version\":\"1.0.0.0\",\"address\":\"0x2f0956a40cdb7f64ecc532a9c3d7171ed193ed03\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359505,\"enabled\":true}, {\"name\":\"__sys_RoleManager\",\"version\":\"1.0.0.0\",\"address\":\"0xfd82ff83bbfcfc0dea1fb48f015393f4218d61a7\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359508,\"enabled\":true},{\"name\":\"__sys_RoleRegister\",\"version\":\"1.0.0.0\",\"address\":\"0x53ba35b8b8f4b7ab63094a5e9e7bc3485a0b7bd4\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359509,\"enabled\":true}, {\"name\":\"__sys_UserManager\",\"version\":\"1.0.0.0\",\"address\":\"0x9ef86ec254db98b8e086e36803ce23195a66711c\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359506,\"enabled\":true}, {\"name\":\"__sys_UserRegister\",\"version\":\"1.0.0.0\",\"address\":\"0xae7236d1d1788612101c9ee6b25f71925db3bf0d\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359507,\"enabled\":true} ] } } 2. \u7528\u6237\u6743\u9650\u53ca\u7ba1\u7406 PlatONE\u4e2d\u7684\u6743\u9650\u90fd\u662f\u5bf9\u7cfb\u7edf\u4e2d\u7684\u7528\u6237\u5206\u914d\u7684\uff0c\u7528\u6237\u7684\u89d2\u8272\u5373\u8868\u793a\u7528\u6237\u7684\u6743\u9650\uff0c\u76ee\u524d\u7528\u6237\u53ef\u4ee5\u5206\u914d\u5982\u4e0b\u89d2\u8272\uff08\u6743\u9650\uff09\u3002 \u7528\u6237\u89d2\u8272\uff08\u6743\u9650\uff09 \u4f5c\u7528 chainCreator \u94fe\u521b\u5efa\u8005\uff0c\u5728\u94fe\u521b\u5efa\u65f6\u751f\u6210\uff0c\u662f\u7cfb\u7edf\u4e2d\u6743\u9650\u6700\u9ad8\u7684\u8d26\u6237 chainAdmin \u94fe\u7ba1\u7406\u5458\uff0c\u5728\u7531\u94fe\u521b\u5efa\u8005\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\u94fe\u7ba1\u7406\u5458 nodeAdmin \u8282\u70b9\u7ba1\u7406\u5458\uff0c\u7528\u4e8e\u7ba1\u7406\u7cfb\u7edf\u4e2d\u7684\u8282\u70b9\u4fe1\u606f contractAdmin \u5408\u7ea6\u7ba1\u7406\u5458\uff0c\u53ef\u4ee5\u7ba1\u7406\u7cfb\u7edf\u4e2d\u7684\u5408\u7ea6\u76f8\u5173\u7684\u6743\u9650\u63a7\u5236 contractDeployer \u94fe\u90e8\u7f72\u8005\uff0c\u8be5\u89d2\u8272\u8868\u793a\u7528\u6237\u53ef\u4ee5\u5728\u94fe\u4e0a\u90e8\u7f72\u5408\u7ea6 \u6bcf\u4e2a\u89d2\u8272\u7684\u6743\u9650\u8303\u56f4\u5982\u4e0b\u8868\u6240\u793a \u94fe\u521b\u5efa\u8005\uff08\u8d85\u7ba1\uff09 \u94fe\u7ba1\u7406\u5458\uff08\u666e\u7ba1\uff09 \u8282\u70b9\u7ba1\u7406\u5458 \u5408\u7ea6\u7ba1\u7406\u5458 \u5408\u7ea6\u90e8\u7f72\u8005 \u6307\u5b9a\u6216\u53d6\u6d88\u94fe\u7ba1\u7406\u5458 \u221a \u6307\u5b9a\u6216\u53d6\u6d88\u8282\u70b9\u7ba1\u7406\u5458 \u221a \u221a \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u7ba1\u7406\u5458 \u221a \u221a \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u90e8\u7f72\u8005 \u221a \u221a \u221a \u65b0\u52a0\u8282\u70b9\u7533\u8bf7 \u221a \u221a \u221a \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9 \u221a \u221a \u4e3a\u81ea\u5df1\u90e8\u7f72\u7684\u5408\u7ea6\u8bbe\u7f6e\u9632\u706b\u5899 \u221a \u221a \u221a \u5ba1\u6838\u5df2\u90e8\u7f72\u7684\u5408\u7ea6 \u221a \u221a \u221a \u7ba1\u7406\u81ea\u5df1\u52a0\u5165\u7684\u8282\u70b9 \u221a \u221a \u221a \u90e8\u7f72\u5408\u7ea6 \u221a \u221a \u221a \u94fe\u542f\u52a8\u540e\uff0c\u7b2c\u4e00\u4e2a\u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6\u7684\u8d26\u53f7\u9ed8\u8ba4\u4e3a\u94fe\u521b\u5efa\u8005\uff08chainCreator\uff09\u3002 \u5047\u5982\u6211\u4eec\u9700\u8981\u5c06\u4e00\u4e2a\u8d26\u53f7A\u8bbe\u7f6e\u4e3a\u94fe\u7ba1\u7406\u5458(chainAdmin)\uff0c\u9700\u8981\u9075\u5faa\u5982\u4e0b\u6b65\u9aa4\uff1a # 1. \u8d26\u53f7A\u7533\u8bf7\u6210\u4e3a\u7cfb\u7edf\u7528\u6237 # \u4f7f\u7528\u8d26\u53f7A\uff0c\u8c03\u7528\u7528\u6237\u6ce8\u518c\u5408\u7ea6\uff08__sys_UserRegister\uff09\u7684registerUser\u63a5\u53e3 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/userRegister/userRegister.cpp.abi.json \\ --config config.json \\ --func registerUser \\ --param '{\"address\":\"0x33d253386582f38c66cb5819bfbdaad0910339b3\",\"name\":\"userA\",\"mobile\":\"13111111111\",\"email\":\"userA@email.com\",\"roles\":[\"chainAdmin\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"}' # 2. chainCreator\u5ba1\u6838\u7533\u8bf7\u4fe1\u606f\u540e\uff0c\u540c\u610f\u7528\u6237\u7684\u7533\u8bf7\u884c\u4e3a # \u4f7f\u7528\u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6\u7684\u8d26\u53f7\uff08chainCreator\uff09\u8c03\u7528\u7528\u6237\u6ce8\u518c\u5408\u7ea6\uff08__sys_UserRegister\uff09\u7684approve\u63a5\u53e3 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/userRegister/userRegister.cpp.abi.json \\ --config config.json \\ --func approve \\ --param \"userA \u7684\u5730\u5740\" \\ --param 2 # 3. \u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff0c\u786e\u8ba4\u6dfb\u52a0\u7528\u6237\u6210\u529f # \u53ef\u4f7f\u7528\u4efb\u610f\u8d26\u53f7\u8c03\u7528\u7528\u6237\u7ba1\u7406\u5408\u7ea6\uff08__sys_UserRegister\uff09\u7684getAccountByAddress\u63a5\u53e3 ./ctool invoke \\ --addr 0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4 \\ --abi systemContract/userRegister/userRegister.cpp.abi.json \\ --config config.json \\ --func getAccountByAddress \\ --param \"userA \u7684\u5730\u5740\" \\ \u5728PlatONE\u7684\u6743\u9650\u4e2d\uff0c\u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u6709\u591a\u4e2a\u89d2\u8272\uff08\u6743\u9650\uff09\u3002\u5982\u679c\u9700\u8981\u7ed9\u5df2\u5b58\u5728\u7684\u7528\u6237\u8ffd\u52a0\u67d0\u4e2a\u89d2\u8272\uff08\u6743\u9650\uff09\uff0c\u5219\u6839\u636e\u5982\u4e0b\u6b65\u9aa4\u8fdb\u884c\uff08\u4ee5\u6dfb\u52a0nodeAdmin\u548cchainAdmin\u4e3a\u4f8b\uff09\uff1a # 1. chainCreator\u3001chainAdmin\u8fd9\u4e2a\u4e24\u7c7b\u89d2\u8272\u624d\u53ef\u4ee5\u8bbe\u7f6enodeAdmin\u89d2\u8272\uff0c\u6240\u4ee5\u5e94\u8be5\u4f7f\u7528\u8fd9\u4e24\u7c7b\u7528\u6237\u8c03\u7528\u7528\u6237\u6ce8\u518c\u5408\u7ea6\uff08__sys_RoleManager\uff09\u7684addRole\u63a5\u53e3 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/roleManager/roleManager.cpp.abi.json \\ --config config.json \\ --func addRole \\ --param \"userA\" \\ --param \"userA \u7684\u5730\u5740\" \\ --param '[\"nodeAdmin\",\"chainAdmin\"]' # 2. \u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff0c\u786e\u8ba4\u6dfb\u52a0\u7528\u6237\u6210\u529f # \u53ef\u4f7f\u7528\u4efb\u610f\u8d26\u53f7\u8c03\u7528\u7528\u6237\u7ba1\u7406\u5408\u7ea6\uff08__sys_RoleManager\uff09\u7684getRolesByAddress\u63a5\u53e3 ./ctool invoke \\ --addr 0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4 \\ --abi systemContract/roleManager/roleManager.cpp.abi.json \\ --config config.json \\ --func getRolesByAddress \\ --param \"userA \u7684\u5730\u5740\" \\ 3. \u8282\u70b9\u51c6\u5165\u6743\u9650 \u5728PlatONE\u8054\u76df\u94fe\u4e2d\uff0c\u8282\u70b9\u662f\u901a\u8fc7\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u6765\u63a7\u5236\u7684\u3002 \u53ea\u6709chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e09\u7c7b\u7528\u6237\u624d\u53ef\u4ee5\u8bbe\u7f6e\u7cfb\u7edf\u5408\u7ea6\u4e2d\u7684\u8282\u70b9\u60c5\u51b5\uff0c\u5f53\u9700\u8981\u6dfb\u52a0\u8282\u70b9\u3001\u66f4\u65b0\u8282\u70b9\u72b6\u6001\u3001\u5220\u9664\u8282\u70b9\u65f6\u90fd\u9700\u8981\u8fd9\u4e09\u7c7b\u8d26\u53f7\u6765\u8c03\u7528\u5408\u7ea6\u3002 3.1 \u6dfb\u52a0\u89c2\u5bdf\u8005\u8282\u70b9 # 1. \u6dfb\u52a0\u89c2\u5bdf\u8005\u8282\u70b9\uff0c \u89c2\u5bdf\u8005\u8282\u70b9\u53ea\u540c\u6b65\u533a\u5757\u6570\u636e\uff0c\u800c\u4e0d\u53c2\u4e0e\u5171\u8bc6 # chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e2a\u4e09\u7c7b\u89d2\u8272\u624d\u53ef\u4ee5\u8bbe\u7f6enodeAdmin\u89d2\u8272\uff0c\u6240\u4ee5\u5e94\u8be5\u4f7f\u7528\u8fd9\u4e09\u7c7b\u7528\u6237\u8c03\u7528\u7528\u6237\u6ce8\u518c\u5408\u7ea6\uff08__sys_NodeManager\uff09\u7684add\u63a5\u53e3 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/nodeManager/nodeManager.cpp.abi.json \\ --config config.json \\ --func add \\ --param '{\"name\":\"node-${NODE_ID}\",\"type\":${NODE_TYPE},\"publicKey\":\"${PUBKEY}\",\"desc\":\"desc\",\"externalIP\":\"${IP}\",\"internalIP\":\"${IP}\",\"rpcPort\":${RPC_PORT},\"p2pPort\":${P2P_PORT},\"root\":${IS_ROOT},\"owner\":\"0x${account}\",\"status\":1}' \u53c2\u6570\u4fe1\u606f\u4e3a\u4e00\u4e2ajson\u5b57\u7b26\u4e32\uff0c\u7528\u6237\u5e94\u8be5\u586b\u5145\u5bf9\u5e94\u7684\u5b57\u6bb5\uff0c\u5982\u4e0b\u4e3a\u4e00\u4e2a\u8282\u70b9\u5b8c\u6574\u7684\u4fe1\u606f { \"name\":\"node's name\", \"type\":0, \"publicKey\":\"71bb2aa47f4ddeccf80190bf98a80136ab52d6c8e2c4d54a11e690d4dffd9578f8c0ed614039b7ee06b55c7b96fdfe9099efa5dd12c6b1115f1c4817a093c1c7\", \"desc\":\"node description\", \"externalIP\":\"208.120.201.12\", \"internalIP\":\"127.0.0.1\", \"rpcPort\":6790, \"p2pPort\":16790, \"root\":false, \"owner\":\"0xae7236d1d1788612101c9ee6b25f71925db3bf0d\", \"status\":1 } 3.2 \u5c06\u8282\u70b9\u5347\u7ea7\u4e3a\u5171\u8bc6\u8282\u70b9 # 2. \u5c06\u8282\u70b9\u5347\u7ea7\u4e3a\u5171\u8bc6\u8282\u70b9\uff0c\u5171\u8bc6\u8282\u70b9\u5373\u540c\u6b65\u6570\u636e\u4e5f\u53c2\u4e0e\u5171\u8bc6 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/nodeManager/nodeManager.cpp.abi.json \\ --config config.json \\ --func update \\ --param \"node name\" --param '{\"type\":1}' 3.3 \u67e5\u8be2\u6240\u6709\u8282\u70b9\u4fe1\u606f # 3. \u67e5\u8be2\u6240\u6709\u8282\u70b9\u4fe1\u606f ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/nodeManager/nodeManager.cpp.abi.json \\ --config config.json \\ --func getAllNodes 4. \u5408\u7ea6\u90e8\u7f72\u53ca\u8c03\u7528\u6743\u9650 4.1 \u5408\u7ea6\u90e8\u7f72\u6743\u9650 \u5728\u94fe\u4e0a\u90e8\u7f72\u5408\u7ea6\u7684\u6743\u9650\u68c0\u67e5\u9ed8\u8ba4\u662f\u4e0d\u5f00\u542f\u7684\uff0c\u9700\u8981\u7ba1\u7406\u5458\u8c03\u7528\u53c2\u6570\u7ba1\u7406\u5408\u7ea6\u5c06\u6b64\u529f\u80fd\u5f00\u542f\u624d\u53ef\u4ee5\u68c0\u67e5\u90e8\u7f72\u5408\u7ea6\u7684\u6743\u9650\u3002 # 1. \u542f\u7528\u5408\u7ea6\u90e8\u7f72\u7684\u6743\u9650\u68c0\u67e5 # \u53c2\u6570\uff1a 0\uff0c\u9ed8\u8ba4\u503c\uff0c\u4e0d\u68c0\u67e5\u5408\u7ea6\u90e8\u7f72\u6743\u9650\uff1b 1\uff0c \u68c0\u67e5\u5408\u7ea6\u90e8\u7f72\u6743\u9650 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/paramManager/paramManager.cpp.abi.json \\ --config config.json \\ --func setCheckContractDeployPermission \\ --param 1 # \u67e5\u8be2\u5408\u7ea6\u90e8\u7f72\u6743\u9650\u68c0\u67e5\u662f\u5426\u5f00\u542f ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/paramManager/paramManager.cpp.abi.json \\ --config config.json \\ --func getCheckContractDeployPermission \\ \u5982\u4e0b\u51e0\u79cd\u89d2\u8272\u624d\u53ef\u4ee5\u90e8\u7f72\u5408\u7ea6\uff0c\u4e0d\u5177\u5907\u5982\u4e0b\u89d2\u8272\u7684\u7528\u6237\u5c06\u4e0d\u80fd\u5728\u94fe\u4e0a\u90e8\u7f72\u5408\u7ea6\u3002 chainCreator chainAdmin contractAdmin contractDeployer \u5047\u5982\u67d0\u4e2a\u8d26\u6237\u9700\u8981\u90e8\u7f72\u5408\u7ea6\uff0c\u5219\u8be5\u8d26\u6237\u9700\u8981\u7531\u5177\u5907\u6743\u9650\u7684\u8d26\u6237\u5c06\u5176\u8bbe\u7f6e\u4e3a contractDeployer 4.2 \u5408\u7ea6\u8c03\u7528\u6743\u9650 | \u5408\u7ea6\u9632\u706b\u5899 \u5728PlatONE\u4e2d\u5408\u7ea6\u7684\u8c03\u7528\u6743\u9650\u7531\u5408\u7ea6\u9632\u706b\u5899\u8bbe\u7f6e\uff0c\u53ea\u6709\u5408\u7ea6\u7684\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5bf9\u5e94\u5408\u7ea6\u7684\u9632\u706b\u5899\u3002 \u5408\u7ea6\u9632\u706b\u5899\u5177\u5907\u5408\u7ea6\u63a5\u53e3\u7ea7\u522b\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u5217\u8868\u5b9e\u73b0\uff1a ACCEPT: \u53ef\u4ee5\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u767d\u540d\u5355 REJECT: \u62d2\u7edd\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u9ed1\u540d\u5355 # \u6253\u5f00\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899 ctool fwInvoke --addr 0x22 --func '__sys_FwOpen()' --config ./config.json # \u5173\u95ed\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899 ctool fwInvoke --addr 0x22 --func '__sys_FwClose()' --config ./config.json # \u8bbe\u5b9a\u6307\u5b9a\u5408\u7ea6\u7684\u767d/\u9ed1\u540d\u5355 ctool fwInvoke --addr 0x22 --func '__sys_FwAdd(\"ACCEPT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json ctool fwInvoke --addr 0x22 --func '__sys_FwAdd(\"REJECT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json # \u6e05\u7a7a\u6307\u5b9a\u5408\u7ea6\u7684\u767d/\u9ed1\u540d\u5355 ctool fwInvoke --addr 0x22 --func '__sys_FwClear(\"ACCEPT\")' --config ./config.json ctool fwInvoke --addr 0x22 --func '__sys_FwClear(\"REJECT\")' --config ./config.json # \u5220\u9664\u6307\u5b9a\u5408\u7ea6\u7684\u767d/\u9ed1\u540d\u5355\u91cc\u7684\u6307\u5b9a\u5730\u5740 ctool fwInvoke --addr 0x22 --func '__sys_FwDel(\"ACCEPT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json ctool fwInvoke --addr 0x22 --func '__sys_FwDel(\"REJECT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json # \u91cd\u7f6e\u6307\u5b9a\u5408\u7ea6\u7684\u767d/\u9ed1\u540d\u5355 ctool fwInvoke --addr 0x22 --func '__sys_FwSet(\"ACCEPT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json ctool fwInvoke --addr 0x22 --func '__sys_FwSet(\"REJECT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json # \u67e5\u8be2\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u72b6\u6001 ctool fwInvoke --addr 0x22 --func '__sys_FwStatus()' --config ./config.json \u9644\u5f55A\uff1a \u7cfb\u7edf\u5408\u7ea6\u63a5\u53e3\u53ca\u65b9\u6cd5 A-1. cnsManager int cnsRegisterFromInit(const char * name,const char * version) int cnsRegister(const char * name,const char * version,const char * address) int cnsUnregister(char * name,char * version) const char * getContractAddress(char * name,char * version) char * getRegisteredContracts(int pageNum,int pageSize) char * getRegisteredContractsByAddress(char * origin,int pageNum,int pageSize) int ifRegisteredByName(char * name) int ifRegisteredByAddress(char * address) char * getContractInfoByAddress(char * address) char * getHistoryContractsByName(char * name) A-2. paramManager int setGasContractName(const char * contractName) const char * getGasContractName() int setCBFTTimeParam(int produceDuration,int blockInterval) const char * getCBFTTimeParam() int setIsProduceEmptyBlock(int isProduceEmptyBlock) int getIsProduceEmptyBlock() int setTxGasLimit(unsigned long long txGasLimit) unsigned long long getTxGasLimit() int setBlockGasLimit(unsigned long long blockGasLimit) unsigned long long getBlockGasLimit() int setAllowAnyAccountDeployContract(int isAllowAnyAccountDeployContract) int setCheckContractDeployPermission(int checkPermission) int getCheckContractDeployPermission() int getAllowAnyAccountDeployContract() int setIsApproveDeployedContract(int isApproveDeployedContract) int getIsApproveDeployedContract() int setIsTxUseGas(int isTxUseGas) int getIsTxUseGas() A-3. userManager int addUser(const char * userJson) int enable(const char * userAddr) int disable(const char * userAddr) int delUser(const char * userAddr) int update(const char * userAddr,const char * updateJson) const char * getAccountByAddress(const char * address) const char * getAccountByName(const char * name) int isValidUser(const char * userAddr) A-4. userRegister int registerUser(const char * registJson) int approve(const char * userAddress,int auditStatus) const char * getAccountByAddress(const char * address) const char * getAccountByUsername(const char * UserName) const char * getAccountsByStatus(int pageNum,int pageSize,int accountStatus) int getStatusByAddress(const char * address) A-5. roleManager int addRole(const char * name,const char * address,const char * roles) int removeRole(const char * address,const char * roles) const char * getRolesByAddress(const char * address) const char * getRolesByName(const char * name) const char * getAccountsByRole(const char * role) int hasRole(const char * addr,const char * role) A-6. roleRegister int registerRole(const char * roles) int approveRole(const char * address,int status) const char * getRegisterInfoByAddress(const char * address) const char * getRegisterInfoByName(const char * name) const char * getRegisterInfosByStatus(int status,int pageNum,int pageSize) A-7. nodeManager int add(const char * nodeJsonStr) const char * getAllNodes() int validJoinNode(const char * publicKey) int nodesNum(const char * nodeJsonStr) const char * getNodes(const char * nodeJsonStr) int update(const char * name,const char * nodeJsonStr) const char * getEnodeNodes(int deleted) const char * getNormalEnodeNodes() const char * getDeletedEnodeNodes()","title":"\u6743\u9650\u7ba1\u7406\u6559\u7a0b"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#platone","text":"","title":"PlatONE \u6743\u9650\u7ba1\u7406\u6559\u7a0b"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#1","text":"\u5728PlatONE\u8054\u76df\u94fe\u4e2d\uff0c\u6743\u9650\u63a7\u5236\u662f\u7531\u7cfb\u7edf\u5408\u7ea6\u7ef4\u62a4\u7684\uff0c\u5728\u94fe\u521d\u59cb\u65f6\u7cfb\u7edf\u4e0a\u90e8\u7f72\u5982\u4e0b\uff17\u4e2a\u7cfb\u7edf\u5408\u7ea6\uff0c\u7528\u4e8e\u6743\u9650\u7ba1\u7406\u3002 \u7cfb\u7edf\u5408\u7ea6\u540d\u79f0 \u6807\u8bc6\u7b26 \u4f5c\u7528 \u5408\u7ea6\u7ba1\u7406\u5408\u7ea6 cnsManager \u8bb0\u5f55\u540d\u79f0\u5230\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb \u53c2\u6570\u7ba1\u7406\u5408\u7ea6 __sys_ParamManager \u7ef4\u62a4\u94fe\u7684\u7cfb\u7edf\u7ea7\u53c2\u6570 \u7528\u6237\u7ba1\u7406\u5408\u7ea6 __sys_UserManager \u7528\u6237\u7ba1\u7406 \u7528\u6237\u6ce8\u518c\u5408\u7ea6 __sys_UserRegister \u7528\u6237\u6ce8\u518c \u89d2\u8272\u7ba1\u7406\u5408\u7ea6 __sys_RoleManager \u89d2\u8272\u7ba1\u7406\u5408\u7ea6 \u89d2\u8272\u6ce8\u518c\u5408\u7ea6 __sys_RoleRegister \u89d2\u8272\u6ce8\u518c\u5408\u7ea6 \u8282\u70b9\u7ba1\u7406\u5408\u7ea6 __sys_NodeManager \u8282\u70b9\u7ba1\u7406\u5408\u7ea6 \u7cfb\u7edf\u5408\u7ea6\u652f\u6301\u7684\u63a5\u53e3\uff0c\u8bf7\u53c2\u7167\u9644\u5f55 ctool\u5728 ~/PlatONE-Go/cmd/SysContracts/build \uff0c\u7cfb\u7edf\u5408\u7ea6\u5b58\u653e\u5728 ~/PlatONE-Go/cmd/SysContracts/build/systemContract/cnsManager \u4e0b \u6bd4\u5982\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528cnsManager\u5408\u7ea6\u6765\u67e5\u8be2\u5404\u4e2a\u7cfb\u7edf\u5408\u7ea6\u7684\u5730\u5740 cd ~/PlatONE-Go/cmd/SysContracts/build ./ctool invoke --addr 0x0000000000000000000000000000000000000011 --abi ./systemContract/cnsManager/cnsManager.cpp.abi.json --config ./config.json --func getRegisteredContracts --param 0 --param 10 \u5408\u7ea6\u8c03\u7528\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a {\"code\":0, \"msg\":\"ok\", \"data\":{ \"total\":7, \"contract\":[ {\"name\":\"__sys_NodeManager\",\"version\":\"1.0.0.0\",\"address\":\"0xee62fbc0b45f594465738fb5c794c60f9827f59e\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359510,\"enabled\":true}, {\"name\":\"__sys_NodeRegister\",\"version\":\"1.0.0.0\",\"address\":\"0x6d26ea822241d1baf1c774dd46947616cd0f3d40\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359511,\"enabled\":true}, {\"name\":\"__sys_ParamManager\",\"version\":\"1.0.0.0\",\"address\":\"0x2f0956a40cdb7f64ecc532a9c3d7171ed193ed03\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359505,\"enabled\":true}, {\"name\":\"__sys_RoleManager\",\"version\":\"1.0.0.0\",\"address\":\"0xfd82ff83bbfcfc0dea1fb48f015393f4218d61a7\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359508,\"enabled\":true},{\"name\":\"__sys_RoleRegister\",\"version\":\"1.0.0.0\",\"address\":\"0x53ba35b8b8f4b7ab63094a5e9e7bc3485a0b7bd4\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359509,\"enabled\":true}, {\"name\":\"__sys_UserManager\",\"version\":\"1.0.0.0\",\"address\":\"0x9ef86ec254db98b8e086e36803ce23195a66711c\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359506,\"enabled\":true}, {\"name\":\"__sys_UserRegister\",\"version\":\"1.0.0.0\",\"address\":\"0xae7236d1d1788612101c9ee6b25f71925db3bf0d\",\"origin\":\"0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4\",\"create_time\":1561359507,\"enabled\":true} ] } }","title":"1. \u7cfb\u7edf\u5408\u7ea6\u7b80\u8ff0"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#2","text":"PlatONE\u4e2d\u7684\u6743\u9650\u90fd\u662f\u5bf9\u7cfb\u7edf\u4e2d\u7684\u7528\u6237\u5206\u914d\u7684\uff0c\u7528\u6237\u7684\u89d2\u8272\u5373\u8868\u793a\u7528\u6237\u7684\u6743\u9650\uff0c\u76ee\u524d\u7528\u6237\u53ef\u4ee5\u5206\u914d\u5982\u4e0b\u89d2\u8272\uff08\u6743\u9650\uff09\u3002 \u7528\u6237\u89d2\u8272\uff08\u6743\u9650\uff09 \u4f5c\u7528 chainCreator \u94fe\u521b\u5efa\u8005\uff0c\u5728\u94fe\u521b\u5efa\u65f6\u751f\u6210\uff0c\u662f\u7cfb\u7edf\u4e2d\u6743\u9650\u6700\u9ad8\u7684\u8d26\u6237 chainAdmin \u94fe\u7ba1\u7406\u5458\uff0c\u5728\u7531\u94fe\u521b\u5efa\u8005\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\u94fe\u7ba1\u7406\u5458 nodeAdmin \u8282\u70b9\u7ba1\u7406\u5458\uff0c\u7528\u4e8e\u7ba1\u7406\u7cfb\u7edf\u4e2d\u7684\u8282\u70b9\u4fe1\u606f contractAdmin \u5408\u7ea6\u7ba1\u7406\u5458\uff0c\u53ef\u4ee5\u7ba1\u7406\u7cfb\u7edf\u4e2d\u7684\u5408\u7ea6\u76f8\u5173\u7684\u6743\u9650\u63a7\u5236 contractDeployer \u94fe\u90e8\u7f72\u8005\uff0c\u8be5\u89d2\u8272\u8868\u793a\u7528\u6237\u53ef\u4ee5\u5728\u94fe\u4e0a\u90e8\u7f72\u5408\u7ea6 \u6bcf\u4e2a\u89d2\u8272\u7684\u6743\u9650\u8303\u56f4\u5982\u4e0b\u8868\u6240\u793a \u94fe\u521b\u5efa\u8005\uff08\u8d85\u7ba1\uff09 \u94fe\u7ba1\u7406\u5458\uff08\u666e\u7ba1\uff09 \u8282\u70b9\u7ba1\u7406\u5458 \u5408\u7ea6\u7ba1\u7406\u5458 \u5408\u7ea6\u90e8\u7f72\u8005 \u6307\u5b9a\u6216\u53d6\u6d88\u94fe\u7ba1\u7406\u5458 \u221a \u6307\u5b9a\u6216\u53d6\u6d88\u8282\u70b9\u7ba1\u7406\u5458 \u221a \u221a \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u7ba1\u7406\u5458 \u221a \u221a \u6307\u5b9a\u6216\u53d6\u6d88\u5408\u7ea6\u90e8\u7f72\u8005 \u221a \u221a \u221a \u65b0\u52a0\u8282\u70b9\u7533\u8bf7 \u221a \u221a \u221a \u7ba1\u7406\u6240\u6709\u7684\u8282\u70b9 \u221a \u221a \u4e3a\u81ea\u5df1\u90e8\u7f72\u7684\u5408\u7ea6\u8bbe\u7f6e\u9632\u706b\u5899 \u221a \u221a \u221a \u5ba1\u6838\u5df2\u90e8\u7f72\u7684\u5408\u7ea6 \u221a \u221a \u221a \u7ba1\u7406\u81ea\u5df1\u52a0\u5165\u7684\u8282\u70b9 \u221a \u221a \u221a \u90e8\u7f72\u5408\u7ea6 \u221a \u221a \u221a \u94fe\u542f\u52a8\u540e\uff0c\u7b2c\u4e00\u4e2a\u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6\u7684\u8d26\u53f7\u9ed8\u8ba4\u4e3a\u94fe\u521b\u5efa\u8005\uff08chainCreator\uff09\u3002 \u5047\u5982\u6211\u4eec\u9700\u8981\u5c06\u4e00\u4e2a\u8d26\u53f7A\u8bbe\u7f6e\u4e3a\u94fe\u7ba1\u7406\u5458(chainAdmin)\uff0c\u9700\u8981\u9075\u5faa\u5982\u4e0b\u6b65\u9aa4\uff1a # 1. \u8d26\u53f7A\u7533\u8bf7\u6210\u4e3a\u7cfb\u7edf\u7528\u6237 # \u4f7f\u7528\u8d26\u53f7A\uff0c\u8c03\u7528\u7528\u6237\u6ce8\u518c\u5408\u7ea6\uff08__sys_UserRegister\uff09\u7684registerUser\u63a5\u53e3 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/userRegister/userRegister.cpp.abi.json \\ --config config.json \\ --func registerUser \\ --param '{\"address\":\"0x33d253386582f38c66cb5819bfbdaad0910339b3\",\"name\":\"userA\",\"mobile\":\"13111111111\",\"email\":\"userA@email.com\",\"roles\":[\"chainAdmin\"],\"remark\":\"\u5e73\u53f0\u7528\u6237\u7533\u8bf7\"}' # 2. chainCreator\u5ba1\u6838\u7533\u8bf7\u4fe1\u606f\u540e\uff0c\u540c\u610f\u7528\u6237\u7684\u7533\u8bf7\u884c\u4e3a # \u4f7f\u7528\u90e8\u7f72\u7cfb\u7edf\u5408\u7ea6\u7684\u8d26\u53f7\uff08chainCreator\uff09\u8c03\u7528\u7528\u6237\u6ce8\u518c\u5408\u7ea6\uff08__sys_UserRegister\uff09\u7684approve\u63a5\u53e3 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/userRegister/userRegister.cpp.abi.json \\ --config config.json \\ --func approve \\ --param \"userA \u7684\u5730\u5740\" \\ --param 2 # 3. \u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff0c\u786e\u8ba4\u6dfb\u52a0\u7528\u6237\u6210\u529f # \u53ef\u4f7f\u7528\u4efb\u610f\u8d26\u53f7\u8c03\u7528\u7528\u6237\u7ba1\u7406\u5408\u7ea6\uff08__sys_UserRegister\uff09\u7684getAccountByAddress\u63a5\u53e3 ./ctool invoke \\ --addr 0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4 \\ --abi systemContract/userRegister/userRegister.cpp.abi.json \\ --config config.json \\ --func getAccountByAddress \\ --param \"userA \u7684\u5730\u5740\" \\ \u5728PlatONE\u7684\u6743\u9650\u4e2d\uff0c\u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u6709\u591a\u4e2a\u89d2\u8272\uff08\u6743\u9650\uff09\u3002\u5982\u679c\u9700\u8981\u7ed9\u5df2\u5b58\u5728\u7684\u7528\u6237\u8ffd\u52a0\u67d0\u4e2a\u89d2\u8272\uff08\u6743\u9650\uff09\uff0c\u5219\u6839\u636e\u5982\u4e0b\u6b65\u9aa4\u8fdb\u884c\uff08\u4ee5\u6dfb\u52a0nodeAdmin\u548cchainAdmin\u4e3a\u4f8b\uff09\uff1a # 1. chainCreator\u3001chainAdmin\u8fd9\u4e2a\u4e24\u7c7b\u89d2\u8272\u624d\u53ef\u4ee5\u8bbe\u7f6enodeAdmin\u89d2\u8272\uff0c\u6240\u4ee5\u5e94\u8be5\u4f7f\u7528\u8fd9\u4e24\u7c7b\u7528\u6237\u8c03\u7528\u7528\u6237\u6ce8\u518c\u5408\u7ea6\uff08__sys_RoleManager\uff09\u7684addRole\u63a5\u53e3 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/roleManager/roleManager.cpp.abi.json \\ --config config.json \\ --func addRole \\ --param \"userA\" \\ --param \"userA \u7684\u5730\u5740\" \\ --param '[\"nodeAdmin\",\"chainAdmin\"]' # 2. \u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff0c\u786e\u8ba4\u6dfb\u52a0\u7528\u6237\u6210\u529f # \u53ef\u4f7f\u7528\u4efb\u610f\u8d26\u53f7\u8c03\u7528\u7528\u6237\u7ba1\u7406\u5408\u7ea6\uff08__sys_RoleManager\uff09\u7684getRolesByAddress\u63a5\u53e3 ./ctool invoke \\ --addr 0x9d41fe3b45f3cacb1bebbb4e5670f88ff74ef1c4 \\ --abi systemContract/roleManager/roleManager.cpp.abi.json \\ --config config.json \\ --func getRolesByAddress \\ --param \"userA \u7684\u5730\u5740\" \\","title":"2. \u7528\u6237\u6743\u9650\u53ca\u7ba1\u7406"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#3","text":"\u5728PlatONE\u8054\u76df\u94fe\u4e2d\uff0c\u8282\u70b9\u662f\u901a\u8fc7\u8282\u70b9\u7ba1\u7406\u5408\u7ea6\u6765\u63a7\u5236\u7684\u3002 \u53ea\u6709chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e09\u7c7b\u7528\u6237\u624d\u53ef\u4ee5\u8bbe\u7f6e\u7cfb\u7edf\u5408\u7ea6\u4e2d\u7684\u8282\u70b9\u60c5\u51b5\uff0c\u5f53\u9700\u8981\u6dfb\u52a0\u8282\u70b9\u3001\u66f4\u65b0\u8282\u70b9\u72b6\u6001\u3001\u5220\u9664\u8282\u70b9\u65f6\u90fd\u9700\u8981\u8fd9\u4e09\u7c7b\u8d26\u53f7\u6765\u8c03\u7528\u5408\u7ea6\u3002","title":"3. \u8282\u70b9\u51c6\u5165\u6743\u9650"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#31","text":"# 1. \u6dfb\u52a0\u89c2\u5bdf\u8005\u8282\u70b9\uff0c \u89c2\u5bdf\u8005\u8282\u70b9\u53ea\u540c\u6b65\u533a\u5757\u6570\u636e\uff0c\u800c\u4e0d\u53c2\u4e0e\u5171\u8bc6 # chainCreator\u3001chainAdmin\u548cnodeAdmin\u8fd9\u4e2a\u4e09\u7c7b\u89d2\u8272\u624d\u53ef\u4ee5\u8bbe\u7f6enodeAdmin\u89d2\u8272\uff0c\u6240\u4ee5\u5e94\u8be5\u4f7f\u7528\u8fd9\u4e09\u7c7b\u7528\u6237\u8c03\u7528\u7528\u6237\u6ce8\u518c\u5408\u7ea6\uff08__sys_NodeManager\uff09\u7684add\u63a5\u53e3 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/nodeManager/nodeManager.cpp.abi.json \\ --config config.json \\ --func add \\ --param '{\"name\":\"node-${NODE_ID}\",\"type\":${NODE_TYPE},\"publicKey\":\"${PUBKEY}\",\"desc\":\"desc\",\"externalIP\":\"${IP}\",\"internalIP\":\"${IP}\",\"rpcPort\":${RPC_PORT},\"p2pPort\":${P2P_PORT},\"root\":${IS_ROOT},\"owner\":\"0x${account}\",\"status\":1}' \u53c2\u6570\u4fe1\u606f\u4e3a\u4e00\u4e2ajson\u5b57\u7b26\u4e32\uff0c\u7528\u6237\u5e94\u8be5\u586b\u5145\u5bf9\u5e94\u7684\u5b57\u6bb5\uff0c\u5982\u4e0b\u4e3a\u4e00\u4e2a\u8282\u70b9\u5b8c\u6574\u7684\u4fe1\u606f { \"name\":\"node's name\", \"type\":0, \"publicKey\":\"71bb2aa47f4ddeccf80190bf98a80136ab52d6c8e2c4d54a11e690d4dffd9578f8c0ed614039b7ee06b55c7b96fdfe9099efa5dd12c6b1115f1c4817a093c1c7\", \"desc\":\"node description\", \"externalIP\":\"208.120.201.12\", \"internalIP\":\"127.0.0.1\", \"rpcPort\":6790, \"p2pPort\":16790, \"root\":false, \"owner\":\"0xae7236d1d1788612101c9ee6b25f71925db3bf0d\", \"status\":1 }","title":"3.1 \u6dfb\u52a0\u89c2\u5bdf\u8005\u8282\u70b9"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#32","text":"# 2. \u5c06\u8282\u70b9\u5347\u7ea7\u4e3a\u5171\u8bc6\u8282\u70b9\uff0c\u5171\u8bc6\u8282\u70b9\u5373\u540c\u6b65\u6570\u636e\u4e5f\u53c2\u4e0e\u5171\u8bc6 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/nodeManager/nodeManager.cpp.abi.json \\ --config config.json \\ --func update \\ --param \"node name\" --param '{\"type\":1}'","title":"3.2 \u5c06\u8282\u70b9\u5347\u7ea7\u4e3a\u5171\u8bc6\u8282\u70b9"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#33","text":"# 3. \u67e5\u8be2\u6240\u6709\u8282\u70b9\u4fe1\u606f ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/nodeManager/nodeManager.cpp.abi.json \\ --config config.json \\ --func getAllNodes","title":"3.3 \u67e5\u8be2\u6240\u6709\u8282\u70b9\u4fe1\u606f"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#4","text":"","title":"4. \u5408\u7ea6\u90e8\u7f72\u53ca\u8c03\u7528\u6743\u9650"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#41","text":"\u5728\u94fe\u4e0a\u90e8\u7f72\u5408\u7ea6\u7684\u6743\u9650\u68c0\u67e5\u9ed8\u8ba4\u662f\u4e0d\u5f00\u542f\u7684\uff0c\u9700\u8981\u7ba1\u7406\u5458\u8c03\u7528\u53c2\u6570\u7ba1\u7406\u5408\u7ea6\u5c06\u6b64\u529f\u80fd\u5f00\u542f\u624d\u53ef\u4ee5\u68c0\u67e5\u90e8\u7f72\u5408\u7ea6\u7684\u6743\u9650\u3002 # 1. \u542f\u7528\u5408\u7ea6\u90e8\u7f72\u7684\u6743\u9650\u68c0\u67e5 # \u53c2\u6570\uff1a 0\uff0c\u9ed8\u8ba4\u503c\uff0c\u4e0d\u68c0\u67e5\u5408\u7ea6\u90e8\u7f72\u6743\u9650\uff1b 1\uff0c \u68c0\u67e5\u5408\u7ea6\u90e8\u7f72\u6743\u9650 ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/paramManager/paramManager.cpp.abi.json \\ --config config.json \\ --func setCheckContractDeployPermission \\ --param 1 # \u67e5\u8be2\u5408\u7ea6\u90e8\u7f72\u6743\u9650\u68c0\u67e5\u662f\u5426\u5f00\u542f ./ctool invoke \\ --addr 0xae7236d1d1788612101c9ee6b25f71925db3bf0d \\ --abi systemContract/paramManager/paramManager.cpp.abi.json \\ --config config.json \\ --func getCheckContractDeployPermission \\ \u5982\u4e0b\u51e0\u79cd\u89d2\u8272\u624d\u53ef\u4ee5\u90e8\u7f72\u5408\u7ea6\uff0c\u4e0d\u5177\u5907\u5982\u4e0b\u89d2\u8272\u7684\u7528\u6237\u5c06\u4e0d\u80fd\u5728\u94fe\u4e0a\u90e8\u7f72\u5408\u7ea6\u3002 chainCreator chainAdmin contractAdmin contractDeployer \u5047\u5982\u67d0\u4e2a\u8d26\u6237\u9700\u8981\u90e8\u7f72\u5408\u7ea6\uff0c\u5219\u8be5\u8d26\u6237\u9700\u8981\u7531\u5177\u5907\u6743\u9650\u7684\u8d26\u6237\u5c06\u5176\u8bbe\u7f6e\u4e3a contractDeployer","title":"4.1 \u5408\u7ea6\u90e8\u7f72\u6743\u9650"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#42","text":"\u5728PlatONE\u4e2d\u5408\u7ea6\u7684\u8c03\u7528\u6743\u9650\u7531\u5408\u7ea6\u9632\u706b\u5899\u8bbe\u7f6e\uff0c\u53ea\u6709\u5408\u7ea6\u7684\u521b\u5efa\u8005\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5bf9\u5e94\u5408\u7ea6\u7684\u9632\u706b\u5899\u3002 \u5408\u7ea6\u9632\u706b\u5899\u5177\u5907\u5408\u7ea6\u63a5\u53e3\u7ea7\u522b\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u5217\u8868\u5b9e\u73b0\uff1a ACCEPT: \u53ef\u4ee5\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u767d\u540d\u5355 REJECT: \u62d2\u7edd\u8bbf\u95ee\u76f8\u5e94\u63a5\u53e3\u7684\u5730\u5740\u5217\u8868\uff0c\u76f8\u5f53\u4e8e\u9ed1\u540d\u5355 # \u6253\u5f00\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899 ctool fwInvoke --addr 0x22 --func '__sys_FwOpen()' --config ./config.json # \u5173\u95ed\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899 ctool fwInvoke --addr 0x22 --func '__sys_FwClose()' --config ./config.json # \u8bbe\u5b9a\u6307\u5b9a\u5408\u7ea6\u7684\u767d/\u9ed1\u540d\u5355 ctool fwInvoke --addr 0x22 --func '__sys_FwAdd(\"ACCEPT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json ctool fwInvoke --addr 0x22 --func '__sys_FwAdd(\"REJECT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json # \u6e05\u7a7a\u6307\u5b9a\u5408\u7ea6\u7684\u767d/\u9ed1\u540d\u5355 ctool fwInvoke --addr 0x22 --func '__sys_FwClear(\"ACCEPT\")' --config ./config.json ctool fwInvoke --addr 0x22 --func '__sys_FwClear(\"REJECT\")' --config ./config.json # \u5220\u9664\u6307\u5b9a\u5408\u7ea6\u7684\u767d/\u9ed1\u540d\u5355\u91cc\u7684\u6307\u5b9a\u5730\u5740 ctool fwInvoke --addr 0x22 --func '__sys_FwDel(\"ACCEPT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json ctool fwInvoke --addr 0x22 --func '__sys_FwDel(\"REJECT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json # \u91cd\u7f6e\u6307\u5b9a\u5408\u7ea6\u7684\u767d/\u9ed1\u540d\u5355 ctool fwInvoke --addr 0x22 --func '__sys_FwSet(\"ACCEPT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json ctool fwInvoke --addr 0x22 --func '__sys_FwSet(\"REJECT\", \"0x33:*|*:funcName2|0x55:funcName3\")' --config ./config.json # \u67e5\u8be2\u6307\u5b9a\u5408\u7ea6\u7684\u9632\u706b\u5899\u72b6\u6001 ctool fwInvoke --addr 0x22 --func '__sys_FwStatus()' --config ./config.json","title":"4.2 \u5408\u7ea6\u8c03\u7528\u6743\u9650 | \u5408\u7ea6\u9632\u706b\u5899"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#a","text":"","title":"\u9644\u5f55A\uff1a \u7cfb\u7edf\u5408\u7ea6\u63a5\u53e3\u53ca\u65b9\u6cd5"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#a-1-cnsmanager","text":"int cnsRegisterFromInit(const char * name,const char * version) int cnsRegister(const char * name,const char * version,const char * address) int cnsUnregister(char * name,char * version) const char * getContractAddress(char * name,char * version) char * getRegisteredContracts(int pageNum,int pageSize) char * getRegisteredContractsByAddress(char * origin,int pageNum,int pageSize) int ifRegisteredByName(char * name) int ifRegisteredByAddress(char * address) char * getContractInfoByAddress(char * address) char * getHistoryContractsByName(char * name)","title":"A-1. cnsManager"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#a-2-parammanager","text":"int setGasContractName(const char * contractName) const char * getGasContractName() int setCBFTTimeParam(int produceDuration,int blockInterval) const char * getCBFTTimeParam() int setIsProduceEmptyBlock(int isProduceEmptyBlock) int getIsProduceEmptyBlock() int setTxGasLimit(unsigned long long txGasLimit) unsigned long long getTxGasLimit() int setBlockGasLimit(unsigned long long blockGasLimit) unsigned long long getBlockGasLimit() int setAllowAnyAccountDeployContract(int isAllowAnyAccountDeployContract) int setCheckContractDeployPermission(int checkPermission) int getCheckContractDeployPermission() int getAllowAnyAccountDeployContract() int setIsApproveDeployedContract(int isApproveDeployedContract) int getIsApproveDeployedContract() int setIsTxUseGas(int isTxUseGas) int getIsTxUseGas()","title":"A-2. paramManager"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#a-3-usermanager","text":"int addUser(const char * userJson) int enable(const char * userAddr) int disable(const char * userAddr) int delUser(const char * userAddr) int update(const char * userAddr,const char * updateJson) const char * getAccountByAddress(const char * address) const char * getAccountByName(const char * name) int isValidUser(const char * userAddr)","title":"A-3. userManager"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#a-4-userregister","text":"int registerUser(const char * registJson) int approve(const char * userAddress,int auditStatus) const char * getAccountByAddress(const char * address) const char * getAccountByUsername(const char * UserName) const char * getAccountsByStatus(int pageNum,int pageSize,int accountStatus) int getStatusByAddress(const char * address)","title":"A-4. userRegister"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#a-5-rolemanager","text":"int addRole(const char * name,const char * address,const char * roles) int removeRole(const char * address,const char * roles) const char * getRolesByAddress(const char * address) const char * getRolesByName(const char * name) const char * getAccountsByRole(const char * role) int hasRole(const char * addr,const char * role)","title":"A-5. roleManager"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#a-6-roleregister","text":"int registerRole(const char * roles) int approveRole(const char * address,int status) const char * getRegisterInfoByAddress(const char * address) const char * getRegisterInfoByName(const char * name) const char * getRegisterInfosByStatus(int status,int pageNum,int pageSize)","title":"A-6. roleRegister"},{"location":"%E6%95%99%E7%A8%8B/PlatONE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%95%99%E7%A8%8B/#a-7-nodemanager","text":"int add(const char * nodeJsonStr) const char * getAllNodes() int validJoinNode(const char * publicKey) int nodesNum(const char * nodeJsonStr) const char * getNodes(const char * nodeJsonStr) int update(const char * name,const char * nodeJsonStr) const char * getEnodeNodes(int deleted) const char * getNormalEnodeNodes() const char * getDeletedEnodeNodes()","title":"A-7. nodeManager"},{"location":"%E6%95%99%E7%A8%8B/%E5%8C%BA%E5%9D%97%E6%95%B0%E6%8D%AE%20export%20import%20%E6%BC%94%E7%A4%BA/","text":"\u533a\u5757\u6570\u636e export import \u6f14\u793a \u533a\u5757\u6570\u636e export import \u6f14\u793a 1. \u8d77\u56db\u4e2a\u8282\u70b9\u7684\u94fe 2. \u505c\u8282\u70b9\uff0c\u5e76export\u6307\u5b9a\u533a\u5757\u7684\u6570\u636e 3. \u6e05\u6389\u56db\u4e2a\u8282\u70b9\u7684\u6570\u636e\u76ee\u5f55\uff0c\u5e76\u6839\u636e\u5df2\u6709\u7684genesis\u521d\u59cb\u5316\u94fe 4. \u5bfc\u5165\u7b2c\u4e8c\u6b65\u751f\u6210\u7684\u533a\u5757\u6570\u636e 1. \u8d77\u56db\u4e2a\u8282\u70b9\u7684\u94fe ./platonectl.sh four # \u6b64\u65f6\u7ecf\u8fc7\u90e8\u7f72\u4e00\u7cfb\u5217\u7cfb\u7edf\u5408\u7ea6\uff0c\u533a\u5757\u9ad8\u5ea6\u5df2\u7ecf\u5230\u8fbe15 2. \u505c\u8282\u70b9\uff0c\u5e76export\u6307\u5b9a\u533a\u5757\u7684\u6570\u636e # \u505c\u6389\u8fdb\u7a0b ./platonectl.sh stop -a # export\u6307\u5b9a\u533a\u5757\u6570\u636e\uff0c\u6bd4\u5982\u6b64\u5904\u5bfc\u51fa0~14\u533a\u5757\u6570\u636e cd ../bin ./platone export --datadir ../data/node-0/ block-0-14.rlp 0 14 3. \u6e05\u6389\u56db\u4e2a\u8282\u70b9\u7684\u6570\u636e\u76ee\u5f55\uff0c\u5e76\u6839\u636e\u5df2\u6709\u7684genesis\u521d\u59cb\u5316\u94fe rm -rf ../data/node-*/platone/* ./platone init --datadir ../data/node-0 ../conf/genesis.json ./platone init --datadir ../data/node-1 ../conf/genesis.json ./platone init --datadir ../data/node-2 ../conf/genesis.json ./platone init --datadir ../data/node-3 ../conf/genesis.json 4. \u5bfc\u5165\u7b2c\u4e8c\u6b65\u751f\u6210\u7684\u533a\u5757\u6570\u636e # \u7ed9\u8282\u70b90\u5bfc\u5165\u6570\u636e ./platone import --datadir ../data/node-0 block-0-14.rlp # \u7136\u540e\u542f\u52a8\u8282\u70b90 cd ../scripts ./platonectl.sh start -n 0 # \u6b64\u65f6\u89c2\u5bdflog\u4f1a\u53d1\u73b0\u8282\u70b90\u7684\u533a\u5757\u9ad8\u5ea6\u5df2\u7ecf\u6210\u4e3a14\u4e86\uff0c\u5176\u4ed6\u8282\u70b9\u53ef\u4ee5\u542f\u52a8\uff0c\u7136\u540e\u8ddf\u8282\u70b90\u8fde\u63a5\uff0c\u540c\u6b65\u5176\u6570\u636e\uff0c\u6700\u7ec8\u6574\u4e2a\u533a\u5757\u94fe\u9ad8\u5ea6\u90fd\u662f14\u4e86","title":"\u533a\u5757\u6570\u636e export import \u6f14\u793a"},{"location":"%E6%95%99%E7%A8%8B/%E5%8C%BA%E5%9D%97%E6%95%B0%E6%8D%AE%20export%20import%20%E6%BC%94%E7%A4%BA/#export-import","text":"\u533a\u5757\u6570\u636e export import \u6f14\u793a 1. \u8d77\u56db\u4e2a\u8282\u70b9\u7684\u94fe 2. \u505c\u8282\u70b9\uff0c\u5e76export\u6307\u5b9a\u533a\u5757\u7684\u6570\u636e 3. \u6e05\u6389\u56db\u4e2a\u8282\u70b9\u7684\u6570\u636e\u76ee\u5f55\uff0c\u5e76\u6839\u636e\u5df2\u6709\u7684genesis\u521d\u59cb\u5316\u94fe 4. \u5bfc\u5165\u7b2c\u4e8c\u6b65\u751f\u6210\u7684\u533a\u5757\u6570\u636e","title":"\u533a\u5757\u6570\u636e export import \u6f14\u793a"},{"location":"%E6%95%99%E7%A8%8B/%E5%8C%BA%E5%9D%97%E6%95%B0%E6%8D%AE%20export%20import%20%E6%BC%94%E7%A4%BA/#1","text":"./platonectl.sh four # \u6b64\u65f6\u7ecf\u8fc7\u90e8\u7f72\u4e00\u7cfb\u5217\u7cfb\u7edf\u5408\u7ea6\uff0c\u533a\u5757\u9ad8\u5ea6\u5df2\u7ecf\u5230\u8fbe15","title":"1. \u8d77\u56db\u4e2a\u8282\u70b9\u7684\u94fe"},{"location":"%E6%95%99%E7%A8%8B/%E5%8C%BA%E5%9D%97%E6%95%B0%E6%8D%AE%20export%20import%20%E6%BC%94%E7%A4%BA/#2-export","text":"# \u505c\u6389\u8fdb\u7a0b ./platonectl.sh stop -a # export\u6307\u5b9a\u533a\u5757\u6570\u636e\uff0c\u6bd4\u5982\u6b64\u5904\u5bfc\u51fa0~14\u533a\u5757\u6570\u636e cd ../bin ./platone export --datadir ../data/node-0/ block-0-14.rlp 0 14","title":"2. \u505c\u8282\u70b9\uff0c\u5e76export\u6307\u5b9a\u533a\u5757\u7684\u6570\u636e"},{"location":"%E6%95%99%E7%A8%8B/%E5%8C%BA%E5%9D%97%E6%95%B0%E6%8D%AE%20export%20import%20%E6%BC%94%E7%A4%BA/#3-genesis","text":"rm -rf ../data/node-*/platone/* ./platone init --datadir ../data/node-0 ../conf/genesis.json ./platone init --datadir ../data/node-1 ../conf/genesis.json ./platone init --datadir ../data/node-2 ../conf/genesis.json ./platone init --datadir ../data/node-3 ../conf/genesis.json","title":"3. \u6e05\u6389\u56db\u4e2a\u8282\u70b9\u7684\u6570\u636e\u76ee\u5f55\uff0c\u5e76\u6839\u636e\u5df2\u6709\u7684genesis\u521d\u59cb\u5316\u94fe"},{"location":"%E6%95%99%E7%A8%8B/%E5%8C%BA%E5%9D%97%E6%95%B0%E6%8D%AE%20export%20import%20%E6%BC%94%E7%A4%BA/#4","text":"# \u7ed9\u8282\u70b90\u5bfc\u5165\u6570\u636e ./platone import --datadir ../data/node-0 block-0-14.rlp # \u7136\u540e\u542f\u52a8\u8282\u70b90 cd ../scripts ./platonectl.sh start -n 0 # \u6b64\u65f6\u89c2\u5bdflog\u4f1a\u53d1\u73b0\u8282\u70b90\u7684\u533a\u5757\u9ad8\u5ea6\u5df2\u7ecf\u6210\u4e3a14\u4e86\uff0c\u5176\u4ed6\u8282\u70b9\u53ef\u4ee5\u542f\u52a8\uff0c\u7136\u540e\u8ddf\u8282\u70b90\u8fde\u63a5\uff0c\u540c\u6b65\u5176\u6570\u636e\uff0c\u6700\u7ec8\u6574\u4e2a\u533a\u5757\u94fe\u9ad8\u5ea6\u90fd\u662f14\u4e86","title":"4. \u5bfc\u5165\u7b2c\u4e8c\u6b65\u751f\u6210\u7684\u533a\u5757\u6570\u636e"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/","text":"\u5408\u7ea6\u90e8\u7f72\u8c03\u7528\u6f14\u793a \u672c\u6587\u65e8\u5728\u8ba9\u7528\u6237\u53ef\u4ee5\u5feb\u901f\u4fbf\u6377\u5730\u642d\u5efaPlatONE\u533a\u5757\u94fe\u4ee5\u4f53\u9a8c\u5176\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u5982\u4e0b\u6b65\u9aa4\u5feb\u901f\u642d\u5efa\u4e00\u6761\u533a\u5757\u94fe\uff0c\u5e76\u5728\u94fe\u4e0a\u90e8\u7f72\u5408\u7ea6\u3001\u8c03\u7528\u5408\u7ea6\u3002 1. \u642d\u5efa\u533a\u5757\u94fe 1.1 \u4f9d\u8d56\u73af\u5883 g++ 7.3+ cmake 3.10+ go 1.11.4+ 1.2 PlatONE\u6e90\u7801\u4e0b\u8f7d\u53ca\u7f16\u8bd1 \u9996\u5148\u7528\u6237\u9700\u8981\u4ecegithub\u4e0b\u8f7dPlatONE\u6e90\u7801\u5e76\u7f16\u8bd1 # \u83b7\u53d6PlatONE\u6e90\u7801 git clone --recursive https://github.com/PlatONEnterprise/PlatONE-Go.git export WORKSPACE=${PWD}/PlatONE-Go/release/linux # \u7f16\u8bd1PlatONE cd PlatONE-Go; make all; cd .. \u5982\u679c\u7f16\u8bd1\u5931\u8d25. \u8bf7\u786e\u4fdd\u4f60\u5b89\u88c5\u4e86 1.1\u4e2d\u5168\u90e8\u8f6f\u4ef6. \u7136\u540e\u91cd\u65b0\u5c1d\u8bd5. 1.3 \u5feb\u901f\u642d\u94fe PlatONE\u63d0\u4f9b\u4e86\u4fbf\u6377\u7684\u642d\u94fe\u811a\u672c\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u811a\u672c platonectl.sh \u5feb\u901f\u5728\u672c\u673a\u642d\u5efa\u51fa\u5355\u8282\u70b9\u6216\u56db\u8282\u70b9\u7684\u533a\u5757\u94fe\u3002 \u5728\u672c\u673a\u642d\u5efa\u5355\u8282\u70b9\u533a\u5757\u94fe cd ${WORKSPACE}/scripts && ./platonectl.sh one \u5728\u672c\u673a\u642d\u5efa\u56db\u8282\u70b9\u533a\u5757\u94fe cd ${WORKSPACE}/scripts && ./platonectl.sh four \u642d\u94fe\u6210\u529f\u540e\uff0c\u4f1a\u5728 ${WORKSPACE}/data \u76ee\u5f55\u4e0b\u751f\u6210\u8282\u70b9\u7684\u6570\u636e\u6587\u4ef6\uff0c\u53ef\u4ee5\u89c2\u5bdf\u65e5\u5fd7\u6587\u4ef6\u4ee5\u67e5\u770b\u8282\u70b9\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u6bd4\u5982node-0\u8282\u70b9\u65e5\u5fd7\u4f4d\u4e8e\u76ee\u5f55 ${WORKSPACE}/data/node-0/logs/platone_log/ \u4e2d\u3002 2. PlatONE\u8d26\u6237 2.1 \u521b\u5efaPlatONE\u8d26\u6237 \u5728\u53d1\u5e03\u4ea4\u6613\u4e4b\u524d\uff0c\u9996\u5148\u7528\u6237\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u8d26\u6237\u3002 cd ${WORKSPACE}/../../cmd/SysContracts/ ./script/create_accout.sh --ip 127.0.0.1 --rpc_port 6791 \u8be5\u547d\u4ee4\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8d26\u6237\uff0c\u521b\u5efa\u65f6\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u8d26\u6237\u5bc6\u7801\uff0c\u65b9\u4fbf\u540e\u7eed\u89e3\u9501\u3002 \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff0c\u8d26\u6237\u5730\u5740\u8bb0\u5f55\u5728 ./config.json \u6587\u4ef6\u4e2d\uff1a nodeid: 127.0.0.1 rpc_port: 6791 ########################################### #### Create an account #### ########################################### Input account passphrase. passphrase: your_phrase --output{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\"} --output New account: 0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c {\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":true} 127.0.0.1:6791 Create config.json for contract-deploy { \"url\":\"http://127.0.0.1:6791\"\uff0c \"gas\":\"0x0\"\uff0c \"gasPrice\":\"0x0\"\uff0c \"from\":\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\" } 2.2 \u89e3\u9501\u8d26\u6237 \u9996\u6b21\u521b\u5efa\u8d26\u6237\u6216\u8005\u662f\u957f\u65f6\u95f4\u6ca1\u7528\u4f7f\u7528\u8d26\u6237\u53d1\u9001\u8fc7\u4ea4\u6613\uff0c\u8d26\u6237\u4f1a\u88ab\u9501\u5b9a\uff0c\u4e0d\u80fd\u53d1\u9001\u4ea4\u6613\u3002\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff0c\u91cd\u65b0\u4e3a\u8d26\u6237\u89e3\u9501\u3002 cd ${WORKSPACE}/../../cmd/SysContracts/ ./script/unlock_account.sh \\ --account 0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c \\ --phrase \"your_phrase\" \\ --ip 127.0.0.1 \\ --rpc_port 6791 3. \u90e8\u7f72\u8c03\u7528\u5408\u7ea6 3.1 \u521b\u5efa\u5e76\u7f16\u8bd1\u7528\u6237\u5408\u7ea6 \u9996\u5148\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u9ed8\u8ba4\u5408\u7ea6\uff0c\u8be5\u5408\u7ea6\u5305\u542b\u4e86\u4e24\u4e2a\u57fa\u672c\u65b9\u6cd5 setName \u548c getName \uff0c\u7528\u6237\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u7f16\u5199\u5408\u7ea6\u903b\u8f91\u3002 cd ${WORKSPACE}/../../cmd/SysContracts/ # \u521b\u5efa\u9ed8\u8ba4\u5408\u7ea6 ./script/autoprojectForApp.sh . my_contract # \u7f16\u8bd1\u5408\u7ea6 ./script/autoprojectForApp.sh . \u751f\u6210\u7684\u5408\u7ea6\u6e90\u7801\u6587\u4ef6\u4f4d\u4e8e ${WORKSPACE}/../../cmd/SysContracts/appContract/my_contract/my_contract.cpp \u3002 my_contract.cpp\uff1a\uff08\u65b0\u589e\uff09 #include <stdlib.h> #include <string.h> #include <string> #include <bcwasm/bcwasm.hpp> namespace demo { class my_contract : public bcwasm::Contract { public: my_contract(){} /// parent class implementation: bcwasm:: virtual function of Contract /// this function is called only once when the contract is first released void init() { bcwasm::println(\"init success...\"); } /// define event. BCWASM_EVENT(Notify, uint64_t, const char *) public: void setName(const char *msg) { // define state bcwasm::setState(\"NAME_KEY\", std::string(msg)); // return event BCWASM_EMIT_EVENT(Notify, 0, \"Set Name.\"); } const char* getName() const { std::string value; bcwasm::getState(\"NAME_KEY\", value); // read contract data and return return value.c_str(); } }; } // the function below will generate an ABI file for external calls BCWASM_ABI(demo::my_contract, invokeNotify) BCWASM_ABI(demo::my_contract, getName) 3.2 \u90e8\u7f72\u5408\u7ea6 PlatONE\u63d0\u4f9b\u4e86\u5408\u7ea6\u5de5\u5177 ctool \uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u5de5\u5177\u6765\u90e8\u7f72\u667a\u80fd\u5408\u7ea6\u53ca\u53d1\u9001\u4ea4\u6613\u3002 cd ${WORKSPACE}/../../cmd/SysContracts/build # ctool\u662f\u7528\u6765\u90e8\u7f72\u5408\u7ea6\u53ca\u53d1\u9001\u4ea4\u6613\u7684\u5de5\u5177 cp ${WORKSPACE}/bin/ctool . # \u90e8\u7f72\u5408\u7ea6 ./ctool deploy --abi appContract/my_contract/my_contract.cpp.abi.json --code appContract/my_contract/my_contract.wasm --config ../config.json \u7ed3\u679c: trasaction hash: 0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99 contract address: 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 3.3 \u8c03\u7528\u5408\u7ea6 \u8c03\u7528\u5408\u7ea6\u7684 setName \u65b9\u6cd5 ./ctool invoke --addr 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 --abi appContract/my_contract/my_contract.cpp.abi.json --config ../config.json --func \"setName\" --param \"wxbc\" request json data\uff1a[{\"from\":\"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c\"to\":\"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c\"gas\":\"0x0\"\uff0c\"gasPrice\":\"0x0\"\uff0c\"value\":\"\"\uff0c\"data\":\"0xdb8800000000000000028c696e766f6b654e6f746966798477786263\"\uff0c\"txType\":2}] response json\uff1a{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0xeb3680c65b393952a07ec590cef7b19fc87877a9fbb70c8e16797a97ed4cfaeb\"} \u8c03\u7528\u5408\u7ea6\u7684 getName \u65b9\u6cd5\uff1a ./ctool invoke --addr 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 --abi appContract/my_contract/my_contract.cpp.abi.json --config ../config.json --func getName request json data\uff1a[{\"from\":\"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c\"to\":\"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c\"gas\":\"0x0\"\uff0c\"gasPrice\":\"0x0\"\uff0c\"value\":\"\"\uff0c\"data\":\"0xd1880000000000000002876765744e616d65\"\uff0c\"txType\":2}\uff0c\"latest\"] response json\uff1a{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000047778626300000000000000000000000000000000000000000000000000000000\"} result: wxbc 4. \u4ea4\u6613\u67e5\u8be2 4.1 \u901a\u8fc7\u63a7\u5236\u53f0\u8fde\u63a5\u5230\u8282\u70b9 \u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8fdb\u5165PlatONE\u63a7\u5236\u53f0\u4e0e\u94fe\u8fdb\u884c\u4ea4\u4e92\u3002 cd ${WORKSPACE}/bin ./platone attach http://127.0.0.1:6791 \u547d\u4ee4\u6267\u884c\u7684\u7ed3\u679c\u5982\u4e0b\uff1a Welcome to the PlatONE JavaScript console! instance: PlatONEnetwork/platone/v0.2.0-stable-1b13ff73/linux-amd64/go1.12.4 coinbase: 0x938c231429f5ab34244618fe0dc7380e319b470e at block: 1557 (Tue\uff0c18 Jun 2019 16:29:12 CST) datadir: /home/user/PlatONE-Workspace/chain/PlatONE_linux/data/node-1 modules: admin:1.0 eth:1.0 net:1.0 personal:1.0 rpc:1.0 web3:1.0 > 4.2 \u67e5\u8be2\u4ea4\u6613receipt > eth.getTransactionReceipt(\"0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99\") \u7ed3\u679c\u5982\u4e0b\uff1a { blockHash: \"0x3f1e326f4b122efb26e9da417daff97dbb403c714d3324e8020ddce04b88617a\"\uff0c blockNumber: 236\uff0c contractAddress: \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c cumulativeGasUsed: 1996535\uff0c from: \"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c gasUsed: 1996535\uff0c logs: []\uff0c logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\uff0c status: \"0x1\"\uff0c to: null\uff0c transactionHash: \"0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99\"\uff0c transactionIndex: 0 } 5. \u505c\u6b62\u8282\u70b9\u5e76\u6e05\u9664\u6570\u636e cd ${WORKSPACE}/scripts ./platonectl.sh stop -n 0 ./platonectl.sh clear -n 0","title":"\u5408\u7ea6\u90e8\u7f72\u8c03\u7528\u6f14\u793a"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#_1","text":"\u672c\u6587\u65e8\u5728\u8ba9\u7528\u6237\u53ef\u4ee5\u5feb\u901f\u4fbf\u6377\u5730\u642d\u5efaPlatONE\u533a\u5757\u94fe\u4ee5\u4f53\u9a8c\u5176\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u5982\u4e0b\u6b65\u9aa4\u5feb\u901f\u642d\u5efa\u4e00\u6761\u533a\u5757\u94fe\uff0c\u5e76\u5728\u94fe\u4e0a\u90e8\u7f72\u5408\u7ea6\u3001\u8c03\u7528\u5408\u7ea6\u3002","title":"\u5408\u7ea6\u90e8\u7f72\u8c03\u7528\u6f14\u793a"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#1","text":"","title":"1. \u642d\u5efa\u533a\u5757\u94fe"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#11","text":"g++ 7.3+ cmake 3.10+ go 1.11.4+","title":"1.1 \u4f9d\u8d56\u73af\u5883"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#12-platone","text":"\u9996\u5148\u7528\u6237\u9700\u8981\u4ecegithub\u4e0b\u8f7dPlatONE\u6e90\u7801\u5e76\u7f16\u8bd1 # \u83b7\u53d6PlatONE\u6e90\u7801 git clone --recursive https://github.com/PlatONEnterprise/PlatONE-Go.git export WORKSPACE=${PWD}/PlatONE-Go/release/linux # \u7f16\u8bd1PlatONE cd PlatONE-Go; make all; cd .. \u5982\u679c\u7f16\u8bd1\u5931\u8d25. \u8bf7\u786e\u4fdd\u4f60\u5b89\u88c5\u4e86 1.1\u4e2d\u5168\u90e8\u8f6f\u4ef6. \u7136\u540e\u91cd\u65b0\u5c1d\u8bd5.","title":"1.2 PlatONE\u6e90\u7801\u4e0b\u8f7d\u53ca\u7f16\u8bd1"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#13","text":"PlatONE\u63d0\u4f9b\u4e86\u4fbf\u6377\u7684\u642d\u94fe\u811a\u672c\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u811a\u672c platonectl.sh \u5feb\u901f\u5728\u672c\u673a\u642d\u5efa\u51fa\u5355\u8282\u70b9\u6216\u56db\u8282\u70b9\u7684\u533a\u5757\u94fe\u3002 \u5728\u672c\u673a\u642d\u5efa\u5355\u8282\u70b9\u533a\u5757\u94fe cd ${WORKSPACE}/scripts && ./platonectl.sh one \u5728\u672c\u673a\u642d\u5efa\u56db\u8282\u70b9\u533a\u5757\u94fe cd ${WORKSPACE}/scripts && ./platonectl.sh four \u642d\u94fe\u6210\u529f\u540e\uff0c\u4f1a\u5728 ${WORKSPACE}/data \u76ee\u5f55\u4e0b\u751f\u6210\u8282\u70b9\u7684\u6570\u636e\u6587\u4ef6\uff0c\u53ef\u4ee5\u89c2\u5bdf\u65e5\u5fd7\u6587\u4ef6\u4ee5\u67e5\u770b\u8282\u70b9\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u6bd4\u5982node-0\u8282\u70b9\u65e5\u5fd7\u4f4d\u4e8e\u76ee\u5f55 ${WORKSPACE}/data/node-0/logs/platone_log/ \u4e2d\u3002","title":"1.3 \u5feb\u901f\u642d\u94fe"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#2-platone","text":"","title":"2. PlatONE\u8d26\u6237"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#21-platone","text":"\u5728\u53d1\u5e03\u4ea4\u6613\u4e4b\u524d\uff0c\u9996\u5148\u7528\u6237\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u8d26\u6237\u3002 cd ${WORKSPACE}/../../cmd/SysContracts/ ./script/create_accout.sh --ip 127.0.0.1 --rpc_port 6791 \u8be5\u547d\u4ee4\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8d26\u6237\uff0c\u521b\u5efa\u65f6\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u8d26\u6237\u5bc6\u7801\uff0c\u65b9\u4fbf\u540e\u7eed\u89e3\u9501\u3002 \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff0c\u8d26\u6237\u5730\u5740\u8bb0\u5f55\u5728 ./config.json \u6587\u4ef6\u4e2d\uff1a nodeid: 127.0.0.1 rpc_port: 6791 ########################################### #### Create an account #### ########################################### Input account passphrase. passphrase: your_phrase --output{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\"} --output New account: 0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c {\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":true} 127.0.0.1:6791 Create config.json for contract-deploy { \"url\":\"http://127.0.0.1:6791\"\uff0c \"gas\":\"0x0\"\uff0c \"gasPrice\":\"0x0\"\uff0c \"from\":\"0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c\" }","title":"2.1 \u521b\u5efaPlatONE\u8d26\u6237"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#22","text":"\u9996\u6b21\u521b\u5efa\u8d26\u6237\u6216\u8005\u662f\u957f\u65f6\u95f4\u6ca1\u7528\u4f7f\u7528\u8d26\u6237\u53d1\u9001\u8fc7\u4ea4\u6613\uff0c\u8d26\u6237\u4f1a\u88ab\u9501\u5b9a\uff0c\u4e0d\u80fd\u53d1\u9001\u4ea4\u6613\u3002\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff0c\u91cd\u65b0\u4e3a\u8d26\u6237\u89e3\u9501\u3002 cd ${WORKSPACE}/../../cmd/SysContracts/ ./script/unlock_account.sh \\ --account 0x08e7988e60ab5aa49d1f7aa9435ac91b9fcf772c \\ --phrase \"your_phrase\" \\ --ip 127.0.0.1 \\ --rpc_port 6791","title":"2.2 \u89e3\u9501\u8d26\u6237"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#3","text":"","title":"3. \u90e8\u7f72\u8c03\u7528\u5408\u7ea6"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#31","text":"\u9996\u5148\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u9ed8\u8ba4\u5408\u7ea6\uff0c\u8be5\u5408\u7ea6\u5305\u542b\u4e86\u4e24\u4e2a\u57fa\u672c\u65b9\u6cd5 setName \u548c getName \uff0c\u7528\u6237\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u7f16\u5199\u5408\u7ea6\u903b\u8f91\u3002 cd ${WORKSPACE}/../../cmd/SysContracts/ # \u521b\u5efa\u9ed8\u8ba4\u5408\u7ea6 ./script/autoprojectForApp.sh . my_contract # \u7f16\u8bd1\u5408\u7ea6 ./script/autoprojectForApp.sh . \u751f\u6210\u7684\u5408\u7ea6\u6e90\u7801\u6587\u4ef6\u4f4d\u4e8e ${WORKSPACE}/../../cmd/SysContracts/appContract/my_contract/my_contract.cpp \u3002 my_contract.cpp\uff1a\uff08\u65b0\u589e\uff09 #include <stdlib.h> #include <string.h> #include <string> #include <bcwasm/bcwasm.hpp> namespace demo { class my_contract : public bcwasm::Contract { public: my_contract(){} /// parent class implementation: bcwasm:: virtual function of Contract /// this function is called only once when the contract is first released void init() { bcwasm::println(\"init success...\"); } /// define event. BCWASM_EVENT(Notify, uint64_t, const char *) public: void setName(const char *msg) { // define state bcwasm::setState(\"NAME_KEY\", std::string(msg)); // return event BCWASM_EMIT_EVENT(Notify, 0, \"Set Name.\"); } const char* getName() const { std::string value; bcwasm::getState(\"NAME_KEY\", value); // read contract data and return return value.c_str(); } }; } // the function below will generate an ABI file for external calls BCWASM_ABI(demo::my_contract, invokeNotify) BCWASM_ABI(demo::my_contract, getName)","title":"3.1 \u521b\u5efa\u5e76\u7f16\u8bd1\u7528\u6237\u5408\u7ea6"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#32","text":"PlatONE\u63d0\u4f9b\u4e86\u5408\u7ea6\u5de5\u5177 ctool \uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u5de5\u5177\u6765\u90e8\u7f72\u667a\u80fd\u5408\u7ea6\u53ca\u53d1\u9001\u4ea4\u6613\u3002 cd ${WORKSPACE}/../../cmd/SysContracts/build # ctool\u662f\u7528\u6765\u90e8\u7f72\u5408\u7ea6\u53ca\u53d1\u9001\u4ea4\u6613\u7684\u5de5\u5177 cp ${WORKSPACE}/bin/ctool . # \u90e8\u7f72\u5408\u7ea6 ./ctool deploy --abi appContract/my_contract/my_contract.cpp.abi.json --code appContract/my_contract/my_contract.wasm --config ../config.json \u7ed3\u679c: trasaction hash: 0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99 contract address: 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206","title":"3.2 \u90e8\u7f72\u5408\u7ea6"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#33","text":"\u8c03\u7528\u5408\u7ea6\u7684 setName \u65b9\u6cd5 ./ctool invoke --addr 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 --abi appContract/my_contract/my_contract.cpp.abi.json --config ../config.json --func \"setName\" --param \"wxbc\" request json data\uff1a[{\"from\":\"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c\"to\":\"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c\"gas\":\"0x0\"\uff0c\"gasPrice\":\"0x0\"\uff0c\"value\":\"\"\uff0c\"data\":\"0xdb8800000000000000028c696e766f6b654e6f746966798477786263\"\uff0c\"txType\":2}] response json\uff1a{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0xeb3680c65b393952a07ec590cef7b19fc87877a9fbb70c8e16797a97ed4cfaeb\"} \u8c03\u7528\u5408\u7ea6\u7684 getName \u65b9\u6cd5\uff1a ./ctool invoke --addr 0x2ee8d0545ebd20f9a992ff54cb0f21a153539206 --abi appContract/my_contract/my_contract.cpp.abi.json --config ../config.json --func getName request json data\uff1a[{\"from\":\"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c\"to\":\"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c\"gas\":\"0x0\"\uff0c\"gasPrice\":\"0x0\"\uff0c\"value\":\"\"\uff0c\"data\":\"0xd1880000000000000002876765744e616d65\"\uff0c\"txType\":2}\uff0c\"latest\"] response json\uff1a{\"jsonrpc\":\"2.0\"\uff0c\"id\":1\uff0c\"result\":\"0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000047778626300000000000000000000000000000000000000000000000000000000\"} result: wxbc","title":"3.3 \u8c03\u7528\u5408\u7ea6"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#4","text":"","title":"4. \u4ea4\u6613\u67e5\u8be2"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#41","text":"\u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8fdb\u5165PlatONE\u63a7\u5236\u53f0\u4e0e\u94fe\u8fdb\u884c\u4ea4\u4e92\u3002 cd ${WORKSPACE}/bin ./platone attach http://127.0.0.1:6791 \u547d\u4ee4\u6267\u884c\u7684\u7ed3\u679c\u5982\u4e0b\uff1a Welcome to the PlatONE JavaScript console! instance: PlatONEnetwork/platone/v0.2.0-stable-1b13ff73/linux-amd64/go1.12.4 coinbase: 0x938c231429f5ab34244618fe0dc7380e319b470e at block: 1557 (Tue\uff0c18 Jun 2019 16:29:12 CST) datadir: /home/user/PlatONE-Workspace/chain/PlatONE_linux/data/node-1 modules: admin:1.0 eth:1.0 net:1.0 personal:1.0 rpc:1.0 web3:1.0 >","title":"4.1 \u901a\u8fc7\u63a7\u5236\u53f0\u8fde\u63a5\u5230\u8282\u70b9"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#42-receipt","text":"> eth.getTransactionReceipt(\"0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99\") \u7ed3\u679c\u5982\u4e0b\uff1a { blockHash: \"0x3f1e326f4b122efb26e9da417daff97dbb403c714d3324e8020ddce04b88617a\"\uff0c blockNumber: 236\uff0c contractAddress: \"0x2ee8d0545ebd20f9a992ff54cb0f21a153539206\"\uff0c cumulativeGasUsed: 1996535\uff0c from: \"0x32ab0a20b589f40c7e3d6ee485a2404bb7269f87\"\uff0c gasUsed: 1996535\uff0c logs: []\uff0c logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\uff0c status: \"0x1\"\uff0c to: null\uff0c transactionHash: \"0x2f3a868d8ceb60804a830e5fc35611e3ae22ccb6ef298830acd84aba41f6dd99\"\uff0c transactionIndex: 0 }","title":"4.2 \u67e5\u8be2\u4ea4\u6613receipt"},{"location":"%E6%95%99%E7%A8%8B/%E5%90%88%E7%BA%A6%E9%83%A8%E7%BD%B2%E8%B0%83%E7%94%A8%E6%BC%94%E7%A4%BA/#5","text":"cd ${WORKSPACE}/scripts ./platonectl.sh stop -n 0 ./platonectl.sh clear -n 0","title":"5. \u505c\u6b62\u8282\u70b9\u5e76\u6e05\u9664\u6570\u636e"},{"location":"%E6%95%99%E7%A8%8B/%E9%9A%90%E7%A7%81%E4%BB%A3%E5%B8%81%E5%90%88%E7%BA%A6%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","text":"\u9690\u79c1\u4ee3\u5e01\u5408\u7ea6\u4f7f\u7528\u6307\u5357 1. \u6982\u8ff0 \u8be5\u4ee3\u5e01\u5408\u7ea6\u5229\u7528\u540c\u6001\u52a0\u5bc6\u548c\u96f6\u77e5\u8bc6\u8bc1\u660e\u6765\u9690\u85cf\u7528\u6237\u5728\u4ee3\u5e01\u5408\u7ea6\u4e2d\u7684\u4f59\u989d\u548c\u4ea4\u6613\u8fc7\u7a0b\u4e2d\u7684\u91d1\u989d\u3002\u4e3a\u4e86\u5728\u4fdd\u8bc1\u4ee3\u5e01\u5408\u7ea6\u4e2d\u8d44\u4ea7\u5b89\u5168\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u8fbe\u5230\u4fdd\u62a4\u7528\u6237\u9690\u79c1\u7684\u9700\u6c42\uff0c\u7528\u6237\u5728\u4f7f\u7528\u9690\u79c1\u4ee3\u5e01\u5408\u7ea6\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u7ebf\u4e0b\u5de5\u5177\u751f\u6210\u540c\u6001\u52a0\u5bc6\u7b97\u6cd5\u7684\u516c\u79c1\u94a5\u548c\u4ea4\u6613\u8fc7\u7a0b\u4e2d\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u3002\u76ee\u524d\uff0c\u5df2\u6709\u540c\u6001\u52a0\u5bc6\u548c\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u7b97\u6cd5\u5e93\u548c\u5de5\u5177\uff0c\u4f9b\u5408\u7ea6\u8c03\u7528\u548c\u7528\u6237\u7ebf\u4e0b\u4f7f\u7528\u3002 2. \u6d41\u7a0b\u63cf\u8ff0 \u6d41\u7a0b\u5305\u62ec\u4ee3\u5e01\u751f\u6210\uff08\u521d\u59cb\u5316\uff09\uff0c\u7528\u6237\u6ce8\u518c\uff08\u5411token\u5408\u7ea6\u6ce8\u518c\u81ea\u5df1\u7684\u516c\u94a5\uff09\uff0c\u4ee3\u5e01\u4ea4\u6613\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u9700\u8981\u7ebf\u4e0b\u548c\u7ebf\u4e0a\uff08\u5408\u7ea6\u8c03\u7528\uff09\u4e24\u4e2a\u90e8\u5206\u914d\u5408\u3002 \u521d\u59cb\u5316 \u5728token\u5408\u7ea6\u90e8\u7f72\u65f6\u9700\u8981\u4ee3\u5e01\u53d1\u884c\u65b9\u9884\u5148\u5229\u7528nizkpail\uff08\u7ebf\u4e0b\u5de5\u5177\uff09\u751f\u6210\u81ea\u5df1\u7684\u4ee3\u5e01\u8d26\u6237\u516c\u94a5\uff0c\u5e76\u9884\u5148\u7ed9\u8be5\u8d26\u6237\u5206\u914d\u5f85\u53d1\u884c\u7684\u6240\u6709\u4ee3\u5e01\uff08\u91d1\u989d\u660e\u6587\u548c\u5bc6\u6587\uff09\u3002 \u6ce8\u518c \u7528\u6237\u9700\u8981\u9884\u5148\u5728\u672c\u5730\u751f\u6210paillier\u7b97\u6cd5\u7684\u516c\u79c1\u94a5\u5bf9\uff0c\u5e76\u5c06\u516c\u94a5\u4e0a\u4f20\u5230token\u5408\u7ea6\u8fdb\u884c\u6ce8\u518c\uff0c\u5408\u7ea6\u68c0\u67e5\u540e\uff08\u957f\u5ea6\u548c\u7f16\u7801\u683c\u5f0f\uff09\uff0c\u751f\u6210\u8be5\u516c\u94a5\u5bf9\u5e94\u7684\u521d\u59cb\u8d26\u6237\u72b6\u6001\uff08\u91d1\u989d\u4e3a0\u7684\u5bc6\u6587\uff09 \u8f6c\u8d26 \u8f6c\u8d26\u8fc7\u7a0b\u9700\u8981\u4ea4\u6613sender\u7ebf\u4e0b\u751f\u6210\u8be5\u7b14\u4ea4\u6613\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\uff0c\u5e76\u5c06\u8be5\u8bc1\u660e\u4f5c\u4e3a\u8f6c\u8d26\u4ea4\u6613\u7684\u8f93\u5165\uff0c\u4f9b\u5408\u7ea6\u9a8c\u8bc1\uff0c\u5408\u7ea6\u5728\u9a8c\u8bc1\u8be5\u8bc1\u660e\u540e\uff0c\u624d\u5bf9\u4ea4\u6613\u53cc\u65b9\u7684\u8d26\u6237\u72b6\u6001\u8fdb\u884c\u66f4\u65b0\uff08\u91d1\u989d\u5bc6\u6587\uff0c\u9700\u8981\u4f7f\u7528\u540c\u6001\u52a0\u51cf\uff09\u3002 3. \u64cd\u4f5c\u6f14\u793a 3.1. \u5408\u7ea6\u90e8\u7f72\u8005\u516c\u79c1\u94a5 Deployer key pubkey: XZo30iKb0xe5wsUU57y+h/Z5mGEwpED3By8XZwlvq0CWBvcPscTBkh/ImGTbjinWZEZA9IWfIvWqGDPCOt6GIdn/INW+1eu3w89cOok8VPBezOo9YunV/PtGtvnA8DNF/iBKyus4q0qVsoAX5c2odwTCkLBv+uGLcWstE68vgGUiOWl14iLSNPaLSTBb4xABfbmb76+v823kRjXzqzlP5oaFecCav48+MlCmWQGfI0bZbu/sg97z5cP7TmfWWB8uc7HpXx4KyjPaSFAx5S5+65EuIYn6frCirulEVXMsTOyESSUPiqSpbJMzmzb7K2T9X/grtXJoZiuf6+fwcvcEH1/q7yP9Inm1sO6A1zSV+I6T+EmP+5WtIhJ+ioNI88P9m09L0Ndeyw3GouD1VAjPsw6qIg+ysWYgjo5YZfEc5vo3o0GUgFrjICekm13qeyr4YmOzJfM0yG7TLcGdptVwZDU4nAS1AnpLObMiyzc97cvxEtz6L5dF1qqAi1h7eyfZXZo30iKb0xe5wsUU57y+h/Z5mGEwpED3By8XZwlvq0CWBvcPscTBkh/ImGTbjinWZEZA9IWfIvWqGDPCOt6GIdn/INW+1eu3w89cOok8VPBezOo9YunV/PtGtvnA8DNF/iBKyus4q0qVsoAX5c2odwTCkLBv+uGLcWstE68vgGY= seckey: XZo30iKb0xe5wsUU57y+h/Z5mGEwpED3By8XZwlvq0CWBvcPscTBkh/ImGTbjinWZEZA9IWfIvWqGDPCOt6GIKPKiL1kPLS76xThY2EuLDDqV4G5RZARfPYhdR6OAhwp6xqsFA53rGNFs3h2Sh6GOv7yyQPzyULSCoZ587Or1iwLFWuhGQ2XPR4bjE5tcbjV7WMsfM6OM4bIFLFQ/XVyuMLtTrFnjqRS44QGBElW8rLcNe1ZI/QvCzaILpsman++rAXzhemc9a/5K9KDJDzwQCK5B7oa9lcf8QKU74rXgASnda7lIPk7xmKkA/GQAhlmx3rUHHpJ9eEqMYoX4G/Tpg== 3.2. \u90e8\u7f72\u9690\u79c1\u4ee3\u5e01\u5408\u7ea6 Deploy contract ctool deploy --code ~/PlatONE-Go/release/linux/conf/contracts/token.wasm --abi ~/PlatONE-Go/release/linux/conf/contracts/token.cpp.abi.json --config ../ctool.json \u7528\u6237\u6ce8\u518c register user # generate user keys offline ./nizkpail cmd> 1 #upload user pubkey ctool invoke --addr 0x6566ed9c6c5accf27ebdcadae3f04f16220c6b2a --func userregister --param mi++ciEiqNGsHajPbYCCk01oaUkPICWfcPyg204sSOiRWDqd3iJppTSspSiQaRNRk+6qjrBxa7zwT+zvpEvnAXO+aaV4oIyrTrhGZd3cKNzBBziTQAMYNBDlsRv7GnrMhAZxJKGfF5bmB74NMOh741tQ9RBuHRz0gUKN9jXsTe1c3XoIy3N55znQbG4yTEyZLoj1lwYM3fOGXr4LDW+n1Dl1G/F5Aj3d3fv0dYjcrhs05k/eggWMktKMPQPDl0CSfDZyhlp6US1g4nE9W61R1NCYZCaAwjy+zLUr2h8NZE0OPvLn53wk52enCWmgUfDlwOeAzhuffM7U1UcDWTzA3miMnvUQZOIyS8+F+FuCkeCyibdug0S3OmPWxe6lWDUBkMEw0v3DAMA1EJ9nhjqtFu5y9mwDxrazkr88kdM7xa8oSj6bcrQXbU3viye7s36Il91nc1v8YV96cC2dmN96CdXQCkHVZt4EyLEqvdOHhkM0IUejczd8WwOMh9/msG1pmi++ciEiqNGsHajPbYCCk01oaUkPICWfcPyg204sSOiRWDqd3iJppTSspSiQaRNRk+6qjrBxa7zwT+zvpEvnAXO+aaV4oIyrTrhGZd3cKNzBBziTQAMYNBDlsRv7GnrMhAZxJKGfF5bmB74NMOh741tQ9RBuHRz0gUKN9jXsTe4= --abi ~/PlatONE-Go/release/linux/conf/contracts/token.cpp.abi.json --config ../config.json \u8f6c\u8d26 transfer # generate zk proof ./nizkpail cmd> 6 #invoke transfer function ctool invoke --addr 0x6566ed9c6c5accf27ebdcadae3f04f16220c6b2a --func transfer --param ${pai} --param ${fromAmountCipher} --param ${toAmountCipher} --param 0x5224a76e6ce5a1e2d6839c72fc5bdebe90bede68 --abi ~/PlatONE-Go/release/linux/conf/contracts/token.cpp.abi.json --config ../ctool.json \u4f59\u989d\u67e5\u8be2 get balance ctool invoke --addr 0x6566ed9c6c5accf27ebdcadae3f04f16220c6b2a --func getBalance --param 0xf564dbddb09083ecf801b1a26e4d356213a3dcf7 --abi ~/PlatONE-Go/release/linux/conf/contracts/token.cpp.abi.json --config ../config.json ps: addr 0x5224a76e6ce5a1e2d6839c72fc5bdebe90bede68","title":"\u9690\u79c1\u4ee3\u5e01\u5408\u7ea6\u4f7f\u7528\u6307\u5357"},{"location":"%E6%95%99%E7%A8%8B/%E9%9A%90%E7%A7%81%E4%BB%A3%E5%B8%81%E5%90%88%E7%BA%A6%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#_1","text":"","title":"\u9690\u79c1\u4ee3\u5e01\u5408\u7ea6\u4f7f\u7528\u6307\u5357"},{"location":"%E6%95%99%E7%A8%8B/%E9%9A%90%E7%A7%81%E4%BB%A3%E5%B8%81%E5%90%88%E7%BA%A6%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#1","text":"\u8be5\u4ee3\u5e01\u5408\u7ea6\u5229\u7528\u540c\u6001\u52a0\u5bc6\u548c\u96f6\u77e5\u8bc6\u8bc1\u660e\u6765\u9690\u85cf\u7528\u6237\u5728\u4ee3\u5e01\u5408\u7ea6\u4e2d\u7684\u4f59\u989d\u548c\u4ea4\u6613\u8fc7\u7a0b\u4e2d\u7684\u91d1\u989d\u3002\u4e3a\u4e86\u5728\u4fdd\u8bc1\u4ee3\u5e01\u5408\u7ea6\u4e2d\u8d44\u4ea7\u5b89\u5168\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u8fbe\u5230\u4fdd\u62a4\u7528\u6237\u9690\u79c1\u7684\u9700\u6c42\uff0c\u7528\u6237\u5728\u4f7f\u7528\u9690\u79c1\u4ee3\u5e01\u5408\u7ea6\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u7ebf\u4e0b\u5de5\u5177\u751f\u6210\u540c\u6001\u52a0\u5bc6\u7b97\u6cd5\u7684\u516c\u79c1\u94a5\u548c\u4ea4\u6613\u8fc7\u7a0b\u4e2d\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u3002\u76ee\u524d\uff0c\u5df2\u6709\u540c\u6001\u52a0\u5bc6\u548c\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u7b97\u6cd5\u5e93\u548c\u5de5\u5177\uff0c\u4f9b\u5408\u7ea6\u8c03\u7528\u548c\u7528\u6237\u7ebf\u4e0b\u4f7f\u7528\u3002","title":"1. \u6982\u8ff0"},{"location":"%E6%95%99%E7%A8%8B/%E9%9A%90%E7%A7%81%E4%BB%A3%E5%B8%81%E5%90%88%E7%BA%A6%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#2","text":"\u6d41\u7a0b\u5305\u62ec\u4ee3\u5e01\u751f\u6210\uff08\u521d\u59cb\u5316\uff09\uff0c\u7528\u6237\u6ce8\u518c\uff08\u5411token\u5408\u7ea6\u6ce8\u518c\u81ea\u5df1\u7684\u516c\u94a5\uff09\uff0c\u4ee3\u5e01\u4ea4\u6613\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u9700\u8981\u7ebf\u4e0b\u548c\u7ebf\u4e0a\uff08\u5408\u7ea6\u8c03\u7528\uff09\u4e24\u4e2a\u90e8\u5206\u914d\u5408\u3002 \u521d\u59cb\u5316 \u5728token\u5408\u7ea6\u90e8\u7f72\u65f6\u9700\u8981\u4ee3\u5e01\u53d1\u884c\u65b9\u9884\u5148\u5229\u7528nizkpail\uff08\u7ebf\u4e0b\u5de5\u5177\uff09\u751f\u6210\u81ea\u5df1\u7684\u4ee3\u5e01\u8d26\u6237\u516c\u94a5\uff0c\u5e76\u9884\u5148\u7ed9\u8be5\u8d26\u6237\u5206\u914d\u5f85\u53d1\u884c\u7684\u6240\u6709\u4ee3\u5e01\uff08\u91d1\u989d\u660e\u6587\u548c\u5bc6\u6587\uff09\u3002 \u6ce8\u518c \u7528\u6237\u9700\u8981\u9884\u5148\u5728\u672c\u5730\u751f\u6210paillier\u7b97\u6cd5\u7684\u516c\u79c1\u94a5\u5bf9\uff0c\u5e76\u5c06\u516c\u94a5\u4e0a\u4f20\u5230token\u5408\u7ea6\u8fdb\u884c\u6ce8\u518c\uff0c\u5408\u7ea6\u68c0\u67e5\u540e\uff08\u957f\u5ea6\u548c\u7f16\u7801\u683c\u5f0f\uff09\uff0c\u751f\u6210\u8be5\u516c\u94a5\u5bf9\u5e94\u7684\u521d\u59cb\u8d26\u6237\u72b6\u6001\uff08\u91d1\u989d\u4e3a0\u7684\u5bc6\u6587\uff09 \u8f6c\u8d26 \u8f6c\u8d26\u8fc7\u7a0b\u9700\u8981\u4ea4\u6613sender\u7ebf\u4e0b\u751f\u6210\u8be5\u7b14\u4ea4\u6613\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\uff0c\u5e76\u5c06\u8be5\u8bc1\u660e\u4f5c\u4e3a\u8f6c\u8d26\u4ea4\u6613\u7684\u8f93\u5165\uff0c\u4f9b\u5408\u7ea6\u9a8c\u8bc1\uff0c\u5408\u7ea6\u5728\u9a8c\u8bc1\u8be5\u8bc1\u660e\u540e\uff0c\u624d\u5bf9\u4ea4\u6613\u53cc\u65b9\u7684\u8d26\u6237\u72b6\u6001\u8fdb\u884c\u66f4\u65b0\uff08\u91d1\u989d\u5bc6\u6587\uff0c\u9700\u8981\u4f7f\u7528\u540c\u6001\u52a0\u51cf\uff09\u3002","title":"2.  \u6d41\u7a0b\u63cf\u8ff0"},{"location":"%E6%95%99%E7%A8%8B/%E9%9A%90%E7%A7%81%E4%BB%A3%E5%B8%81%E5%90%88%E7%BA%A6%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#3","text":"","title":"3. \u64cd\u4f5c\u6f14\u793a"},{"location":"%E6%95%99%E7%A8%8B/%E9%9A%90%E7%A7%81%E4%BB%A3%E5%B8%81%E5%90%88%E7%BA%A6%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#31-deployer-key","text":"pubkey: XZo30iKb0xe5wsUU57y+h/Z5mGEwpED3By8XZwlvq0CWBvcPscTBkh/ImGTbjinWZEZA9IWfIvWqGDPCOt6GIdn/INW+1eu3w89cOok8VPBezOo9YunV/PtGtvnA8DNF/iBKyus4q0qVsoAX5c2odwTCkLBv+uGLcWstE68vgGUiOWl14iLSNPaLSTBb4xABfbmb76+v823kRjXzqzlP5oaFecCav48+MlCmWQGfI0bZbu/sg97z5cP7TmfWWB8uc7HpXx4KyjPaSFAx5S5+65EuIYn6frCirulEVXMsTOyESSUPiqSpbJMzmzb7K2T9X/grtXJoZiuf6+fwcvcEH1/q7yP9Inm1sO6A1zSV+I6T+EmP+5WtIhJ+ioNI88P9m09L0Ndeyw3GouD1VAjPsw6qIg+ysWYgjo5YZfEc5vo3o0GUgFrjICekm13qeyr4YmOzJfM0yG7TLcGdptVwZDU4nAS1AnpLObMiyzc97cvxEtz6L5dF1qqAi1h7eyfZXZo30iKb0xe5wsUU57y+h/Z5mGEwpED3By8XZwlvq0CWBvcPscTBkh/ImGTbjinWZEZA9IWfIvWqGDPCOt6GIdn/INW+1eu3w89cOok8VPBezOo9YunV/PtGtvnA8DNF/iBKyus4q0qVsoAX5c2odwTCkLBv+uGLcWstE68vgGY= seckey: XZo30iKb0xe5wsUU57y+h/Z5mGEwpED3By8XZwlvq0CWBvcPscTBkh/ImGTbjinWZEZA9IWfIvWqGDPCOt6GIKPKiL1kPLS76xThY2EuLDDqV4G5RZARfPYhdR6OAhwp6xqsFA53rGNFs3h2Sh6GOv7yyQPzyULSCoZ587Or1iwLFWuhGQ2XPR4bjE5tcbjV7WMsfM6OM4bIFLFQ/XVyuMLtTrFnjqRS44QGBElW8rLcNe1ZI/QvCzaILpsman++rAXzhemc9a/5K9KDJDzwQCK5B7oa9lcf8QKU74rXgASnda7lIPk7xmKkA/GQAhlmx3rUHHpJ9eEqMYoX4G/Tpg==","title":"3.1. \u5408\u7ea6\u90e8\u7f72\u8005\u516c\u79c1\u94a5 Deployer key"},{"location":"%E6%95%99%E7%A8%8B/%E9%9A%90%E7%A7%81%E4%BB%A3%E5%B8%81%E5%90%88%E7%BA%A6%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#32-deploy-contract","text":"ctool deploy --code ~/PlatONE-Go/release/linux/conf/contracts/token.wasm --abi ~/PlatONE-Go/release/linux/conf/contracts/token.cpp.abi.json --config ../ctool.json \u7528\u6237\u6ce8\u518c register user # generate user keys offline ./nizkpail cmd> 1 #upload user pubkey ctool invoke --addr 0x6566ed9c6c5accf27ebdcadae3f04f16220c6b2a --func userregister --param mi++ciEiqNGsHajPbYCCk01oaUkPICWfcPyg204sSOiRWDqd3iJppTSspSiQaRNRk+6qjrBxa7zwT+zvpEvnAXO+aaV4oIyrTrhGZd3cKNzBBziTQAMYNBDlsRv7GnrMhAZxJKGfF5bmB74NMOh741tQ9RBuHRz0gUKN9jXsTe1c3XoIy3N55znQbG4yTEyZLoj1lwYM3fOGXr4LDW+n1Dl1G/F5Aj3d3fv0dYjcrhs05k/eggWMktKMPQPDl0CSfDZyhlp6US1g4nE9W61R1NCYZCaAwjy+zLUr2h8NZE0OPvLn53wk52enCWmgUfDlwOeAzhuffM7U1UcDWTzA3miMnvUQZOIyS8+F+FuCkeCyibdug0S3OmPWxe6lWDUBkMEw0v3DAMA1EJ9nhjqtFu5y9mwDxrazkr88kdM7xa8oSj6bcrQXbU3viye7s36Il91nc1v8YV96cC2dmN96CdXQCkHVZt4EyLEqvdOHhkM0IUejczd8WwOMh9/msG1pmi++ciEiqNGsHajPbYCCk01oaUkPICWfcPyg204sSOiRWDqd3iJppTSspSiQaRNRk+6qjrBxa7zwT+zvpEvnAXO+aaV4oIyrTrhGZd3cKNzBBziTQAMYNBDlsRv7GnrMhAZxJKGfF5bmB74NMOh741tQ9RBuHRz0gUKN9jXsTe4= --abi ~/PlatONE-Go/release/linux/conf/contracts/token.cpp.abi.json --config ../config.json \u8f6c\u8d26 transfer # generate zk proof ./nizkpail cmd> 6 #invoke transfer function ctool invoke --addr 0x6566ed9c6c5accf27ebdcadae3f04f16220c6b2a --func transfer --param ${pai} --param ${fromAmountCipher} --param ${toAmountCipher} --param 0x5224a76e6ce5a1e2d6839c72fc5bdebe90bede68 --abi ~/PlatONE-Go/release/linux/conf/contracts/token.cpp.abi.json --config ../ctool.json \u4f59\u989d\u67e5\u8be2 get balance ctool invoke --addr 0x6566ed9c6c5accf27ebdcadae3f04f16220c6b2a --func getBalance --param 0xf564dbddb09083ecf801b1a26e4d356213a3dcf7 --abi ~/PlatONE-Go/release/linux/conf/contracts/token.cpp.abi.json --config ../config.json ps: addr 0x5224a76e6ce5a1e2d6839c72fc5bdebe90bede68","title":"3.2. \u90e8\u7f72\u9690\u79c1\u4ee3\u5e01\u5408\u7ea6 Deploy contract"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/","text":"\u533a\u5757\u94fe\u6d4f\u89c8\u5668 \u672c\u9879\u76ee\u662fplatone\u6d4f\u89c8\u5668\u9879\u76ee\uff0c\u517c\u5bb9\u6d4f\u89c8\u5668IE9\u53ca\u4ee5\u4e0a\uff0c360\u6d4f\u89c8\u5668\u517c\u5bb9\u7248\uff08IE9\u5185\u6838\uff09\uff0c360\u6d4f\u89c8\u5668\u6781\u901f\u7248\uff0cchrome\u6d4f\u89c8\u5668\u3002 1. \u529f\u80fd (1)\u3001\u4e3b\u8981\u529f\u80fd\u662f\u533a\u5757\u94fe\u6982\u89c8\uff0c\u67e5\u770b\u533a\u5757\uff0c\u67e5\u770b\u4ea4\u6613\uff0c\u67e5\u770b\u8d26\u6237\u72b6\u6001\u3002 (2)\u3001\u533a\u5757\u94fe\u6982\u89c8\uff0c\u67e5\u770b\u533a\u5757\uff0c\u67e5\u770b\u4ea4\u6613\u548c\u8d26\u6237\u9875\u9762\u6bcf10s\u6267\u884c\u4e00\u8f6e\u8bf7\u6c42\u3002 2. \u90e8\u7f72 2.1. \u4f9d\u8d56\u73af\u5883 \u73af\u5883 \u7248\u672c nginx nginx1.6\u6216\u4ee5\u4e0a\u7248\u672c java jdk1.8\u6216\u4ee5\u4e0a\u7248\u672c mysql mysql-5.6\u6216\u4ee5\u4e0a\u7248\u672c nginx\u5b89\u88c5\u8bf7\u53c2\u8003\u9644\u5f55 2.2. \u540e\u7aef\u914d\u7f6e \u4ee3\u7801clone\uff1a git clone git@172.16.211.192:PlatONE/src/explorer/explore-java.git \u6570\u636e\u5e93\u914d\u7f6e\uff1a #\u8fde\u63a5mysql mysql -u root -p #\u5bfc\u5165\u9ed8\u8ba4\u8868 use platone_explore; source ${PathToExplorerProject}/db/bcos_browser_table.sql java service\u542f\u52a8\uff1a \u4fee\u6539application.yml\uff1a \u670d\u52a1\u7aef\u53e3\u914d\u7f6e \u6570\u636e\u5e93\u8fde\u63a5\u914d\u7f6e //\u670d\u52a1\u7aef\u53e3 server: port: 9600 spring: profiles: active: dev //\u6570\u636e\u5e93\u914d\u7f6e datasource: url: jdbc:mysql://127.0.0.1:3306/platone_explore?serverTimezone=Asia/Shanghai&characterEncoding=utf-8&useSSL=false&autoReconnect=true&autoReconnectForPools=true username: root password: 123456 driver-class-name: com.mysql.cj.jdbc.Driver sql-script-encoding: UTF-8 \u542f\u52a8java service\uff1a \u8fd0\u884cBcosBrowserApplication.java 2.3. \u524d\u7aef\u914d\u7f6e \u4ee3\u7801clone\uff1a git clone git@172.16.211.192:PlatONE/src/explorer/client.git \u7f16\u8bd1\uff1a cd explore/client npm run build \u9759\u6001\u8d44\u6e90\u76ee\u5f55./dist \u4fee\u6539nginx\u914d\u7f6e \u5728./doc\u6587\u4ef6\u4e0b\u6709nginx\u914d\u7f6e\u6587\u4ef6\uff0c\u76f4\u63a5\u53ef\u4ee5\u62ff\u6765\u66ff\u6362\u5b89\u88c5\u7684nginx\u7684\u914d\u7f6e\u6587\u4ef6nginx.conf\uff1b \u6ce8\u610f \uff1a\u5982\u679c\u6309\u7167\u9644\u5f55\u5b89\u88c5\u7684nginx\uff0c\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u5728/usr/local/nginx/conf/nginx.conf \u3002 \u7136\u540e\u4fee\u6539nginx.conf\uff1b \u4fee\u6539\u524d\u7aef\u670d\u52a1\u7684ip\u5730\u5740\u548c\u7aef\u53e3\u3002 \u4fee\u6539\u524d\u7aef\u6587\u4ef6\u7684\u8def\u5f84,\u76f4\u63a5\u6307\u5411\u5df2\u62c9\u53d6\u4ee3\u7801\u7684dist\u76ee\u5f55\u3002 \u4fee\u6539\u540e\u7aef\u670d\u52a1\u7684ip\u548c\u7aef\u53e3\uff0c\u6ce8\u610f'/api'\u4e0d\u8981\u4fee\u6539\u3002 server { listen 8088 default_server; //\u6b65\u9aa41\u3001\u524d\u7aef\u7aef\u53e3 server_name 192.168.0.1; //\u6b65\u9aa41\u3001\u524d\u7aef\u5730\u5740\uff0c\u53ef\u914d\u7f6e\u4e3a\u57df\u540d location / { root /home/explore/client/dist; //\u6b65\u9aa42\u3001\u524d\u7aef\u6587\u4ef6\u8def\u5f84 index index.html index.htm; try_files $uri $uri/ /index.html =404; } # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location /api { proxy_pass http://192.168.0.1:9600/; //\u6b65\u9aa43\u3001\u540e\u7aef\u670d\u52a1\u5730\u5740\u53ca\u7aef\u53e3 proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } } 2.4 \u542f\u52a8nginx (1)\u3001\u542f\u52a8nginx\u3002 \u542f\u52a8\u547d\u4ee4\uff1a /usr/local/nginx/sbin/nginx \u542f\u52a8\u62a5\u9519\u91cd\u70b9\u6392\u67e5\uff1a\u65e5\u5fd7\u8def\u5f84\u662f\u5426\u6b63\u786e\uff08error.log\u548caccess.log\uff09\uff0cnginx\u6709\u6ca1\u6709\u6dfb\u52a0\u7528\u6237\u6743\u9650\u3002 (2)\u3001\u6253\u5f00\u9875\u9762\uff0c\u9875\u9762url\u662fnginx\u914d\u7f6e\u7684\u524d\u7aef\u7aef\u53e3\u548c\u524d\u7aefip\u3002 \u4f8b\u5982:\u4e0a\u9762\u914d\u7f6e\u6587\u4ef6\u7684url\u4e3a http:192.168.0.1:8088 3. \u9644\u5f55 3.1 \u5b89\u88c5nginx\uff08\u53ef\u53c2\u8003 \u7f51\u7edc\u6559\u7a0b \uff09 3.1.1 \u4e0b\u8f7dnginx\u4f9d\u8d56 \u5728\u5b89\u88c5nginx\u524d\u9996\u5148\u8981\u786e\u8ba4\u7cfb\u7edf\u4e2d\u5b89\u88c5\u4e86gcc\u3001pcre-devel\u3001zlib-devel\u3001openssl-devel\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u6267\u884c\u547d\u4ee4 yum -y install gcc pcre-devel zlib-devel openssl openssl-devel \u6267\u884c\u547d\u4ee4\u65f6\u6ce8\u610f\u6743\u9650\u95ee\u9898\uff0c\u5982\u9047\u5230\uff0c\u8bf7\u52a0\u4e0asudo 3.1.2 \u4e0b\u8f7dnginx nginx\u4e0b\u8f7d\u5730\u5740\uff1ahttps://nginx.org/download/\uff08\u4e0b\u8f7d\u6700\u65b0\u7a33\u5b9a\u7248\u672c\u5373\u53ef\uff09 \u6216\u8005\u4f7f\u7528\u547d\u4ee4\uff1a wget http://nginx.org/download/nginx-1.10.2.tar.gz (\u7248\u672c\u53f7\u53ef\u6362) \u5c06\u4e0b\u8f7d\u7684\u5305\u79fb\u52a8\u5230/usr/local/\u4e0b 3.1.3. \u5b89\u88c5nginx 3.1.3.1. \u89e3\u538b tar -zxvf nginx-1.10.2.tar.gz 3.1.3.2. \u8fdb\u5165nginx\u76ee\u5f55 cd nginx-1.10.2 3.1.3.3. \u914d\u7f6e ./configure --prefix=/usr/local/nginx 3.1.3.4. make make make install 3.1.3.5. \u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f \u4f7f\u7528\u547d\u4ee4\uff1a /usr/local/nginx/sbin/nginx \u2013t \u6b63\u5e38\u60c5\u51b5\u7684\u4fe1\u606f\u8f93\u51fa\uff1a nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful 3.1.3.6. nginx\u51e0\u4e2a\u5e38\u89c1\u547d\u4ee4 /usr/local/nginx/sbin/nginx -s reload # \u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u6587\u4ef6 /usr/local/nginx/sbin/nginx -s reopen # \u91cd\u542f Nginx /usr/local/nginx/sbin/nginx -s stop # \u505c\u6b62 Nginx ps -ef | grep nginx # \u67e5\u770bnginx\u8fdb\u7a0b","title":"\u6d4f\u89c8\u5668"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#_1","text":"\u672c\u9879\u76ee\u662fplatone\u6d4f\u89c8\u5668\u9879\u76ee\uff0c\u517c\u5bb9\u6d4f\u89c8\u5668IE9\u53ca\u4ee5\u4e0a\uff0c360\u6d4f\u89c8\u5668\u517c\u5bb9\u7248\uff08IE9\u5185\u6838\uff09\uff0c360\u6d4f\u89c8\u5668\u6781\u901f\u7248\uff0cchrome\u6d4f\u89c8\u5668\u3002","title":"\u533a\u5757\u94fe\u6d4f\u89c8\u5668"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#1","text":"(1)\u3001\u4e3b\u8981\u529f\u80fd\u662f\u533a\u5757\u94fe\u6982\u89c8\uff0c\u67e5\u770b\u533a\u5757\uff0c\u67e5\u770b\u4ea4\u6613\uff0c\u67e5\u770b\u8d26\u6237\u72b6\u6001\u3002 (2)\u3001\u533a\u5757\u94fe\u6982\u89c8\uff0c\u67e5\u770b\u533a\u5757\uff0c\u67e5\u770b\u4ea4\u6613\u548c\u8d26\u6237\u9875\u9762\u6bcf10s\u6267\u884c\u4e00\u8f6e\u8bf7\u6c42\u3002","title":"1. \u529f\u80fd"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#2","text":"","title":"2. \u90e8\u7f72"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#21","text":"\u73af\u5883 \u7248\u672c nginx nginx1.6\u6216\u4ee5\u4e0a\u7248\u672c java jdk1.8\u6216\u4ee5\u4e0a\u7248\u672c mysql mysql-5.6\u6216\u4ee5\u4e0a\u7248\u672c nginx\u5b89\u88c5\u8bf7\u53c2\u8003\u9644\u5f55","title":"2.1. \u4f9d\u8d56\u73af\u5883"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#22","text":"\u4ee3\u7801clone\uff1a git clone git@172.16.211.192:PlatONE/src/explorer/explore-java.git \u6570\u636e\u5e93\u914d\u7f6e\uff1a #\u8fde\u63a5mysql mysql -u root -p #\u5bfc\u5165\u9ed8\u8ba4\u8868 use platone_explore; source ${PathToExplorerProject}/db/bcos_browser_table.sql java service\u542f\u52a8\uff1a \u4fee\u6539application.yml\uff1a \u670d\u52a1\u7aef\u53e3\u914d\u7f6e \u6570\u636e\u5e93\u8fde\u63a5\u914d\u7f6e //\u670d\u52a1\u7aef\u53e3 server: port: 9600 spring: profiles: active: dev //\u6570\u636e\u5e93\u914d\u7f6e datasource: url: jdbc:mysql://127.0.0.1:3306/platone_explore?serverTimezone=Asia/Shanghai&characterEncoding=utf-8&useSSL=false&autoReconnect=true&autoReconnectForPools=true username: root password: 123456 driver-class-name: com.mysql.cj.jdbc.Driver sql-script-encoding: UTF-8 \u542f\u52a8java service\uff1a \u8fd0\u884cBcosBrowserApplication.java","title":"2.2. \u540e\u7aef\u914d\u7f6e"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#23","text":"\u4ee3\u7801clone\uff1a git clone git@172.16.211.192:PlatONE/src/explorer/client.git \u7f16\u8bd1\uff1a cd explore/client npm run build \u9759\u6001\u8d44\u6e90\u76ee\u5f55./dist \u4fee\u6539nginx\u914d\u7f6e \u5728./doc\u6587\u4ef6\u4e0b\u6709nginx\u914d\u7f6e\u6587\u4ef6\uff0c\u76f4\u63a5\u53ef\u4ee5\u62ff\u6765\u66ff\u6362\u5b89\u88c5\u7684nginx\u7684\u914d\u7f6e\u6587\u4ef6nginx.conf\uff1b \u6ce8\u610f \uff1a\u5982\u679c\u6309\u7167\u9644\u5f55\u5b89\u88c5\u7684nginx\uff0c\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u5728/usr/local/nginx/conf/nginx.conf \u3002 \u7136\u540e\u4fee\u6539nginx.conf\uff1b \u4fee\u6539\u524d\u7aef\u670d\u52a1\u7684ip\u5730\u5740\u548c\u7aef\u53e3\u3002 \u4fee\u6539\u524d\u7aef\u6587\u4ef6\u7684\u8def\u5f84,\u76f4\u63a5\u6307\u5411\u5df2\u62c9\u53d6\u4ee3\u7801\u7684dist\u76ee\u5f55\u3002 \u4fee\u6539\u540e\u7aef\u670d\u52a1\u7684ip\u548c\u7aef\u53e3\uff0c\u6ce8\u610f'/api'\u4e0d\u8981\u4fee\u6539\u3002 server { listen 8088 default_server; //\u6b65\u9aa41\u3001\u524d\u7aef\u7aef\u53e3 server_name 192.168.0.1; //\u6b65\u9aa41\u3001\u524d\u7aef\u5730\u5740\uff0c\u53ef\u914d\u7f6e\u4e3a\u57df\u540d location / { root /home/explore/client/dist; //\u6b65\u9aa42\u3001\u524d\u7aef\u6587\u4ef6\u8def\u5f84 index index.html index.htm; try_files $uri $uri/ /index.html =404; } # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location /api { proxy_pass http://192.168.0.1:9600/; //\u6b65\u9aa43\u3001\u540e\u7aef\u670d\u52a1\u5730\u5740\u53ca\u7aef\u53e3 proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } }","title":"2.3. \u524d\u7aef\u914d\u7f6e"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#24-nginx","text":"(1)\u3001\u542f\u52a8nginx\u3002 \u542f\u52a8\u547d\u4ee4\uff1a /usr/local/nginx/sbin/nginx \u542f\u52a8\u62a5\u9519\u91cd\u70b9\u6392\u67e5\uff1a\u65e5\u5fd7\u8def\u5f84\u662f\u5426\u6b63\u786e\uff08error.log\u548caccess.log\uff09\uff0cnginx\u6709\u6ca1\u6709\u6dfb\u52a0\u7528\u6237\u6743\u9650\u3002 (2)\u3001\u6253\u5f00\u9875\u9762\uff0c\u9875\u9762url\u662fnginx\u914d\u7f6e\u7684\u524d\u7aef\u7aef\u53e3\u548c\u524d\u7aefip\u3002 \u4f8b\u5982:\u4e0a\u9762\u914d\u7f6e\u6587\u4ef6\u7684url\u4e3a http:192.168.0.1:8088","title":"2.4 \u542f\u52a8nginx"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#3","text":"","title":"3. \u9644\u5f55"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#31-nginx","text":"","title":"3.1 \u5b89\u88c5nginx\uff08\u53ef\u53c2\u8003\u7f51\u7edc\u6559\u7a0b\uff09"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#311-nginx","text":"\u5728\u5b89\u88c5nginx\u524d\u9996\u5148\u8981\u786e\u8ba4\u7cfb\u7edf\u4e2d\u5b89\u88c5\u4e86gcc\u3001pcre-devel\u3001zlib-devel\u3001openssl-devel\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u6267\u884c\u547d\u4ee4 yum -y install gcc pcre-devel zlib-devel openssl openssl-devel \u6267\u884c\u547d\u4ee4\u65f6\u6ce8\u610f\u6743\u9650\u95ee\u9898\uff0c\u5982\u9047\u5230\uff0c\u8bf7\u52a0\u4e0asudo","title":"3.1.1 \u4e0b\u8f7dnginx\u4f9d\u8d56"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#312-nginx","text":"nginx\u4e0b\u8f7d\u5730\u5740\uff1ahttps://nginx.org/download/\uff08\u4e0b\u8f7d\u6700\u65b0\u7a33\u5b9a\u7248\u672c\u5373\u53ef\uff09 \u6216\u8005\u4f7f\u7528\u547d\u4ee4\uff1a wget http://nginx.org/download/nginx-1.10.2.tar.gz (\u7248\u672c\u53f7\u53ef\u6362) \u5c06\u4e0b\u8f7d\u7684\u5305\u79fb\u52a8\u5230/usr/local/\u4e0b","title":"3.1.2 \u4e0b\u8f7dnginx"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#313-nginx","text":"","title":"3.1.3. \u5b89\u88c5nginx"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#3131","text":"tar -zxvf nginx-1.10.2.tar.gz","title":"3.1.3.1. \u89e3\u538b"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#3132-nginx","text":"cd nginx-1.10.2","title":"3.1.3.2. \u8fdb\u5165nginx\u76ee\u5f55"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#3133","text":"./configure --prefix=/usr/local/nginx","title":"3.1.3.3. \u914d\u7f6e"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#3134-make","text":"make make install","title":"3.1.3.4. make"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#3135","text":"\u4f7f\u7528\u547d\u4ee4\uff1a /usr/local/nginx/sbin/nginx \u2013t \u6b63\u5e38\u60c5\u51b5\u7684\u4fe1\u606f\u8f93\u51fa\uff1a nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful","title":"3.1.3.5. \u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f"},{"location":"%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B5%8F%E8%A7%88%E5%99%A8%E9%85%8D%E7%BD%AE/#3136-nginx","text":"/usr/local/nginx/sbin/nginx -s reload # \u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u6587\u4ef6 /usr/local/nginx/sbin/nginx -s reopen # \u91cd\u542f Nginx /usr/local/nginx/sbin/nginx -s stop # \u505c\u6b62 Nginx ps -ef | grep nginx # \u67e5\u770bnginx\u8fdb\u7a0b","title":"3.1.3.6. nginx\u51e0\u4e2a\u5e38\u89c1\u547d\u4ee4"}]}